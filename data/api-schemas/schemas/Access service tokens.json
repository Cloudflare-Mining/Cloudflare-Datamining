{
	"DELETE /accounts/{account_id}/access/service_tokens/{service_token_id}": {
		"description": "Deletes a service token.",
		"operationId": "access-service-tokens-delete-a-service-token",
		"parameters": [
			{
				"in": "path",
				"name": "service_token_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"client_id": {
													"description": "The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.",
													"example": "88bf3b6d86161464f6509f7219099e57.access.example.com",
													"type": "string"
												},
												"created_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"duration": {
													"default": "8760h",
													"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
													"example": "60m",
													"type": "string",
													"x-auditable": true
												},
												"expires_at": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"allOf": [
														{
															"description": "The ID of the service token."
														},
														{
															"description": "UUID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"last_seen_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"name": {
													"description": "The name of the service token.",
													"example": "CI/CD token",
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete a service token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete a service token response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete a service token",
		"tags": [
			"Access service tokens"
		],
		"x-api-token-group": [
			"Access: Service Tokens Write"
		]
	},
	"GET /accounts/{account_id}/access/service_tokens": {
		"description": "Lists all service tokens.",
		"operationId": "access-service-tokens-list-service-tokens",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "The name of the service token.",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "search",
				"schema": {
					"description": "Search for service tokens by other listed query parameters.",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of results.",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 1000,
					"description": "Number of results per page.",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"client_id": {
														"description": "The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.",
														"example": "88bf3b6d86161464f6509f7219099e57.access.example.com",
														"type": "string"
													},
													"created_at": {
														"allOf": [
															{
																"x-stainless-skip": true
															},
															{
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														]
													},
													"duration": {
														"default": "8760h",
														"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
														"example": "60m",
														"type": "string",
														"x-auditable": true
													},
													"expires_at": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"allOf": [
															{
																"description": "The ID of the service token."
															},
															{
																"description": "UUID.",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"type": "string",
																"x-auditable": true
															}
														]
													},
													"last_seen_at": {
														"allOf": [
															{
																"x-stainless-skip": true
															},
															{
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														]
													},
													"name": {
														"description": "The name of the service token.",
														"example": "CI/CD token",
														"type": "string",
														"x-auditable": true
													},
													"updated_at": {
														"allOf": [
															{
																"x-stainless-skip": true
															},
															{
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														]
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List service tokens response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List service tokens response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List service tokens",
		"tags": [
			"Access service tokens"
		],
		"x-api-token-group": [
			"Access: Service Tokens Write",
			"Access: Service Tokens Read"
		]
	},
	"GET /accounts/{account_id}/access/service_tokens/{service_token_id}": {
		"description": "Fetches a single service token.",
		"operationId": "access-service-tokens-get-a-service-token",
		"parameters": [
			{
				"in": "path",
				"name": "service_token_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"client_id": {
													"description": "The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.",
													"example": "88bf3b6d86161464f6509f7219099e57.access.example.com",
													"type": "string"
												},
												"created_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"duration": {
													"default": "8760h",
													"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
													"example": "60m",
													"type": "string",
													"x-auditable": true
												},
												"expires_at": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"allOf": [
														{
															"description": "The ID of the service token."
														},
														{
															"description": "UUID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"last_seen_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"name": {
													"description": "The name of the service token.",
													"example": "CI/CD token",
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get a service token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get a service token response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get a service token",
		"tags": [
			"Access service tokens"
		],
		"x-api-token-group": [
			"Access: Service Tokens Write",
			"Access: Service Tokens Read"
		]
	},
	"POST /accounts/{account_id}/access/service_tokens": {
		"description": "Generates a new service token. **Note:** This is the only time you can get the Client Secret. If you lose the Client Secret, you will have to rotate the Client Secret or create a new service token.",
		"operationId": "access-service-tokens-create-a-service-token",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"client_secret_version": {
								"default": 1,
								"description": "A version number identifying the current `client_secret` associated with the service token. Incrementing it triggers a rotation; the previous secret will still be accepted until the time indicated by `previous_client_secret_expires_at`.",
								"type": "number",
								"x-auditable": true
							},
							"duration": {
								"default": "8760h",
								"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
								"example": "60m",
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "The name of the service token.",
								"example": "CI/CD token",
								"type": "string",
								"x-auditable": true
							},
							"previous_client_secret_expires_at": {
								"description": "The expiration of the previous `client_secret`. This can be modified at any point after a rotation. For example, you may extend it further into the future if you need more time to update services with the new secret; or move it into the past to immediately invalidate the previous token in case of compromise.",
								"example": "2014-01-01T05:20:00.12345Z",
								"format": "date-time",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"201": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"client_id": {
													"description": "The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.",
													"example": "88bf3b6d86161464f6509f7219099e57.access.example.com",
													"type": "string"
												},
												"client_secret": {
													"description": "The Client Secret for the service token. Access will check for this value in the `CF-Access-Client-Secret` request header.",
													"example": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5",
													"type": "string",
													"x-sensitive": true
												},
												"created_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"duration": {
													"default": "8760h",
													"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
													"example": "60m",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "The ID of the service token.",
													"type": "string"
												},
												"name": {
													"description": "The name of the service token.",
													"example": "CI/CD token",
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create a service token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create a service token response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a service token",
		"tags": [
			"Access service tokens"
		],
		"x-api-token-group": [
			"Access: Service Tokens Write"
		]
	},
	"POST /accounts/{account_id}/access/service_tokens/{service_token_id}/refresh": {
		"description": "Refreshes the expiration of a service token.",
		"operationId": "access-service-tokens-refresh-a-service-token",
		"parameters": [
			{
				"in": "path",
				"name": "service_token_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"client_id": {
													"description": "The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.",
													"example": "88bf3b6d86161464f6509f7219099e57.access.example.com",
													"type": "string"
												},
												"created_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"duration": {
													"default": "8760h",
													"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
													"example": "60m",
													"type": "string",
													"x-auditable": true
												},
												"expires_at": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"allOf": [
														{
															"description": "The ID of the service token."
														},
														{
															"description": "UUID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"last_seen_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"name": {
													"description": "The name of the service token.",
													"example": "CI/CD token",
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Refresh a service token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Refresh a service token response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Refresh a service token",
		"tags": [
			"Access service tokens"
		],
		"x-api-token-group": [
			"Access: Service Tokens Write"
		]
	},
	"POST /accounts/{account_id}/access/service_tokens/{service_token_id}/rotate": {
		"description": "Generates a new Client Secret for a service token and revokes the old one.",
		"operationId": "access-service-tokens-rotate-a-service-token",
		"parameters": [
			{
				"in": "path",
				"name": "service_token_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"previous_client_secret_expires_at": {
								"description": "The expiration of the previous `client_secret`. If not provided, it defaults to the current timestamp in order to immediately expire the previous secret.",
								"example": "2014-01-01T05:20:00.12345Z",
								"format": "date-time",
								"type": "string",
								"x-auditable": true
							}
						}
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"client_id": {
													"description": "The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.",
													"example": "88bf3b6d86161464f6509f7219099e57.access.example.com",
													"type": "string"
												},
												"client_secret": {
													"description": "The Client Secret for the service token. Access will check for this value in the `CF-Access-Client-Secret` request header.",
													"example": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5",
													"type": "string",
													"x-sensitive": true
												},
												"created_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"duration": {
													"default": "8760h",
													"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
													"example": "60m",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "The ID of the service token.",
													"type": "string"
												},
												"name": {
													"description": "The name of the service token.",
													"example": "CI/CD token",
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Rotate a service token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Rotate a service token response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Rotate a service token",
		"tags": [
			"Access service tokens"
		]
	},
	"PUT /accounts/{account_id}/access/service_tokens/{service_token_id}": {
		"description": "Updates a configured service token.",
		"operationId": "access-service-tokens-update-a-service-token",
		"parameters": [
			{
				"in": "path",
				"name": "service_token_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"client_secret_version": {
								"default": 1,
								"description": "A version number identifying the current `client_secret` associated with the service token. Incrementing it triggers a rotation; the previous secret will still be accepted until the time indicated by `previous_client_secret_expires_at`.",
								"type": "number",
								"x-auditable": true
							},
							"duration": {
								"default": "8760h",
								"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
								"example": "60m",
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "The name of the service token.",
								"example": "CI/CD token",
								"type": "string",
								"x-auditable": true
							},
							"previous_client_secret_expires_at": {
								"description": "The expiration of the previous `client_secret`. This can be modified at any point after a rotation. For example, you may extend it further into the future if you need more time to update services with the new secret; or move it into the past to immediately invalidate the previous token in case of compromise.",
								"example": "2014-01-01T05:20:00.12345Z",
								"format": "date-time",
								"type": "string",
								"x-auditable": true
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"client_id": {
													"description": "The Client ID for the service token. Access will check for this value in the `CF-Access-Client-ID` request header.",
													"example": "88bf3b6d86161464f6509f7219099e57.access.example.com",
													"type": "string"
												},
												"created_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"duration": {
													"default": "8760h",
													"description": "The duration for how long the service token will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or Âµs), ms, s, m, h. The default is 1 year in hours (8760h).",
													"example": "60m",
													"type": "string",
													"x-auditable": true
												},
												"expires_at": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"allOf": [
														{
															"description": "The ID of the service token."
														},
														{
															"description": "UUID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"last_seen_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												},
												"name": {
													"description": "The name of the service token.",
													"example": "CI/CD token",
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"allOf": [
														{
															"x-stainless-skip": true
														},
														{
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													]
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update a service token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update a service token response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update a service token",
		"tags": [
			"Access service tokens"
		],
		"x-api-token-group": [
			"Access: Service Tokens Write"
		]
	}
}