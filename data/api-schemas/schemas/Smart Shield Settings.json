{
	"GET /zones/{zone_id}/smart_shield": {
		"description": "Retrieve Smart Shield Settings.",
		"operationId": "smart-shield-get-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "A consolidated object containing settings from multiple APIs for partial updates.",
															"properties": {
																"cache_reserve": {
																	"properties": {
																		"editable": {
																			"description": "Whether the setting is editable.",
																			"example": true,
																			"type": "boolean"
																		},
																		"id": {
																			"description": "The id of the Cache Reserve setting.",
																			"example": "cache_reserve",
																			"type": "string"
																		},
																		"value": {
																			"description": "Specifies the enablement value of Cache Reserve.",
																			"enum": [
																				"on",
																				"off"
																			],
																			"example": "off",
																			"type": "string"
																		}
																	}
																},
																"regional_tiered_cache": {
																	"properties": {
																		"editable": {
																			"description": "Whether the setting is editable.",
																			"example": true,
																			"type": "boolean"
																		},
																		"id": {
																			"description": "The id of the Regional Tiered Cache setting.",
																			"example": "regional_tiered_cache",
																			"type": "string"
																		},
																		"value": {
																			"description": "Specifies the enablement value of Cache Reserve.",
																			"enum": [
																				"on",
																				"off"
																			],
																			"example": "off",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"smart_routing": {
																	"properties": {
																		"editable": {
																			"description": "Whether the setting is editable.",
																			"example": true,
																			"type": "boolean"
																		},
																		"id": {
																			"description": "The id of the Smart Routing setting.",
																			"example": "smart_routing",
																			"type": "string"
																		},
																		"value": {
																			"description": "Specifies the enablement value of Argo Smart Routing.",
																			"enum": [
																				"on",
																				"off"
																			],
																			"example": "off",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"smart_tiered_cache": {
																	"properties": {
																		"editable": {
																			"description": "Whether the setting is editable.",
																			"example": true,
																			"type": "boolean"
																		},
																		"id": {
																			"description": "The id of the Smart Tiered Cache setting.",
																			"example": "smart_tiered_cache",
																			"type": "string"
																		},
																		"modified_on": {
																			"description": "The last time the setting was modified.",
																			"example": "2025-09-10T22:53:22.946098Z",
																			"type": "string"
																		},
																		"value": {
																			"description": "Specifies the enablement value of Tiered Cache.",
																			"enum": [
																				"on",
																				"off"
																			],
																			"example": "on",
																			"type": "string"
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"healthchecks_count": {
																	"description": "The total number of health checks associated with the zone.",
																	"example": 5,
																	"type": "integer"
																}
															},
															"type": "object"
														}
													],
													"description": "The full Smart Shield response from the GET and PATCH operations.",
													"required": [
														"smart_tiered_cache",
														"smart_routing",
														"regional_tiered_cache",
														"cache_reserve",
														"healthchecks_count"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								}
							]
						}
					}
				},
				"description": "Smart Shield Settings response."
			},
			"500": {
				"content": {
					"application/json": {
						"examples": {
							"Invalid value": {
								"value": {
									"errors": [
										{
											"code": 1137,
											"message": "Unable to process request. Internal error."
										}
									],
									"messages": [],
									"result": null,
									"success": false
								}
							}
						},
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Smart Shield Settings response failure."
			},
			"502": {
				"content": {
					"application/json": {
						"examples": {
							"Not found": {
								"value": {
									"errors": [
										{
											"code": 1016,
											"message": "Unable to retrieve smart_tiered_cache."
										},
										{
											"code": 1016,
											"message": "Unable to retrieve cache_reserve."
										},
										{
											"code": 1016,
											"message": "Unable to retrieve smart_routing."
										},
										{
											"code": 1016,
											"message": "Unable to retrieve regional_tiered_cache."
										},
										{
											"code": 1016,
											"message": "Unable to retrieve healthchecks_count."
										}
									],
									"messages": [],
									"result": null,
									"success": false
								}
							}
						},
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Smart Shield Settings response failure."
			},
			"4XX": {
				"content": {
					"application/json": {
						"examples": {
							"Invalid value": {
								"value": {
									"errors": [
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock smart_tiered_cache."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock argo_smart_routing."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock regional_tiered_cache."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock cache_reserve."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock healthchecks_count."
										}
									],
									"messages": [],
									"result": null,
									"success": false
								}
							}
						},
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Patch Smart Shield Settings response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Smart Shield Settings",
		"tags": [
			"Smart Shield Settings"
		],
		"x-api-token-group": [
			"Zone Settings Write",
			"Zone Settings Read",
			"Zone Read",
			"Zone Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_id}/smart_shield": {
		"description": "Set Smart Shield Settings.",
		"operationId": "smart-shield-patch-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "The patch body for Smart Shield.",
						"example": {
							"smart_tiered_cache": {
								"value": "on"
							}
						},
						"properties": {
							"cache_reserve": {
								"properties": {
									"value": {
										"description": "Specifies the enablement value of Cache Reserve.",
										"enum": [
											"on",
											"off"
										],
										"example": "on",
										"type": "string"
									}
								},
								"type": "object"
							},
							"regional_tiered_cache": {
								"properties": {
									"value": {
										"description": "Specifies the enablement value of Regional Tiered Cache.",
										"enum": [
											"on",
											"off"
										],
										"example": "on",
										"type": "string"
									}
								},
								"type": "object"
							},
							"smart_routing": {
								"properties": {
									"value": {
										"description": "Specifies the enablement value of Smart Routing.",
										"enum": [
											"on",
											"off"
										],
										"example": "on",
										"type": "string"
									}
								},
								"type": "object"
							},
							"smart_tiered_cache": {
								"properties": {
									"value": {
										"description": "Specifies the enablement value of Smart Tiered Cache.",
										"enum": [
											"on",
											"off"
										],
										"example": "on",
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"description": "A consolidated object containing settings from multiple APIs for partial updates.",
													"properties": {
														"smart_tiered_cache": {
															"properties": {
																"editable": {
																	"description": "Whether the setting is editable.",
																	"example": true,
																	"type": "boolean"
																},
																"id": {
																	"description": "The id of the Smart Tiered Cache setting.",
																	"example": "smart_tiered_cache",
																	"type": "string"
																},
																"modified_on": {
																	"description": "The last time the setting was modified.",
																	"example": "2025-09-10T22:53:22.946098Z",
																	"type": "string"
																},
																"value": {
																	"description": "Specifies the enablement value of Tiered Cache.",
																	"enum": [
																		"on",
																		"off"
																	],
																	"example": "on",
																	"type": "string"
																}
															},
															"type": "object"
														}
													},
													"required": [
														"smart_tiered_cache",
														"smart_routing",
														"regional_tiered_cache",
														"cache_reserve"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								}
							]
						}
					}
				},
				"description": "Smart Shield Settings response."
			},
			"500": {
				"content": {
					"application/json": {
						"examples": {
							"Invalid value": {
								"value": {
									"errors": [
										{
											"code": 1137,
											"message": "Unable to process request. Internal error."
										}
									],
									"messages": [],
									"result": null,
									"success": false
								}
							}
						},
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Smart Shield Settings response failure."
			},
			"502": {
				"content": {
					"application/json": {
						"examples": {
							"Not found": {
								"value": {
									"errors": [
										{
											"code": 1016,
											"message": "Unable to update smart_tiered_cache."
										}
									],
									"messages": [],
									"result": null,
									"success": false
								}
							}
						},
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Smart Shield Settings response failure."
			},
			"4XX": {
				"content": {
					"application/json": {
						"examples": {
							"Invalid value": {
								"value": {
									"errors": [
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock smart_tiered_cache."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock argo_smart_routing."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock regional_tiered_cache."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock cache_reserve."
										},
										{
											"code": 1034,
											"message": "Upgrade Smart Shield to unlock healthchecks_count."
										}
									],
									"messages": [],
									"result": null,
									"success": false
								}
							}
						},
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Patch Smart Shield Settings response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch Smart Shield Settings",
		"tags": [
			"Smart Shield Settings"
		],
		"x-api-token-group": [
			"Zone Settings Write",
			"Zone Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read",
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}