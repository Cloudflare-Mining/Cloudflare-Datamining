{
	"DELETE /zones/{zone_id}/ssl/certificate_packs/{certificate_pack_id}": {
		"description": "For a given zone, delete an advanced certificate pack.",
		"operationId": "certificate-packs-delete-advanced-certificate-manager-certificate-pack",
		"parameters": [
			{
				"in": "path",
				"name": "certificate_pack_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "Identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Advanced Certificate Manager Certificate Pack response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "Identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Advanced Certificate Manager Certificate Pack response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Advanced Certificate Manager Certificate Pack",
		"tags": [
			"Certificate Packs"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read",
				"#ssl:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/ssl/certificate_packs": {
		"description": "For a given zone, list all active certificate packs.",
		"operationId": "certificate-packs-list-certificate-packs",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "status",
				"schema": {
					"description": "Include Certificate Packs of all statuses, not just active ones.",
					"enum": [
						"all"
					],
					"example": "all"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Certificate Packs response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Certificate Packs response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Certificate Packs",
		"tags": [
			"Certificate Packs"
		],
		"x-api-token-group": [
			"SSL and Certificates Write",
			"SSL and Certificates Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/ssl/certificate_packs/{certificate_pack_id}": {
		"description": "For a given zone, get a certificate pack.",
		"operationId": "certificate-packs-get-certificate-pack",
		"parameters": [
			{
				"in": "path",
				"name": "certificate_pack_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Certificate Pack response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Certificate Pack response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Certificate Pack",
		"tags": [
			"Certificate Packs"
		],
		"x-api-token-group": [
			"SSL and Certificates Write",
			"SSL and Certificates Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/ssl/certificate_packs/quota": {
		"description": "For a given zone, list certificate pack quotas.",
		"operationId": "certificate-packs-get-certificate-pack-quotas",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"advanced": {
													"properties": {
														"allocated": {
															"description": "Quantity Allocated.",
															"type": "integer",
															"x-auditable": true
														},
														"used": {
															"description": "Quantity Used.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Certificate Pack Quotas response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"advanced": {
															"properties": {
																"allocated": {
																	"description": "Quantity Allocated.",
																	"type": "integer",
																	"x-auditable": true
																},
																"used": {
																	"description": "Quantity Used.",
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Certificate Pack Quotas response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Certificate Pack Quotas",
		"tags": [
			"Certificate Packs"
		],
		"x-api-token-group": [
			"SSL and Certificates Write",
			"SSL and Certificates Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_id}/ssl/certificate_packs/{certificate_pack_id}": {
		"description": "For a given zone, restart validation or add cloudflare branding for an advanced certificate pack.  The former is only a validation operation for a Certificate Pack in a validation_timed_out status.",
		"operationId": "certificate-packs-restart-validation-for-advanced-certificate-manager-certificate-pack",
		"parameters": [
			{
				"in": "path",
				"name": "certificate_pack_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"cloudflare_branding": {
								"description": "Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"certificate_authority": {
													"description": "Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)",
													"enum": [
														"google",
														"lets_encrypt",
														"ssl_com"
													],
													"example": "lets_encrypt",
													"type": "string",
													"x-auditable": true
												},
												"cloudflare_branding": {
													"description": "Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"hosts": {
													"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
													"example": [
														"example.com",
														"*.example.com",
														"www.example.com"
													],
													"items": {
														"type": "string",
														"x-auditable": true
													},
													"type": "array"
												},
												"id": {
													"description": "Identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Status of certificate pack.",
													"enum": [
														"initializing",
														"pending_validation",
														"deleted",
														"pending_issuance",
														"pending_deployment",
														"pending_deletion",
														"pending_expiration",
														"expired",
														"active",
														"initializing_timed_out",
														"validation_timed_out",
														"issuance_timed_out",
														"deployment_timed_out",
														"deletion_timed_out",
														"pending_cleanup",
														"staging_deployment",
														"staging_active",
														"deactivating",
														"inactive",
														"backup_issued",
														"holding_deployment"
													],
													"example": "initializing",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "Type of certificate pack.",
													"enum": [
														"mh_custom",
														"managed_hostname",
														"sni_custom",
														"universal",
														"advanced",
														"total_tls",
														"keyless",
														"legacy_custom"
													],
													"example": "universal",
													"type": "string",
													"x-auditable": true
												},
												"validation_errors": {
													"description": "Domain validation errors that have been received by the certificate authority (CA).",
													"items": {
														"properties": {
															"message": {
																"description": "A domain validation error.",
																"example": "SERVFAIL looking up CAA for app.example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"validation_method": {
													"description": "Validation Method selected for the order.",
													"enum": [
														"txt",
														"http",
														"email"
													],
													"example": "txt",
													"type": "string",
													"x-auditable": true
												},
												"validation_records": {
													"description": "Certificates' validation records. Only present when certificate pack is in \"pending_validation\" status",
													"items": {
														"description": "Certificate's required validation record.",
														"properties": {
															"emails": {
																"description": "The set of email addresses that the certificate authority (CA) will use to complete domain validation.",
																"example": [
																	"administrator@example.com",
																	"webmaster@example.com"
																],
																"items": {
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"http_body": {
																"description": "The content that the certificate authority (CA) will expect to find at the http_url during the domain validation.",
																"example": "ca3-574923932a82475cb8592200f1a2a23d",
																"type": "string"
															},
															"http_url": {
																"description": "The url that will be checked during domain validation.",
																"example": "http://app.example.com/.well-known/pki-validation/ca3-da12a1c25e7b48cf80408c6c1763b8a2.txt",
																"type": "string"
															},
															"txt_name": {
																"description": "The hostname that the certificate authority (CA) will check for a TXT record during domain validation .",
																"example": "_acme-challenge.app.example.com",
																"type": "string",
																"x-auditable": true
															},
															"txt_value": {
																"description": "The TXT record that the certificate authority (CA) will check during domain validation.",
																"example": "810b7d5f01154524b961ba0cd578acc2",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"validity_days": {
													"description": "Validity Days selected for the order.",
													"enum": [
														14,
														30,
														90,
														365
													],
													"type": "integer",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Restart Validation for Advanced Certificate Manager Certificate Pack response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"certificate_authority": {
															"description": "Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)",
															"enum": [
																"google",
																"lets_encrypt",
																"ssl_com"
															],
															"example": "lets_encrypt",
															"type": "string",
															"x-auditable": true
														},
														"cloudflare_branding": {
															"description": "Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"hosts": {
															"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
															"example": [
																"example.com",
																"*.example.com",
																"www.example.com"
															],
															"items": {
																"type": "string",
																"x-auditable": true
															},
															"type": "array"
														},
														"id": {
															"description": "Identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"description": "Status of certificate pack.",
															"enum": [
																"initializing",
																"pending_validation",
																"deleted",
																"pending_issuance",
																"pending_deployment",
																"pending_deletion",
																"pending_expiration",
																"expired",
																"active",
																"initializing_timed_out",
																"validation_timed_out",
																"issuance_timed_out",
																"deployment_timed_out",
																"deletion_timed_out",
																"pending_cleanup",
																"staging_deployment",
																"staging_active",
																"deactivating",
																"inactive",
																"backup_issued",
																"holding_deployment"
															],
															"example": "initializing",
															"type": "string",
															"x-auditable": true
														},
														"type": {
															"description": "Type of certificate pack.",
															"enum": [
																"mh_custom",
																"managed_hostname",
																"sni_custom",
																"universal",
																"advanced",
																"total_tls",
																"keyless",
																"legacy_custom"
															],
															"example": "universal",
															"type": "string",
															"x-auditable": true
														},
														"validation_errors": {
															"description": "Domain validation errors that have been received by the certificate authority (CA).",
															"items": {
																"properties": {
																	"message": {
																		"description": "A domain validation error.",
																		"example": "SERVFAIL looking up CAA for app.example.com",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"validation_method": {
															"description": "Validation Method selected for the order.",
															"enum": [
																"txt",
																"http",
																"email"
															],
															"example": "txt",
															"type": "string",
															"x-auditable": true
														},
														"validation_records": {
															"description": "Certificates' validation records. Only present when certificate pack is in \"pending_validation\" status",
															"items": {
																"description": "Certificate's required validation record.",
																"properties": {
																	"emails": {
																		"description": "The set of email addresses that the certificate authority (CA) will use to complete domain validation.",
																		"example": [
																			"administrator@example.com",
																			"webmaster@example.com"
																		],
																		"items": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"http_body": {
																		"description": "The content that the certificate authority (CA) will expect to find at the http_url during the domain validation.",
																		"example": "ca3-574923932a82475cb8592200f1a2a23d",
																		"type": "string"
																	},
																	"http_url": {
																		"description": "The url that will be checked during domain validation.",
																		"example": "http://app.example.com/.well-known/pki-validation/ca3-da12a1c25e7b48cf80408c6c1763b8a2.txt",
																		"type": "string"
																	},
																	"txt_name": {
																		"description": "The hostname that the certificate authority (CA) will check for a TXT record during domain validation .",
																		"example": "_acme-challenge.app.example.com",
																		"type": "string",
																		"x-auditable": true
																	},
																	"txt_value": {
																		"description": "The TXT record that the certificate authority (CA) will check during domain validation.",
																		"example": "810b7d5f01154524b961ba0cd578acc2",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"validity_days": {
															"description": "Validity Days selected for the order.",
															"enum": [
																14,
																30,
																90,
																365
															],
															"type": "integer",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Restart Validation for Advanced Certificate Manager Certificate Pack response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Restart Validation or Update Advanced Certificate Manager Certificate Pack",
		"tags": [
			"Certificate Packs"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read",
				"#ssl:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/ssl/certificate_packs/order": {
		"description": "For a given zone, order an advanced certificate pack.",
		"operationId": "certificate-packs-order-advanced-certificate-manager-certificate-pack",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"certificate_authority": {
								"description": "Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)",
								"enum": [
									"google",
									"lets_encrypt",
									"ssl_com"
								],
								"example": "lets_encrypt",
								"type": "string",
								"x-auditable": true
							},
							"cloudflare_branding": {
								"description": "Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							},
							"hosts": {
								"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
								"example": [
									"example.com",
									"*.example.com",
									"www.example.com"
								],
								"items": {
									"type": "string",
									"x-auditable": true
								},
								"type": "array"
							},
							"type": {
								"description": "Type of certificate pack.",
								"enum": [
									"advanced"
								],
								"example": "advanced",
								"type": "string",
								"x-auditable": true
							},
							"validation_method": {
								"description": "Validation Method selected for the order.",
								"enum": [
									"txt",
									"http",
									"email"
								],
								"example": "txt",
								"type": "string",
								"x-auditable": true
							},
							"validity_days": {
								"description": "Validity Days selected for the order.",
								"enum": [
									14,
									30,
									90,
									365
								],
								"type": "integer",
								"x-auditable": true
							}
						},
						"required": [
							"type",
							"hosts",
							"validation_method",
							"validity_days",
							"certificate_authority"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"certificate_authority": {
													"description": "Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)",
													"enum": [
														"google",
														"lets_encrypt",
														"ssl_com"
													],
													"example": "lets_encrypt",
													"type": "string",
													"x-auditable": true
												},
												"cloudflare_branding": {
													"description": "Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"hosts": {
													"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
													"example": [
														"example.com",
														"*.example.com",
														"www.example.com"
													],
													"items": {
														"type": "string",
														"x-auditable": true
													},
													"type": "array"
												},
												"id": {
													"description": "Identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Status of certificate pack.",
													"enum": [
														"initializing",
														"pending_validation",
														"deleted",
														"pending_issuance",
														"pending_deployment",
														"pending_deletion",
														"pending_expiration",
														"expired",
														"active",
														"initializing_timed_out",
														"validation_timed_out",
														"issuance_timed_out",
														"deployment_timed_out",
														"deletion_timed_out",
														"pending_cleanup",
														"staging_deployment",
														"staging_active",
														"deactivating",
														"inactive",
														"backup_issued",
														"holding_deployment"
													],
													"example": "initializing",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "Type of certificate pack.",
													"enum": [
														"mh_custom",
														"managed_hostname",
														"sni_custom",
														"universal",
														"advanced",
														"total_tls",
														"keyless",
														"legacy_custom"
													],
													"example": "universal",
													"type": "string",
													"x-auditable": true
												},
												"validation_errors": {
													"description": "Domain validation errors that have been received by the certificate authority (CA).",
													"items": {
														"properties": {
															"message": {
																"description": "A domain validation error.",
																"example": "SERVFAIL looking up CAA for app.example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"validation_method": {
													"description": "Validation Method selected for the order.",
													"enum": [
														"txt",
														"http",
														"email"
													],
													"example": "txt",
													"type": "string",
													"x-auditable": true
												},
												"validation_records": {
													"description": "Certificates' validation records. Only present when certificate pack is in \"pending_validation\" status",
													"items": {
														"description": "Certificate's required validation record.",
														"properties": {
															"emails": {
																"description": "The set of email addresses that the certificate authority (CA) will use to complete domain validation.",
																"example": [
																	"administrator@example.com",
																	"webmaster@example.com"
																],
																"items": {
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"http_body": {
																"description": "The content that the certificate authority (CA) will expect to find at the http_url during the domain validation.",
																"example": "ca3-574923932a82475cb8592200f1a2a23d",
																"type": "string"
															},
															"http_url": {
																"description": "The url that will be checked during domain validation.",
																"example": "http://app.example.com/.well-known/pki-validation/ca3-da12a1c25e7b48cf80408c6c1763b8a2.txt",
																"type": "string"
															},
															"txt_name": {
																"description": "The hostname that the certificate authority (CA) will check for a TXT record during domain validation .",
																"example": "_acme-challenge.app.example.com",
																"type": "string",
																"x-auditable": true
															},
															"txt_value": {
																"description": "The TXT record that the certificate authority (CA) will check during domain validation.",
																"example": "810b7d5f01154524b961ba0cd578acc2",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"validity_days": {
													"description": "Validity Days selected for the order.",
													"enum": [
														14,
														30,
														90,
														365
													],
													"type": "integer",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Order Advanced Certificate Manager Certificate Pack response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"certificate_authority": {
															"description": "Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)",
															"enum": [
																"google",
																"lets_encrypt",
																"ssl_com"
															],
															"example": "lets_encrypt",
															"type": "string",
															"x-auditable": true
														},
														"cloudflare_branding": {
															"description": "Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"hosts": {
															"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
															"example": [
																"example.com",
																"*.example.com",
																"www.example.com"
															],
															"items": {
																"type": "string",
																"x-auditable": true
															},
															"type": "array"
														},
														"id": {
															"description": "Identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"description": "Status of certificate pack.",
															"enum": [
																"initializing",
																"pending_validation",
																"deleted",
																"pending_issuance",
																"pending_deployment",
																"pending_deletion",
																"pending_expiration",
																"expired",
																"active",
																"initializing_timed_out",
																"validation_timed_out",
																"issuance_timed_out",
																"deployment_timed_out",
																"deletion_timed_out",
																"pending_cleanup",
																"staging_deployment",
																"staging_active",
																"deactivating",
																"inactive",
																"backup_issued",
																"holding_deployment"
															],
															"example": "initializing",
															"type": "string",
															"x-auditable": true
														},
														"type": {
															"description": "Type of certificate pack.",
															"enum": [
																"mh_custom",
																"managed_hostname",
																"sni_custom",
																"universal",
																"advanced",
																"total_tls",
																"keyless",
																"legacy_custom"
															],
															"example": "universal",
															"type": "string",
															"x-auditable": true
														},
														"validation_errors": {
															"description": "Domain validation errors that have been received by the certificate authority (CA).",
															"items": {
																"properties": {
																	"message": {
																		"description": "A domain validation error.",
																		"example": "SERVFAIL looking up CAA for app.example.com",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"validation_method": {
															"description": "Validation Method selected for the order.",
															"enum": [
																"txt",
																"http",
																"email"
															],
															"example": "txt",
															"type": "string",
															"x-auditable": true
														},
														"validation_records": {
															"description": "Certificates' validation records. Only present when certificate pack is in \"pending_validation\" status",
															"items": {
																"description": "Certificate's required validation record.",
																"properties": {
																	"emails": {
																		"description": "The set of email addresses that the certificate authority (CA) will use to complete domain validation.",
																		"example": [
																			"administrator@example.com",
																			"webmaster@example.com"
																		],
																		"items": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"http_body": {
																		"description": "The content that the certificate authority (CA) will expect to find at the http_url during the domain validation.",
																		"example": "ca3-574923932a82475cb8592200f1a2a23d",
																		"type": "string"
																	},
																	"http_url": {
																		"description": "The url that will be checked during domain validation.",
																		"example": "http://app.example.com/.well-known/pki-validation/ca3-da12a1c25e7b48cf80408c6c1763b8a2.txt",
																		"type": "string"
																	},
																	"txt_name": {
																		"description": "The hostname that the certificate authority (CA) will check for a TXT record during domain validation .",
																		"example": "_acme-challenge.app.example.com",
																		"type": "string",
																		"x-auditable": true
																	},
																	"txt_value": {
																		"description": "The TXT record that the certificate authority (CA) will check during domain validation.",
																		"example": "810b7d5f01154524b961ba0cd578acc2",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"validity_days": {
															"description": "Validity Days selected for the order.",
															"enum": [
																14,
																30,
																90,
																365
															],
															"type": "integer",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Order Advanced Certificate Manager Certificate Pack response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Order Advanced Certificate Manager Certificate Pack",
		"tags": [
			"Certificate Packs"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read",
				"#ssl:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}