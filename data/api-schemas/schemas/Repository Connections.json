{
	"DELETE /accounts/{account_id}/builds/repos/connections/{repo_connection_uuid}": {
		"description": "Remove a repository connection",
		"operationId": "deleteRepoConnection",
		"parameters": [
			{
				"description": "Account identifier",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "account-123",
					"type": "string"
				}
			},
			{
				"description": "Repository connection UUID",
				"in": "path",
				"name": "repo_connection_uuid",
				"required": true,
				"schema": {
					"format": "uuid",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"example": {
							"errors": [],
							"messages": [],
							"result": null,
							"success": true
						},
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"example": 12000,
												"type": "integer"
											},
											"message": {
												"example": "Not found",
												"type": "string"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"type": "string"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"result_info": {
									"properties": {
										"count": {
											"example": 25,
											"type": "integer"
										},
										"page": {
											"example": 1,
											"type": "integer"
										},
										"per_page": {
											"example": 50,
											"type": "integer"
										},
										"total_count": {
											"example": 150,
											"type": "integer"
										},
										"total_pages": {
											"example": 3,
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Operation successful"
			},
			"404": {
				"content": {
					"application/json": {
						"example": {
							"errors": [
								{
									"code": 12000,
									"message": "Not found"
								}
							],
							"messages": [],
							"result": null,
							"success": false
						},
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"example": 12000,
												"type": "integer"
											},
											"message": {
												"example": "Not found",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"type": "string"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Resource not found"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete repository connection",
		"tags": [
			"Repository Connections"
		],
		"x-api-token-group": [
			"Workers CI Write"
		]
	},
	"PUT /accounts/{account_id}/builds/repos/connections": {
		"description": "Upsert a repository connection for CI/CD integration",
		"operationId": "upsertRepoConnection",
		"parameters": [
			{
				"description": "Account identifier",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "account-123",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"provider_account_id": {
								"example": "cloudflare",
								"type": "string"
							},
							"provider_account_name": {
								"example": "Cloudflare",
								"type": "string"
							},
							"provider_type": {
								"enum": [
									"github"
								],
								"example": "github",
								"type": "string"
							},
							"repo_id": {
								"example": "workers-sdk",
								"type": "string"
							},
							"repo_name": {
								"example": "workers-sdk",
								"type": "string"
							}
						},
						"required": [
							"repo_id",
							"repo_name",
							"provider_type",
							"provider_account_id",
							"provider_account_name"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"example": 12000,
														"type": "integer"
													},
													"message": {
														"example": "Not found",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"result_info": {
											"properties": {
												"count": {
													"example": 25,
													"type": "integer"
												},
												"page": {
													"example": 1,
													"type": "integer"
												},
												"per_page": {
													"example": 50,
													"type": "integer"
												},
												"total_count": {
													"example": 150,
													"type": "integer"
												},
												"total_pages": {
													"example": 3,
													"type": "integer"
												}
											},
											"type": "object"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"format": "date-time",
													"type": "string"
												},
												"deleted_on": {
													"format": "date-time",
													"nullable": true,
													"type": "string"
												},
												"modified_on": {
													"format": "date-time",
													"type": "string"
												},
												"provider_account_id": {
													"example": "cloudflare",
													"type": "string"
												},
												"provider_account_name": {
													"example": "Cloudflare",
													"type": "string"
												},
												"provider_type": {
													"enum": [
														"github"
													],
													"example": "github",
													"type": "string"
												},
												"repo_connection_uuid": {
													"format": "uuid",
													"type": "string"
												},
												"repo_id": {
													"example": "workers-sdk",
													"type": "string"
												},
												"repo_name": {
													"example": "workers-sdk",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Repository connection upserted successfully"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create or update repository connection",
		"tags": [
			"Repository Connections"
		],
		"x-api-token-group": [
			"Workers CI Write"
		]
	}
}