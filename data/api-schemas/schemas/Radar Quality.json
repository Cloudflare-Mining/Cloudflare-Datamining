{
	"GET /radar/quality/iqi/summary": {
		"description": "Retrieves a summary (percentiles) of bandwidth, latency, or DNS response time from the Radar Internet Quality Index (IQI).",
		"operationId": "radar-get-quality-index-summary",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Defines which metric to return (bandwidth, latency, or DNS response time).",
				"in": "query",
				"name": "metric",
				"required": true,
				"schema": {
					"description": "Defines which metric to return (bandwidth, latency, or DNS response time).",
					"enum": [
						"BANDWIDTH",
						"DNS",
						"LATENCY"
					],
					"example": "latency",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"p25": {
													"example": "32.20938",
													"type": "string"
												},
												"p50": {
													"example": "61.819881",
													"type": "string"
												},
												"p75": {
													"example": "133.813087",
													"type": "string"
												}
											},
											"required": [
												"p75",
												"p50",
												"p25"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Internet Quality Index (IQI) summary",
		"tags": [
			"Radar Quality"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/quality/iqi/timeseries_groups": {
		"description": "Retrieves a time series (percentiles) of bandwidth, latency, or DNS response time from the Radar Internet Quality Index (IQI).",
		"operationId": "radar-get-quality-index-timeseries-group",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Enables interpolation for all series (using the average).",
				"in": "query",
				"name": "interpolation",
				"schema": {
					"description": "Enables interpolation for all series (using the average).",
					"type": "boolean"
				}
			},
			{
				"description": "Defines which metric to return (bandwidth, latency, or DNS response time).",
				"in": "query",
				"name": "metric",
				"required": true,
				"schema": {
					"description": "Defines which metric to return (bandwidth, latency, or DNS response time).",
					"enum": [
						"BANDWIDTH",
						"DNS",
						"LATENCY"
					],
					"example": "latency",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"aggInterval",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"p25": {
													"items": {
														"example": "31.253439",
														"type": "string"
													},
													"type": "array"
												},
												"p50": {
													"items": {
														"example": "60.337738",
														"type": "string"
													},
													"type": "array"
												},
												"p75": {
													"items": {
														"example": "125.940175",
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"example": "2023-04-17T00:00:00Z",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"p75",
												"p50",
												"p25"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Internet Quality Index (IQI) time series",
		"tags": [
			"Radar Quality"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/quality/speed/histogram": {
		"description": "Retrieves a histogram from the previous 90 days of Cloudflare Speed Test data, split into fixed bandwidth (Mbps), latency (ms), or jitter (ms) buckets.",
		"operationId": "radar-get-quality-speed-histogram",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies the width for every bucket in the histogram.",
				"in": "query",
				"name": "bucketSize",
				"schema": {
					"description": "Specifies the width for every bucket in the histogram.",
					"type": "integer"
				}
			},
			{
				"description": "Metrics to be returned.",
				"in": "query",
				"name": "metricGroup",
				"schema": {
					"default": "bandwidth",
					"description": "Metrics to be returned.",
					"enum": [
						"BANDWIDTH",
						"LATENCY",
						"JITTER"
					],
					"example": "bandwidth",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"histogram_0": {
											"properties": {
												"bandwidthDownload": {
													"items": {
														"example": "83681",
														"type": "string"
													},
													"type": "array"
												},
												"bandwidthUpload": {
													"items": {
														"example": "181079",
														"type": "string"
													},
													"type": "array"
												},
												"bucketMin": {
													"items": {
														"example": "0",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"bandwidthUpload",
												"bandwidthDownload",
												"bucketMin"
											],
											"type": "object"
										},
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"bucketSize": {
													"description": "The width for every bucket in the histogram.",
													"type": "integer"
												},
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE"
													],
													"type": "string"
												},
												"totalTests": {
													"items": {
														"type": "integer"
													},
													"type": "array"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"bucketSize",
												"totalTests"
											],
											"type": "object"
										}
									},
									"required": [
										"histogram_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get speed tests histogram",
		"tags": [
			"Radar Quality"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/quality/speed/summary": {
		"description": "Retrieves a summary of bandwidth, latency, jitter, and packet loss, from the previous 90 days of Cloudflare Speed Test data.",
		"operationId": "radar-get-quality-speed-summary",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"bandwidthDownload": {
													"example": "83.765201",
													"type": "string"
												},
												"bandwidthUpload": {
													"example": "39.005561",
													"type": "string"
												},
												"jitterIdle": {
													"example": "25.648713",
													"type": "string"
												},
												"jitterLoaded": {
													"example": "77.462155",
													"type": "string"
												},
												"latencyIdle": {
													"example": "83.165385",
													"type": "string"
												},
												"latencyLoaded": {
													"example": "270.561124",
													"type": "string"
												},
												"packetLoss": {
													"example": "1.23705",
													"type": "string"
												}
											},
											"required": [
												"bandwidthDownload",
												"bandwidthUpload",
												"latencyIdle",
												"latencyLoaded",
												"jitterIdle",
												"jitterLoaded",
												"packetLoss"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get speed tests summary",
		"tags": [
			"Radar Quality"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/quality/speed/top/ases": {
		"description": "Retrieves the top autonomous systems by bandwidth, latency, jitter, or packet loss, from the previous 90 days of Cloudflare Speed Test data.",
		"operationId": "radar-get-quality-speed-top-ases",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies the metric to order the results by.",
				"in": "query",
				"name": "orderBy",
				"schema": {
					"default": "BANDWIDTH_DOWNLOAD",
					"description": "Specifies the metric to order the results by.",
					"enum": [
						"BANDWIDTH_DOWNLOAD",
						"BANDWIDTH_UPLOAD",
						"LATENCY_IDLE",
						"LATENCY_LOADED",
						"JITTER_IDLE",
						"JITTER_LOADED"
					],
					"type": "string"
				}
			},
			{
				"description": "Reverses the order of results.",
				"in": "query",
				"name": "reverse",
				"schema": {
					"description": "Reverses the order of results.",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"bandwidthDownload": {
														"example": "642.509004",
														"type": "string"
													},
													"bandwidthUpload": {
														"example": "300.672274",
														"type": "string"
													},
													"clientASN": {
														"example": 33353,
														"type": "number"
													},
													"clientASName": {
														"example": "SIE-CGEI-ASN-1",
														"type": "string"
													},
													"jitterIdle": {
														"example": "2.956908",
														"type": "string"
													},
													"jitterLoaded": {
														"example": "19.500469",
														"type": "string"
													},
													"latencyIdle": {
														"example": "15.925",
														"type": "string"
													},
													"latencyLoaded": {
														"example": "65.65",
														"type": "string"
													},
													"numTests": {
														"example": 13123,
														"type": "number"
													},
													"rankPower": {
														"example": 0.77,
														"type": "number"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"bandwidthDownload",
													"bandwidthUpload",
													"latencyIdle",
													"latencyLoaded",
													"jitterIdle",
													"jitterLoaded",
													"numTests",
													"rankPower"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top ASes by speed test results",
		"tags": [
			"Radar Quality"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/quality/speed/top/locations": {
		"description": "Retrieves the top locations by bandwidth, latency, jitter, or packet loss, from the previous 90 days of Cloudflare Speed Test data.",
		"operationId": "radar-get-quality-speed-top-locations",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies the metric to order the results by.",
				"in": "query",
				"name": "orderBy",
				"schema": {
					"default": "BANDWIDTH_DOWNLOAD",
					"description": "Specifies the metric to order the results by.",
					"enum": [
						"BANDWIDTH_DOWNLOAD",
						"BANDWIDTH_UPLOAD",
						"LATENCY_IDLE",
						"LATENCY_LOADED",
						"JITTER_IDLE",
						"JITTER_LOADED"
					],
					"type": "string"
				}
			},
			{
				"description": "Reverses the order of results.",
				"in": "query",
				"name": "reverse",
				"schema": {
					"description": "Reverses the order of results.",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"bandwidthDownload": {
														"example": "295.886073",
														"type": "string"
													},
													"bandwidthUpload": {
														"example": "158.85269",
														"type": "string"
													},
													"clientCountryAlpha2": {
														"example": "IS",
														"type": "string"
													},
													"clientCountryName": {
														"example": "Iceland",
														"type": "string"
													},
													"jitterIdle": {
														"example": "9.640685",
														"type": "string"
													},
													"jitterLoaded": {
														"example": "46.480023",
														"type": "string"
													},
													"latencyIdle": {
														"example": "15.208124",
														"type": "string"
													},
													"latencyLoaded": {
														"example": "114.758887",
														"type": "string"
													},
													"numTests": {
														"example": 13123,
														"type": "number"
													},
													"rankPower": {
														"example": 0.77,
														"type": "number"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"bandwidthDownload",
													"bandwidthUpload",
													"latencyIdle",
													"latencyLoaded",
													"jitterIdle",
													"jitterLoaded",
													"numTests",
													"rankPower"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top locations by speed test results",
		"tags": [
			"Radar Quality"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}