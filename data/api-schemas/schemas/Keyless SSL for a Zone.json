{
	"DELETE /zones/{zone_id}/keyless_certificates/{keyless_certificate_id}": {
		"operationId": "keyless-ssl-for-a-zone-delete-keyless-ssl-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "keyless_certificate_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "Identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete Keyless SSL Configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "Identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Keyless SSL Configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Keyless SSL Configuration",
		"tags": [
			"Keyless SSL for a Zone"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/keyless_certificates": {
		"description": "List all Keyless SSL configurations for a given zone.",
		"operationId": "keyless-ssl-for-a-zone-list-keyless-ssl-configurations",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"created_on": {
																"description": "When the Keyless SSL was created.",
																"example": "2014-01-01T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"enabled": {
																"description": "Whether or not the Keyless SSL is on or off.",
																"example": false,
																"readOnly": true,
																"type": "boolean"
															},
															"host": {
																"description": "The keyless SSL name.",
																"example": "example.com",
																"format": "hostname",
																"maxLength": 253,
																"type": "string"
															},
															"id": {
																"description": "Keyless certificate identifier tag.",
																"example": "4d2844d2ce78891c34d0b6c0535a291e",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"modified_on": {
																"description": "When the Keyless SSL was last modified.",
																"example": "2014-01-01T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"name": {
																"description": "The keyless SSL name.",
																"example": "example.com Keyless SSL",
																"maxLength": 180,
																"readOnly": true,
																"type": "string"
															},
															"permissions": {
																"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
																"example": [
																	"#ssl:read",
																	"#ssl:edit"
																],
																"items": {
																	"type": "string"
																},
																"readOnly": true,
																"type": "array"
															},
															"port": {
																"default": 24008,
																"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
																"example": 24008,
																"maxLength": 65535,
																"type": "number"
															},
															"status": {
																"description": "Status of the Keyless SSL.",
																"enum": [
																	"active",
																	"deleted"
																],
																"example": "active",
																"readOnly": true,
																"type": "string"
															},
															"tunnel": {
																"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
																"properties": {
																	"private_ip": {
																		"description": "Private IP of the Key Server Host",
																		"example": "10.0.0.1",
																		"type": "string"
																	},
																	"vnet_id": {
																		"description": "Cloudflare Tunnel Virtual Network ID",
																		"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																		"type": "string"
																	}
																},
																"required": [
																	"private_ip",
																	"vnet_id"
																],
																"type": "object"
															}
														},
														"required": [
															"id",
															"name",
															"host",
															"port",
															"status",
															"enabled",
															"permissions",
															"created_on",
															"modified_on"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Keyless SSL Configurations response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"properties": {
																	"created_on": {
																		"description": "When the Keyless SSL was created.",
																		"example": "2014-01-01T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string"
																	},
																	"enabled": {
																		"description": "Whether or not the Keyless SSL is on or off.",
																		"example": false,
																		"readOnly": true,
																		"type": "boolean"
																	},
																	"host": {
																		"description": "The keyless SSL name.",
																		"example": "example.com",
																		"format": "hostname",
																		"maxLength": 253,
																		"type": "string"
																	},
																	"id": {
																		"description": "Keyless certificate identifier tag.",
																		"example": "4d2844d2ce78891c34d0b6c0535a291e",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"modified_on": {
																		"description": "When the Keyless SSL was last modified.",
																		"example": "2014-01-01T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string"
																	},
																	"name": {
																		"description": "The keyless SSL name.",
																		"example": "example.com Keyless SSL",
																		"maxLength": 180,
																		"readOnly": true,
																		"type": "string"
																	},
																	"permissions": {
																		"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
																		"example": [
																			"#ssl:read",
																			"#ssl:edit"
																		],
																		"items": {
																			"type": "string"
																		},
																		"readOnly": true,
																		"type": "array"
																	},
																	"port": {
																		"default": 24008,
																		"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
																		"example": 24008,
																		"maxLength": 65535,
																		"type": "number"
																	},
																	"status": {
																		"description": "Status of the Keyless SSL.",
																		"enum": [
																			"active",
																			"deleted"
																		],
																		"example": "active",
																		"readOnly": true,
																		"type": "string"
																	},
																	"tunnel": {
																		"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
																		"properties": {
																			"private_ip": {
																				"description": "Private IP of the Key Server Host",
																				"example": "10.0.0.1",
																				"type": "string"
																			},
																			"vnet_id": {
																				"description": "Cloudflare Tunnel Virtual Network ID",
																				"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																				"type": "string"
																			}
																		},
																		"required": [
																			"private_ip",
																			"vnet_id"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"name",
																	"host",
																	"port",
																	"status",
																	"enabled",
																	"permissions",
																	"created_on",
																	"modified_on"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Keyless SSL Configurations response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Keyless SSL Configurations",
		"tags": [
			"Keyless SSL for a Zone"
		],
		"x-api-token-group": [
			"SSL and Certificates Write",
			"SSL and Certificates Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/keyless_certificates/{keyless_certificate_id}": {
		"description": "Get details for one Keyless SSL configuration.",
		"operationId": "keyless-ssl-for-a-zone-get-keyless-ssl-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "keyless_certificate_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"created_on": {
															"description": "When the Keyless SSL was created.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"enabled": {
															"description": "Whether or not the Keyless SSL is on or off.",
															"example": false,
															"readOnly": true,
															"type": "boolean"
														},
														"host": {
															"description": "The keyless SSL name.",
															"example": "example.com",
															"format": "hostname",
															"maxLength": 253,
															"type": "string"
														},
														"id": {
															"description": "Keyless certificate identifier tag.",
															"example": "4d2844d2ce78891c34d0b6c0535a291e",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"modified_on": {
															"description": "When the Keyless SSL was last modified.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"name": {
															"description": "The keyless SSL name.",
															"example": "example.com Keyless SSL",
															"maxLength": 180,
															"readOnly": true,
															"type": "string"
														},
														"permissions": {
															"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
															"example": [
																"#ssl:read",
																"#ssl:edit"
															],
															"items": {
																"type": "string"
															},
															"readOnly": true,
															"type": "array"
														},
														"port": {
															"default": 24008,
															"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
															"example": 24008,
															"maxLength": 65535,
															"type": "number"
														},
														"status": {
															"description": "Status of the Keyless SSL.",
															"enum": [
																"active",
																"deleted"
															],
															"example": "active",
															"readOnly": true,
															"type": "string"
														},
														"tunnel": {
															"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
															"properties": {
																"private_ip": {
																	"description": "Private IP of the Key Server Host",
																	"example": "10.0.0.1",
																	"type": "string"
																},
																"vnet_id": {
																	"description": "Cloudflare Tunnel Virtual Network ID",
																	"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																	"type": "string"
																}
															},
															"required": [
																"private_ip",
																"vnet_id"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"name",
														"host",
														"port",
														"status",
														"enabled",
														"permissions",
														"created_on",
														"modified_on"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Keyless SSL Configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"properties": {
																"created_on": {
																	"description": "When the Keyless SSL was created.",
																	"example": "2014-01-01T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"enabled": {
																	"description": "Whether or not the Keyless SSL is on or off.",
																	"example": false,
																	"readOnly": true,
																	"type": "boolean"
																},
																"host": {
																	"description": "The keyless SSL name.",
																	"example": "example.com",
																	"format": "hostname",
																	"maxLength": 253,
																	"type": "string"
																},
																"id": {
																	"description": "Keyless certificate identifier tag.",
																	"example": "4d2844d2ce78891c34d0b6c0535a291e",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string"
																},
																"modified_on": {
																	"description": "When the Keyless SSL was last modified.",
																	"example": "2014-01-01T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"name": {
																	"description": "The keyless SSL name.",
																	"example": "example.com Keyless SSL",
																	"maxLength": 180,
																	"readOnly": true,
																	"type": "string"
																},
																"permissions": {
																	"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
																	"example": [
																		"#ssl:read",
																		"#ssl:edit"
																	],
																	"items": {
																		"type": "string"
																	},
																	"readOnly": true,
																	"type": "array"
																},
																"port": {
																	"default": 24008,
																	"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
																	"example": 24008,
																	"maxLength": 65535,
																	"type": "number"
																},
																"status": {
																	"description": "Status of the Keyless SSL.",
																	"enum": [
																		"active",
																		"deleted"
																	],
																	"example": "active",
																	"readOnly": true,
																	"type": "string"
																},
																"tunnel": {
																	"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
																	"properties": {
																		"private_ip": {
																			"description": "Private IP of the Key Server Host",
																			"example": "10.0.0.1",
																			"type": "string"
																		},
																		"vnet_id": {
																			"description": "Cloudflare Tunnel Virtual Network ID",
																			"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																			"type": "string"
																		}
																	},
																	"required": [
																		"private_ip",
																		"vnet_id"
																	],
																	"type": "object"
																}
															},
															"required": [
																"id",
																"name",
																"host",
																"port",
																"status",
																"enabled",
																"permissions",
																"created_on",
																"modified_on"
															],
															"type": "object"
														}
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Keyless SSL Configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Keyless SSL Configuration",
		"tags": [
			"Keyless SSL for a Zone"
		],
		"x-api-token-group": [
			"Trust and Safety Write",
			"Trust and Safety Read",
			"Zero Trust: PII Read",
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin",
			"Access: Apps and Policies Revoke",
			"Access: Apps and Policies Write",
			"Access: Apps and Policies Read",
			"Access: Apps and Policies Revoke",
			"Access: Mutual TLS Certificates Write",
			"Access: Organizations, Identity Providers, and Groups Write",
			"Zone Settings Write",
			"Zone Settings Read",
			"Zone Read",
			"DNS Read",
			"Workers Scripts Write",
			"Workers Scripts Read",
			"Zone Write",
			"Workers Routes Write",
			"Workers Routes Read",
			"Stream Write",
			"Stream Read",
			"SSL and Certificates Write",
			"SSL and Certificates Read",
			"Logs Write",
			"Logs Read",
			"Cache Purge",
			"Page Rules Write",
			"Page Rules Read",
			"Load Balancers Write",
			"Load Balancers Read",
			"Firewall Services Write",
			"Firewall Services Read",
			"DNS Write",
			"Apps Write",
			"Analytics Read",
			"Access: Apps and Policies Write",
			"Access: Apps and Policies Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_id}/keyless_certificates/{keyless_certificate_id}": {
		"description": "This will update attributes of a Keyless SSL. Consists of one or more of the following:  host,name,port.",
		"operationId": "keyless-ssl-for-a-zone-edit-keyless-ssl-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "keyless_certificate_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"enabled": {
								"deprecated": true,
								"description": "Whether or not the Keyless SSL is on or off.",
								"example": false,
								"type": "boolean"
							},
							"host": {
								"description": "The keyless SSL name.",
								"example": "example.com",
								"format": "hostname",
								"maxLength": 253,
								"type": "string"
							},
							"name": {
								"description": "The keyless SSL name.",
								"example": "example.com Keyless SSL",
								"maxLength": 180,
								"type": "string"
							},
							"port": {
								"default": 24008,
								"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
								"example": 24008,
								"maxLength": 65535,
								"type": "number"
							},
							"tunnel": {
								"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
								"properties": {
									"private_ip": {
										"description": "Private IP of the Key Server Host",
										"example": "10.0.0.1",
										"type": "string"
									},
									"vnet_id": {
										"description": "Cloudflare Tunnel Virtual Network ID",
										"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
										"type": "string"
									}
								},
								"required": [
									"private_ip",
									"vnet_id"
								],
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"created_on": {
															"description": "When the Keyless SSL was created.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"enabled": {
															"description": "Whether or not the Keyless SSL is on or off.",
															"example": false,
															"readOnly": true,
															"type": "boolean"
														},
														"host": {
															"description": "The keyless SSL name.",
															"example": "example.com",
															"format": "hostname",
															"maxLength": 253,
															"type": "string"
														},
														"id": {
															"description": "Keyless certificate identifier tag.",
															"example": "4d2844d2ce78891c34d0b6c0535a291e",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"modified_on": {
															"description": "When the Keyless SSL was last modified.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"name": {
															"description": "The keyless SSL name.",
															"example": "example.com Keyless SSL",
															"maxLength": 180,
															"readOnly": true,
															"type": "string"
														},
														"permissions": {
															"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
															"example": [
																"#ssl:read",
																"#ssl:edit"
															],
															"items": {
																"type": "string"
															},
															"readOnly": true,
															"type": "array"
														},
														"port": {
															"default": 24008,
															"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
															"example": 24008,
															"maxLength": 65535,
															"type": "number"
														},
														"status": {
															"description": "Status of the Keyless SSL.",
															"enum": [
																"active",
																"deleted"
															],
															"example": "active",
															"readOnly": true,
															"type": "string"
														},
														"tunnel": {
															"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
															"properties": {
																"private_ip": {
																	"description": "Private IP of the Key Server Host",
																	"example": "10.0.0.1",
																	"type": "string"
																},
																"vnet_id": {
																	"description": "Cloudflare Tunnel Virtual Network ID",
																	"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																	"type": "string"
																}
															},
															"required": [
																"private_ip",
																"vnet_id"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"name",
														"host",
														"port",
														"status",
														"enabled",
														"permissions",
														"created_on",
														"modified_on"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Edit Keyless SSL Configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"properties": {
																"created_on": {
																	"description": "When the Keyless SSL was created.",
																	"example": "2014-01-01T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"enabled": {
																	"description": "Whether or not the Keyless SSL is on or off.",
																	"example": false,
																	"readOnly": true,
																	"type": "boolean"
																},
																"host": {
																	"description": "The keyless SSL name.",
																	"example": "example.com",
																	"format": "hostname",
																	"maxLength": 253,
																	"type": "string"
																},
																"id": {
																	"description": "Keyless certificate identifier tag.",
																	"example": "4d2844d2ce78891c34d0b6c0535a291e",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string"
																},
																"modified_on": {
																	"description": "When the Keyless SSL was last modified.",
																	"example": "2014-01-01T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"name": {
																	"description": "The keyless SSL name.",
																	"example": "example.com Keyless SSL",
																	"maxLength": 180,
																	"readOnly": true,
																	"type": "string"
																},
																"permissions": {
																	"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
																	"example": [
																		"#ssl:read",
																		"#ssl:edit"
																	],
																	"items": {
																		"type": "string"
																	},
																	"readOnly": true,
																	"type": "array"
																},
																"port": {
																	"default": 24008,
																	"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
																	"example": 24008,
																	"maxLength": 65535,
																	"type": "number"
																},
																"status": {
																	"description": "Status of the Keyless SSL.",
																	"enum": [
																		"active",
																		"deleted"
																	],
																	"example": "active",
																	"readOnly": true,
																	"type": "string"
																},
																"tunnel": {
																	"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
																	"properties": {
																		"private_ip": {
																			"description": "Private IP of the Key Server Host",
																			"example": "10.0.0.1",
																			"type": "string"
																		},
																		"vnet_id": {
																			"description": "Cloudflare Tunnel Virtual Network ID",
																			"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																			"type": "string"
																		}
																	},
																	"required": [
																		"private_ip",
																		"vnet_id"
																	],
																	"type": "object"
																}
															},
															"required": [
																"id",
																"name",
																"host",
																"port",
																"status",
																"enabled",
																"permissions",
																"created_on",
																"modified_on"
															],
															"type": "object"
														}
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Edit Keyless SSL Configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Edit Keyless SSL Configuration",
		"tags": [
			"Keyless SSL for a Zone"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /zones/{zone_id}/keyless_certificates": {
		"operationId": "keyless-ssl-for-a-zone-create-keyless-ssl-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"bundle_method": {
								"default": "ubiquitous",
								"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
								"enum": [
									"ubiquitous",
									"optimal",
									"force"
								],
								"example": "ubiquitous",
								"type": "string"
							},
							"certificate": {
								"description": "The zone's SSL certificate or SSL certificate and intermediate(s).",
								"example": "-----BEGIN CERTIFICATE----- MIIDtTCCAp2gAwIBAgIJAM15n7fdxhRtMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV BAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX aWRnaXRzIFB0eSBMdGQwHhcNMTQwMzExMTkyMTU5WhcNMTQwNDEwMTkyMTU5WjBF MQswCQYDVQQGEwJVUzETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50 ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB CgKCAQEAvq3sKsHpeduJHimOK+fvQdKsI8z8A05MZyyLp2/R/GE8FjNv+hkVY1WQ LIyTNNQH7CJecE1nbTfo8Y56S7x/rhxC6/DJ8MIulapFPnorq46KU6yRxiM0MQ3N nTJHlHA2ozZta6YBBfVfhHWl1F0IfNbXCLKvGwWWMbCx43OfW6KTkbRnE6gFWKuO fSO5h2u5TaWVuSIzBvYs7Vza6m+gtYAvKAJV2nSZ+eSEFPDo29corOy8+huEOUL8 5FAw4BFPsr1TlrlGPFitduQUHGrSL7skk1ESGza0to3bOtrodKei2s9bk5MXm7lZ qI+WZJX4Zu9+mzZhc9pCVi8r/qlXuQIDAQABo4GnMIGkMB0GA1UdDgQWBBRvavf+ sWM4IwKiH9X9w1vl6nUVRDB1BgNVHSMEbjBsgBRvavf+sWM4IwKiH9X9w1vl6nUV RKFJpEcwRTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAM15n7fdxhRtMAwGA1UdEwQF MAMBAf8wDQYJKoZIhvcNAQEFBQADggEBABY2ZzBaW0dMsAAT7tPJzrVWVzQx6KU4 UEBLudIlWPlkAwTnINCWR/8eNjCCmGA4heUdHmazdpPa8RzwOmc0NT1NQqzSyktt vTqb4iHD7+8f9MqJ9/FssCfTtqr/Qst/hGH4Wmdf1EJ/6FqYAAb5iRlPgshFZxU8 uXtA8hWn6fK6eISD9HBdcAFToUvKNZ1BIDPvh9f95Ine8ar6yGd56TUNrHR8eHBs ESxz5ddVR/oWRysNJ+aGAyYqHS8S/ttmC7r4XCAHqXptkHPCGRqkAhsterYhd4I8 /cBzejUobNCjjHFbtkAL/SjxZOLW+pNkZwfeYdM8iPkD54Uua1v2tdw= -----END CERTIFICATE-----",
								"type": "string"
							},
							"host": {
								"description": "The keyless SSL name.",
								"example": "example.com",
								"format": "hostname",
								"maxLength": 253,
								"type": "string"
							},
							"name": {
								"description": "The keyless SSL name.",
								"example": "example.com Keyless SSL",
								"maxLength": 180,
								"type": "string"
							},
							"port": {
								"default": 24008,
								"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
								"example": 24008,
								"maxLength": 65535,
								"type": "number"
							},
							"tunnel": {
								"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
								"properties": {
									"private_ip": {
										"description": "Private IP of the Key Server Host",
										"example": "10.0.0.1",
										"type": "string"
									},
									"vnet_id": {
										"description": "Cloudflare Tunnel Virtual Network ID",
										"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
										"type": "string"
									}
								},
								"required": [
									"private_ip",
									"vnet_id"
								],
								"type": "object"
							}
						},
						"required": [
							"host",
							"port",
							"certificate"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"created_on": {
															"description": "When the Keyless SSL was created.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"enabled": {
															"description": "Whether or not the Keyless SSL is on or off.",
															"example": false,
															"readOnly": true,
															"type": "boolean"
														},
														"host": {
															"description": "The keyless SSL name.",
															"example": "example.com",
															"format": "hostname",
															"maxLength": 253,
															"type": "string"
														},
														"id": {
															"description": "Keyless certificate identifier tag.",
															"example": "4d2844d2ce78891c34d0b6c0535a291e",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"modified_on": {
															"description": "When the Keyless SSL was last modified.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"name": {
															"description": "The keyless SSL name.",
															"example": "example.com Keyless SSL",
															"maxLength": 180,
															"readOnly": true,
															"type": "string"
														},
														"permissions": {
															"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
															"example": [
																"#ssl:read",
																"#ssl:edit"
															],
															"items": {
																"type": "string"
															},
															"readOnly": true,
															"type": "array"
														},
														"port": {
															"default": 24008,
															"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
															"example": 24008,
															"maxLength": 65535,
															"type": "number"
														},
														"status": {
															"description": "Status of the Keyless SSL.",
															"enum": [
																"active",
																"deleted"
															],
															"example": "active",
															"readOnly": true,
															"type": "string"
														},
														"tunnel": {
															"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
															"properties": {
																"private_ip": {
																	"description": "Private IP of the Key Server Host",
																	"example": "10.0.0.1",
																	"type": "string"
																},
																"vnet_id": {
																	"description": "Cloudflare Tunnel Virtual Network ID",
																	"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																	"type": "string"
																}
															},
															"required": [
																"private_ip",
																"vnet_id"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"name",
														"host",
														"port",
														"status",
														"enabled",
														"permissions",
														"created_on",
														"modified_on"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create Keyless SSL Configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"properties": {
																"created_on": {
																	"description": "When the Keyless SSL was created.",
																	"example": "2014-01-01T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"enabled": {
																	"description": "Whether or not the Keyless SSL is on or off.",
																	"example": false,
																	"readOnly": true,
																	"type": "boolean"
																},
																"host": {
																	"description": "The keyless SSL name.",
																	"example": "example.com",
																	"format": "hostname",
																	"maxLength": 253,
																	"type": "string"
																},
																"id": {
																	"description": "Keyless certificate identifier tag.",
																	"example": "4d2844d2ce78891c34d0b6c0535a291e",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string"
																},
																"modified_on": {
																	"description": "When the Keyless SSL was last modified.",
																	"example": "2014-01-01T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"name": {
																	"description": "The keyless SSL name.",
																	"example": "example.com Keyless SSL",
																	"maxLength": 180,
																	"readOnly": true,
																	"type": "string"
																},
																"permissions": {
																	"description": "Available permissions for the Keyless SSL for the current user requesting the item.",
																	"example": [
																		"#ssl:read",
																		"#ssl:edit"
																	],
																	"items": {
																		"type": "string"
																	},
																	"readOnly": true,
																	"type": "array"
																},
																"port": {
																	"default": 24008,
																	"description": "The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.",
																	"example": 24008,
																	"maxLength": 65535,
																	"type": "number"
																},
																"status": {
																	"description": "Status of the Keyless SSL.",
																	"enum": [
																		"active",
																		"deleted"
																	],
																	"example": "active",
																	"readOnly": true,
																	"type": "string"
																},
																"tunnel": {
																	"description": "Configuration for using Keyless SSL through a Cloudflare Tunnel",
																	"properties": {
																		"private_ip": {
																			"description": "Private IP of the Key Server Host",
																			"example": "10.0.0.1",
																			"type": "string"
																		},
																		"vnet_id": {
																			"description": "Cloudflare Tunnel Virtual Network ID",
																			"example": "7365377a-85a4-4390-9480-531ef7dc7a3c",
																			"type": "string"
																		}
																	},
																	"required": [
																		"private_ip",
																		"vnet_id"
																	],
																	"type": "object"
																}
															},
															"required": [
																"id",
																"name",
																"host",
																"port",
																"status",
																"enabled",
																"permissions",
																"created_on",
																"modified_on"
															],
															"type": "object"
														}
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Keyless SSL Configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Keyless SSL Configuration",
		"tags": [
			"Keyless SSL for a Zone"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}