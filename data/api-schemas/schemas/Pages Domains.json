{
	"DELETE /accounts/{account_id}/pages/projects/{project_name}/domains/{domain_name}": {
		"description": "Delete a Pages project's domain.",
		"operationId": "pages-domains-delete-domain",
		"parameters": [
			{
				"in": "path",
				"name": "domain_name",
				"required": true,
				"schema": {
					"description": "Name of the domain.",
					"example": "this-is-my-domain-01.com",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "project_name",
				"required": true,
				"schema": {
					"description": "Name of the project.",
					"example": "this-is-my-project-01",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false,
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete domain response."
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"example": {
										"errors": [],
										"messages": [],
										"result": null,
										"success": true
									}
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI."
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete domain response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete domain",
		"tags": [
			"Pages Domains"
		],
		"x-api-token-group": [
			"Pages Write"
		]
	},
	"GET /accounts/{account_id}/pages/projects/{project_name}/domains": {
		"description": "Fetch a list of all domains associated with a Pages project.",
		"operationId": "pages-domains-get-domains",
		"parameters": [
			{
				"in": "path",
				"name": "project_name",
				"required": true,
				"schema": {
					"description": "Name of the project.",
					"example": "this-is-my-project-01",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false,
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result_info": {
											"properties": {
												"count": {
													"description": "The number of items on the current page.",
													"example": 1,
													"type": "integer"
												},
												"page": {
													"description": "The page currently being requested.",
													"example": 1,
													"type": "integer"
												},
												"per_page": {
													"description": "The number of items per page being returned.",
													"example": 100,
													"type": "integer"
												},
												"total_count": {
													"description": "The total count of items.",
													"example": 1,
													"type": "integer"
												},
												"total_pages": {
													"description": "The total count of pages.",
													"example": 1,
													"type": "integer"
												}
											},
											"required": [
												"page",
												"per_page",
												"count",
												"total_count"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"certificate_authority": {
														"enum": [
															"google",
															"lets_encrypt"
														],
														"example": "lets_encrypt",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"created_on": {
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"domain_id": {
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"example": "example.com",
														"type": "string",
														"x-auditable": true
													},
													"status": {
														"enum": [
															"initializing",
															"pending",
															"active",
															"deactivated",
															"blocked",
															"error"
														],
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"validation_data": {
														"properties": {
															"error_message": {
																"type": "string",
																"x-auditable": true
															},
															"method": {
																"enum": [
																	"http",
																	"txt"
																],
																"type": "string",
																"x-auditable": true
															},
															"status": {
																"enum": [
																	"initializing",
																	"pending",
																	"active",
																	"deactivated",
																	"error"
																],
																"type": "string",
																"x-auditable": true
															},
															"txt_name": {
																"type": "string",
																"x-auditable": true
															},
															"txt_value": {
																"type": "string",
																"x-auditable": true
															}
														},
														"readOnly": true,
														"type": "object"
													},
													"verification_data": {
														"properties": {
															"error_message": {
																"type": "string",
																"x-auditable": true
															},
															"status": {
																"enum": [
																	"pending",
																	"active",
																	"deactivated",
																	"blocked",
																	"error"
																],
																"type": "string"
															}
														},
														"readOnly": true,
														"type": "object"
													},
													"zone_tag": {
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get domains response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														false,
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "The number of items on the current page.",
															"example": 1,
															"type": "integer"
														},
														"page": {
															"description": "The page currently being requested.",
															"example": 1,
															"type": "integer"
														},
														"per_page": {
															"description": "The number of items per page being returned.",
															"example": 100,
															"type": "integer"
														},
														"total_count": {
															"description": "The total count of items.",
															"example": 1,
															"type": "integer"
														},
														"total_pages": {
															"description": "The total count of pages.",
															"example": 1,
															"type": "integer"
														}
													},
													"required": [
														"page",
														"per_page",
														"count",
														"total_count"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"certificate_authority": {
																"enum": [
																	"google",
																	"lets_encrypt"
																],
																"example": "lets_encrypt",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"created_on": {
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"domain_id": {
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															},
															"status": {
																"enum": [
																	"initializing",
																	"pending",
																	"active",
																	"deactivated",
																	"blocked",
																	"error"
																],
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"validation_data": {
																"properties": {
																	"error_message": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"method": {
																		"enum": [
																			"http",
																			"txt"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"status": {
																		"enum": [
																			"initializing",
																			"pending",
																			"active",
																			"deactivated",
																			"error"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"txt_name": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"txt_value": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"readOnly": true,
																"type": "object"
															},
															"verification_data": {
																"properties": {
																	"error_message": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"status": {
																		"enum": [
																			"pending",
																			"active",
																			"deactivated",
																			"blocked",
																			"error"
																		],
																		"type": "string"
																	}
																},
																"readOnly": true,
																"type": "object"
															},
															"zone_tag": {
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI."
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get domains response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get domains",
		"tags": [
			"Pages Domains"
		],
		"x-api-token-group": [
			"Pages Read",
			"Pages Write"
		]
	},
	"GET /accounts/{account_id}/pages/projects/{project_name}/domains/{domain_name}": {
		"description": "Fetch a single domain.",
		"operationId": "pages-domains-get-domain",
		"parameters": [
			{
				"in": "path",
				"name": "domain_name",
				"required": true,
				"schema": {
					"description": "Name of the domain.",
					"example": "this-is-my-domain-01.com",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "project_name",
				"required": true,
				"schema": {
					"description": "Name of the project.",
					"example": "this-is-my-project-01",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														false,
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"certificate_authority": {
													"enum": [
														"google",
														"lets_encrypt"
													],
													"example": "lets_encrypt",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"domain_id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"example": "example.com",
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"enum": [
														"initializing",
														"pending",
														"active",
														"deactivated",
														"blocked",
														"error"
													],
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"validation_data": {
													"properties": {
														"error_message": {
															"type": "string",
															"x-auditable": true
														},
														"method": {
															"enum": [
																"http",
																"txt"
															],
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"initializing",
																"pending",
																"active",
																"deactivated",
																"error"
															],
															"type": "string",
															"x-auditable": true
														},
														"txt_name": {
															"type": "string",
															"x-auditable": true
														},
														"txt_value": {
															"type": "string",
															"x-auditable": true
														}
													},
													"readOnly": true,
													"type": "object"
												},
												"verification_data": {
													"properties": {
														"error_message": {
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"pending",
																"active",
																"deactivated",
																"blocked",
																"error"
															],
															"type": "string"
														}
													},
													"readOnly": true,
													"type": "object"
												},
												"zone_tag": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get domain response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																false,
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"certificate_authority": {
															"enum": [
																"google",
																"lets_encrypt"
															],
															"example": "lets_encrypt",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"domain_id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"example": "example.com",
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"initializing",
																"pending",
																"active",
																"deactivated",
																"blocked",
																"error"
															],
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"validation_data": {
															"properties": {
																"error_message": {
																	"type": "string",
																	"x-auditable": true
																},
																"method": {
																	"enum": [
																		"http",
																		"txt"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"enum": [
																		"initializing",
																		"pending",
																		"active",
																		"deactivated",
																		"error"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"txt_name": {
																	"type": "string",
																	"x-auditable": true
																},
																"txt_value": {
																	"type": "string",
																	"x-auditable": true
																}
															},
															"readOnly": true,
															"type": "object"
														},
														"verification_data": {
															"properties": {
																"error_message": {
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"enum": [
																		"pending",
																		"active",
																		"deactivated",
																		"blocked",
																		"error"
																	],
																	"type": "string"
																}
															},
															"readOnly": true,
															"type": "object"
														},
														"zone_tag": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI."
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get domain response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get domain",
		"tags": [
			"Pages Domains"
		],
		"x-api-token-group": [
			"Pages Read",
			"Pages Write"
		]
	},
	"PATCH /accounts/{account_id}/pages/projects/{project_name}/domains/{domain_name}": {
		"description": "Retry the validation status of a single domain.",
		"operationId": "pages-domains-patch-domain",
		"parameters": [
			{
				"in": "path",
				"name": "domain_name",
				"required": true,
				"schema": {
					"description": "Name of the domain.",
					"example": "this-is-my-domain-01.com",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "project_name",
				"required": true,
				"schema": {
					"description": "Name of the project.",
					"example": "this-is-my-project-01",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														false,
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"certificate_authority": {
													"enum": [
														"google",
														"lets_encrypt"
													],
													"example": "lets_encrypt",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"domain_id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"example": "example.com",
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"enum": [
														"initializing",
														"pending",
														"active",
														"deactivated",
														"blocked",
														"error"
													],
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"validation_data": {
													"properties": {
														"error_message": {
															"type": "string",
															"x-auditable": true
														},
														"method": {
															"enum": [
																"http",
																"txt"
															],
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"initializing",
																"pending",
																"active",
																"deactivated",
																"error"
															],
															"type": "string",
															"x-auditable": true
														},
														"txt_name": {
															"type": "string",
															"x-auditable": true
														},
														"txt_value": {
															"type": "string",
															"x-auditable": true
														}
													},
													"readOnly": true,
													"type": "object"
												},
												"verification_data": {
													"properties": {
														"error_message": {
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"pending",
																"active",
																"deactivated",
																"blocked",
																"error"
															],
															"type": "string"
														}
													},
													"readOnly": true,
													"type": "object"
												},
												"zone_tag": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Patch domain response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																false,
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"certificate_authority": {
															"enum": [
																"google",
																"lets_encrypt"
															],
															"example": "lets_encrypt",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"domain_id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"example": "example.com",
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"initializing",
																"pending",
																"active",
																"deactivated",
																"blocked",
																"error"
															],
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"validation_data": {
															"properties": {
																"error_message": {
																	"type": "string",
																	"x-auditable": true
																},
																"method": {
																	"enum": [
																		"http",
																		"txt"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"enum": [
																		"initializing",
																		"pending",
																		"active",
																		"deactivated",
																		"error"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"txt_name": {
																	"type": "string",
																	"x-auditable": true
																},
																"txt_value": {
																	"type": "string",
																	"x-auditable": true
																}
															},
															"readOnly": true,
															"type": "object"
														},
														"verification_data": {
															"properties": {
																"error_message": {
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"enum": [
																		"pending",
																		"active",
																		"deactivated",
																		"blocked",
																		"error"
																	],
																	"type": "string"
																}
															},
															"readOnly": true,
															"type": "object"
														},
														"zone_tag": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI."
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Patch domain response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch domain",
		"tags": [
			"Pages Domains"
		],
		"x-api-token-group": [
			"Pages Write"
		]
	},
	"POST /accounts/{account_id}/pages/projects/{project_name}/domains": {
		"description": "Add a new domain for the Pages project.",
		"operationId": "pages-domains-add-domain",
		"parameters": [
			{
				"in": "path",
				"name": "project_name",
				"required": true,
				"schema": {
					"description": "Name of the project.",
					"example": "this-is-my-project-01",
					"pattern": "^[a-z0-9][a-z0-9-]*$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"name": {
								"example": "example.com",
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														false,
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"certificate_authority": {
													"enum": [
														"google",
														"lets_encrypt"
													],
													"example": "lets_encrypt",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"domain_id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"example": "example.com",
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"enum": [
														"initializing",
														"pending",
														"active",
														"deactivated",
														"blocked",
														"error"
													],
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"validation_data": {
													"properties": {
														"error_message": {
															"type": "string",
															"x-auditable": true
														},
														"method": {
															"enum": [
																"http",
																"txt"
															],
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"initializing",
																"pending",
																"active",
																"deactivated",
																"error"
															],
															"type": "string",
															"x-auditable": true
														},
														"txt_name": {
															"type": "string",
															"x-auditable": true
														},
														"txt_value": {
															"type": "string",
															"x-auditable": true
														}
													},
													"readOnly": true,
													"type": "object"
												},
												"verification_data": {
													"properties": {
														"error_message": {
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"pending",
																"active",
																"deactivated",
																"blocked",
																"error"
															],
															"type": "string"
														}
													},
													"readOnly": true,
													"type": "object"
												},
												"zone_tag": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Add domain response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																false,
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"certificate_authority": {
															"enum": [
																"google",
																"lets_encrypt"
															],
															"example": "lets_encrypt",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"domain_id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"example": "example.com",
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"initializing",
																"pending",
																"active",
																"deactivated",
																"blocked",
																"error"
															],
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"validation_data": {
															"properties": {
																"error_message": {
																	"type": "string",
																	"x-auditable": true
																},
																"method": {
																	"enum": [
																		"http",
																		"txt"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"enum": [
																		"initializing",
																		"pending",
																		"active",
																		"deactivated",
																		"error"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"txt_name": {
																	"type": "string",
																	"x-auditable": true
																},
																"txt_value": {
																	"type": "string",
																	"x-auditable": true
																}
															},
															"readOnly": true,
															"type": "object"
														},
														"verification_data": {
															"properties": {
																"error_message": {
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"enum": [
																		"pending",
																		"active",
																		"deactivated",
																		"blocked",
																		"error"
																	],
																	"type": "string"
																}
															},
															"readOnly": true,
															"type": "object"
														},
														"zone_tag": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI."
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add domain response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Add domain",
		"tags": [
			"Pages Domains"
		],
		"x-api-token-group": [
			"Pages Write"
		]
	}
}