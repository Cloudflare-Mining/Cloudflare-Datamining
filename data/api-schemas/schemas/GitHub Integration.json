{
	"GET /repos/{provider_type}/{provider_account_id}/{repo_id}/config_autofill": {
		"description": "Analyze repository for automatic configuration detection",
		"operationId": "getWorkerConfigAutofill",
		"parameters": [
			{
				"description": "SCM provider type",
				"in": "path",
				"name": "provider_type",
				"required": true,
				"schema": {
					"enum": [
						"github"
					],
					"example": "github",
					"type": "string"
				}
			},
			{
				"description": "Provider account identifier",
				"in": "path",
				"name": "provider_account_id",
				"required": true,
				"schema": {
					"example": "cloudflare",
					"type": "string"
				}
			},
			{
				"description": "Repository identifier",
				"in": "path",
				"name": "repo_id",
				"required": true,
				"schema": {
					"example": "workers-sdk",
					"type": "string"
				}
			},
			{
				"description": "Git branch to analyze",
				"in": "query",
				"name": "branch",
				"required": true,
				"schema": {
					"example": "main",
					"type": "string"
				}
			},
			{
				"description": "Root directory path",
				"in": "query",
				"name": "root_directory",
				"schema": {
					"example": "/",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"example": 12000,
														"type": "integer"
													},
													"message": {
														"example": "Not found",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"result_info": {
											"properties": {
												"count": {
													"example": 25,
													"type": "integer"
												},
												"page": {
													"example": 1,
													"type": "integer"
												},
												"per_page": {
													"example": 50,
													"type": "integer"
												},
												"total_count": {
													"example": 150,
													"type": "integer"
												},
												"total_pages": {
													"example": 3,
													"type": "integer"
												}
											},
											"type": "object"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"config_file": {
													"example": "wrangler.toml",
													"nullable": true,
													"type": "string"
												},
												"default_worker_name": {
													"example": "my-worker",
													"nullable": true,
													"type": "string"
												},
												"env_worker_names": {
													"additionalProperties": {
														"type": "string"
													},
													"example": {
														"production": "my-worker-prod",
														"staging": "my-worker-staging"
													},
													"nullable": true,
													"type": "object"
												},
												"package_manager": {
													"allOf": [
														{
															"enum": [
																"npm",
																"yarn",
																"pnpm",
																"bun",
																"uv"
															],
															"example": "npm",
															"type": "string"
														}
													],
													"nullable": true,
													"type": "string"
												},
												"scripts": {
													"additionalProperties": {
														"type": "string"
													},
													"example": {
														"build": "npm run build",
														"test": "npm test"
													},
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Configuration autofill data retrieved successfully"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get repository configuration autofill",
		"tags": [
			"GitHub Integration"
		]
	}
}