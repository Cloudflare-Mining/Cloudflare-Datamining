{
	"DELETE /accounts/{account_id}/pay-per-crawl/crawler/stripe": {
		"description": "Deletes the stripe config for a crawler.",
		"operationId": "pay-per-crawl.crawlerDeleteStripeConfig",
		"parameters": [
			{
				"description": "account id",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"type": "string"
				},
				"x-auditable": true
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.DELETE /accounts/{account_id}/pay-per-crawl/crawler/stripe.responses.200.content.application/json.schema.properties.errors.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.DELETE /accounts/{account_id}/pay-per-crawl/crawler/stripe.responses.200.content.application/json.schema.properties.messages.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										},
										"total_pages": {
											"description": "TotalPages is a pointer so that if TotalPages == 0 we return that there\nare indeed 0 pages. omitempty would have removed the field otherwise.\nThis is important as a customer may be relying on always reading this\nproperty and it should not be absent just because it is 0, only absent\nif a value is never provided.",
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Deletes the stripe config for a crawler",
		"tags": [
			"ppc_stripe"
		],
		"x-api-token-group": [
			"Account Settings Write"
		]
	},
	"DELETE /accounts/{account_id}/pay-per-crawl/publisher/stripe": {
		"description": "Deletes the stripe config for a publisher.",
		"operationId": "pay-per-crawl.publisherDeleteStripeConfig",
		"parameters": [
			{
				"description": "account id",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"type": "string"
				},
				"x-auditable": true
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.DELETE /accounts/{account_id}/pay-per-crawl/publisher/stripe.responses.200.content.application/json.schema.properties.errors.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.DELETE /accounts/{account_id}/pay-per-crawl/publisher/stripe.responses.200.content.application/json.schema.properties.messages.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										},
										"total_pages": {
											"description": "TotalPages is a pointer so that if TotalPages == 0 we return that there\nare indeed 0 pages. omitempty would have removed the field otherwise.\nThis is important as a customer may be relying on always reading this\nproperty and it should not be absent just because it is 0, only absent\nif a value is never provided.",
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Deletes the stripe config for a publisher",
		"tags": [
			"ppc_stripe"
		],
		"x-api-token-group": [
			"Account Settings Write"
		]
	},
	"GET /accounts/{account_id}/pay-per-crawl/crawler/stripe": {
		"description": "Gets the stripe config for a crawler.",
		"operationId": "pay-per-crawl.crawlerGetStripeConfig",
		"parameters": [
			{
				"description": "account id",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"type": "string"
				},
				"x-auditable": true
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.GET /accounts/{account_id}/pay-per-crawl/crawler/stripe.responses.200.content.application/json.schema.properties.errors.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.GET /accounts/{account_id}/pay-per-crawl/crawler/stripe.responses.200.content.application/json.schema.properties.messages.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"connect_status": {
											"type": "string"
										},
										"stripe_account_id": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										},
										"total_pages": {
											"description": "TotalPages is a pointer so that if TotalPages == 0 we return that there\nare indeed 0 pages. omitempty would have removed the field otherwise.\nThis is important as a customer may be relying on always reading this\nproperty and it should not be absent just because it is 0, only absent\nif a value is never provided.",
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Gets the stripe config for a crawler",
		"tags": [
			"ppc_stripe"
		],
		"x-api-token-group": [
			"Trust and Safety Write",
			"Trust and Safety Read",
			"DNS View Write",
			"DNS View Read",
			"SCIM Provisioning",
			"Load Balancers Account Write",
			"Load Balancers Account Read",
			"Zero Trust: PII Read",
			"DDoS Botnet Feed Write",
			"DDoS Botnet Feed Read",
			"Workers R2 Storage Write",
			"Workers R2 Storage Read",
			"DDoS Protection Write",
			"DDoS Protection Read",
			"Workers Tail Read",
			"Workers KV Storage Write",
			"Workers KV Storage Read",
			"Workers Scripts Write",
			"Workers Scripts Read",
			"Load Balancing: Monitors and Pools Write",
			"Load Balancing: Monitors and Pools Read",
			"Account Firewall Access Rules Write",
			"Account Firewall Access Rules Read",
			"DNS Firewall Write",
			"DNS Firewall Read",
			"Billing Write",
			"Billing Read",
			"Account Settings Write",
			"Account Settings Read"
		]
	},
	"GET /accounts/{account_id}/pay-per-crawl/publisher/stripe": {
		"description": "Gets the stripe config for a publisher.",
		"operationId": "pay-per-crawl.publisherGetStripeConfig",
		"parameters": [
			{
				"description": "account id",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"type": "string"
				},
				"x-auditable": true
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.GET /accounts/{account_id}/pay-per-crawl/publisher/stripe.responses.200.content.application/json.schema.properties.errors.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.GET /accounts/{account_id}/pay-per-crawl/publisher/stripe.responses.200.content.application/json.schema.properties.messages.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"connect_status": {
											"type": "string"
										},
										"stripe_account_id": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										},
										"total_pages": {
											"description": "TotalPages is a pointer so that if TotalPages == 0 we return that there\nare indeed 0 pages. omitempty would have removed the field otherwise.\nThis is important as a customer may be relying on always reading this\nproperty and it should not be absent just because it is 0, only absent\nif a value is never provided.",
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Gets the stripe config for a publisher",
		"tags": [
			"ppc_stripe"
		],
		"x-api-token-group": [
			"Trust and Safety Write",
			"Trust and Safety Read",
			"DNS View Write",
			"DNS View Read",
			"SCIM Provisioning",
			"Load Balancers Account Write",
			"Load Balancers Account Read",
			"Zero Trust: PII Read",
			"DDoS Botnet Feed Write",
			"DDoS Botnet Feed Read",
			"Workers R2 Storage Write",
			"Workers R2 Storage Read",
			"DDoS Protection Write",
			"DDoS Protection Read",
			"Workers Tail Read",
			"Workers KV Storage Write",
			"Workers KV Storage Read",
			"Workers Scripts Write",
			"Workers Scripts Read",
			"Load Balancing: Monitors and Pools Write",
			"Load Balancing: Monitors and Pools Read",
			"Account Firewall Access Rules Write",
			"Account Firewall Access Rules Read",
			"DNS Firewall Write",
			"DNS Firewall Read",
			"Billing Write",
			"Billing Read",
			"Account Settings Write",
			"Account Settings Read"
		]
	},
	"POST /accounts/{account_id}/pay-per-crawl/crawler/stripe": {
		"description": "Creates the stripe config for a crawler.",
		"operationId": "pay-per-crawl.crawlerCreateStripeConfig",
		"parameters": [
			{
				"description": "account id",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"type": "string"
				},
				"x-auditable": true
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.POST /accounts/{account_id}/pay-per-crawl/crawler/stripe.responses.200.content.application/json.schema.properties.errors.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.POST /accounts/{account_id}/pay-per-crawl/crawler/stripe.responses.200.content.application/json.schema.properties.messages.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"url": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										},
										"total_pages": {
											"description": "TotalPages is a pointer so that if TotalPages == 0 we return that there\nare indeed 0 pages. omitempty would have removed the field otherwise.\nThis is important as a customer may be relying on always reading this\nproperty and it should not be absent just because it is 0, only absent\nif a value is never provided.",
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Creates the stripe config for a crawler",
		"tags": [
			"ppc_stripe"
		],
		"x-api-token-group": [
			"Account Settings Write"
		]
	},
	"POST /accounts/{account_id}/pay-per-crawl/publisher/stripe": {
		"description": "Creates the stripe config for a publisher.",
		"operationId": "pay-per-crawl.publisherCreateStripeConfig",
		"parameters": [
			{
				"description": "account id",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"type": "string"
				},
				"x-auditable": true
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.POST /accounts/{account_id}/pay-per-crawl/publisher/stripe.responses.200.content.application/json.schema.properties.errors.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error_chain": {
												"items": "[Circular ~.POST /accounts/{account_id}/pay-per-crawl/publisher/stripe.responses.200.content.application/json.schema.properties.messages.items]",
												"type": "array"
											},
											"message": {
												"type": "string"
											},
											"meta": {
												"description": "Meta object containing non-standard meta-information about the error.\nThis field must be an object or null!"
											},
											"source": {
												"properties": {
													"parameter": {
														"description": "Parameter is a string indicating which URI query parameter caused the error.",
														"type": "string"
													},
													"parameter_value_index": {
														"description": "ParameterPosition indicates position of parameter value which caused the error,\nfor cases when there are multiple values for the same parameter.",
														"type": "integer"
													},
													"pointer": {
														"description": "Pointer is a JSON Pointer [RFC6901] to the associated entity in the request document\ne.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute.",
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"url": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										},
										"total_pages": {
											"description": "TotalPages is a pointer so that if TotalPages == 0 we return that there\nare indeed 0 pages. omitempty would have removed the field otherwise.\nThis is important as a customer may be relying on always reading this\nproperty and it should not be absent just because it is 0, only absent\nif a value is never provided.",
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"error": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"result": {},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Creates the stripe config for a publisher",
		"tags": [
			"ppc_stripe"
		],
		"x-api-token-group": [
			"Account Settings Write"
		]
	}
}