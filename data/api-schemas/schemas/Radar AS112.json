{
	"GET /radar/as112/summary/dnssec": {
		"description": "Retrieves the distribution of DNS queries to AS112 by DNSSEC (DNS Security Extensions) support.",
		"operationId": "radar-get-dns-as112-timeseries-by-dnssec",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"example": "16",
													"type": "string"
												},
												"SUPPORTED": {
													"example": "84",
													"type": "string"
												}
											},
											"required": [
												"SUPPORTED",
												"NOT_SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by DNSSEC summary",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/summary/edns": {
		"description": "Retrieves the distribution of DNS queries to AS112 by EDNS (Extension Mechanisms for DNS) support.",
		"operationId": "radar-get-dns-as112-timeseries-by-edns",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"example": "6",
													"type": "string"
												},
												"SUPPORTED": {
													"example": "94",
													"type": "string"
												}
											},
											"required": [
												"SUPPORTED",
												"NOT_SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by EDNS summary",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/summary/ip_version": {
		"description": "Retrieves the distribution of DNS queries to AS112 by IP version.",
		"operationId": "radar-get-dns-as112-timeseries-by-ip-version",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"IPv4": {
													"example": "80",
													"type": "string"
												},
												"IPv6": {
													"example": "20",
													"type": "string"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by IP version summary",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/summary/protocol": {
		"description": "Retrieves the distribution of DNS queries to AS112 by protocol.",
		"operationId": "radar-get-dns-as112-timeseries-by-protocol",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"HTTPS": {
													"example": "10",
													"type": "string"
												},
												"TCP": {
													"example": "10",
													"type": "string"
												},
												"TLS": {
													"example": "10",
													"type": "string"
												},
												"UDP": {
													"example": "70",
													"type": "string"
												}
											},
											"required": [
												"UDP",
												"TLS",
												"HTTPS",
												"TCP"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by DNS protocol summary",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/summary/query_type": {
		"description": "Retrieves the distribution of DNS queries to AS112 by type.",
		"operationId": "radar-get-dns-as112-timeseries-by-query-type",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"type": "string"
											},
											"example": {
												"A": "19",
												"AAAA": "1",
												"PTR": "74",
												"SOA": "5",
												"SRV": "1"
											},
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by type summary",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/summary/response_codes": {
		"description": "Retrieves the distribution of AS112 DNS requests classified by response code.",
		"operationId": "radar-get-dns-as112-timeseries-by-response-codes",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"type": "string"
											},
											"example": {
												"NOERROR": "70",
												"NOTIMP": "5",
												"NXDOMAIN": "10",
												"REFUSED": "5",
												"SERVFAIL": "5"
											},
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by response code summary",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries": {
		"description": "Retrieves the AS112 DNS queries over time.",
		"operationId": "radar-get-dns-as112-timeseries",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"aggInterval": {
													"example": "1h",
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"format": "date-time",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"aggInterval",
												"lastUpdated"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												},
												"values": {
													"items": {
														"example": 0.56,
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"values"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries time series",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries_groups/dnssec": {
		"description": "Retrieves the distribution of AS112 DNS queries by DNSSEC (DNS Security Extensions) support over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-dnssec",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"items": {
														"example": "16",
														"type": "string"
													},
													"type": "array"
												},
												"SUPPORTED": {
													"items": {
														"example": "84",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"SUPPORTED",
												"NOT_SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by DNSSEC support time series",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries_groups/edns": {
		"description": "Retrieves the distribution of AS112 DNS queries by EDNS (Extension Mechanisms for DNS) support over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-edns",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"items": {
														"example": "6",
														"type": "string"
													},
													"type": "array"
												},
												"SUPPORTED": {
													"items": {
														"example": "94",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"SUPPORTED",
												"NOT_SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by EDNS support summary",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries_groups/ip_version": {
		"description": "Retrieves the distribution of AS112 DNS queries by IP version over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-ip-version",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"example": "80",
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"example": "20",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by IP version time series",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries_groups/protocol": {
		"description": "Retrieves the distribution of AS112 DNS requests classified by protocol over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-protocol",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"HTTPS": {
													"items": {
														"example": "10",
														"type": "string"
													},
													"type": "array"
												},
												"TCP": {
													"items": {
														"example": "10",
														"type": "string"
													},
													"type": "array"
												},
												"TLS": {
													"items": {
														"example": "10",
														"type": "string"
													},
													"type": "array"
												},
												"UDP": {
													"items": {
														"example": "70",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"UDP",
												"TLS",
												"HTTPS",
												"TCP"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by DNS protocol time series",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries_groups/query_type": {
		"description": "Retrieves the distribution of AS112 DNS queries by type over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-query-type",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"A": [
													"20"
												],
												"AAAA": [
													"20"
												],
												"HTTPS": [
													"20"
												],
												"NS": [
													"20"
												],
												"PTR": [
													"20"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by type time series",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries_groups/response_codes": {
		"description": "Retrieves the distribution of AS112 DNS requests classified by response code over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-response-codes",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"NOERROR": [
													"70"
												],
												"NOTIMP": [
													"5"
												],
												"NXDOMAIN": [
													"10"
												],
												"REFUSED": [
													"5"
												],
												"SERVFAIL": [
													"5"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get AS112 DNS queries by response code time series",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/top/locations": {
		"description": "Retrieves the top locations by AS112 DNS queries.",
		"operationId": "radar-get-dns-as112-top-locations",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top locations by AS112 DNS queries",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/top/locations/dnssec/{dnssec}": {
		"description": "Retrieves the top locations of DNS queries to AS112 with DNSSEC (DNS Security Extensions) support.",
		"operationId": "radar-get-dns-as112-top-locations-by-dnssec",
		"parameters": [
			{
				"description": "DNSSEC (DNS Security Extensions) status.",
				"in": "path",
				"name": "dnssec",
				"required": true,
				"schema": {
					"description": "DNSSEC (DNS Security Extensions) status.",
					"enum": [
						"SUPPORTED",
						"NOT_SUPPORTED"
					],
					"example": "SUPPORTED",
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top locations by AS112 DNS queries with DNSSEC support",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/top/locations/edns/{edns}": {
		"description": "Retrieves the top locations of DNS queries to AS112 with EDNS (Extension Mechanisms for DNS) support.",
		"operationId": "radar-get-dns-as112-top-locations-by-edns",
		"parameters": [
			{
				"description": "EDNS (Extension Mechanisms for DNS) status.",
				"in": "path",
				"name": "edns",
				"required": true,
				"schema": {
					"description": "EDNS (Extension Mechanisms for DNS) status.",
					"enum": [
						"SUPPORTED",
						"NOT_SUPPORTED"
					],
					"example": "SUPPORTED",
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top locations by AS112 DNS queries with EDNS support",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/top/locations/ip_version/{ip_version}": {
		"description": "Retrieves the top locations of DNS queries to AS112 for an IP version.",
		"operationId": "radar-get-dns-as112-top-locations-by-ip-version",
		"parameters": [
			{
				"description": "IP version.",
				"in": "path",
				"name": "ip_version",
				"required": true,
				"schema": {
					"description": "IP version.",
					"enum": [
						"IPv4",
						"IPv6"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top locations by AS112 DNS queries for an IP version",
		"tags": [
			"Radar AS112"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}