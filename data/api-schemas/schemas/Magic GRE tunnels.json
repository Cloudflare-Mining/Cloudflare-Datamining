{
	"DELETE /accounts/{account_id}/magic/gre_tunnels/{gre_tunnel_id}": {
		"description": "Disables and removes a specific static GRE tunnel. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-gre-tunnels-delete-gre-tunnel",
		"parameters": [
			{
				"in": "path",
				"name": "gre_tunnel_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the response body will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"deleted": {
													"example": true,
													"type": "boolean"
												},
												"deleted_gre_tunnel": {
													"properties": {
														"cloudflare_gre_endpoint": {
															"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
															"example": "203.0.113.1",
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"description": "The date and time the tunnel was created.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"customer_gre_endpoint": {
															"description": "The IP address assigned to the customer side of the GRE tunnel.",
															"example": "203.0.113.1",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An optional description of the GRE tunnel.",
															"example": "Tunnel for ISP X",
															"type": "string",
															"x-auditable": true
														},
														"health_check": {
															"allOf": [
																{
																	"properties": {
																		"enabled": {
																			"default": true,
																			"description": "Determines whether to run healthchecks for a tunnel.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"rate": {
																			"default": "mid",
																			"description": "How frequent the health check is run. The default value is `mid`.",
																			"enum": [
																				"low",
																				"mid",
																				"high"
																			],
																			"example": "low",
																			"type": "string",
																			"x-auditable": true
																		},
																		"target": {
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																			"oneOf": [
																				{
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																					"properties": {
																						"effective": {
																							"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																							"example": "203.0.113.1",
																							"readOnly": true,
																							"type": "string",
																							"x-auditable": true
																						},
																						"saved": {
																							"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																							"example": "203.0.113.1",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				{
																					"type": "string"
																				}
																			]
																		},
																		"type": {
																			"default": "reply",
																			"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																			"enum": [
																				"reply",
																				"request"
																			],
																			"example": "request",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"direction": {
																			"default": "unidirectional",
																			"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																			"enum": [
																				"unidirectional",
																				"bidirectional"
																			],
																			"example": "bidirectional",
																			"type": "string"
																		}
																	}
																}
															]
														},
														"id": {
															"description": "Identifier",
															"example": "c4a7362d577a6c3019a474fd6f485821",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"interface_address": {
															"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
															"example": "192.0.2.0/31",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "The date and time the tunnel was last modified.",
															"example": "2017-06-14T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"mtu": {
															"default": 1476,
															"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
															"type": "integer",
															"x-auditable": true
														},
														"name": {
															"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
															"example": "GRE_1",
															"type": "string",
															"x-auditable": true
														},
														"ttl": {
															"default": 64,
															"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"customer_gre_endpoint",
														"cloudflare_gre_endpoint",
														"interface_address"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete GRE Tunnel response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"deleted": {
															"example": true,
															"type": "boolean"
														},
														"deleted_gre_tunnel": {
															"properties": {
																"cloudflare_gre_endpoint": {
																	"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																	"example": "203.0.113.1",
																	"type": "string",
																	"x-auditable": true
																},
																"created_on": {
																	"description": "The date and time the tunnel was created.",
																	"example": "2017-06-14T00:00:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"customer_gre_endpoint": {
																	"description": "The IP address assigned to the customer side of the GRE tunnel.",
																	"example": "203.0.113.1",
																	"type": "string",
																	"x-auditable": true
																},
																"description": {
																	"description": "An optional description of the GRE tunnel.",
																	"example": "Tunnel for ISP X",
																	"type": "string",
																	"x-auditable": true
																},
																"health_check": {
																	"allOf": [
																		{
																			"properties": {
																				"enabled": {
																					"default": true,
																					"description": "Determines whether to run healthchecks for a tunnel.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"rate": {
																					"default": "mid",
																					"description": "How frequent the health check is run. The default value is `mid`.",
																					"enum": [
																						"low",
																						"mid",
																						"high"
																					],
																					"example": "low",
																					"type": "string",
																					"x-auditable": true
																				},
																				"target": {
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																					"oneOf": [
																						{
																							"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																							"properties": {
																								"effective": {
																									"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																									"example": "203.0.113.1",
																									"readOnly": true,
																									"type": "string",
																									"x-auditable": true
																								},
																								"saved": {
																									"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																									"example": "203.0.113.1",
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						{
																							"type": "string"
																						}
																					]
																				},
																				"type": {
																					"default": "reply",
																					"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																					"enum": [
																						"reply",
																						"request"
																					],
																					"example": "request",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		{
																			"properties": {
																				"direction": {
																					"default": "unidirectional",
																					"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																					"enum": [
																						"unidirectional",
																						"bidirectional"
																					],
																					"example": "bidirectional",
																					"type": "string"
																				}
																			}
																		}
																	]
																},
																"id": {
																	"description": "Identifier",
																	"example": "c4a7362d577a6c3019a474fd6f485821",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"interface_address": {
																	"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																	"example": "192.0.2.0/31",
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The date and time the tunnel was last modified.",
																	"example": "2017-06-14T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"mtu": {
																	"default": 1476,
																	"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																	"type": "integer",
																	"x-auditable": true
																},
																"name": {
																	"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																	"example": "GRE_1",
																	"type": "string",
																	"x-auditable": true
																},
																"ttl": {
																	"default": 64,
																	"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"name",
																"customer_gre_endpoint",
																"cloudflare_gre_endpoint",
																"interface_address"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete GRE Tunnel response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete GRE Tunnel",
		"tags": [
			"Magic GRE tunnels"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/gre_tunnels": {
		"description": "Lists GRE tunnels associated with an account.",
		"operationId": "magic-gre-tunnels-list-gre-tunnels",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the response body will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"gre_tunnels": {
													"items": {
														"properties": {
															"cloudflare_gre_endpoint": {
																"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																"example": "203.0.113.1",
																"type": "string",
																"x-auditable": true
															},
															"created_on": {
																"description": "The date and time the tunnel was created.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"customer_gre_endpoint": {
																"description": "The IP address assigned to the customer side of the GRE tunnel.",
																"example": "203.0.113.1",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"description": "An optional description of the GRE tunnel.",
																"example": "Tunnel for ISP X",
																"type": "string",
																"x-auditable": true
															},
															"health_check": {
																"allOf": [
																	{
																		"properties": {
																			"enabled": {
																				"default": true,
																				"description": "Determines whether to run healthchecks for a tunnel.",
																				"example": true,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"rate": {
																				"default": "mid",
																				"description": "How frequent the health check is run. The default value is `mid`.",
																				"enum": [
																					"low",
																					"mid",
																					"high"
																				],
																				"example": "low",
																				"type": "string",
																				"x-auditable": true
																			},
																			"target": {
																				"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																				"oneOf": [
																					{
																						"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																						"properties": {
																							"effective": {
																								"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																								"example": "203.0.113.1",
																								"readOnly": true,
																								"type": "string",
																								"x-auditable": true
																							},
																							"saved": {
																								"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																								"example": "203.0.113.1",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					},
																					{
																						"type": "string"
																					}
																				]
																			},
																			"type": {
																				"default": "reply",
																				"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																				"enum": [
																					"reply",
																					"request"
																				],
																				"example": "request",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"direction": {
																				"default": "unidirectional",
																				"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																				"enum": [
																					"unidirectional",
																					"bidirectional"
																				],
																				"example": "bidirectional",
																				"type": "string"
																			}
																		}
																	}
																]
															},
															"id": {
																"description": "Identifier",
																"example": "c4a7362d577a6c3019a474fd6f485821",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"interface_address": {
																"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																"example": "192.0.2.0/31",
																"type": "string",
																"x-auditable": true
															},
															"modified_on": {
																"description": "The date and time the tunnel was last modified.",
																"example": "2017-06-14T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"mtu": {
																"default": 1476,
																"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																"type": "integer",
																"x-auditable": true
															},
															"name": {
																"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																"example": "GRE_1",
																"type": "string",
																"x-auditable": true
															},
															"ttl": {
																"default": 64,
																"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																"type": "integer",
																"x-auditable": true
															}
														},
														"required": [
															"id",
															"name",
															"customer_gre_endpoint",
															"cloudflare_gre_endpoint",
															"interface_address"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "List GRE tunnels response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gre_tunnels": {
															"items": {
																"properties": {
																	"cloudflare_gre_endpoint": {
																		"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																		"example": "203.0.113.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"description": "The date and time the tunnel was created.",
																		"example": "2017-06-14T00:00:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"customer_gre_endpoint": {
																		"description": "The IP address assigned to the customer side of the GRE tunnel.",
																		"example": "203.0.113.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": {
																		"description": "An optional description of the GRE tunnel.",
																		"example": "Tunnel for ISP X",
																		"type": "string",
																		"x-auditable": true
																	},
																	"health_check": {
																		"allOf": [
																			{
																				"properties": {
																					"enabled": {
																						"default": true,
																						"description": "Determines whether to run healthchecks for a tunnel.",
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"rate": {
																						"default": "mid",
																						"description": "How frequent the health check is run. The default value is `mid`.",
																						"enum": [
																							"low",
																							"mid",
																							"high"
																						],
																						"example": "low",
																						"type": "string",
																						"x-auditable": true
																					},
																					"target": {
																						"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																						"oneOf": [
																							{
																								"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																								"properties": {
																									"effective": {
																										"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																										"example": "203.0.113.1",
																										"readOnly": true,
																										"type": "string",
																										"x-auditable": true
																									},
																									"saved": {
																										"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																										"example": "203.0.113.1",
																										"type": "string",
																										"x-auditable": true
																									}
																								},
																								"type": "object"
																							},
																							{
																								"type": "string"
																							}
																						]
																					},
																					"type": {
																						"default": "reply",
																						"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																						"enum": [
																							"reply",
																							"request"
																						],
																						"example": "request",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			{
																				"properties": {
																					"direction": {
																						"default": "unidirectional",
																						"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																						"enum": [
																							"unidirectional",
																							"bidirectional"
																						],
																						"example": "bidirectional",
																						"type": "string"
																					}
																				}
																			}
																		]
																	},
																	"id": {
																		"description": "Identifier",
																		"example": "c4a7362d577a6c3019a474fd6f485821",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"interface_address": {
																		"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																		"example": "192.0.2.0/31",
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The date and time the tunnel was last modified.",
																		"example": "2017-06-14T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"mtu": {
																		"default": 1476,
																		"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																		"type": "integer",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																		"example": "GRE_1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"ttl": {
																		"default": 64,
																		"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																		"type": "integer",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"name",
																	"customer_gre_endpoint",
																	"cloudflare_gre_endpoint",
																	"interface_address"
																],
																"type": "object"
															},
															"type": "array"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List GRE tunnels response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List GRE tunnels",
		"tags": [
			"Magic GRE tunnels"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read",
			"Magic Transit Read",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/gre_tunnels/{gre_tunnel_id}": {
		"description": "Lists informtion for a specific GRE tunnel.",
		"operationId": "magic-gre-tunnels-list-gre-tunnel-details",
		"parameters": [
			{
				"in": "path",
				"name": "gre_tunnel_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the response body will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"gre_tunnel": {
													"properties": {
														"cloudflare_gre_endpoint": {
															"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
															"example": "203.0.113.1",
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"description": "The date and time the tunnel was created.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"customer_gre_endpoint": {
															"description": "The IP address assigned to the customer side of the GRE tunnel.",
															"example": "203.0.113.1",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An optional description of the GRE tunnel.",
															"example": "Tunnel for ISP X",
															"type": "string",
															"x-auditable": true
														},
														"health_check": {
															"allOf": [
																{
																	"properties": {
																		"enabled": {
																			"default": true,
																			"description": "Determines whether to run healthchecks for a tunnel.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"rate": {
																			"default": "mid",
																			"description": "How frequent the health check is run. The default value is `mid`.",
																			"enum": [
																				"low",
																				"mid",
																				"high"
																			],
																			"example": "low",
																			"type": "string",
																			"x-auditable": true
																		},
																		"target": {
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																			"oneOf": [
																				{
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																					"properties": {
																						"effective": {
																							"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																							"example": "203.0.113.1",
																							"readOnly": true,
																							"type": "string",
																							"x-auditable": true
																						},
																						"saved": {
																							"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																							"example": "203.0.113.1",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				{
																					"type": "string"
																				}
																			]
																		},
																		"type": {
																			"default": "reply",
																			"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																			"enum": [
																				"reply",
																				"request"
																			],
																			"example": "request",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"direction": {
																			"default": "unidirectional",
																			"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																			"enum": [
																				"unidirectional",
																				"bidirectional"
																			],
																			"example": "bidirectional",
																			"type": "string"
																		}
																	}
																}
															]
														},
														"id": {
															"description": "Identifier",
															"example": "c4a7362d577a6c3019a474fd6f485821",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"interface_address": {
															"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
															"example": "192.0.2.0/31",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "The date and time the tunnel was last modified.",
															"example": "2017-06-14T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"mtu": {
															"default": 1476,
															"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
															"type": "integer",
															"x-auditable": true
														},
														"name": {
															"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
															"example": "GRE_1",
															"type": "string",
															"x-auditable": true
														},
														"ttl": {
															"default": 64,
															"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"customer_gre_endpoint",
														"cloudflare_gre_endpoint",
														"interface_address"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List GRE Tunnel Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gre_tunnel": {
															"properties": {
																"cloudflare_gre_endpoint": {
																	"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																	"example": "203.0.113.1",
																	"type": "string",
																	"x-auditable": true
																},
																"created_on": {
																	"description": "The date and time the tunnel was created.",
																	"example": "2017-06-14T00:00:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"customer_gre_endpoint": {
																	"description": "The IP address assigned to the customer side of the GRE tunnel.",
																	"example": "203.0.113.1",
																	"type": "string",
																	"x-auditable": true
																},
																"description": {
																	"description": "An optional description of the GRE tunnel.",
																	"example": "Tunnel for ISP X",
																	"type": "string",
																	"x-auditable": true
																},
																"health_check": {
																	"allOf": [
																		{
																			"properties": {
																				"enabled": {
																					"default": true,
																					"description": "Determines whether to run healthchecks for a tunnel.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"rate": {
																					"default": "mid",
																					"description": "How frequent the health check is run. The default value is `mid`.",
																					"enum": [
																						"low",
																						"mid",
																						"high"
																					],
																					"example": "low",
																					"type": "string",
																					"x-auditable": true
																				},
																				"target": {
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																					"oneOf": [
																						{
																							"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																							"properties": {
																								"effective": {
																									"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																									"example": "203.0.113.1",
																									"readOnly": true,
																									"type": "string",
																									"x-auditable": true
																								},
																								"saved": {
																									"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																									"example": "203.0.113.1",
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						{
																							"type": "string"
																						}
																					]
																				},
																				"type": {
																					"default": "reply",
																					"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																					"enum": [
																						"reply",
																						"request"
																					],
																					"example": "request",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		{
																			"properties": {
																				"direction": {
																					"default": "unidirectional",
																					"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																					"enum": [
																						"unidirectional",
																						"bidirectional"
																					],
																					"example": "bidirectional",
																					"type": "string"
																				}
																			}
																		}
																	]
																},
																"id": {
																	"description": "Identifier",
																	"example": "c4a7362d577a6c3019a474fd6f485821",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"interface_address": {
																	"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																	"example": "192.0.2.0/31",
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The date and time the tunnel was last modified.",
																	"example": "2017-06-14T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"mtu": {
																	"default": 1476,
																	"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																	"type": "integer",
																	"x-auditable": true
																},
																"name": {
																	"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																	"example": "GRE_1",
																	"type": "string",
																	"x-auditable": true
																},
																"ttl": {
																	"default": 64,
																	"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"name",
																"customer_gre_endpoint",
																"cloudflare_gre_endpoint",
																"interface_address"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List GRE Tunnel Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List GRE Tunnel Details",
		"tags": [
			"Magic GRE tunnels"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read",
			"Magic Transit Read",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /accounts/{account_id}/magic/gre_tunnels": {
		"description": "Creates a new GRE tunnel. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-gre-tunnels-create-gre-tunnels",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the request and response bodies will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"cloudflare_gre_endpoint": {
								"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
								"example": "203.0.113.1",
								"type": "string",
								"x-auditable": true
							},
							"customer_gre_endpoint": {
								"description": "The IP address assigned to the customer side of the GRE tunnel.",
								"example": "203.0.113.1",
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"description": "An optional description of the GRE tunnel.",
								"example": "Tunnel for ISP X",
								"type": "string",
								"x-auditable": true
							},
							"health_check": {
								"allOf": [
									{
										"properties": {
											"enabled": {
												"default": true,
												"description": "Determines whether to run healthchecks for a tunnel.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											},
											"rate": {
												"default": "mid",
												"description": "How frequent the health check is run. The default value is `mid`.",
												"enum": [
													"low",
													"mid",
													"high"
												],
												"example": "low",
												"type": "string",
												"x-auditable": true
											},
											"target": {
												"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
												"oneOf": [
													{
														"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
														"properties": {
															"effective": {
																"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																"example": "203.0.113.1",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"saved": {
																"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																"example": "203.0.113.1",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													{
														"type": "string"
													}
												]
											},
											"type": {
												"default": "reply",
												"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
												"enum": [
													"reply",
													"request"
												],
												"example": "request",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"direction": {
												"default": "unidirectional",
												"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
												"enum": [
													"unidirectional",
													"bidirectional"
												],
												"example": "bidirectional",
												"type": "string"
											}
										}
									}
								]
							},
							"interface_address": {
								"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
								"example": "192.0.2.0/31",
								"type": "string",
								"x-auditable": true
							},
							"mtu": {
								"default": 1476,
								"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
								"type": "integer",
								"x-auditable": true
							},
							"name": {
								"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
								"example": "GRE_1",
								"type": "string",
								"x-auditable": true
							},
							"ttl": {
								"default": 64,
								"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
								"type": "integer",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"customer_gre_endpoint",
							"cloudflare_gre_endpoint",
							"interface_address"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"cloudflare_gre_endpoint": {
													"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
													"example": "203.0.113.1",
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"description": "The date and time the tunnel was created.",
													"example": "2017-06-14T00:00:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"customer_gre_endpoint": {
													"description": "The IP address assigned to the customer side of the GRE tunnel.",
													"example": "203.0.113.1",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"description": "An optional description of the GRE tunnel.",
													"example": "Tunnel for ISP X",
													"type": "string",
													"x-auditable": true
												},
												"health_check": {
													"allOf": [
														{
															"properties": {
																"enabled": {
																	"default": true,
																	"description": "Determines whether to run healthchecks for a tunnel.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"rate": {
																	"default": "mid",
																	"description": "How frequent the health check is run. The default value is `mid`.",
																	"enum": [
																		"low",
																		"mid",
																		"high"
																	],
																	"example": "low",
																	"type": "string",
																	"x-auditable": true
																},
																"target": {
																	"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																	"oneOf": [
																		{
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																			"properties": {
																				"effective": {
																					"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																					"example": "203.0.113.1",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"saved": {
																					"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																					"example": "203.0.113.1",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		{
																			"type": "string"
																		}
																	]
																},
																"type": {
																	"default": "reply",
																	"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																	"enum": [
																		"reply",
																		"request"
																	],
																	"example": "request",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"direction": {
																	"default": "unidirectional",
																	"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																	"enum": [
																		"unidirectional",
																		"bidirectional"
																	],
																	"example": "bidirectional",
																	"type": "string"
																}
															}
														}
													]
												},
												"id": {
													"description": "Identifier",
													"example": "c4a7362d577a6c3019a474fd6f485821",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"interface_address": {
													"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
													"example": "192.0.2.0/31",
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"description": "The date and time the tunnel was last modified.",
													"example": "2017-06-14T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"mtu": {
													"default": 1476,
													"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
													"type": "integer",
													"x-auditable": true
												},
												"name": {
													"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
													"example": "GRE_1",
													"type": "string",
													"x-auditable": true
												},
												"ttl": {
													"default": 64,
													"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
													"type": "integer",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"customer_gre_endpoint",
												"cloudflare_gre_endpoint",
												"interface_address"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create GRE tunnels response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gre_tunnels": {
															"items": {
																"properties": {
																	"cloudflare_gre_endpoint": {
																		"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																		"example": "203.0.113.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"description": "The date and time the tunnel was created.",
																		"example": "2017-06-14T00:00:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"customer_gre_endpoint": {
																		"description": "The IP address assigned to the customer side of the GRE tunnel.",
																		"example": "203.0.113.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": {
																		"description": "An optional description of the GRE tunnel.",
																		"example": "Tunnel for ISP X",
																		"type": "string",
																		"x-auditable": true
																	},
																	"health_check": {
																		"allOf": [
																			{
																				"properties": {
																					"enabled": {
																						"default": true,
																						"description": "Determines whether to run healthchecks for a tunnel.",
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"rate": {
																						"default": "mid",
																						"description": "How frequent the health check is run. The default value is `mid`.",
																						"enum": [
																							"low",
																							"mid",
																							"high"
																						],
																						"example": "low",
																						"type": "string",
																						"x-auditable": true
																					},
																					"target": {
																						"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																						"oneOf": [
																							{
																								"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																								"properties": {
																									"effective": {
																										"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																										"example": "203.0.113.1",
																										"readOnly": true,
																										"type": "string",
																										"x-auditable": true
																									},
																									"saved": {
																										"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																										"example": "203.0.113.1",
																										"type": "string",
																										"x-auditable": true
																									}
																								},
																								"type": "object"
																							},
																							{
																								"type": "string"
																							}
																						]
																					},
																					"type": {
																						"default": "reply",
																						"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																						"enum": [
																							"reply",
																							"request"
																						],
																						"example": "request",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			{
																				"properties": {
																					"direction": {
																						"default": "unidirectional",
																						"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																						"enum": [
																							"unidirectional",
																							"bidirectional"
																						],
																						"example": "bidirectional",
																						"type": "string"
																					}
																				}
																			}
																		]
																	},
																	"id": {
																		"description": "Identifier",
																		"example": "c4a7362d577a6c3019a474fd6f485821",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"interface_address": {
																		"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																		"example": "192.0.2.0/31",
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The date and time the tunnel was last modified.",
																		"example": "2017-06-14T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"mtu": {
																		"default": 1476,
																		"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																		"type": "integer",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																		"example": "GRE_1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"ttl": {
																		"default": 64,
																		"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																		"type": "integer",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"name",
																	"customer_gre_endpoint",
																	"cloudflare_gre_endpoint",
																	"interface_address"
																],
																"type": "object"
															},
															"type": "array"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create GRE tunnels response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a GRE tunnel",
		"tags": [
			"Magic GRE tunnels"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_id}/magic/gre_tunnels": {
		"description": "Updates multiple GRE tunnels. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-gre-tunnels-update-multiple-gre-tunnels",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the request and response bodies will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"id"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"modified": {
													"example": true,
													"type": "boolean"
												},
												"modified_gre_tunnels": {
													"items": {
														"properties": {
															"cloudflare_gre_endpoint": {
																"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																"example": "203.0.113.1",
																"type": "string",
																"x-auditable": true
															},
															"created_on": {
																"description": "The date and time the tunnel was created.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"customer_gre_endpoint": {
																"description": "The IP address assigned to the customer side of the GRE tunnel.",
																"example": "203.0.113.1",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"description": "An optional description of the GRE tunnel.",
																"example": "Tunnel for ISP X",
																"type": "string",
																"x-auditable": true
															},
															"health_check": {
																"allOf": [
																	{
																		"properties": {
																			"enabled": {
																				"default": true,
																				"description": "Determines whether to run healthchecks for a tunnel.",
																				"example": true,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"rate": {
																				"default": "mid",
																				"description": "How frequent the health check is run. The default value is `mid`.",
																				"enum": [
																					"low",
																					"mid",
																					"high"
																				],
																				"example": "low",
																				"type": "string",
																				"x-auditable": true
																			},
																			"target": {
																				"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																				"oneOf": [
																					{
																						"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																						"properties": {
																							"effective": {
																								"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																								"example": "203.0.113.1",
																								"readOnly": true,
																								"type": "string",
																								"x-auditable": true
																							},
																							"saved": {
																								"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																								"example": "203.0.113.1",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					},
																					{
																						"type": "string"
																					}
																				]
																			},
																			"type": {
																				"default": "reply",
																				"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																				"enum": [
																					"reply",
																					"request"
																				],
																				"example": "request",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"direction": {
																				"default": "unidirectional",
																				"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																				"enum": [
																					"unidirectional",
																					"bidirectional"
																				],
																				"example": "bidirectional",
																				"type": "string"
																			}
																		}
																	}
																]
															},
															"id": {
																"description": "Identifier",
																"example": "c4a7362d577a6c3019a474fd6f485821",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"interface_address": {
																"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																"example": "192.0.2.0/31",
																"type": "string",
																"x-auditable": true
															},
															"modified_on": {
																"description": "The date and time the tunnel was last modified.",
																"example": "2017-06-14T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"mtu": {
																"default": 1476,
																"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																"type": "integer",
																"x-auditable": true
															},
															"name": {
																"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																"example": "GRE_1",
																"type": "string",
																"x-auditable": true
															},
															"ttl": {
																"default": 64,
																"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																"type": "integer",
																"x-auditable": true
															}
														},
														"required": [
															"id",
															"name",
															"customer_gre_endpoint",
															"cloudflare_gre_endpoint",
															"interface_address"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Update multiple GRE tunnels response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"example": true,
															"type": "boolean"
														},
														"modified_gre_tunnels": {
															"items": {
																"properties": {
																	"cloudflare_gre_endpoint": {
																		"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																		"example": "203.0.113.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"description": "The date and time the tunnel was created.",
																		"example": "2017-06-14T00:00:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"customer_gre_endpoint": {
																		"description": "The IP address assigned to the customer side of the GRE tunnel.",
																		"example": "203.0.113.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": {
																		"description": "An optional description of the GRE tunnel.",
																		"example": "Tunnel for ISP X",
																		"type": "string",
																		"x-auditable": true
																	},
																	"health_check": {
																		"allOf": [
																			{
																				"properties": {
																					"enabled": {
																						"default": true,
																						"description": "Determines whether to run healthchecks for a tunnel.",
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"rate": {
																						"default": "mid",
																						"description": "How frequent the health check is run. The default value is `mid`.",
																						"enum": [
																							"low",
																							"mid",
																							"high"
																						],
																						"example": "low",
																						"type": "string",
																						"x-auditable": true
																					},
																					"target": {
																						"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																						"oneOf": [
																							{
																								"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																								"properties": {
																									"effective": {
																										"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																										"example": "203.0.113.1",
																										"readOnly": true,
																										"type": "string",
																										"x-auditable": true
																									},
																									"saved": {
																										"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																										"example": "203.0.113.1",
																										"type": "string",
																										"x-auditable": true
																									}
																								},
																								"type": "object"
																							},
																							{
																								"type": "string"
																							}
																						]
																					},
																					"type": {
																						"default": "reply",
																						"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																						"enum": [
																							"reply",
																							"request"
																						],
																						"example": "request",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			{
																				"properties": {
																					"direction": {
																						"default": "unidirectional",
																						"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																						"enum": [
																							"unidirectional",
																							"bidirectional"
																						],
																						"example": "bidirectional",
																						"type": "string"
																					}
																				}
																			}
																		]
																	},
																	"id": {
																		"description": "Identifier",
																		"example": "c4a7362d577a6c3019a474fd6f485821",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"interface_address": {
																		"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																		"example": "192.0.2.0/31",
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The date and time the tunnel was last modified.",
																		"example": "2017-06-14T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"mtu": {
																		"default": 1476,
																		"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																		"type": "integer",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																		"example": "GRE_1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"ttl": {
																		"default": 64,
																		"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																		"type": "integer",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"name",
																	"customer_gre_endpoint",
																	"cloudflare_gre_endpoint",
																	"interface_address"
																],
																"type": "object"
															},
															"type": "array"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update multiple GRE tunnels response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update multiple GRE tunnels",
		"tags": [
			"Magic GRE tunnels"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_id}/magic/gre_tunnels/{gre_tunnel_id}": {
		"description": "Updates a specific GRE tunnel. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-gre-tunnels-update-gre-tunnel",
		"parameters": [
			{
				"in": "path",
				"name": "gre_tunnel_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the request and response bodies will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"cloudflare_gre_endpoint": {
										"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
										"example": "203.0.113.1",
										"type": "string",
										"x-auditable": true
									},
									"customer_gre_endpoint": {
										"description": "The IP address assigned to the customer side of the GRE tunnel.",
										"example": "203.0.113.1",
										"type": "string",
										"x-auditable": true
									},
									"description": {
										"description": "An optional description of the GRE tunnel.",
										"example": "Tunnel for ISP X",
										"type": "string",
										"x-auditable": true
									},
									"health_check": {
										"allOf": [
											{
												"properties": {
													"enabled": {
														"default": true,
														"description": "Determines whether to run healthchecks for a tunnel.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"rate": {
														"default": "mid",
														"description": "How frequent the health check is run. The default value is `mid`.",
														"enum": [
															"low",
															"mid",
															"high"
														],
														"example": "low",
														"type": "string",
														"x-auditable": true
													},
													"target": {
														"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
														"oneOf": [
															{
																"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																"properties": {
																	"effective": {
																		"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																		"example": "203.0.113.1",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"saved": {
																		"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																		"example": "203.0.113.1",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"type": "string"
															}
														]
													},
													"type": {
														"default": "reply",
														"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
														"enum": [
															"reply",
															"request"
														],
														"example": "request",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											{
												"properties": {
													"direction": {
														"default": "unidirectional",
														"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
														"enum": [
															"unidirectional",
															"bidirectional"
														],
														"example": "bidirectional",
														"type": "string"
													}
												}
											}
										]
									},
									"interface_address": {
										"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
										"example": "192.0.2.0/31",
										"type": "string",
										"x-auditable": true
									},
									"mtu": {
										"default": 1476,
										"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
										"type": "integer",
										"x-auditable": true
									},
									"name": {
										"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
										"example": "GRE_1",
										"type": "string",
										"x-auditable": true
									},
									"ttl": {
										"default": 64,
										"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
										"type": "integer",
										"x-auditable": true
									}
								},
								"required": [
									"name",
									"customer_gre_endpoint",
									"cloudflare_gre_endpoint",
									"interface_address"
								],
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"modified": {
													"example": true,
													"type": "boolean"
												},
												"modified_gre_tunnel": {
													"properties": {
														"cloudflare_gre_endpoint": {
															"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
															"example": "203.0.113.1",
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"description": "The date and time the tunnel was created.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"customer_gre_endpoint": {
															"description": "The IP address assigned to the customer side of the GRE tunnel.",
															"example": "203.0.113.1",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An optional description of the GRE tunnel.",
															"example": "Tunnel for ISP X",
															"type": "string",
															"x-auditable": true
														},
														"health_check": {
															"allOf": [
																{
																	"properties": {
																		"enabled": {
																			"default": true,
																			"description": "Determines whether to run healthchecks for a tunnel.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"rate": {
																			"default": "mid",
																			"description": "How frequent the health check is run. The default value is `mid`.",
																			"enum": [
																				"low",
																				"mid",
																				"high"
																			],
																			"example": "low",
																			"type": "string",
																			"x-auditable": true
																		},
																		"target": {
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																			"oneOf": [
																				{
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																					"properties": {
																						"effective": {
																							"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																							"example": "203.0.113.1",
																							"readOnly": true,
																							"type": "string",
																							"x-auditable": true
																						},
																						"saved": {
																							"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																							"example": "203.0.113.1",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				{
																					"type": "string"
																				}
																			]
																		},
																		"type": {
																			"default": "reply",
																			"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																			"enum": [
																				"reply",
																				"request"
																			],
																			"example": "request",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"direction": {
																			"default": "unidirectional",
																			"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																			"enum": [
																				"unidirectional",
																				"bidirectional"
																			],
																			"example": "bidirectional",
																			"type": "string"
																		}
																	}
																}
															]
														},
														"id": {
															"description": "Identifier",
															"example": "c4a7362d577a6c3019a474fd6f485821",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"interface_address": {
															"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
															"example": "192.0.2.0/31",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "The date and time the tunnel was last modified.",
															"example": "2017-06-14T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"mtu": {
															"default": 1476,
															"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
															"type": "integer",
															"x-auditable": true
														},
														"name": {
															"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
															"example": "GRE_1",
															"type": "string",
															"x-auditable": true
														},
														"ttl": {
															"default": 64,
															"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"customer_gre_endpoint",
														"cloudflare_gre_endpoint",
														"interface_address"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update GRE Tunnel response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"example": true,
															"type": "boolean"
														},
														"modified_gre_tunnel": {
															"properties": {
																"cloudflare_gre_endpoint": {
																	"description": "The IP address assigned to the Cloudflare side of the GRE tunnel.",
																	"example": "203.0.113.1",
																	"type": "string",
																	"x-auditable": true
																},
																"created_on": {
																	"description": "The date and time the tunnel was created.",
																	"example": "2017-06-14T00:00:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"customer_gre_endpoint": {
																	"description": "The IP address assigned to the customer side of the GRE tunnel.",
																	"example": "203.0.113.1",
																	"type": "string",
																	"x-auditable": true
																},
																"description": {
																	"description": "An optional description of the GRE tunnel.",
																	"example": "Tunnel for ISP X",
																	"type": "string",
																	"x-auditable": true
																},
																"health_check": {
																	"allOf": [
																		{
																			"properties": {
																				"enabled": {
																					"default": true,
																					"description": "Determines whether to run healthchecks for a tunnel.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"rate": {
																					"default": "mid",
																					"description": "How frequent the health check is run. The default value is `mid`.",
																					"enum": [
																						"low",
																						"mid",
																						"high"
																					],
																					"example": "low",
																					"type": "string",
																					"x-auditable": true
																				},
																				"target": {
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																					"oneOf": [
																						{
																							"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																							"properties": {
																								"effective": {
																									"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																									"example": "203.0.113.1",
																									"readOnly": true,
																									"type": "string",
																									"x-auditable": true
																								},
																								"saved": {
																									"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																									"example": "203.0.113.1",
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						{
																							"type": "string"
																						}
																					]
																				},
																				"type": {
																					"default": "reply",
																					"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																					"enum": [
																						"reply",
																						"request"
																					],
																					"example": "request",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		{
																			"properties": {
																				"direction": {
																					"default": "unidirectional",
																					"description": "The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.",
																					"enum": [
																						"unidirectional",
																						"bidirectional"
																					],
																					"example": "bidirectional",
																					"type": "string"
																				}
																			}
																		}
																	]
																},
																"id": {
																	"description": "Identifier",
																	"example": "c4a7362d577a6c3019a474fd6f485821",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"interface_address": {
																	"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																	"example": "192.0.2.0/31",
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The date and time the tunnel was last modified.",
																	"example": "2017-06-14T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"mtu": {
																	"default": 1476,
																	"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.",
																	"type": "integer",
																	"x-auditable": true
																},
																"name": {
																	"description": "The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.",
																	"example": "GRE_1",
																	"type": "string",
																	"x-auditable": true
																},
																"ttl": {
																	"default": 64,
																	"description": "Time To Live (TTL) in number of hops of the GRE tunnel.",
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"name",
																"customer_gre_endpoint",
																"cloudflare_gre_endpoint",
																"interface_address"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update GRE Tunnel response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update GRE Tunnel",
		"tags": [
			"Magic GRE tunnels"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}