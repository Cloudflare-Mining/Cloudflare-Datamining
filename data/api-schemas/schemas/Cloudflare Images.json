{
	"DELETE /accounts/{account_id}/images/v1/{image_id}": {
		"description": "Delete an image on Cloudflare Images. On success, all copies of the image are deleted and purged from cache.",
		"operationId": "cloudflare-images-delete-image",
		"parameters": [
			{
				"in": "path",
				"name": "image_id",
				"required": true,
				"schema": {
					"description": "Image unique identifier.",
					"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete image response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"example": {},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete image response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete image",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Write"
		]
	},
	"GET /accounts/{account_id}/images/v1": {
		"deprecated": true,
		"description": "List up to 100 images with one request. Use the optional parameters below to get a specific range of images.",
		"operationId": "cloudflare-images-list-images",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 1000,
					"description": "Number of items per page.",
					"maximum": 10000,
					"minimum": 10,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "creator",
				"schema": {
					"description": "Internal user ID set within the creator field. Setting to empty string \"\" will return images where creator field is not set",
					"nullable": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"images": {
													"items": {
														"properties": {
															"creator": {
																"description": "Can set the creator field with an internal user ID.",
																"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																"maxLength": 1024,
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"filename": {
																"description": "Image file name.",
																"example": "logo.png",
																"maxLength": 255,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Image unique identifier.",
																"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"meta": {
																"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
																"example": {
																	"key": "value"
																},
																"type": "object"
															},
															"requireSignedURLs": {
																"default": false,
																"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"uploaded": {
																"description": "When the media item was uploaded.",
																"example": "2014-01-02T02:20:00.123Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"variants": {
																"description": "Object specifying available variants for an image.",
																"example": [
																	"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																	"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																	"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
																],
																"items": {
																	"anyOf": [
																		{
																			"description": "URI to thumbnail variant for an image.",
																			"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																			"format": "uri",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		{
																			"description": "URI to hero variant for an image.",
																			"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																			"format": "uri",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		{
																			"description": "URI to original variant for an image.",
																			"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																			"format": "uri",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	]
																},
																"readOnly": true,
																"type": "array"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List images response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"images": {
															"items": {
																"properties": {
																	"creator": {
																		"description": "Can set the creator field with an internal user ID.",
																		"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																		"maxLength": 1024,
																		"nullable": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"filename": {
																		"description": "Image file name.",
																		"example": "logo.png",
																		"maxLength": 255,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "Image unique identifier.",
																		"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"meta": {
																		"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
																		"example": {
																			"key": "value"
																		},
																		"type": "object"
																	},
																	"requireSignedURLs": {
																		"default": false,
																		"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
																		"example": true,
																		"type": "boolean",
																		"x-auditable": true
																	},
																	"uploaded": {
																		"description": "When the media item was uploaded.",
																		"example": "2014-01-02T02:20:00.123Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"variants": {
																		"description": "Object specifying available variants for an image.",
																		"example": [
																			"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																			"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																			"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
																		],
																		"items": {
																			"anyOf": [
																				{
																					"description": "URI to thumbnail variant for an image.",
																					"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																					"format": "uri",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"description": "URI to hero variant for an image.",
																					"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																					"format": "uri",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"description": "URI to original variant for an image.",
																					"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																					"format": "uri",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				}
																			]
																		},
																		"readOnly": true,
																		"type": "array"
																	}
																},
																"type": "object"
															},
															"type": "array"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List images response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List images",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Read",
			"Images Write"
		]
	},
	"GET /accounts/{account_id}/images/v1/{image_id}": {
		"description": "Fetch details for a single image.",
		"operationId": "cloudflare-images-image-details",
		"parameters": [
			{
				"in": "path",
				"name": "image_id",
				"required": true,
				"schema": {
					"description": "Image unique identifier.",
					"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"creator": {
													"description": "Can set the creator field with an internal user ID.",
													"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
													"maxLength": 1024,
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"filename": {
													"description": "Image file name.",
													"example": "logo.png",
													"maxLength": 255,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Image unique identifier.",
													"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"meta": {
													"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
													"example": {
														"key": "value"
													},
													"type": "object"
												},
												"requireSignedURLs": {
													"default": false,
													"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"uploaded": {
													"description": "When the media item was uploaded.",
													"example": "2014-01-02T02:20:00.123Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"variants": {
													"description": "Object specifying available variants for an image.",
													"example": [
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
													],
													"items": {
														"anyOf": [
															{
																"description": "URI to thumbnail variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															{
																"description": "URI to hero variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															{
																"description": "URI to original variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															}
														]
													},
													"readOnly": true,
													"type": "array"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Image details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"creator": {
															"description": "Can set the creator field with an internal user ID.",
															"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
															"maxLength": 1024,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"filename": {
															"description": "Image file name.",
															"example": "logo.png",
															"maxLength": 255,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Image unique identifier.",
															"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"meta": {
															"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
															"example": {
																"key": "value"
															},
															"type": "object"
														},
														"requireSignedURLs": {
															"default": false,
															"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"uploaded": {
															"description": "When the media item was uploaded.",
															"example": "2014-01-02T02:20:00.123Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"variants": {
															"description": "Object specifying available variants for an image.",
															"example": [
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
															],
															"items": {
																"anyOf": [
																	{
																		"description": "URI to thumbnail variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"description": "URI to hero variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"description": "URI to original variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	}
																]
															},
															"readOnly": true,
															"type": "array"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Image details response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Image details",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Read",
			"Images Write"
		]
	},
	"GET /accounts/{account_id}/images/v1/{image_id}/blob": {
		"description": "Fetch base image. For most images this will be the originally uploaded file. For larger images it can be a near-lossless version of the original.",
		"operationId": "cloudflare-images-base-image",
		"parameters": [
			{
				"in": "path",
				"name": "image_id",
				"required": true,
				"schema": {
					"description": "Image unique identifier.",
					"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"image/*": {
						"schema": {
							"format": "binary",
							"type": "string"
						}
					}
				},
				"description": "Base image response. Returns uploaded image data."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "object"
										}
									],
									"example": "<image blob data>"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Base image response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Base image",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Read",
			"Images Write"
		]
	},
	"GET /accounts/{account_id}/images/v1/stats": {
		"description": "Fetch image statistics details for Cloudflare Images. The returned statistics detail storage usage, including the current image count vs this account's allowance.",
		"operationId": "cloudflare-images-images-usage-statistics",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"count": {
													"properties": {
														"allowed": {
															"description": "Cloudflare Images allowed usage.",
															"example": 100000,
															"readOnly": true,
															"type": "number",
															"x-auditable": true
														},
														"current": {
															"description": "Cloudflare Images current usage.",
															"example": 1000,
															"readOnly": true,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Images usage statistics response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"count": {
															"properties": {
																"allowed": {
																	"description": "Cloudflare Images allowed usage.",
																	"example": 100000,
																	"readOnly": true,
																	"type": "number",
																	"x-auditable": true
																},
																"current": {
																	"description": "Cloudflare Images current usage.",
																	"example": 1000,
																	"readOnly": true,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Images usage statistics response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Images usage statistics",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Read",
			"Images Write"
		]
	},
	"GET /accounts/{account_id}/images/v2": {
		"description": "List up to 10000 images with one request. Use the optional parameters below to get a specific range of images.\nEndpoint returns continuation_token if more images are present.\n",
		"operationId": "cloudflare-images-list-images-v2",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "continuation_token",
				"schema": {
					"description": "Continuation token for a next page. List images V2 returns continuation_token",
					"nullable": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 1000,
					"description": "Number of items per page.",
					"maximum": 10000,
					"minimum": 10,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "sort_order",
				"schema": {
					"default": "desc",
					"description": "Sorting order by upload time.",
					"enum": [
						"asc",
						"desc"
					],
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "creator",
				"schema": {
					"description": "Internal user ID set within the creator field. Setting to empty string \"\" will return images where creator field is not set",
					"nullable": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"continuation_token": {
															"description": "Continuation token to fetch next page. Passed as a query param when requesting List V2 api endpoint.",
															"example": "iD0bxlWFSVUWsDHbzIqvDkgBW4otifAAuGXLz1n8BQA",
															"maxLength": 32,
															"nullable": true,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"images": {
													"items": {
														"properties": {
															"creator": {
																"description": "Can set the creator field with an internal user ID.",
																"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																"maxLength": 1024,
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"filename": {
																"description": "Image file name.",
																"example": "logo.png",
																"maxLength": 255,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Image unique identifier.",
																"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"meta": {
																"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
																"example": {
																	"key": "value"
																},
																"type": "object"
															},
															"requireSignedURLs": {
																"default": false,
																"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"uploaded": {
																"description": "When the media item was uploaded.",
																"example": "2014-01-02T02:20:00.123Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"variants": {
																"description": "Object specifying available variants for an image.",
																"example": [
																	"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																	"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																	"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
																],
																"items": {
																	"anyOf": [
																		{
																			"description": "URI to thumbnail variant for an image.",
																			"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																			"format": "uri",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		{
																			"description": "URI to hero variant for an image.",
																			"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																			"format": "uri",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		{
																			"description": "URI to original variant for an image.",
																			"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																			"format": "uri",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	]
																},
																"readOnly": true,
																"type": "array"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List images response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"properties": {
																"continuation_token": {
																	"description": "Continuation token to fetch next page. Passed as a query param when requesting List V2 api endpoint.",
																	"example": "iD0bxlWFSVUWsDHbzIqvDkgBW4otifAAuGXLz1n8BQA",
																	"maxLength": 32,
																	"nullable": true,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"images": {
															"items": {
																"properties": {
																	"creator": {
																		"description": "Can set the creator field with an internal user ID.",
																		"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																		"maxLength": 1024,
																		"nullable": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"filename": {
																		"description": "Image file name.",
																		"example": "logo.png",
																		"maxLength": 255,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "Image unique identifier.",
																		"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"meta": {
																		"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
																		"example": {
																			"key": "value"
																		},
																		"type": "object"
																	},
																	"requireSignedURLs": {
																		"default": false,
																		"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
																		"example": true,
																		"type": "boolean",
																		"x-auditable": true
																	},
																	"uploaded": {
																		"description": "When the media item was uploaded.",
																		"example": "2014-01-02T02:20:00.123Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"variants": {
																		"description": "Object specifying available variants for an image.",
																		"example": [
																			"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																			"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																			"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
																		],
																		"items": {
																			"anyOf": [
																				{
																					"description": "URI to thumbnail variant for an image.",
																					"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																					"format": "uri",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"description": "URI to hero variant for an image.",
																					"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																					"format": "uri",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"description": "URI to original variant for an image.",
																					"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																					"format": "uri",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				}
																			]
																		},
																		"readOnly": true,
																		"type": "array"
																	}
																},
																"type": "object"
															},
															"type": "array"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List images response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List images V2",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Read",
			"Images Write"
		]
	},
	"PATCH /accounts/{account_id}/images/v1/{image_id}": {
		"description": "Update image access control. On access control change, all copies of the image are purged from cache.",
		"operationId": "cloudflare-images-update-image",
		"parameters": [
			{
				"in": "path",
				"name": "image_id",
				"required": true,
				"schema": {
					"description": "Image unique identifier.",
					"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"creator": {
								"description": "Can set the creator field with an internal user ID.",
								"type": "string"
							},
							"metadata": {
								"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. No change if not specified.",
								"type": "object"
							},
							"requireSignedURLs": {
								"description": "Indicates whether the image can be accessed using only its UID. If set to `true`, a signed token needs to be generated with a signing key to view the image. Returns a new UID on a change. No change if not specified.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"creator": {
													"description": "Can set the creator field with an internal user ID.",
													"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
													"maxLength": 1024,
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"filename": {
													"description": "Image file name.",
													"example": "logo.png",
													"maxLength": 255,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Image unique identifier.",
													"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"meta": {
													"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
													"example": {
														"key": "value"
													},
													"type": "object"
												},
												"requireSignedURLs": {
													"default": false,
													"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"uploaded": {
													"description": "When the media item was uploaded.",
													"example": "2014-01-02T02:20:00.123Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"variants": {
													"description": "Object specifying available variants for an image.",
													"example": [
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
													],
													"items": {
														"anyOf": [
															{
																"description": "URI to thumbnail variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															{
																"description": "URI to hero variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															{
																"description": "URI to original variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															}
														]
													},
													"readOnly": true,
													"type": "array"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update image response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"creator": {
															"description": "Can set the creator field with an internal user ID.",
															"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
															"maxLength": 1024,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"filename": {
															"description": "Image file name.",
															"example": "logo.png",
															"maxLength": 255,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Image unique identifier.",
															"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"meta": {
															"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
															"example": {
																"key": "value"
															},
															"type": "object"
														},
														"requireSignedURLs": {
															"default": false,
															"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"uploaded": {
															"description": "When the media item was uploaded.",
															"example": "2014-01-02T02:20:00.123Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"variants": {
															"description": "Object specifying available variants for an image.",
															"example": [
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
															],
															"items": {
																"anyOf": [
																	{
																		"description": "URI to thumbnail variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"description": "URI to hero variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"description": "URI to original variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	}
																]
															},
															"readOnly": true,
															"type": "array"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update image response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update image",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Write"
		]
	},
	"POST /accounts/{account_id}/images/v1": {
		"description": "Upload an image with up to 10 Megabytes using a single HTTP POST (multipart/form-data) request.\nAn image can be uploaded by sending an image file or passing an accessible to an API url.\n",
		"operationId": "cloudflare-images-upload-an-image-via-url",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"multipart/form-data": {
					"schema": {
						"properties": {
							"creator": {
								"description": "Can set the creator field with an internal user ID.",
								"maxLength": 1024,
								"type": "string"
							},
							"file": {
								"description": "An image binary data. Only needed when type is uploading a file.",
								"format": "binary",
								"type": "string",
								"x-auditable": true
							},
							"id": {
								"description": "An optional custom unique identifier for your image.",
								"type": "string",
								"x-auditable": true
							},
							"metadata": {
								"description": "User modifiable key-value store. Can use used for keeping references to another system of record for managing images.",
								"type": "object"
							},
							"requireSignedURLs": {
								"default": false,
								"description": "Indicates whether the image requires a signature token for the access.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"url": {
								"description": "A URL to fetch an image from origin. Only needed when type is uploading from a URL.",
								"example": "https://example.com/path/to/logo.png",
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"creator": {
													"description": "Can set the creator field with an internal user ID.",
													"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
													"maxLength": 1024,
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"filename": {
													"description": "Image file name.",
													"example": "logo.png",
													"maxLength": 255,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Image unique identifier.",
													"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"meta": {
													"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
													"example": {
														"key": "value"
													},
													"type": "object"
												},
												"requireSignedURLs": {
													"default": false,
													"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"uploaded": {
													"description": "When the media item was uploaded.",
													"example": "2014-01-02T02:20:00.123Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"variants": {
													"description": "Object specifying available variants for an image.",
													"example": [
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
														"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
													],
													"items": {
														"anyOf": [
															{
																"description": "URI to thumbnail variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															{
																"description": "URI to hero variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															{
																"description": "URI to original variant for an image.",
																"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																"format": "uri",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															}
														]
													},
													"readOnly": true,
													"type": "array"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Upload an image response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"creator": {
															"description": "Can set the creator field with an internal user ID.",
															"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
															"maxLength": 1024,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"filename": {
															"description": "Image file name.",
															"example": "logo.png",
															"maxLength": 255,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Image unique identifier.",
															"example": "107b9558-dd06-4bbd-5fef-9c2c16bb7900",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"meta": {
															"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
															"example": {
																"key": "value"
															},
															"type": "object"
														},
														"requireSignedURLs": {
															"default": false,
															"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"uploaded": {
															"description": "When the media item was uploaded.",
															"example": "2014-01-02T02:20:00.123Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"variants": {
															"description": "Object specifying available variants for an image.",
															"example": [
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																"https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original"
															],
															"items": {
																"anyOf": [
																	{
																		"description": "URI to thumbnail variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/thumbnail",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"description": "URI to hero variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/hero",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"description": "URI to original variant for an image.",
																		"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/107b9558-dd06-4bbd-5fef-9c2c16bb7900/original",
																		"format": "uri",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	}
																]
															},
															"readOnly": true,
															"type": "array"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Upload an image response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Upload an image",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Write"
		]
	},
	"POST /accounts/{account_id}/images/v2/direct_upload": {
		"description": "Direct uploads allow users to upload images without API keys. A common use case are web apps, client-side applications, or mobile devices where users upload content directly to Cloudflare Images. This method creates a draft record for a future image. It returns an upload URL and an image identifier. To verify if the image itself has been uploaded, send an image details request (accounts/:account_identifier/images/v1/:identifier), and check that the `draft: true` property is not present.",
		"operationId": "cloudflare-images-create-authenticated-direct-upload-url-v-2",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"multipart/form-data": {
					"schema": {
						"properties": {
							"creator": {
								"description": "Can set the creator field with an internal user ID.",
								"type": "string"
							},
							"expiry": {
								"default": "Now + 30 minutes",
								"description": "The date after which the upload will not be accepted. Minimum: Now + 2 minutes. Maximum: Now + 6 hours.",
								"example": "2021-01-02T02:20:00Z",
								"format": "date-time",
								"type": "string",
								"x-auditable": true
							},
							"id": {
								"description": "Optional Image Custom ID. Up to 1024 chars. Can include any number of subpaths, and utf8 characters. Cannot start nor end with a / (forward slash). Cannot be a UUID.",
								"example": "this/is/my-customid",
								"maxLength": 1024,
								"type": "string",
								"x-auditable": true
							},
							"metadata": {
								"description": "User modifiable key-value store. Can be used for keeping references to another system of record, for managing images.",
								"type": "object"
							},
							"requireSignedURLs": {
								"default": false,
								"description": "Indicates whether the image requires a signature token to be accessed.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "Image unique identifier.",
													"example": "e22e9e6b-c02b-42fd-c405-6c32af5fe600",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"uploadURL": {
													"description": "The URL the unauthenticated upload can be performed to using a single HTTP POST (multipart/form-data) request.",
													"example": "https://upload.imagedelivery.net/FxUufywByo0m2v3xhKSiU8/e22e9e6b-c02b-42fd-c405-6c32af5fe600",
													"type": "string",
													"x-auditable": true
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Create authenticated direct upload URL V2 response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "Image unique identifier.",
															"example": "e22e9e6b-c02b-42fd-c405-6c32af5fe600",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"uploadURL": {
															"description": "The URL the unauthenticated upload can be performed to using a single HTTP POST (multipart/form-data) request.",
															"example": "https://upload.imagedelivery.net/FxUufywByo0m2v3xhKSiU8/e22e9e6b-c02b-42fd-c405-6c32af5fe600",
															"type": "string",
															"x-auditable": true
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create authenticated direct upload URL V2 response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create authenticated direct upload URL V2",
		"tags": [
			"Cloudflare Images"
		],
		"x-api-token-group": [
			"Images Write"
		]
	}
}