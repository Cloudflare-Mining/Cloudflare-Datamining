{
	"GET /accounts/{account_id}/urlscanner/response/{response_id}": {
		"deprecated": true,
		"description": "Returns the plain response of the network request.",
		"operationId": "urlscanner-get-response-text",
		"parameters": [
			{
				"description": "Response hash.",
				"in": "path",
				"name": "response_id",
				"required": true,
				"schema": {
					"description": "Response hash.",
					"type": "string"
				}
			},
			{
				"description": "Account ID.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account ID.",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"text/plain": {
						"schema": {
							"description": "Web resource text/image.",
							"type": "string"
						}
					}
				},
				"description": "When `har.log.entries[].response._cf.contentAvailable` is `true`, use `response._cf.hash` value to fetch the raw response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan ID is not a valid UUID.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Invalid params."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan not found.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan not found."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get raw response",
		"tags": [
			"URL Scanner (Deprecated)"
		],
		"x-api-token-group": [
			"URL Scanner Write",
			"URL Scanner Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [V2](https://developers.cloudflare.com/api/resources/url_scanner/subresources/responses/methods/get/) instead."
	},
	"GET /accounts/{account_id}/urlscanner/scan": {
		"deprecated": true,
		"description": "Search scans by date and webpages' requests, including full URL (after redirects), hostname, and path. <br/> A successful scan will appear in search results a few minutes after finishing but may take much longer if the system in under load. By default, only successfully completed scans will appear in search results, unless searching by `scanId`. Please take into account that older scans may be removed from the search index at an unspecified time.",
		"operationId": "urlscanner-search-scans",
		"parameters": [
			{
				"description": "Account ID.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account ID.",
					"type": "string"
				}
			},
			{
				"description": "Scan UUID.",
				"in": "query",
				"name": "scan_id",
				"schema": {
					"description": "Scan UUID.",
					"format": "uuid",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 100,
					"type": "integer"
				}
			},
			{
				"description": "Pagination cursor to get the next set of results.",
				"in": "query",
				"name": "next_cursor",
				"schema": {
					"description": "Pagination cursor to get the next set of results.",
					"type": "string"
				}
			},
			{
				"description": "Filter scans requested after date (inclusive).",
				"in": "query",
				"name": "date_start",
				"schema": {
					"description": "Filter scans requested after date (inclusive).",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"description": "Filter scans requested before date (inclusive).",
				"in": "query",
				"name": "date_end",
				"schema": {
					"description": "Filter scans requested before date (inclusive).",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by URL of _any_ request made by the webpage",
				"in": "query",
				"name": "url",
				"schema": {
					"description": "Filter scans by URL of _any_ request made by the webpage",
					"example": "https://example.com/?hello",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by hostname of _any_ request made by the webpage.",
				"in": "query",
				"name": "hostname",
				"schema": {
					"description": "Filter scans by hostname of _any_ request made by the webpage.",
					"example": "example.com",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by url path of _any_ request made by the webpage.",
				"in": "query",
				"name": "path",
				"schema": {
					"description": "Filter scans by url path of _any_ request made by the webpage.",
					"example": "/samples/subresource-integrity/",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by IP address (IPv4 or IPv6) of _any_ request made by the webpage.",
				"in": "query",
				"name": "ip",
				"schema": {
					"description": "Filter scans by IP address (IPv4 or IPv6) of _any_ request made by the webpage.",
					"example": "1.1.1.1",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by hash of any html/js/css request made by the webpage.",
				"in": "query",
				"name": "hash",
				"schema": {
					"description": "Filter scans by hash of any html/js/css request made by the webpage.",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by submitted or scanned URL",
				"in": "query",
				"name": "page_url",
				"schema": {
					"description": "Filter scans by submitted or scanned URL",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by main page hostname (domain of effective URL).",
				"in": "query",
				"name": "page_hostname",
				"schema": {
					"description": "Filter scans by main page hostname (domain of effective URL).",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by exact match of effective URL path (also supports suffix search).",
				"in": "query",
				"name": "page_path",
				"schema": {
					"description": "Filter scans by exact match of effective URL path (also supports suffix search).",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by main page Autonomous System Number (ASN).",
				"in": "query",
				"name": "page_asn",
				"schema": {
					"description": "Filter scans by main page Autonomous System Number (ASN).",
					"type": "string"
				}
			},
			{
				"description": "Filter scans by  main page IP address (IPv4 or IPv6).",
				"in": "query",
				"name": "page_ip",
				"schema": {
					"description": "Filter scans by  main page IP address (IPv4 or IPv6).",
					"type": "string"
				}
			},
			{
				"description": "Return only scans created by account.",
				"in": "query",
				"name": "account_scans",
				"schema": {
					"description": "Return only scans created by account.",
					"type": "boolean"
				}
			},
			{
				"description": "Filter scans by malicious verdict.",
				"in": "query",
				"name": "is_malicious",
				"schema": {
					"description": "Filter scans by malicious verdict.",
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Error",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"example": "OK",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"tasks": {
											"items": {
												"properties": {
													"country": {
														"description": "Alpha-2 country code",
														"type": "string"
													},
													"success": {
														"description": "Whether scan was successful or not",
														"type": "boolean"
													},
													"time": {
														"description": "When scan was submitted (UTC)",
														"format": "date-time",
														"type": "string"
													},
													"url": {
														"description": "Scan url (after redirects)",
														"example": "https://www.example.com/",
														"type": "string"
													},
													"uuid": {
														"description": "Scan id",
														"format": "uuid",
														"type": "string"
													},
													"visibility": {
														"description": "Submitted visibility status.",
														"enum": [
															"public",
															"unlisted"
														],
														"example": "public",
														"type": "string"
													}
												},
												"required": [
													"uuid",
													"url",
													"success",
													"time",
													"country",
													"visibility"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"tasks"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether search request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Search results"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan ID is not a valid UUID.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Invalid params."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Search URL scans",
		"tags": [
			"URL Scanner (Deprecated)"
		],
		"x-api-token-group": [
			"URL Scanner Write",
			"URL Scanner Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [V2](https://developers.cloudflare.com/api/resources/url_scanner/subresources/scans/methods/list/) instead."
	},
	"GET /accounts/{account_id}/urlscanner/scan/{scan_id}": {
		"deprecated": true,
		"description": "Get URL scan by uuid",
		"operationId": "urlscanner-get-scan",
		"parameters": [
			{
				"description": "Scan UUID.",
				"in": "path",
				"name": "scan_id",
				"required": true,
				"schema": {
					"description": "Scan UUID.",
					"format": "uuid",
					"type": "string"
				}
			},
			{
				"description": "Account ID.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account ID.",
					"type": "string"
				}
			},
			{
				"description": "Whether to return full report (scan summary and network log).",
				"in": "query",
				"name": "full",
				"schema": {
					"description": "Whether to return full report (scan summary and network log).",
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Error",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"example": "OK",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"scan": {
											"properties": {
												"asns": {
													"description": "Dictionary of Autonomous System Numbers where ASN's are the keys",
													"properties": {
														"asn": {
															"description": "ASN's contacted",
															"properties": {
																"asn": {
																	"example": "15133",
																	"type": "string"
																},
																"description": {
																	"example": "EDGECAST",
																	"type": "string"
																},
																"location_alpha2": {
																	"example": "US",
																	"type": "string"
																},
																"name": {
																	"example": "EDGECAST",
																	"type": "string"
																},
																"org_name": {
																	"example": "Edgecast Inc.",
																	"type": "string"
																}
															},
															"required": [
																"asn",
																"name",
																"description",
																"org_name",
																"location_alpha2"
															],
															"type": "object"
														}
													},
													"type": "object"
												},
												"certificates": {
													"items": {
														"properties": {
															"issuer": {
																"type": "string"
															},
															"subjectName": {
																"example": "rkmod.somee.com",
																"type": "string"
															},
															"validFrom": {
																"example": 1682684400,
																"type": "number"
															},
															"validTo": {
																"example": 1696698000,
																"type": "number"
															}
														},
														"required": [
															"issuer",
															"subjectName",
															"validFrom",
															"validTo"
														],
														"type": "object"
													},
													"type": "array"
												},
												"domains": {
													"properties": {
														"example.com": {
															"properties": {
																"categories": {
																	"properties": {
																		"content": {
																			"items": {
																				"properties": {
																					"id": {
																						"type": "integer"
																					},
																					"name": {
																						"example": "Technology",
																						"type": "string"
																					},
																					"super_category_id": {
																						"type": "integer"
																					}
																				},
																				"required": [
																					"id",
																					"name"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"inherited": {
																			"properties": {
																				"content": {
																					"items": {
																						"properties": {
																							"id": {
																								"type": "integer"
																							},
																							"name": {
																								"example": "Technology",
																								"type": "string"
																							},
																							"super_category_id": {
																								"type": "integer"
																							}
																						},
																						"required": [
																							"id",
																							"name"
																						],
																						"type": "object"
																					},
																					"type": "array"
																				},
																				"from": {
																					"example": "example.com",
																					"type": "string"
																				},
																				"risks": {
																					"items": {
																						"properties": {
																							"id": {
																								"type": "integer"
																							},
																							"name": {
																								"example": "Technology",
																								"type": "string"
																							},
																							"super_category_id": {
																								"type": "integer"
																							}
																						},
																						"required": [
																							"id",
																							"name"
																						],
																						"type": "object"
																					},
																					"type": "array"
																				}
																			},
																			"type": "object"
																		},
																		"risks": {
																			"items": {
																				"properties": {
																					"id": {
																						"type": "integer"
																					},
																					"name": {
																						"example": "Technology",
																						"type": "string"
																					},
																					"super_category_id": {
																						"type": "integer"
																					}
																				},
																				"required": [
																					"id",
																					"name"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"inherited"
																	],
																	"type": "object"
																},
																"dns": {
																	"items": {
																		"properties": {
																			"address": {
																				"example": "93.184.216.34",
																				"type": "string"
																			},
																			"dnssec_valid": {
																				"type": "boolean"
																			},
																			"name": {
																				"example": "example.com",
																				"type": "string"
																			},
																			"type": {
																				"example": "A",
																				"type": "string"
																			}
																		},
																		"required": [
																			"name",
																			"address",
																			"type",
																			"dnssec_valid"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"name": {
																	"example": "example.com",
																	"type": "string"
																},
																"rank": {
																	"properties": {
																		"bucket": {
																			"example": "500",
																			"type": "string"
																		},
																		"name": {
																			"example": "example.com",
																			"type": "string"
																		},
																		"rank": {
																			"description": "Rank in the Global Radar Rank, if set. See more at https://blog.cloudflare.com/radar-domain-rankings/",
																			"type": "integer"
																		}
																	},
																	"required": [
																		"name",
																		"bucket"
																	],
																	"type": "object"
																},
																"type": {
																	"example": "Apex domain",
																	"type": "string"
																}
															},
															"required": [
																"name",
																"type",
																"categories",
																"dns",
																"rank"
															],
															"type": "object"
														}
													},
													"type": "object"
												},
												"geo": {
													"properties": {
														"continents": {
															"items": {
																"description": "GeoIP continent location",
																"example": "North America",
																"type": "string"
															},
															"type": "array"
														},
														"locations": {
															"items": {
																"description": "GeoIP country location",
																"example": "US",
																"type": "string"
															},
															"type": "array"
														}
													},
													"required": [
														"locations",
														"continents"
													],
													"type": "object"
												},
												"ips": {
													"properties": {
														"ip": {
															"properties": {
																"asn": {
																	"example": "15133",
																	"type": "string"
																},
																"asnDescription": {
																	"example": "EDGECAST",
																	"type": "string"
																},
																"asnLocationAlpha2": {
																	"example": "US",
																	"type": "string"
																},
																"asnName": {
																	"example": "EDGECAST",
																	"type": "string"
																},
																"asnOrgName": {
																	"example": "Edgecast Inc.",
																	"type": "string"
																},
																"continent": {
																	"example": "North America",
																	"type": "string"
																},
																"geonameId": {
																	"example": "6252001",
																	"type": "string"
																},
																"ip": {
																	"example": "2606:2800:220:1:248:1893:25c8:1946",
																	"type": "string"
																},
																"ipVersion": {
																	"example": "IPv6",
																	"type": "string"
																},
																"latitude": {
																	"example": "39.76",
																	"type": "string"
																},
																"locationAlpha2": {
																	"example": "US",
																	"type": "string"
																},
																"locationName": {
																	"example": "United States",
																	"type": "string"
																},
																"longitude": {
																	"example": "-98.5",
																	"type": "string"
																},
																"subdivision1Name": {
																	"type": "string"
																},
																"subdivision2Name": {
																	"type": "string"
																}
															},
															"required": [
																"ip",
																"ipVersion",
																"locationAlpha2",
																"locationName",
																"subdivision1Name",
																"subdivision2Name",
																"latitude",
																"longitude",
																"continent",
																"geonameId",
																"asn",
																"asnName",
																"asnOrgName",
																"asnDescription",
																"asnLocationAlpha2"
															],
															"type": "object"
														}
													},
													"type": "object"
												},
												"links": {
													"properties": {
														"link": {
															"properties": {
																"href": {
																	"description": "Outgoing link detected in the DOM",
																	"example": "https://www.iana.org/domains/example",
																	"type": "string"
																},
																"text": {
																	"example": "More information...",
																	"type": "string"
																}
															},
															"required": [
																"href",
																"text"
															],
															"type": "object"
														}
													},
													"type": "object"
												},
												"meta": {
													"properties": {
														"processors": {
															"properties": {
																"categories": {
																	"properties": {
																		"content": {
																			"items": {
																				"properties": {
																					"id": {
																						"example": 155,
																						"type": "integer"
																					},
																					"name": {
																						"example": "Technology",
																						"type": "string"
																					},
																					"super_category_id": {
																						"type": "integer"
																					}
																				},
																				"required": [
																					"id",
																					"name"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"risks": {
																			"items": {
																				"properties": {
																					"id": {
																						"example": 17,
																						"type": "integer"
																					},
																					"name": {
																						"example": "Newly Seen Domains",
																						"type": "string"
																					},
																					"super_category_id": {
																						"example": 32,
																						"type": "integer"
																					}
																				},
																				"required": [
																					"id",
																					"super_category_id",
																					"name"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"content",
																		"risks"
																	],
																	"type": "object"
																},
																"phishing": {
																	"items": {
																		"example": "CredentialHarvester",
																		"type": "string"
																	},
																	"type": "array"
																},
																"rank": {
																	"properties": {
																		"bucket": {
																			"example": "500",
																			"type": "string"
																		},
																		"name": {
																			"example": "example.com",
																			"type": "string"
																		},
																		"rank": {
																			"description": "Rank in the Global Radar Rank, if set. See more at https://blog.cloudflare.com/radar-domain-rankings/",
																			"type": "integer"
																		}
																	},
																	"required": [
																		"name",
																		"bucket"
																	],
																	"type": "object"
																},
																"tech": {
																	"items": {
																		"properties": {
																			"categories": {
																				"items": {
																					"properties": {
																						"groups": {
																							"items": {
																								"type": "integer"
																							},
																							"type": "array"
																						},
																						"id": {
																							"example": 63,
																							"type": "integer"
																						},
																						"name": {
																							"example": "IAAS",
																							"type": "string"
																						},
																						"priority": {
																							"example": 8,
																							"type": "integer"
																						},
																						"slug": {
																							"example": "iaas",
																							"type": "string"
																						}
																					},
																					"required": [
																						"id",
																						"slug",
																						"groups",
																						"name",
																						"priority"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"confidence": {
																				"example": 100,
																				"type": "integer"
																			},
																			"description": {
																				"type": "string"
																			},
																			"evidence": {
																				"properties": {
																					"impliedBy": {
																						"items": {
																							"type": "string"
																						},
																						"type": "array"
																					},
																					"patterns": {
																						"items": {
																							"properties": {
																								"confidence": {
																									"example": 100,
																									"type": "integer"
																								},
																								"excludes": {
																									"items": {
																										"type": "string"
																									},
																									"type": "array"
																								},
																								"implies": {
																									"items": {
																										"type": "string"
																									},
																									"type": "array"
																								},
																								"match": {
																									"example": "ECS",
																									"type": "string"
																								},
																								"name": {
																									"description": "Header or Cookie name when set",
																									"example": "server",
																									"type": "string"
																								},
																								"regex": {
																									"example": "^ECS",
																									"type": "string"
																								},
																								"type": {
																									"example": "headers",
																									"type": "string"
																								},
																								"value": {
																									"example": "ECS (dcb/7EEE)",
																									"type": "string"
																								},
																								"version": {
																									"type": "string"
																								}
																							},
																							"required": [
																								"type",
																								"regex",
																								"value",
																								"match",
																								"name",
																								"confidence",
																								"version",
																								"implies",
																								"excludes"
																							],
																							"type": "object"
																						},
																						"type": "array"
																					}
																				},
																				"required": [
																					"patterns",
																					"impliedBy"
																				],
																				"type": "object"
																			},
																			"icon": {
																				"example": "Amazon ECS.svg",
																				"type": "string"
																			},
																			"name": {
																				"example": "Amazon ECS",
																				"type": "string"
																			},
																			"slug": {
																				"example": "amazon-ecs",
																				"type": "string"
																			},
																			"website": {
																				"example": "https://aws.amazon.com/ecs/",
																				"type": "string"
																			}
																		},
																		"required": [
																			"name",
																			"slug",
																			"categories",
																			"confidence",
																			"icon",
																			"website",
																			"evidence"
																		],
																		"type": "object"
																	},
																	"type": "array"
																}
															},
															"required": [
																"tech",
																"categories",
																"rank",
																"phishing"
															],
															"type": "object"
														}
													},
													"required": [
														"processors"
													],
													"type": "object"
												},
												"page": {
													"properties": {
														"asn": {
															"example": "15133",
															"type": "string"
														},
														"asnLocationAlpha2": {
															"example": "US",
															"type": "string"
														},
														"asnname": {
															"example": "EDGECAST",
															"type": "string"
														},
														"console": {
															"items": {
																"properties": {
																	"category": {
																		"example": "network",
																		"type": "string"
																	},
																	"text": {
																		"example": "Failed to load resource: the server responded with a status of 404 (Not Found)",
																		"type": "string"
																	},
																	"type": {
																		"example": "error",
																		"type": "string"
																	},
																	"url": {
																		"example": "http://example.com/favicon.ico",
																		"type": "string"
																	}
																},
																"required": [
																	"type",
																	"text",
																	"category"
																],
																"type": "object"
															},
															"type": "array"
														},
														"cookies": {
															"items": {
																"properties": {
																	"domain": {
																		"example": "rkmod.somee.com",
																		"type": "string"
																	},
																	"expires": {
																		"example": -1,
																		"type": "number"
																	},
																	"httpOnly": {
																		"type": "boolean"
																	},
																	"name": {
																		"example": "b",
																		"type": "string"
																	},
																	"path": {
																		"example": "/",
																		"type": "string"
																	},
																	"priority": {
																		"example": "Medium",
																		"type": "string"
																	},
																	"sameParty": {
																		"type": "boolean"
																	},
																	"secure": {
																		"type": "boolean"
																	},
																	"session": {
																		"example": true,
																		"type": "boolean"
																	},
																	"size": {
																		"example": 2,
																		"type": "number"
																	},
																	"sourcePort": {
																		"example": 443,
																		"type": "number"
																	},
																	"sourceScheme": {
																		"example": "Secure",
																		"type": "string"
																	},
																	"value": {
																		"example": "b",
																		"type": "string"
																	}
																},
																"required": [
																	"name",
																	"value",
																	"domain",
																	"path",
																	"expires",
																	"size",
																	"httpOnly",
																	"secure",
																	"session",
																	"sameParty",
																	"sourceScheme",
																	"sourcePort"
																],
																"type": "object"
															},
															"type": "array"
														},
														"country": {
															"example": "United States",
															"type": "string"
														},
														"countryLocationAlpha2": {
															"example": "US",
															"type": "string"
														},
														"domain": {
															"example": "example.com",
															"type": "string"
														},
														"headers": {
															"items": {
																"properties": {
																	"name": {
																		"example": "Content-Length",
																		"type": "string"
																	},
																	"value": {
																		"example": "648",
																		"type": "string"
																	}
																},
																"required": [
																	"name",
																	"value"
																],
																"type": "object"
															},
															"type": "array"
														},
														"ip": {
															"example": "2606:2800:220:1:248:1893:25c8:1946",
															"type": "string"
														},
														"js": {
															"properties": {
																"variables": {
																	"items": {
																		"properties": {
																			"name": {
																				"example": "checkFrame",
																				"type": "string"
																			},
																			"type": {
																				"example": "string",
																				"type": "string"
																			}
																		},
																		"required": [
																			"name",
																			"type"
																		],
																		"type": "object"
																	},
																	"type": "array"
																}
															},
															"required": [
																"variables"
															],
															"type": "object"
														},
														"securityViolations": {
															"items": {
																"properties": {
																	"category": {
																		"example": "csp",
																		"type": "string"
																	},
																	"text": {
																		"example": "[Report Only] Refused to load the stylesheet 'https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css' because it violates the following Content Security Policy directive: ... ",
																		"type": "string"
																	},
																	"url": {
																		"example": "http://example.com/",
																		"type": "string"
																	}
																},
																"required": [
																	"text",
																	"category",
																	"url"
																],
																"type": "object"
															},
															"type": "array"
														},
														"status": {
															"example": 200,
															"type": "number"
														},
														"subdivision1Name": {
															"type": "string"
														},
														"subdivision2name": {
															"type": "string"
														},
														"url": {
															"example": "http://example.com/",
															"type": "string"
														}
													},
													"required": [
														"url",
														"domain",
														"country",
														"countryLocationAlpha2",
														"subdivision1Name",
														"subdivision2name",
														"ip",
														"asn",
														"asnname",
														"asnLocationAlpha2",
														"cookies",
														"headers",
														"status",
														"js",
														"console",
														"securityViolations"
													],
													"type": "object"
												},
												"performance": {
													"items": {
														"properties": {
															"connectEnd": {
																"example": 82.59999999403954,
																"type": "number"
															},
															"connectStart": {
																"example": 72.79999999701977,
																"type": "number"
															},
															"decodedBodySize": {
																"example": 1256,
																"type": "number"
															},
															"domComplete": {
																"example": 306,
																"type": "number"
															},
															"domContentLoadedEventEnd": {
																"example": 305.8999999910593,
																"type": "number"
															},
															"domContentLoadedEventStart": {
																"example": 305.8999999910593,
																"type": "number"
															},
															"domInteractive": {
																"example": 305.8999999910593,
																"type": "number"
															},
															"domainLookupEnd": {
																"example": 72.79999999701977,
																"type": "number"
															},
															"domainLookupStart": {
																"example": 2.199999988079071,
																"type": "number"
															},
															"duration": {
																"example": 306,
																"type": "number"
															},
															"encodedBodySize": {
																"example": 648,
																"type": "number"
															},
															"entryType": {
																"example": "navigation",
																"type": "string"
															},
															"fetchStart": {
																"example": 0.8999999910593033,
																"type": "number"
															},
															"initiatorType": {
																"example": "navigation",
																"type": "string"
															},
															"loadEventEnd": {
																"example": 306,
																"type": "number"
															},
															"loadEventStart": {
																"example": 306,
																"type": "number"
															},
															"name": {
																"example": "http://example.com/",
																"type": "string"
															},
															"nextHopProtocol": {
																"example": "http/1.1",
																"type": "string"
															},
															"redirectCount": {
																"type": "number"
															},
															"redirectEnd": {
																"type": "number"
															},
															"redirectStart": {
																"type": "number"
															},
															"requestStart": {
																"example": 82.69999998807907,
																"type": "number"
															},
															"responseEnd": {
																"example": 270.8999999910593,
																"type": "number"
															},
															"responseStart": {
																"example": 265.69999998807907,
																"type": "number"
															},
															"secureConnectionStart": {
																"type": "number"
															},
															"startTime": {
																"type": "number"
															},
															"transferSize": {
																"example": 948,
																"type": "number"
															},
															"type": {
																"example": "navigate",
																"type": "string"
															},
															"unloadEventEnd": {
																"type": "number"
															},
															"unloadEventStart": {
																"type": "number"
															},
															"workerStart": {
																"type": "number"
															}
														},
														"required": [
															"name",
															"entryType",
															"startTime",
															"duration",
															"initiatorType",
															"nextHopProtocol",
															"workerStart",
															"redirectStart",
															"redirectEnd",
															"fetchStart",
															"domainLookupStart",
															"domainLookupEnd",
															"connectStart",
															"connectEnd",
															"secureConnectionStart",
															"requestStart",
															"responseStart",
															"responseEnd",
															"transferSize",
															"encodedBodySize",
															"decodedBodySize",
															"unloadEventStart",
															"unloadEventEnd",
															"domInteractive",
															"domContentLoadedEventStart",
															"domContentLoadedEventEnd",
															"domComplete",
															"loadEventStart",
															"loadEventEnd",
															"type",
															"redirectCount"
														],
														"type": "object"
													},
													"type": "array"
												},
												"task": {
													"properties": {
														"clientLocation": {
															"description": "Submitter location",
															"example": "PT",
															"type": "string"
														},
														"clientType": {
															"enum": [
																"Site",
																"Automatic",
																"Api"
															],
															"type": "string"
														},
														"effectiveUrl": {
															"description": "URL of the primary request, after all HTTP redirects",
															"example": "http://example.com/",
															"type": "string"
														},
														"errors": {
															"items": {
																"properties": {
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"message"
																],
																"type": "object"
															},
															"type": "array"
														},
														"scannedFrom": {
															"properties": {
																"colo": {
																	"description": "IATA code of Cloudflare datacenter",
																	"example": "MAD",
																	"type": "string"
																}
															},
															"required": [
																"colo"
															],
															"type": "object"
														},
														"status": {
															"enum": [
																"Queued",
																"InProgress",
																"InPostProcessing",
																"Finished"
															],
															"type": "string"
														},
														"success": {
															"example": true,
															"type": "boolean"
														},
														"time": {
															"example": "2023-05-03T17:05:04.843Z",
															"type": "string"
														},
														"timeEnd": {
															"example": "2023-05-03T17:05:19.374Z",
															"type": "string"
														},
														"url": {
															"description": "Submitted URL",
															"example": "http://example.com",
															"type": "string"
														},
														"uuid": {
															"description": "Scan ID",
															"example": "2ee568d0-bf70-4827-b922-b7088c0f056f",
															"type": "string"
														},
														"visibility": {
															"enum": [
																"Public",
																"Unlisted"
															],
															"type": "string"
														}
													},
													"required": [
														"uuid",
														"url",
														"status",
														"success",
														"errors",
														"time",
														"timeEnd",
														"visibility",
														"clientLocation",
														"clientType",
														"effectiveUrl",
														"scannedFrom"
													],
													"type": "object"
												},
												"verdicts": {
													"properties": {
														"overall": {
															"properties": {
																"categories": {
																	"items": {
																		"properties": {
																			"id": {
																				"example": 117,
																				"type": "number"
																			},
																			"name": {
																				"example": "Malware",
																				"type": "string"
																			},
																			"super_category_id": {
																				"example": 32,
																				"type": "number"
																			}
																		},
																		"required": [
																			"id",
																			"super_category_id",
																			"name"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"malicious": {
																	"description": "At least one of our subsystems marked the site as potentially malicious at the time of the scan.",
																	"example": true,
																	"type": "boolean"
																},
																"phishing": {
																	"items": {
																		"example": "Credential Harvester",
																		"type": "string"
																	},
																	"type": "array"
																}
															},
															"required": [
																"malicious",
																"categories",
																"phishing"
															],
															"type": "object"
														}
													},
													"required": [
														"overall"
													],
													"type": "object"
												}
											},
											"required": [
												"task",
												"meta",
												"page",
												"geo",
												"certificates",
												"performance",
												"verdicts"
											],
											"type": "object"
										}
									},
									"required": [
										"scan"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan has finished. It may or may not have been successful."
			},
			"202": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"example": "In Progress",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"scan": {
											"properties": {
												"task": {
													"properties": {
														"effectiveUrl": {
															"example": "http://example.com/",
															"type": "string"
														},
														"errors": {
															"items": {
																"properties": {
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"message"
																],
																"type": "object"
															},
															"type": "array"
														},
														"location": {
															"example": "PT",
															"type": "string"
														},
														"region": {
															"example": "enam",
															"type": "string"
														},
														"status": {
															"example": "InProgress",
															"type": "string"
														},
														"success": {
															"example": true,
															"type": "boolean"
														},
														"time": {
															"example": "2023-05-03T17:05:04.843Z",
															"type": "string"
														},
														"url": {
															"example": "http://example.com",
															"type": "string"
														},
														"uuid": {
															"example": "2ee568d0-bf70-4827-b922-b7088c0f056f",
															"type": "string"
														},
														"visibility": {
															"example": "Public",
															"type": "string"
														}
													},
													"required": [
														"uuid",
														"url",
														"status",
														"success",
														"errors",
														"time",
														"visibility",
														"location",
														"region",
														"effectiveUrl"
													],
													"type": "object"
												}
											},
											"required": [
												"task"
											],
											"type": "object"
										}
									},
									"required": [
										"scan"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan is in progress. Check current status in `result.scan.task.status`. Possible statuses: `Queued`,`InProgress`,`InPostProcessing`,`Finished`."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan ID is not a valid UUID.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Invalid params."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan not found.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan not found."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get URL scan",
		"tags": [
			"URL Scanner (Deprecated)"
		],
		"x-api-token-group": [
			"URL Scanner Write",
			"URL Scanner Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [V2](https://developers.cloudflare.com/api/resources/url_scanner/subresources/scans/methods/get/) instead."
	},
	"GET /accounts/{account_id}/urlscanner/scan/{scan_id}/har": {
		"deprecated": true,
		"description": "Get a URL scan's HAR file. See HAR spec at http://www.softwareishard.com/blog/har-12-spec/.",
		"operationId": "urlscanner-get-scan-har",
		"parameters": [
			{
				"description": "Scan UUID.",
				"in": "path",
				"name": "scan_id",
				"required": true,
				"schema": {
					"description": "Scan UUID.",
					"format": "uuid",
					"type": "string"
				}
			},
			{
				"description": "Account ID.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account ID.",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Error",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"example": "OK",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"har": {
											"properties": {
												"log": {
													"properties": {
														"creator": {
															"properties": {
																"comment": {
																	"example": "https://github.com/sitespeedio/chrome-har",
																	"type": "string"
																},
																"name": {
																	"example": "chrome-har",
																	"type": "string"
																},
																"version": {
																	"example": "0.13.1",
																	"type": "string"
																}
															},
															"required": [
																"name",
																"version",
																"comment"
															],
															"type": "object"
														},
														"entries": {
															"items": {
																"properties": {
																	"_initialPriority": {
																		"example": "VeryHigh",
																		"type": "string"
																	},
																	"_initiator_type": {
																		"example": "other",
																		"type": "string"
																	},
																	"_priority": {
																		"example": "VeryHigh",
																		"type": "string"
																	},
																	"_requestId": {
																		"example": "DDC779F0CB3746BAF283EC1A51B0F2F8",
																		"type": "string"
																	},
																	"_requestTime": {
																		"example": 114135.331081,
																		"type": "number"
																	},
																	"_resourceType": {
																		"example": "document",
																		"type": "string"
																	},
																	"cache": {
																		"type": "object"
																	},
																	"connection": {
																		"example": "33",
																		"type": "string"
																	},
																	"pageref": {
																		"example": "page_1",
																		"type": "string"
																	},
																	"request": {
																		"properties": {
																			"bodySize": {
																				"type": "number"
																			},
																			"headers": {
																				"items": {
																					"properties": {
																						"name": {
																							"example": "Upgrade-Insecure-Requests",
																							"type": "string"
																						},
																						"value": {
																							"example": "1",
																							"type": "string"
																						}
																					},
																					"required": [
																						"name",
																						"value"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"headersSize": {
																				"example": 197,
																				"type": "number"
																			},
																			"httpVersion": {
																				"example": "http/1.1",
																				"type": "string"
																			},
																			"method": {
																				"example": "GET",
																				"type": "string"
																			},
																			"url": {
																				"example": "http://example.com/",
																				"type": "string"
																			}
																		},
																		"required": [
																			"method",
																			"url",
																			"headersSize",
																			"bodySize",
																			"headers",
																			"httpVersion"
																		],
																		"type": "object"
																	},
																	"response": {
																		"properties": {
																			"_transferSize": {
																				"example": 1071,
																				"type": "number"
																			},
																			"bodySize": {
																				"example": 648,
																				"type": "number"
																			},
																			"content": {
																				"properties": {
																					"compression": {
																						"example": 608,
																						"type": "integer"
																					},
																					"mimeType": {
																						"example": "text/html",
																						"type": "string"
																					},
																					"size": {
																						"example": 1256,
																						"type": "number"
																					}
																				},
																				"required": [
																					"mimeType",
																					"size"
																				],
																				"type": "object"
																			},
																			"headers": {
																				"items": {
																					"properties": {
																						"name": {
																							"example": "Content-Encoding",
																							"type": "string"
																						},
																						"value": {
																							"example": "gzip",
																							"type": "string"
																						}
																					},
																					"required": [
																						"name",
																						"value"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"headersSize": {
																				"example": 423,
																				"type": "number"
																			},
																			"httpVersion": {
																				"example": "http/1.1",
																				"type": "string"
																			},
																			"redirectURL": {
																				"type": "string"
																			},
																			"status": {
																				"example": 200,
																				"type": "number"
																			},
																			"statusText": {
																				"example": "OK",
																				"type": "string"
																			}
																		},
																		"required": [
																			"httpVersion",
																			"redirectURL",
																			"status",
																			"statusText",
																			"content",
																			"headersSize",
																			"bodySize",
																			"headers",
																			"_transferSize"
																		],
																		"type": "object"
																	},
																	"serverIPAddress": {
																		"example": "2606:2800:220:1:248:1893:25c8:1946",
																		"type": "string"
																	},
																	"startedDateTime": {
																		"example": "2023-05-03T17:05:13.196Z",
																		"type": "string"
																	},
																	"time": {
																		"example": 268.64,
																		"type": "number"
																	}
																},
																"required": [
																	"cache",
																	"startedDateTime",
																	"_requestId",
																	"_initialPriority",
																	"_priority",
																	"pageref",
																	"request",
																	"time",
																	"_initiator_type",
																	"_resourceType",
																	"response",
																	"connection",
																	"serverIPAddress",
																	"_requestTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"pages": {
															"items": {
																"properties": {
																	"id": {
																		"example": "page_1",
																		"type": "string"
																	},
																	"pageTimings": {
																		"properties": {
																			"onContentLoad": {
																				"example": 305.408,
																				"type": "number"
																			},
																			"onLoad": {
																				"example": 305.169,
																				"type": "number"
																			}
																		},
																		"required": [
																			"onLoad",
																			"onContentLoad"
																		],
																		"type": "object"
																	},
																	"startedDateTime": {
																		"example": "2023-05-03T17:05:13.195Z",
																		"type": "string"
																	},
																	"title": {
																		"example": "http://example.com/",
																		"type": "string"
																	}
																},
																"required": [
																	"id",
																	"startedDateTime",
																	"title",
																	"pageTimings"
																],
																"type": "object"
															},
															"type": "array"
														},
														"version": {
															"example": "1.2",
															"type": "string"
														}
													},
													"required": [
														"version",
														"creator",
														"pages",
														"entries"
													],
													"type": "object"
												}
											},
											"required": [
												"log"
											],
											"type": "object"
										}
									},
									"required": [
										"har"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether search request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Returns the scan's har."
			},
			"202": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"example": "In Progress",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"scan": {
											"properties": {
												"task": {
													"properties": {
														"effectiveUrl": {
															"example": "http://example.com/",
															"type": "string"
														},
														"errors": {
															"items": {
																"properties": {
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"message"
																],
																"type": "object"
															},
															"type": "array"
														},
														"location": {
															"example": "PT",
															"type": "string"
														},
														"region": {
															"example": "enam",
															"type": "string"
														},
														"status": {
															"example": "InProgress",
															"type": "string"
														},
														"success": {
															"example": true,
															"type": "boolean"
														},
														"time": {
															"example": "2023-05-03T17:05:04.843Z",
															"type": "string"
														},
														"url": {
															"example": "http://example.com",
															"type": "string"
														},
														"uuid": {
															"example": "2ee568d0-bf70-4827-b922-b7088c0f056f",
															"type": "string"
														},
														"visibility": {
															"example": "Public",
															"type": "string"
														}
													},
													"required": [
														"uuid",
														"url",
														"status",
														"success",
														"errors",
														"time",
														"visibility",
														"location",
														"region",
														"effectiveUrl"
													],
													"type": "object"
												}
											},
											"required": [
												"task"
											],
											"type": "object"
										}
									},
									"required": [
										"scan"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan is in progress. Check current status in `result.scan.task.status`. Possible statuses: `Queued`,`InProgress`,`InPostProcessing`,`Finished`."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan ID is not a valid UUID.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Invalid params."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan not found.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan not found."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get URL scan's HAR",
		"tags": [
			"URL Scanner (Deprecated)"
		],
		"x-api-token-group": [
			"URL Scanner Write",
			"URL Scanner Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [V2](https://developers.cloudflare.com/api/resources/url_scanner/subresources/scans/methods/har/) instead."
	},
	"GET /accounts/{account_id}/urlscanner/scan/{scan_id}/screenshot": {
		"deprecated": true,
		"description": "Get scan's screenshot by resolution (desktop/mobile/tablet).",
		"operationId": "urlscanner-get-scan-screenshot",
		"parameters": [
			{
				"description": "Scan UUID.",
				"in": "path",
				"name": "scan_id",
				"required": true,
				"schema": {
					"description": "Scan UUID.",
					"format": "uuid",
					"type": "string"
				}
			},
			{
				"description": "Account ID.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account ID.",
					"type": "string"
				}
			},
			{
				"description": "Target device type.",
				"in": "query",
				"name": "resolution",
				"schema": {
					"default": "desktop",
					"description": "Target device type.",
					"enum": [
						"desktop",
						"mobile",
						"tablet"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"image/png": {
						"schema": {
							"description": "PNG Image.",
							"type": "string"
						}
					}
				},
				"description": "Returns the scan's requested screenshot."
			},
			"202": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"example": "In Progress",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"scan": {
											"properties": {
												"task": {
													"properties": {
														"effectiveUrl": {
															"example": "http://example.com/",
															"type": "string"
														},
														"errors": {
															"items": {
																"properties": {
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"message"
																],
																"type": "object"
															},
															"type": "array"
														},
														"location": {
															"example": "PT",
															"type": "string"
														},
														"region": {
															"example": "enam",
															"type": "string"
														},
														"status": {
															"example": "InProgress",
															"type": "string"
														},
														"success": {
															"example": true,
															"type": "boolean"
														},
														"time": {
															"example": "2023-05-03T17:05:04.843Z",
															"type": "string"
														},
														"url": {
															"example": "http://example.com",
															"type": "string"
														},
														"uuid": {
															"example": "2ee568d0-bf70-4827-b922-b7088c0f056f",
															"type": "string"
														},
														"visibility": {
															"example": "Public",
															"type": "string"
														}
													},
													"required": [
														"uuid",
														"url",
														"status",
														"success",
														"errors",
														"time",
														"visibility",
														"location",
														"region",
														"effectiveUrl"
													],
													"type": "object"
												}
											},
											"required": [
												"task"
											],
											"type": "object"
										}
									},
									"required": [
										"scan"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan is in progress. Check current status in `result.scan.task.status`. Possible statuses: `Queued`,`InProgress`,`InPostProcessing`,`Finished`."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan ID is not a valid UUID.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Invalid params."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan not found.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan not found."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get screenshot",
		"tags": [
			"URL Scanner (Deprecated)"
		],
		"x-api-token-group": [
			"URL Scanner Write",
			"URL Scanner Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [V2](https://developers.cloudflare.com/api/resources/url_scanner/subresources/scans/methods/screenshot/) instead."
	},
	"POST /accounts/{account_id}/urlscanner/scan": {
		"deprecated": true,
		"description": "Submit a URL to scan. You can also set some options, like the visibility level and custom headers. Check limits at https://developers.cloudflare.com/security-center/investigate/scan-limits/.",
		"operationId": "urlscanner-create-scan",
		"parameters": [
			{
				"description": "Account ID.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account ID.",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"country": {
								"description": "Country to geo egress from",
								"enum": [
									"AF",
									"AL",
									"DZ",
									"AD",
									"AO",
									"AG",
									"AR",
									"AM",
									"AU",
									"AT",
									"AZ",
									"BH",
									"BD",
									"BB",
									"BY",
									"BE",
									"BZ",
									"BJ",
									"BM",
									"BT",
									"BO",
									"BA",
									"BW",
									"BR",
									"BN",
									"BG",
									"BF",
									"BI",
									"KH",
									"CM",
									"CA",
									"CV",
									"KY",
									"CF",
									"TD",
									"CL",
									"CN",
									"CO",
									"KM",
									"CG",
									"CR",
									"CI",
									"HR",
									"CU",
									"CY",
									"CZ",
									"CD",
									"DK",
									"DJ",
									"DM",
									"DO",
									"EC",
									"EG",
									"SV",
									"GQ",
									"ER",
									"EE",
									"SZ",
									"ET",
									"FJ",
									"FI",
									"FR",
									"GA",
									"GE",
									"DE",
									"GH",
									"GR",
									"GL",
									"GD",
									"GT",
									"GN",
									"GW",
									"GY",
									"HT",
									"HN",
									"HU",
									"IS",
									"IN",
									"ID",
									"IR",
									"IQ",
									"IE",
									"IL",
									"IT",
									"JM",
									"JP",
									"JO",
									"KZ",
									"KE",
									"KI",
									"KW",
									"KG",
									"LA",
									"LV",
									"LB",
									"LS",
									"LR",
									"LY",
									"LI",
									"LT",
									"LU",
									"MO",
									"MG",
									"MW",
									"MY",
									"MV",
									"ML",
									"MR",
									"MU",
									"MX",
									"FM",
									"MD",
									"MC",
									"MN",
									"MS",
									"MA",
									"MZ",
									"MM",
									"NA",
									"NR",
									"NP",
									"NL",
									"NZ",
									"NI",
									"NE",
									"NG",
									"KP",
									"MK",
									"NO",
									"OM",
									"PK",
									"PS",
									"PA",
									"PG",
									"PY",
									"PE",
									"PH",
									"PL",
									"PT",
									"QA",
									"RO",
									"RU",
									"RW",
									"SH",
									"KN",
									"LC",
									"VC",
									"WS",
									"SM",
									"ST",
									"SA",
									"SN",
									"RS",
									"SC",
									"SL",
									"SK",
									"SI",
									"SB",
									"SO",
									"ZA",
									"KR",
									"SS",
									"ES",
									"LK",
									"SD",
									"SR",
									"SE",
									"CH",
									"SY",
									"TW",
									"TJ",
									"TZ",
									"TH",
									"BS",
									"GM",
									"TL",
									"TG",
									"TO",
									"TT",
									"TN",
									"TR",
									"TM",
									"UG",
									"UA",
									"AE",
									"GB",
									"US",
									"UY",
									"UZ",
									"VU",
									"VE",
									"VN",
									"YE",
									"ZM",
									"ZW"
								],
								"type": "string"
							},
							"customHeaders": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "Set custom headers.",
								"type": "object"
							},
							"screenshotsResolutions": {
								"default": [
									"desktop"
								],
								"description": "Take multiple screenshots targeting different device types.",
								"items": {
									"default": "desktop",
									"description": "Device resolutions.",
									"enum": [
										"desktop",
										"mobile",
										"tablet"
									],
									"type": "string"
								},
								"type": "array"
							},
							"url": {
								"example": "https://www.example.com",
								"type": "string"
							},
							"visibility": {
								"default": "Public",
								"description": "The option `Public` means it will be included in listings like recent scans and search results. `Unlisted` means it will not be included in the aforementioned listings, users will need to have the scan's ID to access it. A a scan will be automatically marked as unlisted if it fails, if it contains potential PII or other sensitive material.",
								"enum": [
									"Public",
									"Unlisted"
								],
								"type": "string"
							}
						},
						"required": [
							"url"
						],
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Submission unsuccessful",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"example": "Submission successful",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"time": {
											"description": "Time when url was submitted for scanning.",
											"format": "date-time",
											"type": "string"
										},
										"url": {
											"description": "Canonical form of submitted URL. Use this if you want to later search by URL.",
											"type": "string"
										},
										"uuid": {
											"description": "Scan ID.",
											"format": "uuid",
											"type": "string"
										},
										"visibility": {
											"description": "Submitted visibility status.",
											"enum": [
												"public",
												"unlisted"
											],
											"example": "public",
											"type": "string"
										}
									},
									"required": [
										"visibility",
										"uuid",
										"url",
										"time"
									],
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan request accepted successfully."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Scan ID is not a valid UUID.",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"description": "Whether request was successful or not",
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Invalid params."
			},
			"409": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Submission unsuccessful",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"tasks": {
											"items": {
												"properties": {
													"clientLocation": {
														"description": "Submitter location",
														"example": "PT",
														"type": "string"
													},
													"clientType": {
														"enum": [
															"Site",
															"Automatic",
															"Api"
														],
														"type": "string"
													},
													"effectiveUrl": {
														"description": "URL of the primary request, after all HTTP redirects",
														"example": "http://example.com/",
														"type": "string"
													},
													"errors": {
														"items": {
															"properties": {
																"message": {
																	"type": "string"
																}
															},
															"required": [
																"message"
															],
															"type": "object"
														},
														"type": "array"
													},
													"scannedFrom": {
														"properties": {
															"colo": {
																"description": "IATA code of Cloudflare datacenter",
																"example": "MAD",
																"type": "string"
															}
														},
														"required": [
															"colo"
														],
														"type": "object"
													},
													"status": {
														"enum": [
															"Queued",
															"InProgress",
															"InPostProcessing",
															"Finished"
														],
														"type": "string"
													},
													"success": {
														"example": true,
														"type": "boolean"
													},
													"time": {
														"example": "2023-05-03T17:05:04.843Z",
														"type": "string"
													},
													"timeEnd": {
														"example": "2023-05-03T17:05:19.374Z",
														"type": "string"
													},
													"url": {
														"description": "Submitted URL",
														"example": "http://example.com",
														"type": "string"
													},
													"uuid": {
														"description": "Scan ID",
														"example": "2ee568d0-bf70-4827-b922-b7088c0f056f",
														"type": "string"
													},
													"visibility": {
														"enum": [
															"Public",
															"Unlisted"
														],
														"type": "string"
													}
												},
												"required": [
													"uuid",
													"url",
													"status",
													"success",
													"errors",
													"time",
													"timeEnd",
													"visibility",
													"clientLocation",
													"clientType",
													"effectiveUrl",
													"scannedFrom"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"tasks"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan request denied: hostname was recently scanned."
			},
			"429": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"example": "Submission unsuccessful",
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"errors",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Scan request denied: rate limited."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create URL Scan",
		"tags": [
			"URL Scanner (Deprecated)"
		],
		"x-api-token-group": [
			"URL Scanner Write",
			"URL Scanner Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [V2](https://developers.cloudflare.com/api/resources/url_scanner/subresources/scans/methods/create/) instead."
	}
}