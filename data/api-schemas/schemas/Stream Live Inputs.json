{
	"DELETE /accounts/{account_id}/stream/live_inputs/{live_input_identifier}": {
		"description": "Prevents a live input from being streamed to and makes the live input inaccessible to any future API calls.",
		"operationId": "stream-live-inputs-delete-a-live-input",
		"parameters": [
			{
				"in": "path",
				"name": "live_input_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for a live input.",
					"example": "66be4bf738797e01e1fca35a7bdecdcd",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {}
				},
				"description": "Delete a live input response."
			},
			"4XX": {
				"content": {
					"application/json": {}
				},
				"description": "Delete a live input response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete a live input",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	},
	"DELETE /accounts/{account_id}/stream/live_inputs/{live_input_identifier}/outputs/{output_identifier}": {
		"description": "Deletes an output and removes it from the associated live input.",
		"operationId": "stream-live-inputs-delete-an-output",
		"parameters": [
			{
				"in": "path",
				"name": "output_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for the output.",
					"example": "baea4d9c515887b80289d5c33cf01145",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "live_input_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for a live input.",
					"example": "66be4bf738797e01e1fca35a7bdecdcd",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {}
				},
				"description": "Delete an output response."
			},
			"4XX": {
				"content": {
					"application/json": {}
				},
				"description": "Delete an output response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete an output",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	},
	"GET /accounts/{account_id}/stream/live_inputs": {
		"description": "Lists the live inputs created for an account. To get the credentials needed to stream to a specific live input, request a single live input.",
		"operationId": "stream-live-inputs-list-live-inputs",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "include_counts",
				"schema": {
					"default": false,
					"description": "Includes the total number of videos associated with the submitted query parameters.",
					"example": true,
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"liveInputs": {
													"items": {
														"properties": {
															"created": {
																"description": "The date and time the live input was created.",
																"example": "2014-01-02T02:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"deleteRecordingAfterDays": {
																"description": "Indicates the number of days after which the live inputs recordings will be deleted. When a stream completes and the recording is ready, the value is used to calculate a scheduled deletion date for that recording. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion.",
																"example": 45,
																"minimum": 30,
																"type": "number",
																"x-auditable": true
															},
															"meta": {
																"description": "A user modifiable key-value store used to reference other systems of record for managing live inputs.",
																"example": {
																	"name": "test stream 1"
																},
																"type": "object"
															},
															"modified": {
																"description": "The date and time the live input was last modified.",
																"example": "2014-01-02T02:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"uid": {
																"description": "A unique identifier for a live input.",
																"example": "66be4bf738797e01e1fca35a7bdecdcd",
																"maxLength": 32,
																"type": "string",
																"x-auditable": true
															}
														}
													},
													"type": "array"
												},
												"range": {
													"description": "The total number of remaining live inputs based on cursor position.",
													"example": 1000,
													"type": "integer"
												},
												"total": {
													"description": "The total number of live inputs that match the provided filters.",
													"example": 35586,
													"type": "integer"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List live inputs response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List live inputs response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List live inputs",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write",
			"Stream Read"
		]
	},
	"GET /accounts/{account_id}/stream/live_inputs/{live_input_identifier}": {
		"description": "Retrieves details of an existing live input.",
		"operationId": "stream-live-inputs-retrieve-a-live-input",
		"parameters": [
			{
				"in": "path",
				"name": "live_input_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for a live input.",
					"example": "66be4bf738797e01e1fca35a7bdecdcd",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Details about a live input.",
											"properties": {
												"created": {
													"description": "The date and time the live input was created.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"deleteRecordingAfterDays": {
													"description": "Indicates the number of days after which the live inputs recordings will be deleted. When a stream completes and the recording is ready, the value is used to calculate a scheduled deletion date for that recording. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion.",
													"example": 45,
													"minimum": 30,
													"type": "number",
													"x-auditable": true
												},
												"meta": {
													"description": "A user modifiable key-value store used to reference other systems of record for managing live inputs.",
													"example": {
														"name": "test stream 1"
													},
													"type": "object"
												},
												"modified": {
													"description": "The date and time the live input was last modified.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"recording": {
													"description": "Records the input to a Cloudflare Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.",
													"example": {
														"hideLiveViewerCount": false,
														"mode": "off",
														"requireSignedURLs": false,
														"timeoutSeconds": 0
													},
													"properties": {
														"allowedOrigins": {
															"description": "Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. An empty array allows videos to be viewed on any origin.",
															"example": [
																"example.com"
															],
															"items": {
																"type": "string",
																"x-auditable": true
															},
															"type": "array"
														},
														"hideLiveViewerCount": {
															"default": false,
															"description": "Disables reporting the number of live viewers when this property is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"mode": {
															"default": "off",
															"description": "Specifies the recording behavior for the live input. Set this value to `off` to prevent a recording. Set the value to `automatic` to begin a recording and transition to on-demand after Stream Live stops receiving input.",
															"enum": [
																"off",
																"automatic"
															],
															"example": "automatic",
															"type": "string",
															"x-auditable": true
														},
														"requireSignedURLs": {
															"default": false,
															"description": "Indicates if a video using the live input has the `requireSignedURLs` property set. Also enforces access controls on any video recording of the livestream with the live input.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"timeoutSeconds": {
															"default": 0,
															"description": "Determines the amount of time a live input configured in `automatic` mode should wait before a recording transitions from live to on-demand. `0` is recommended for most use cases and indicates the platform default should be used.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"rtmps": {
													"description": "Details for streaming to an live input using RTMPS.",
													"properties": {
														"streamKey": {
															"description": "The secret key to use when streaming via RTMPS to a live input.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"url": {
															"description": "The RTMPS URL you provide to the broadcaster, which they stream live video to.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"rtmpsPlayback": {
													"description": "Details for playback from an live input using RTMPS.",
													"properties": {
														"streamKey": {
															"description": "The secret key to use for playback via RTMPS.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"url": {
															"description": "The URL used to play live video over RTMPS.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"srt": {
													"description": "Details for streaming to a live input using SRT.",
													"properties": {
														"passphrase": {
															"description": "The secret key to use when streaming via SRT to a live input.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"streamId": {
															"description": "The identifier of the live input to use when streaming via SRT.",
															"example": "f256e6ea9341d51eea64c9454659e576",
															"type": "string",
															"x-auditable": true
														},
														"url": {
															"description": "The SRT URL you provide to the broadcaster, which they stream live video to.",
															"example": "srt://live.cloudflare.com:778",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"srtPlayback": {
													"description": "Details for playback from an live input using SRT.",
													"properties": {
														"passphrase": {
															"description": "The secret key to use for playback via SRT.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"streamId": {
															"description": "The identifier of the live input to use for playback via SRT.",
															"example": "f256e6ea9341d51eea64c9454659e576",
															"type": "string",
															"x-auditable": true
														},
														"url": {
															"description": "The URL used to play live video over SRT.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"status": {
													"description": "The connection status of a live input.",
													"enum": [
														null,
														"connected",
														"reconnected",
														"reconnecting",
														"client_disconnect",
														"ttl_exceeded",
														"failed_to_connect",
														"failed_to_reconnect",
														"new_configuration_accepted"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"uid": {
													"description": "A unique identifier for a live input.",
													"example": "66be4bf738797e01e1fca35a7bdecdcd",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"webRTC": {
													"description": "Details for streaming to a live input using WebRTC.",
													"properties": {
														"url": {
															"description": "The WebRTC URL you provide to the broadcaster, which they stream live video to.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/b236bde30eb07b9d01318940e5fc3edake34a3efb3896e18f2dc277ce6cc993ad/webRTC/publish",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"webRTCPlayback": {
													"description": "Details for playback from a live input using WebRTC.",
													"properties": {
														"url": {
															"description": "The URL used to play live video over WebRTC.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/b236bde30eb07b9d01318940e5fc3edake34a3efb3896e18f2dc277ce6cc993ad/webRTC/play",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Retrieve a live input response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Retrieve a live input response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Retrieve a live input",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write",
			"Stream Read"
		]
	},
	"GET /accounts/{account_id}/stream/live_inputs/{live_input_identifier}/outputs": {
		"description": "Retrieves all outputs associated with a specified live input.",
		"operationId": "stream-live-inputs-list-all-outputs-associated-with-a-specified-live-input",
		"parameters": [
			{
				"in": "path",
				"name": "live_input_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for a live input.",
					"example": "66be4bf738797e01e1fca35a7bdecdcd",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"enabled": {
														"default": true,
														"description": "When enabled, live video streamed to the associated live input will be sent to the output URL. When disabled, live video will not be sent to the output URL, even when streaming to the associated live input. Use this to control precisely when you start and stop simulcasting to specific destinations like YouTube and Twitch.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"streamKey": {
														"description": "The streamKey used to authenticate against an output's target.",
														"example": "uzya-f19y-g2g9-a2ee-51j2",
														"type": "string",
														"x-sensitive": true
													},
													"uid": {
														"description": "A unique identifier for the output.",
														"example": "baea4d9c515887b80289d5c33cf01145",
														"maxLength": 32,
														"type": "string",
														"x-auditable": true
													},
													"url": {
														"description": "The URL an output uses to restream.",
														"example": "rtmp://a.rtmp.youtube.com/live2",
														"type": "string",
														"x-sensitive": true
													}
												}
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List all outputs associated with a specified live input response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List all outputs associated with a specified live input response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List all outputs associated with a specified live input",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write",
			"Stream Read"
		]
	},
	"POST /accounts/{account_id}/stream/live_inputs": {
		"description": "Creates a live input, and returns credentials that you or your users can use to stream live video to Cloudflare Stream.",
		"operationId": "stream-live-inputs-create-a-live-input",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"defaultCreator": {
								"description": "Sets the creator ID asssociated with this live input.",
								"type": "string",
								"x-auditable": true
							},
							"deleteRecordingAfterDays": {
								"description": "Indicates the number of days after which the live inputs recordings will be deleted. When a stream completes and the recording is ready, the value is used to calculate a scheduled deletion date for that recording. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion.",
								"example": 45,
								"minimum": 30,
								"type": "number",
								"x-auditable": true
							},
							"meta": {
								"description": "A user modifiable key-value store used to reference other systems of record for managing live inputs.",
								"example": {
									"name": "test stream 1"
								},
								"type": "object"
							},
							"recording": {
								"description": "Records the input to a Cloudflare Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.",
								"example": {
									"hideLiveViewerCount": false,
									"mode": "off",
									"requireSignedURLs": false,
									"timeoutSeconds": 0
								},
								"properties": {
									"allowedOrigins": {
										"description": "Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. An empty array allows videos to be viewed on any origin.",
										"example": [
											"example.com"
										],
										"items": {
											"type": "string",
											"x-auditable": true
										},
										"type": "array"
									},
									"hideLiveViewerCount": {
										"default": false,
										"description": "Disables reporting the number of live viewers when this property is set to `true`.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"mode": {
										"default": "off",
										"description": "Specifies the recording behavior for the live input. Set this value to `off` to prevent a recording. Set the value to `automatic` to begin a recording and transition to on-demand after Stream Live stops receiving input.",
										"enum": [
											"off",
											"automatic"
										],
										"example": "automatic",
										"type": "string",
										"x-auditable": true
									},
									"requireSignedURLs": {
										"default": false,
										"description": "Indicates if a video using the live input has the `requireSignedURLs` property set. Also enforces access controls on any video recording of the livestream with the live input.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"timeoutSeconds": {
										"default": 0,
										"description": "Determines the amount of time a live input configured in `automatic` mode should wait before a recording transitions from live to on-demand. `0` is recommended for most use cases and indicates the platform default should be used.",
										"type": "integer",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Details about a live input.",
											"properties": {
												"created": {
													"description": "The date and time the live input was created.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"deleteRecordingAfterDays": {
													"description": "Indicates the number of days after which the live inputs recordings will be deleted. When a stream completes and the recording is ready, the value is used to calculate a scheduled deletion date for that recording. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion.",
													"example": 45,
													"minimum": 30,
													"type": "number",
													"x-auditable": true
												},
												"meta": {
													"description": "A user modifiable key-value store used to reference other systems of record for managing live inputs.",
													"example": {
														"name": "test stream 1"
													},
													"type": "object"
												},
												"modified": {
													"description": "The date and time the live input was last modified.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"recording": {
													"description": "Records the input to a Cloudflare Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.",
													"example": {
														"hideLiveViewerCount": false,
														"mode": "off",
														"requireSignedURLs": false,
														"timeoutSeconds": 0
													},
													"properties": {
														"allowedOrigins": {
															"description": "Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. An empty array allows videos to be viewed on any origin.",
															"example": [
																"example.com"
															],
															"items": {
																"type": "string",
																"x-auditable": true
															},
															"type": "array"
														},
														"hideLiveViewerCount": {
															"default": false,
															"description": "Disables reporting the number of live viewers when this property is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"mode": {
															"default": "off",
															"description": "Specifies the recording behavior for the live input. Set this value to `off` to prevent a recording. Set the value to `automatic` to begin a recording and transition to on-demand after Stream Live stops receiving input.",
															"enum": [
																"off",
																"automatic"
															],
															"example": "automatic",
															"type": "string",
															"x-auditable": true
														},
														"requireSignedURLs": {
															"default": false,
															"description": "Indicates if a video using the live input has the `requireSignedURLs` property set. Also enforces access controls on any video recording of the livestream with the live input.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"timeoutSeconds": {
															"default": 0,
															"description": "Determines the amount of time a live input configured in `automatic` mode should wait before a recording transitions from live to on-demand. `0` is recommended for most use cases and indicates the platform default should be used.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"rtmps": {
													"description": "Details for streaming to an live input using RTMPS.",
													"properties": {
														"streamKey": {
															"description": "The secret key to use when streaming via RTMPS to a live input.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"url": {
															"description": "The RTMPS URL you provide to the broadcaster, which they stream live video to.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"rtmpsPlayback": {
													"description": "Details for playback from an live input using RTMPS.",
													"properties": {
														"streamKey": {
															"description": "The secret key to use for playback via RTMPS.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"url": {
															"description": "The URL used to play live video over RTMPS.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"srt": {
													"description": "Details for streaming to a live input using SRT.",
													"properties": {
														"passphrase": {
															"description": "The secret key to use when streaming via SRT to a live input.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"streamId": {
															"description": "The identifier of the live input to use when streaming via SRT.",
															"example": "f256e6ea9341d51eea64c9454659e576",
															"type": "string",
															"x-auditable": true
														},
														"url": {
															"description": "The SRT URL you provide to the broadcaster, which they stream live video to.",
															"example": "srt://live.cloudflare.com:778",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"srtPlayback": {
													"description": "Details for playback from an live input using SRT.",
													"properties": {
														"passphrase": {
															"description": "The secret key to use for playback via SRT.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"streamId": {
															"description": "The identifier of the live input to use for playback via SRT.",
															"example": "f256e6ea9341d51eea64c9454659e576",
															"type": "string",
															"x-auditable": true
														},
														"url": {
															"description": "The URL used to play live video over SRT.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"status": {
													"description": "The connection status of a live input.",
													"enum": [
														null,
														"connected",
														"reconnected",
														"reconnecting",
														"client_disconnect",
														"ttl_exceeded",
														"failed_to_connect",
														"failed_to_reconnect",
														"new_configuration_accepted"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"uid": {
													"description": "A unique identifier for a live input.",
													"example": "66be4bf738797e01e1fca35a7bdecdcd",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"webRTC": {
													"description": "Details for streaming to a live input using WebRTC.",
													"properties": {
														"url": {
															"description": "The WebRTC URL you provide to the broadcaster, which they stream live video to.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/b236bde30eb07b9d01318940e5fc3edake34a3efb3896e18f2dc277ce6cc993ad/webRTC/publish",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"webRTCPlayback": {
													"description": "Details for playback from a live input using WebRTC.",
													"properties": {
														"url": {
															"description": "The URL used to play live video over WebRTC.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/b236bde30eb07b9d01318940e5fc3edake34a3efb3896e18f2dc277ce6cc993ad/webRTC/play",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a live input response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create a live input response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a live input",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	},
	"POST /accounts/{account_id}/stream/live_inputs/{live_input_identifier}/outputs": {
		"description": "Creates a new output that can be used to simulcast or restream live video to other RTMP or SRT destinations. Outputs are always linked to a specific live input — one live input can have many outputs.",
		"operationId": "stream-live-inputs-create-a-new-output,-connected-to-a-live-input",
		"parameters": [
			{
				"in": "path",
				"name": "live_input_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for a live input.",
					"example": "66be4bf738797e01e1fca35a7bdecdcd",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"enabled": {
								"default": true,
								"description": "When enabled, live video streamed to the associated live input will be sent to the output URL. When disabled, live video will not be sent to the output URL, even when streaming to the associated live input. Use this to control precisely when you start and stop simulcasting to specific destinations like YouTube and Twitch.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"streamKey": {
								"description": "The streamKey used to authenticate against an output's target.",
								"example": "uzya-f19y-g2g9-a2ee-51j2",
								"type": "string",
								"x-sensitive": true
							},
							"url": {
								"description": "The URL an output uses to restream.",
								"example": "rtmp://a.rtmp.youtube.com/live2",
								"type": "string",
								"x-sensitive": true
							}
						},
						"required": [
							"url",
							"streamKey"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"enabled": {
													"default": true,
													"description": "When enabled, live video streamed to the associated live input will be sent to the output URL. When disabled, live video will not be sent to the output URL, even when streaming to the associated live input. Use this to control precisely when you start and stop simulcasting to specific destinations like YouTube and Twitch.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"streamKey": {
													"description": "The streamKey used to authenticate against an output's target.",
													"example": "uzya-f19y-g2g9-a2ee-51j2",
													"type": "string",
													"x-sensitive": true
												},
												"uid": {
													"description": "A unique identifier for the output.",
													"example": "baea4d9c515887b80289d5c33cf01145",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"url": {
													"description": "The URL an output uses to restream.",
													"example": "rtmp://a.rtmp.youtube.com/live2",
													"type": "string",
													"x-sensitive": true
												}
											}
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a new output, connected to a live input response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create a new output, connected to a live input response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a new output, connected to a live input",
		"tags": [
			"Stream Live Inputs"
		]
	},
	"PUT /accounts/{account_id}/stream/live_inputs/{live_input_identifier}": {
		"description": "Updates a specified live input.",
		"operationId": "stream-live-inputs-update-a-live-input",
		"parameters": [
			{
				"in": "path",
				"name": "live_input_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for a live input.",
					"example": "66be4bf738797e01e1fca35a7bdecdcd",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"defaultCreator": {
								"description": "Sets the creator ID asssociated with this live input.",
								"type": "string",
								"x-auditable": true
							},
							"deleteRecordingAfterDays": {
								"description": "Indicates the number of days after which the live inputs recordings will be deleted. When a stream completes and the recording is ready, the value is used to calculate a scheduled deletion date for that recording. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion.",
								"example": 45,
								"minimum": 30,
								"type": "number",
								"x-auditable": true
							},
							"meta": {
								"description": "A user modifiable key-value store used to reference other systems of record for managing live inputs.",
								"example": {
									"name": "test stream 1"
								},
								"type": "object"
							},
							"recording": {
								"description": "Records the input to a Cloudflare Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.",
								"example": {
									"hideLiveViewerCount": false,
									"mode": "off",
									"requireSignedURLs": false,
									"timeoutSeconds": 0
								},
								"properties": {
									"allowedOrigins": {
										"description": "Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. An empty array allows videos to be viewed on any origin.",
										"example": [
											"example.com"
										],
										"items": {
											"type": "string",
											"x-auditable": true
										},
										"type": "array"
									},
									"hideLiveViewerCount": {
										"default": false,
										"description": "Disables reporting the number of live viewers when this property is set to `true`.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"mode": {
										"default": "off",
										"description": "Specifies the recording behavior for the live input. Set this value to `off` to prevent a recording. Set the value to `automatic` to begin a recording and transition to on-demand after Stream Live stops receiving input.",
										"enum": [
											"off",
											"automatic"
										],
										"example": "automatic",
										"type": "string",
										"x-auditable": true
									},
									"requireSignedURLs": {
										"default": false,
										"description": "Indicates if a video using the live input has the `requireSignedURLs` property set. Also enforces access controls on any video recording of the livestream with the live input.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"timeoutSeconds": {
										"default": 0,
										"description": "Determines the amount of time a live input configured in `automatic` mode should wait before a recording transitions from live to on-demand. `0` is recommended for most use cases and indicates the platform default should be used.",
										"type": "integer",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Details about a live input.",
											"properties": {
												"created": {
													"description": "The date and time the live input was created.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"deleteRecordingAfterDays": {
													"description": "Indicates the number of days after which the live inputs recordings will be deleted. When a stream completes and the recording is ready, the value is used to calculate a scheduled deletion date for that recording. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion.",
													"example": 45,
													"minimum": 30,
													"type": "number",
													"x-auditable": true
												},
												"meta": {
													"description": "A user modifiable key-value store used to reference other systems of record for managing live inputs.",
													"example": {
														"name": "test stream 1"
													},
													"type": "object"
												},
												"modified": {
													"description": "The date and time the live input was last modified.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"recording": {
													"description": "Records the input to a Cloudflare Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.",
													"example": {
														"hideLiveViewerCount": false,
														"mode": "off",
														"requireSignedURLs": false,
														"timeoutSeconds": 0
													},
													"properties": {
														"allowedOrigins": {
															"description": "Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. An empty array allows videos to be viewed on any origin.",
															"example": [
																"example.com"
															],
															"items": {
																"type": "string",
																"x-auditable": true
															},
															"type": "array"
														},
														"hideLiveViewerCount": {
															"default": false,
															"description": "Disables reporting the number of live viewers when this property is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"mode": {
															"default": "off",
															"description": "Specifies the recording behavior for the live input. Set this value to `off` to prevent a recording. Set the value to `automatic` to begin a recording and transition to on-demand after Stream Live stops receiving input.",
															"enum": [
																"off",
																"automatic"
															],
															"example": "automatic",
															"type": "string",
															"x-auditable": true
														},
														"requireSignedURLs": {
															"default": false,
															"description": "Indicates if a video using the live input has the `requireSignedURLs` property set. Also enforces access controls on any video recording of the livestream with the live input.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"timeoutSeconds": {
															"default": 0,
															"description": "Determines the amount of time a live input configured in `automatic` mode should wait before a recording transitions from live to on-demand. `0` is recommended for most use cases and indicates the platform default should be used.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"rtmps": {
													"description": "Details for streaming to an live input using RTMPS.",
													"properties": {
														"streamKey": {
															"description": "The secret key to use when streaming via RTMPS to a live input.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"url": {
															"description": "The RTMPS URL you provide to the broadcaster, which they stream live video to.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"rtmpsPlayback": {
													"description": "Details for playback from an live input using RTMPS.",
													"properties": {
														"streamKey": {
															"description": "The secret key to use for playback via RTMPS.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"url": {
															"description": "The URL used to play live video over RTMPS.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"srt": {
													"description": "Details for streaming to a live input using SRT.",
													"properties": {
														"passphrase": {
															"description": "The secret key to use when streaming via SRT to a live input.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"streamId": {
															"description": "The identifier of the live input to use when streaming via SRT.",
															"example": "f256e6ea9341d51eea64c9454659e576",
															"type": "string",
															"x-auditable": true
														},
														"url": {
															"description": "The SRT URL you provide to the broadcaster, which they stream live video to.",
															"example": "srt://live.cloudflare.com:778",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"srtPlayback": {
													"description": "Details for playback from an live input using SRT.",
													"properties": {
														"passphrase": {
															"description": "The secret key to use for playback via SRT.",
															"example": "2fb3cb9f17e68a2568d6ebed8d5505eak3ceaf8c9b1f395e1b76b79332497cada",
															"type": "string",
															"x-sensitive": true
														},
														"streamId": {
															"description": "The identifier of the live input to use for playback via SRT.",
															"example": "f256e6ea9341d51eea64c9454659e576",
															"type": "string",
															"x-auditable": true
														},
														"url": {
															"description": "The URL used to play live video over SRT.",
															"example": "rtmps://live.cloudflare.com:443/live/",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"status": {
													"description": "The connection status of a live input.",
													"enum": [
														null,
														"connected",
														"reconnected",
														"reconnecting",
														"client_disconnect",
														"ttl_exceeded",
														"failed_to_connect",
														"failed_to_reconnect",
														"new_configuration_accepted"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"uid": {
													"description": "A unique identifier for a live input.",
													"example": "66be4bf738797e01e1fca35a7bdecdcd",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"webRTC": {
													"description": "Details for streaming to a live input using WebRTC.",
													"properties": {
														"url": {
															"description": "The WebRTC URL you provide to the broadcaster, which they stream live video to.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/b236bde30eb07b9d01318940e5fc3edake34a3efb3896e18f2dc277ce6cc993ad/webRTC/publish",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"webRTCPlayback": {
													"description": "Details for playback from a live input using WebRTC.",
													"properties": {
														"url": {
															"description": "The URL used to play live video over WebRTC.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/b236bde30eb07b9d01318940e5fc3edake34a3efb3896e18f2dc277ce6cc993ad/webRTC/play",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a live input response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update a live input response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update a live input",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	},
	"PUT /accounts/{account_id}/stream/live_inputs/{live_input_identifier}/outputs/{output_identifier}": {
		"description": "Updates the state of an output.",
		"operationId": "stream-live-inputs-update-an-output",
		"parameters": [
			{
				"in": "path",
				"name": "output_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for the output.",
					"example": "baea4d9c515887b80289d5c33cf01145",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "live_input_identifier",
				"required": true,
				"schema": {
					"description": "A unique identifier for a live input.",
					"example": "66be4bf738797e01e1fca35a7bdecdcd",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"enabled": {
								"default": true,
								"description": "When enabled, live video streamed to the associated live input will be sent to the output URL. When disabled, live video will not be sent to the output URL, even when streaming to the associated live input. Use this to control precisely when you start and stop simulcasting to specific destinations like YouTube and Twitch.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							}
						},
						"required": [
							"enabled"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"enabled": {
													"default": true,
													"description": "When enabled, live video streamed to the associated live input will be sent to the output URL. When disabled, live video will not be sent to the output URL, even when streaming to the associated live input. Use this to control precisely when you start and stop simulcasting to specific destinations like YouTube and Twitch.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"streamKey": {
													"description": "The streamKey used to authenticate against an output's target.",
													"example": "uzya-f19y-g2g9-a2ee-51j2",
													"type": "string",
													"x-sensitive": true
												},
												"uid": {
													"description": "A unique identifier for the output.",
													"example": "baea4d9c515887b80289d5c33cf01145",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"url": {
													"description": "The URL an output uses to restream.",
													"example": "rtmp://a.rtmp.youtube.com/live2",
													"type": "string",
													"x-sensitive": true
												}
											}
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update an output response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update an output response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update an output",
		"tags": [
			"Stream Live Inputs"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	}
}