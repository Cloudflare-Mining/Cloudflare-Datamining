{
	"DELETE /accounts/{account_id}/members/{member_id}": {
		"description": "Remove a member from an account.",
		"operationId": "account-members-remove-member",
		"parameters": [
			{
				"in": "path",
				"name": "member_id",
				"required": true,
				"schema": {
					"description": "Membership identifier tag.",
					"example": "4536bcfad5faccb111b47003c79917fa",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"minLength": 32,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Remove Member response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Remove Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Remove Member",
		"tags": [
			"Account Members"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/members": {
		"description": "List all members of an account.",
		"operationId": "account-members-list-members",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "query",
				"name": "order",
				"schema": {
					"description": "Field to order results by.",
					"enum": [
						"user.first_name",
						"user.last_name",
						"user.email",
						"status"
					],
					"example": "status"
				}
			},
			{
				"in": "query",
				"name": "status",
				"schema": {
					"description": "A member's status in the account.",
					"enum": [
						"accepted",
						"pending",
						"rejected"
					],
					"example": "accepted",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Maximum number of results per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "Direction to order results.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "desc",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"email": {
														"description": "The contact email address of the user.",
														"example": "user@example.com",
														"maxLength": 90,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Membership identifier tag.",
														"example": "4536bcfad5faccb111b47003c79917fa",
														"maxLength": 32,
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"policies": {
														"description": "Access policy for the membership",
														"items": {
															"properties": {
																"access": {
																	"description": "Allow or deny operations against the resources.",
																	"enum": [
																		"allow",
																		"deny"
																	],
																	"example": "allow",
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "Policy identifier.",
																	"example": "f267e341f3dd4697bd3b9f71dd96247f",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true,
																	"x-stainless-terraform-always-send": true
																},
																"permission_groups": {
																	"description": "A set of permission groups that are specified to the policy.",
																	"example": [
																		{
																			"id": "c8fed203ed3043cba015a93ad1616f1f",
																			"meta": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"name": "Zone Read"
																		},
																		{
																			"id": "82e64a83756745bbbb1c9c2701bf816b",
																			"meta": {
																				"label": "fbm_user",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"name": "Magic Network Monitoring"
																		}
																	],
																	"items": {
																		"description": "A named group of permissions that map to a group of operations against resources.",
																		"properties": {
																			"id": {
																				"description": "Identifier of the permission group.",
																				"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																				"type": "string",
																				"x-auditable": true
																			},
																			"meta": {
																				"description": "Attributes associated to the permission group.",
																				"example": {
																					"label": "load_balancer_admin",
																					"scopes": "com.cloudflare.api.account"
																				},
																				"properties": {
																					"key": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"value": {
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"name": {
																				"description": "Name of the permission group.",
																				"example": "Load Balancer",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"id"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"resource_groups": {
																	"description": "A list of resource groups that the policy applies to.",
																	"items": {
																		"description": "A group of scoped resources.",
																		"properties": {
																			"id": {
																				"description": "Identifier of the resource group.",
																				"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"meta": {
																				"description": "Attributes associated to the resource group.",
																				"example": {
																					"editable": "false"
																				},
																				"properties": {
																					"key": {
																						"type": "string"
																					},
																					"value": {
																						"type": "string"
																					}
																				},
																				"type": "object"
																			},
																			"name": {
																				"description": "Name of the resource group.",
																				"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"scope": {
																				"description": "The scope associated to the resource group",
																				"items": {
																					"description": "A scope is a combination of scope objects which provides additional context.",
																					"properties": {
																						"key": {
																							"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																							"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																							"readOnly": true,
																							"x-auditable": true
																						},
																						"objects": {
																							"description": "A list of scope objects for additional context.",
																							"items": {
																								"description": "A scope object represents any resource that can have actions applied against invite.",
																								"properties": {
																									"key": {
																										"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																										"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																										"readOnly": true,
																										"x-auditable": true
																									}
																								},
																								"required": [
																									"key"
																								],
																								"type": "object"
																							},
																							"type": "array"
																						}
																					},
																					"required": [
																						"key",
																						"objects"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			}
																		},
																		"required": [
																			"id",
																			"scope"
																		],
																		"type": "object"
																	},
																	"type": "array"
																}
															},
															"title": "list_member_policy"
														},
														"type": "array"
													},
													"roles": {
														"description": "Roles assigned to this Member.",
														"items": {
															"properties": {
																"description": {
																	"description": "Description of role's permissions.",
																	"example": "Administrative access to the entire Account",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "Role identifier tag.",
																	"example": "3536bcfad5faccb999b47003c79917fb",
																	"maxLength": 32,
																	"type": "string",
																	"x-auditable": true
																},
																"name": {
																	"description": "Role name.",
																	"example": "Account Administrator",
																	"maxLength": 120,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"permissions": {
																	"allOf": [
																		{
																			"example": {
																				"analytics": {
																					"read": true,
																					"write": false
																				},
																				"zones": {
																					"read": true,
																					"write": true
																				}
																			},
																			"properties": {
																				"analytics": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"billing": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"cache_purge": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"dns": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"dns_records": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"lb": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"logs": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"organization": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"ssl": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"waf": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"zone_settings": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"zones": {
																					"example": {
																						"read": true,
																						"write": false
																					},
																					"properties": {
																						"read": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"write": {
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"type": "object"
																		},
																		{
																			"readOnly": true
																		}
																	]
																}
															},
															"required": [
																"id",
																"name",
																"description",
																"permissions"
															],
															"type": "object"
														},
														"type": "array"
													},
													"status": {
														"description": "A member's status in the account.",
														"enum": [
															"accepted",
															"pending"
														],
														"example": "accepted",
														"readOnly": true,
														"x-auditable": true
													},
													"user": {
														"description": "Details of the user associated to the membership.",
														"properties": {
															"email": {
																"description": "The contact email address of the user.",
																"example": "user@example.com",
																"maxLength": 90,
																"type": "string",
																"x-auditable": true
															},
															"first_name": {
																"description": "User's first name",
																"example": "John",
																"maxLength": 60,
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"minLength": 32,
																"type": "string",
																"x-auditable": true
															},
															"last_name": {
																"description": "User's last name",
																"example": "Appleseed",
																"maxLength": 60,
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"two_factor_authentication_enabled": {
																"default": false,
																"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
																"readOnly": true,
																"type": "boolean"
															}
														},
														"readOnly": true,
														"required": [
															"email"
														],
														"type": "object"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"title": "Members with Policies"
						}
					}
				},
				"description": "List Members response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List Members response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Members",
		"tags": [
			"Account Members"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write",
			"Account Settings Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/members/{member_id}": {
		"description": "Get information about a specific member of an account.",
		"operationId": "account-members-member-details",
		"parameters": [
			{
				"in": "path",
				"name": "member_id",
				"required": true,
				"schema": {
					"description": "Membership identifier tag.",
					"example": "4536bcfad5faccb111b47003c79917fa",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"email": {
													"description": "The contact email address of the user.",
													"example": "user@example.com",
													"maxLength": 90,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Membership identifier tag.",
													"example": "4536bcfad5faccb111b47003c79917fa",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "Access policy for the membership",
													"items": {
														"properties": {
															"access": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true,
																"x-stainless-terraform-always-send": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resource_groups": {
																"description": "A list of resource groups that the policy applies to.",
																"items": {
																	"description": "A group of scoped resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the resource group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the resource group.",
																			"example": {
																				"editable": "false"
																			},
																			"properties": {
																				"key": {
																					"type": "string"
																				},
																				"value": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the resource group.",
																			"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"scope": {
																			"description": "The scope associated to the resource group",
																			"items": {
																				"description": "A scope is a combination of scope objects which provides additional context.",
																				"properties": {
																					"key": {
																						"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																						"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																						"readOnly": true,
																						"x-auditable": true
																					},
																					"objects": {
																						"description": "A list of scope objects for additional context.",
																						"items": {
																							"description": "A scope object represents any resource that can have actions applied against invite.",
																							"properties": {
																								"key": {
																									"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																									"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																									"readOnly": true,
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"key"
																							],
																							"type": "object"
																						},
																						"type": "array"
																					}
																				},
																				"required": [
																					"key",
																					"objects"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"id",
																		"scope"
																	],
																	"type": "object"
																},
																"type": "array"
															}
														},
														"title": "list_member_policy"
													},
													"type": "array"
												},
												"roles": {
													"description": "Roles assigned to this Member.",
													"items": {
														"properties": {
															"description": {
																"description": "Description of role's permissions.",
																"example": "Administrative access to the entire Account",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Role identifier tag.",
																"example": "3536bcfad5faccb999b47003c79917fb",
																"maxLength": 32,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "Role name.",
																"example": "Account Administrator",
																"maxLength": 120,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permissions": {
																"allOf": [
																	{
																		"example": {
																			"analytics": {
																				"read": true,
																				"write": false
																			},
																			"zones": {
																				"read": true,
																				"write": true
																			}
																		},
																		"properties": {
																			"analytics": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"billing": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"cache_purge": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"dns": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"dns_records": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"lb": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"logs": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"organization": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"ssl": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"waf": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"zone_settings": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"zones": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"type": "object"
																	},
																	{
																		"readOnly": true
																	}
																]
															}
														},
														"required": [
															"id",
															"name",
															"description",
															"permissions"
														],
														"type": "object"
													},
													"type": "array"
												},
												"status": {
													"description": "A member's status in the account.",
													"enum": [
														"accepted",
														"pending"
													],
													"example": "accepted",
													"readOnly": true,
													"x-auditable": true
												},
												"user": {
													"description": "Details of the user associated to the membership.",
													"properties": {
														"email": {
															"description": "The contact email address of the user.",
															"example": "user@example.com",
															"maxLength": 90,
															"type": "string",
															"x-auditable": true
														},
														"first_name": {
															"description": "User's first name",
															"example": "John",
															"maxLength": 60,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"minLength": 32,
															"type": "string",
															"x-auditable": true
														},
														"last_name": {
															"description": "User's last name",
															"example": "Appleseed",
															"maxLength": 60,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"two_factor_authentication_enabled": {
															"default": false,
															"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
															"readOnly": true,
															"type": "boolean"
														}
													},
													"readOnly": true,
													"required": [
														"email"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with Policies"
						}
					}
				},
				"description": "Member Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Member Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Member Details",
		"tags": [
			"Account Members"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write",
			"Account Settings Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_id}/members": {
		"description": "Add a user to the list of members for this account.",
		"operationId": "account-members-add-member",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"oneOf": [
							{
								"properties": {
									"email": {
										"description": "The contact email address of the user.",
										"example": "user@example.com",
										"maxLength": 90,
										"type": "string",
										"x-auditable": true
									},
									"roles": {
										"description": "Array of roles associated with this member.",
										"items": {
											"description": "Role identifier tag.",
											"example": "3536bcfad5faccb999b47003c79917fb",
											"maxLength": 32,
											"type": "string",
											"x-auditable": true
										},
										"type": "array"
									},
									"status": {
										"default": "pending",
										"enum": [
											"accepted",
											"pending"
										],
										"x-auditable": true
									}
								},
								"required": [
									"email",
									"roles"
								],
								"title": "Add Member with Account Roles",
								"type": "object"
							},
							{
								"properties": {
									"email": {
										"description": "The contact email address of the user.",
										"example": "user@example.com",
										"maxLength": 90,
										"type": "string",
										"x-auditable": true
									},
									"policies": {
										"description": "Array of policies associated with this member.",
										"items": {
											"properties": {
												"access": {
													"description": "Allow or deny operations against the resources.",
													"enum": [
														"allow",
														"deny"
													],
													"example": "allow",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Policy identifier.",
													"example": "f267e341f3dd4697bd3b9f71dd96247f",
													"readOnly": true,
													"type": "string",
													"x-auditable": true,
													"x-stainless-terraform-always-send": true
												},
												"permission_groups": {
													"description": "A set of permission groups that are specified to the policy.",
													"example": [
														{
															"id": "c8fed203ed3043cba015a93ad1616f1f"
														},
														{
															"id": "82e64a83756745bbbb1c9c2701bf816b"
														}
													],
													"items": {
														"description": "A group of permissions.",
														"properties": {
															"id": {
																"description": "Identifier of the group.",
																"example": "c8fed203ed3043cba015a93ad1616f1f",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"type": "array"
												},
												"resource_groups": {
													"description": "A list of resource groups that the policy applies to.",
													"items": {
														"description": "A group of scoped resources.",
														"properties": {
															"id": {
																"description": "Identifier of the group.",
																"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"id",
												"access",
												"permission_groups",
												"resource_groups"
											],
											"title": "create_member_policy"
										},
										"type": "array"
									},
									"status": {
										"default": "pending",
										"enum": [
											"accepted",
											"pending"
										],
										"x-auditable": true
									}
								},
								"required": [
									"email",
									"policies"
								],
								"title": "Add Member with Policies",
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"email": {
													"description": "The contact email address of the user.",
													"example": "user@example.com",
													"maxLength": 90,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Membership identifier tag.",
													"example": "4536bcfad5faccb111b47003c79917fa",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "Access policy for the membership",
													"items": {
														"properties": {
															"access": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true,
																"x-stainless-terraform-always-send": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resource_groups": {
																"description": "A list of resource groups that the policy applies to.",
																"items": {
																	"description": "A group of scoped resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the resource group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the resource group.",
																			"example": {
																				"editable": "false"
																			},
																			"properties": {
																				"key": {
																					"type": "string"
																				},
																				"value": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the resource group.",
																			"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"scope": {
																			"description": "The scope associated to the resource group",
																			"items": {
																				"description": "A scope is a combination of scope objects which provides additional context.",
																				"properties": {
																					"key": {
																						"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																						"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																						"readOnly": true,
																						"x-auditable": true
																					},
																					"objects": {
																						"description": "A list of scope objects for additional context.",
																						"items": {
																							"description": "A scope object represents any resource that can have actions applied against invite.",
																							"properties": {
																								"key": {
																									"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																									"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																									"readOnly": true,
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"key"
																							],
																							"type": "object"
																						},
																						"type": "array"
																					}
																				},
																				"required": [
																					"key",
																					"objects"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"id",
																		"scope"
																	],
																	"type": "object"
																},
																"type": "array"
															}
														},
														"title": "list_member_policy"
													},
													"type": "array"
												},
												"roles": {
													"description": "Roles assigned to this Member.",
													"items": {
														"properties": {
															"description": {
																"description": "Description of role's permissions.",
																"example": "Administrative access to the entire Account",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Role identifier tag.",
																"example": "3536bcfad5faccb999b47003c79917fb",
																"maxLength": 32,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "Role name.",
																"example": "Account Administrator",
																"maxLength": 120,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permissions": {
																"allOf": [
																	{
																		"example": {
																			"analytics": {
																				"read": true,
																				"write": false
																			},
																			"zones": {
																				"read": true,
																				"write": true
																			}
																		},
																		"properties": {
																			"analytics": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"billing": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"cache_purge": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"dns": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"dns_records": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"lb": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"logs": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"organization": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"ssl": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"waf": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"zone_settings": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"zones": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"type": "object"
																	},
																	{
																		"readOnly": true
																	}
																]
															}
														},
														"required": [
															"id",
															"name",
															"description",
															"permissions"
														],
														"type": "object"
													},
													"type": "array"
												},
												"status": {
													"description": "A member's status in the account.",
													"enum": [
														"accepted",
														"pending"
													],
													"example": "accepted",
													"readOnly": true,
													"x-auditable": true
												},
												"user": {
													"description": "Details of the user associated to the membership.",
													"properties": {
														"email": {
															"description": "The contact email address of the user.",
															"example": "user@example.com",
															"maxLength": 90,
															"type": "string",
															"x-auditable": true
														},
														"first_name": {
															"description": "User's first name",
															"example": "John",
															"maxLength": 60,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"minLength": 32,
															"type": "string",
															"x-auditable": true
														},
														"last_name": {
															"description": "User's last name",
															"example": "Appleseed",
															"maxLength": 60,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"two_factor_authentication_enabled": {
															"default": false,
															"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
															"readOnly": true,
															"type": "boolean"
														}
													},
													"readOnly": true,
													"required": [
														"email"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with Policies"
						}
					}
				},
				"description": "Add Member response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Add Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Add Member",
		"tags": [
			"Account Members"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_id}/members/{member_id}": {
		"description": "Modify an account member.",
		"operationId": "account-members-update-member",
		"parameters": [
			{
				"in": "path",
				"name": "member_id",
				"required": true,
				"schema": {
					"description": "Membership identifier tag.",
					"example": "4536bcfad5faccb111b47003c79917fa",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"oneOf": [
							{
								"properties": {
									"id": {
										"description": "Membership identifier tag.",
										"example": "4536bcfad5faccb111b47003c79917fa",
										"maxLength": 32,
										"readOnly": true,
										"type": "string",
										"x-auditable": true
									},
									"roles": {
										"description": "Roles assigned to this member.",
										"items": {
											"properties": {
												"description": {
													"description": "Description of role's permissions.",
													"example": "Administrative access to the entire Account",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Role identifier tag.",
													"example": "3536bcfad5faccb999b47003c79917fb",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Role name.",
													"example": "Account Administrator",
													"maxLength": 120,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"permissions": {
													"allOf": [
														{
															"example": {
																"analytics": {
																	"read": true,
																	"write": false
																},
																"zones": {
																	"read": true,
																	"write": true
																}
															},
															"properties": {
																"analytics": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"billing": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"cache_purge": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"dns": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"dns_records": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"lb": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"logs": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"organization": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"ssl": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"waf": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"zone_settings": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"zones": {
																	"example": {
																		"read": true,
																		"write": false
																	},
																	"properties": {
																		"read": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"write": {
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														},
														{
															"readOnly": true
														}
													]
												}
											},
											"required": [
												"id",
												"name",
												"description",
												"permissions"
											],
											"type": "object"
										},
										"type": "array"
									},
									"status": {
										"description": "A member's status in the account.",
										"enum": [
											"accepted",
											"pending"
										],
										"example": "accepted",
										"readOnly": true,
										"x-auditable": true
									},
									"user": {
										"description": "Details of the user associated to the membership.",
										"properties": {
											"email": {
												"description": "The contact email address of the user.",
												"example": "user@example.com",
												"maxLength": 90,
												"type": "string",
												"x-auditable": true
											},
											"first_name": {
												"description": "User's first name",
												"example": "John",
												"maxLength": 60,
												"nullable": true,
												"type": "string",
												"x-auditable": true
											},
											"id": {
												"description": "Identifier",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"minLength": 32,
												"type": "string",
												"x-auditable": true
											},
											"last_name": {
												"description": "User's last name",
												"example": "Appleseed",
												"maxLength": 60,
												"nullable": true,
												"type": "string",
												"x-auditable": true
											},
											"two_factor_authentication_enabled": {
												"default": false,
												"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
												"readOnly": true,
												"type": "boolean"
											}
										},
										"readOnly": true,
										"required": [
											"email"
										],
										"type": "object"
									}
								},
								"title": "Update Member with Account Roles",
								"type": "object"
							},
							{
								"properties": {
									"policies": {
										"description": "Array of policies associated with this member.",
										"items": {
											"properties": {
												"access": {
													"description": "Allow or deny operations against the resources.",
													"enum": [
														"allow",
														"deny"
													],
													"example": "allow",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Policy identifier.",
													"example": "f267e341f3dd4697bd3b9f71dd96247f",
													"readOnly": true,
													"type": "string",
													"x-auditable": true,
													"x-stainless-terraform-always-send": true
												},
												"permission_groups": {
													"description": "A set of permission groups that are specified to the policy.",
													"example": [
														{
															"id": "c8fed203ed3043cba015a93ad1616f1f"
														},
														{
															"id": "82e64a83756745bbbb1c9c2701bf816b"
														}
													],
													"items": {
														"description": "A group of permissions.",
														"properties": {
															"id": {
																"description": "Identifier of the group.",
																"example": "c8fed203ed3043cba015a93ad1616f1f",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"type": "array"
												},
												"resource_groups": {
													"description": "A list of resource groups that the policy applies to.",
													"items": {
														"description": "A group of scoped resources.",
														"properties": {
															"id": {
																"description": "Identifier of the group.",
																"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"id",
												"access",
												"permission_groups",
												"resource_groups"
											],
											"title": "create_member_policy"
										},
										"type": "array"
									}
								},
								"required": [
									"policies"
								],
								"title": "Update Member with Policies",
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"email": {
													"description": "The contact email address of the user.",
													"example": "user@example.com",
													"maxLength": 90,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Membership identifier tag.",
													"example": "4536bcfad5faccb111b47003c79917fa",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "Access policy for the membership",
													"items": {
														"properties": {
															"access": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true,
																"x-stainless-terraform-always-send": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resource_groups": {
																"description": "A list of resource groups that the policy applies to.",
																"items": {
																	"description": "A group of scoped resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the resource group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the resource group.",
																			"example": {
																				"editable": "false"
																			},
																			"properties": {
																				"key": {
																					"type": "string"
																				},
																				"value": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the resource group.",
																			"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"scope": {
																			"description": "The scope associated to the resource group",
																			"items": {
																				"description": "A scope is a combination of scope objects which provides additional context.",
																				"properties": {
																					"key": {
																						"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																						"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																						"readOnly": true,
																						"x-auditable": true
																					},
																					"objects": {
																						"description": "A list of scope objects for additional context.",
																						"items": {
																							"description": "A scope object represents any resource that can have actions applied against invite.",
																							"properties": {
																								"key": {
																									"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																									"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																									"readOnly": true,
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"key"
																							],
																							"type": "object"
																						},
																						"type": "array"
																					}
																				},
																				"required": [
																					"key",
																					"objects"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"id",
																		"scope"
																	],
																	"type": "object"
																},
																"type": "array"
															}
														},
														"title": "list_member_policy"
													},
													"type": "array"
												},
												"roles": {
													"description": "Roles assigned to this Member.",
													"items": {
														"properties": {
															"description": {
																"description": "Description of role's permissions.",
																"example": "Administrative access to the entire Account",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Role identifier tag.",
																"example": "3536bcfad5faccb999b47003c79917fb",
																"maxLength": 32,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "Role name.",
																"example": "Account Administrator",
																"maxLength": 120,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permissions": {
																"allOf": [
																	{
																		"example": {
																			"analytics": {
																				"read": true,
																				"write": false
																			},
																			"zones": {
																				"read": true,
																				"write": true
																			}
																		},
																		"properties": {
																			"analytics": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"billing": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"cache_purge": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"dns": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"dns_records": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"lb": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"logs": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"organization": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"ssl": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"waf": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"zone_settings": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"zones": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"write": {
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"type": "object"
																	},
																	{
																		"readOnly": true
																	}
																]
															}
														},
														"required": [
															"id",
															"name",
															"description",
															"permissions"
														],
														"type": "object"
													},
													"type": "array"
												},
												"status": {
													"description": "A member's status in the account.",
													"enum": [
														"accepted",
														"pending"
													],
													"example": "accepted",
													"readOnly": true,
													"x-auditable": true
												},
												"user": {
													"description": "Details of the user associated to the membership.",
													"properties": {
														"email": {
															"description": "The contact email address of the user.",
															"example": "user@example.com",
															"maxLength": 90,
															"type": "string",
															"x-auditable": true
														},
														"first_name": {
															"description": "User's first name",
															"example": "John",
															"maxLength": 60,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"minLength": 32,
															"type": "string",
															"x-auditable": true
														},
														"last_name": {
															"description": "User's last name",
															"example": "Appleseed",
															"maxLength": 60,
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"two_factor_authentication_enabled": {
															"default": false,
															"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
															"readOnly": true,
															"type": "boolean"
														}
													},
													"readOnly": true,
													"required": [
														"email"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with Policies"
						}
					}
				},
				"description": "Update Member response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Member",
		"tags": [
			"Account Members"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}