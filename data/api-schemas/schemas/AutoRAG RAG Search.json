{
	"POST /accounts/{account_id}/autorag/rags/{id}/ai-search": {
		"operationId": "autorag-config-ai-search",
		"parameters": [
			{
				"in": "path",
				"name": "id",
				"required": true,
				"schema": {
					"description": "rag id",
					"example": "my-rag",
					"maxLength": 32,
					"minLength": 1,
					"pattern": "^[a-z0-9_]+(?:-[a-z0-9_]+)*$",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "c3dc5f0b34a14ff8e1b3ec04895e1b22",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"filters": {
								"anyOf": [
									{
										"properties": {
											"key": {
												"type": "string"
											},
											"type": {
												"enum": [
													"eq",
													"ne",
													"gt",
													"gte",
													"lt",
													"lte"
												],
												"type": "string"
											},
											"value": {
												"anyOf": [
													{
														"type": "string"
													},
													{
														"type": "number"
													},
													{
														"type": "boolean"
													}
												]
											}
										},
										"required": [
											"key",
											"type",
											"value"
										],
										"type": "object"
									},
									{
										"properties": {
											"filters": {
												"items": {
													"properties": {
														"key": {
															"type": "string"
														},
														"type": {
															"enum": [
																"eq",
																"ne",
																"gt",
																"gte",
																"lt",
																"lte"
															],
															"type": "string"
														},
														"value": {
															"anyOf": [
																{
																	"type": "string"
																},
																{
																	"type": "number"
																},
																{
																	"type": "boolean"
																}
															]
														}
													},
													"required": [
														"key",
														"type",
														"value"
													],
													"type": "object"
												},
												"type": "array"
											},
											"type": {
												"enum": [
													"and",
													"or"
												],
												"type": "string"
											}
										},
										"required": [
											"type",
											"filters"
										],
										"type": "object"
									}
								]
							},
							"max_num_results": {
								"default": 50,
								"maximum": 50,
								"minimum": 1,
								"type": "integer"
							},
							"model": {
								"anyOf": [
									{
										"enum": [
											"@cf/meta/llama-3.3-70b-instruct-fp8-fast",
											"@cf/meta/llama-3.3-70b-instruct-fp8-fast",
											"@cf/meta/llama-3.1-8b-instruct-fast",
											"@cf/meta/llama-3.1-8b-instruct-fp8",
											"@cf/meta/llama-4-scout-17b-16e-instruct",
											"@cf/qwen/qwen3-30b-a3b-fp8",
											"@cf/moonshotai/kimi-k2-instruct",
											"anthropic/claude-3-7-sonnet",
											"anthropic/claude-sonnet-4",
											"anthropic/claude-opus-4",
											"anthropic/claude-3-5-haiku",
											"cerebras/qwen-3-235b-a22b-instruct",
											"cerebras/qwen-3-235b-a22b-thinking",
											"cerebras/llama-3.3-70b",
											"cerebras/llama-4-maverick-17b-128e-instruct",
											"cerebras/llama-4-scout-17b-16e-instruct",
											"cerebras/gpt-oss-120b",
											"google-ai-studio/gemini-2.5-flash",
											"google-ai-studio/gemini-2.5-pro",
											"grok/grok-4",
											"groq/llama-3.3-70b-versatile",
											"groq/llama-3.1-8b-instant",
											"openai/gpt-5",
											"openai/gpt-5-mini",
											"openai/gpt-5-nano"
										],
										"type": "string"
									},
									{
										"enum": [
											""
										],
										"type": "string"
									}
								]
							},
							"query": {
								"type": "string"
							},
							"ranking_options": {
								"default": {},
								"properties": {
									"ranker": {
										"type": "string"
									},
									"score_threshold": {
										"default": 0.4,
										"maximum": 1,
										"minimum": 0,
										"type": "number"
									}
								},
								"type": "object"
							},
							"rewrite_query": {
								"default": false,
								"type": "boolean"
							},
							"stream": {
								"default": false,
								"type": "boolean"
							},
							"system_prompt": {
								"type": "string"
							}
						},
						"required": [
							"query"
						],
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"data": {
											"items": {
												"properties": {
													"attributes": {
														"type": "object"
													},
													"content": {
														"items": {
															"properties": {
																"text": {
																	"type": "string"
																},
																"type": {
																	"type": "string"
																}
															},
															"type": "object"
														},
														"type": "array"
													},
													"file_id": {
														"type": "string"
													},
													"filename": {
														"type": "string"
													},
													"score": {
														"type": "number"
													}
												},
												"required": [
													"score"
												],
												"type": "object"
											},
											"type": "array"
										},
										"has_more": {
											"default": false,
											"type": "boolean"
										},
										"next_page": {
											"nullable": true,
											"type": "string"
										},
										"object": {
											"type": "string"
										},
										"response": {
											"type": "string"
										},
										"search_query": {
											"type": "string"
										}
									},
									"required": [
										"search_query",
										"response"
									],
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Returns the log details"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"example": 7002,
												"type": "number"
											},
											"message": {
												"example": "Not Found",
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Not Found"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "AI Search",
		"tags": [
			"AutoRAG RAG Search"
		],
		"x-api-token-group": [
			"Auto Rag Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.rag"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_id}/autorag/rags/{id}/search": {
		"operationId": "autorag-config-search",
		"parameters": [
			{
				"in": "path",
				"name": "id",
				"required": true,
				"schema": {
					"description": "rag id",
					"example": "my-rag",
					"maxLength": 32,
					"minLength": 1,
					"pattern": "^[a-z0-9_]+(?:-[a-z0-9_]+)*$",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "c3dc5f0b34a14ff8e1b3ec04895e1b22",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"filters": {
								"anyOf": [
									{
										"properties": {
											"key": {
												"type": "string"
											},
											"type": {
												"enum": [
													"eq",
													"ne",
													"gt",
													"gte",
													"lt",
													"lte"
												],
												"type": "string"
											},
											"value": {
												"anyOf": [
													{
														"type": "string"
													},
													{
														"type": "number"
													},
													{
														"type": "boolean"
													}
												]
											}
										},
										"required": [
											"key",
											"type",
											"value"
										],
										"type": "object"
									},
									{
										"properties": {
											"filters": {
												"items": {
													"properties": {
														"key": {
															"type": "string"
														},
														"type": {
															"enum": [
																"eq",
																"ne",
																"gt",
																"gte",
																"lt",
																"lte"
															],
															"type": "string"
														},
														"value": {
															"anyOf": [
																{
																	"type": "string"
																},
																{
																	"type": "number"
																},
																{
																	"type": "boolean"
																}
															]
														}
													},
													"required": [
														"key",
														"type",
														"value"
													],
													"type": "object"
												},
												"type": "array"
											},
											"type": {
												"enum": [
													"and",
													"or"
												],
												"type": "string"
											}
										},
										"required": [
											"type",
											"filters"
										],
										"type": "object"
									}
								]
							},
							"max_num_results": {
								"default": 10,
								"maximum": 50,
								"minimum": 1,
								"type": "integer"
							},
							"query": {
								"type": "string"
							},
							"ranking_options": {
								"default": {},
								"properties": {
									"ranker": {
										"type": "string"
									},
									"score_threshold": {
										"default": 0.4,
										"maximum": 1,
										"minimum": 0,
										"type": "number"
									}
								},
								"type": "object"
							},
							"rewrite_query": {
								"default": false,
								"type": "boolean"
							}
						},
						"required": [
							"query"
						],
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"data": {
											"items": {
												"properties": {
													"attributes": {
														"type": "object"
													},
													"content": {
														"items": {
															"properties": {
																"text": {
																	"type": "string"
																},
																"type": {
																	"type": "string"
																}
															},
															"type": "object"
														},
														"type": "array"
													},
													"file_id": {
														"type": "string"
													},
													"filename": {
														"type": "string"
													},
													"score": {
														"type": "number"
													}
												},
												"required": [
													"score"
												],
												"type": "object"
											},
											"type": "array"
										},
										"has_more": {
											"default": false,
											"type": "boolean"
										},
										"next_page": {
											"nullable": true,
											"type": "string"
										},
										"object": {
											"type": "string"
										},
										"search_query": {
											"type": "string"
										}
									},
									"required": [
										"search_query"
									],
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Returns the log details"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"example": 7002,
												"type": "number"
											},
											"message": {
												"example": "Not Found",
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Not Found"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Search",
		"tags": [
			"AutoRAG RAG Search"
		],
		"x-api-token-group": [
			"Auto Rag Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.rag"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}