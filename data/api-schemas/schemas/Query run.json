{
	"POST /accounts/{account_id}/workers/observability/telemetry/query": {
		"description": "Runs a temporary or saved query",
		"operationId": "telemetry.query",
		"parameters": [
			{
				"description": "Your Cloudflare account ID.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"chart": {
								"type": "boolean"
							},
							"compare": {
								"type": "boolean"
							},
							"dry": {
								"default": false,
								"type": "boolean"
							},
							"granularity": {
								"type": "number"
							},
							"ignoreSeries": {
								"default": false,
								"type": "boolean"
							},
							"limit": {
								"default": 50,
								"maximum": 100,
								"type": "number"
							},
							"offset": {
								"type": "string"
							},
							"offsetBy": {
								"type": "number"
							},
							"offsetDirection": {
								"type": "string"
							},
							"parameters": {
								"properties": {
									"calculations": {
										"description": "Create Calculations to compute as part of the query.",
										"items": {
											"properties": {
												"alias": {
													"type": "string"
												},
												"key": {
													"type": "string"
												},
												"keyType": {
													"enum": [
														"string",
														"number",
														"boolean"
													],
													"type": "string"
												},
												"operator": {
													"enum": [
														"uniq",
														"count",
														"max",
														"min",
														"sum",
														"avg",
														"median",
														"p001",
														"p01",
														"p05",
														"p10",
														"p25",
														"p75",
														"p90",
														"p95",
														"p99",
														"p999",
														"stddev",
														"variance",
														"COUNT_DISTINCT",
														"COUNT",
														"MAX",
														"MIN",
														"SUM",
														"AVG",
														"MEDIAN",
														"P001",
														"P01",
														"P05",
														"P10",
														"P25",
														"P75",
														"P90",
														"P95",
														"P99",
														"P999",
														"STDDEV",
														"VARIANCE"
													],
													"type": "string"
												}
											},
											"required": [
												"operator"
											],
											"type": "object"
										},
										"type": "array"
									},
									"datasets": {
										"description": "Set the Datasets to query. Leave it empty to query all the datasets.",
										"example": [],
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"filterCombination": {
										"description": "Set a Flag to describe how to combine the filters on the query.",
										"enum": [
											"and",
											"or",
											"AND",
											"OR"
										],
										"type": "string"
									},
									"filters": {
										"description": "Configure the Filters to apply to the query.",
										"items": {
											"properties": {
												"key": {
													"type": "string"
												},
												"operation": {
													"enum": [
														"includes",
														"not_includes",
														"starts_with",
														"regex",
														"exists",
														"is_null",
														"in",
														"not_in",
														"eq",
														"neq",
														"gt",
														"gte",
														"lt",
														"lte",
														"=",
														"!=",
														">",
														">=",
														"<",
														"<=",
														"INCLUDES",
														"DOES_NOT_INCLUDE",
														"MATCH_REGEX",
														"EXISTS",
														"DOES_NOT_EXIST",
														"IN",
														"NOT_IN",
														"STARTS_WITH"
													],
													"type": "string"
												},
												"type": {
													"enum": [
														"string",
														"number",
														"boolean"
													],
													"type": "string"
												},
												"value": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"type": "number"
														},
														{
															"type": "boolean"
														}
													]
												}
											},
											"required": [
												"key",
												"operation",
												"type"
											],
											"type": "object"
										},
										"type": "array"
									},
									"groupBys": {
										"description": "Define how to group the results of the query.",
										"items": {
											"properties": {
												"type": {
													"enum": [
														"string",
														"number",
														"boolean"
													],
													"type": "string"
												},
												"value": {
													"type": "string"
												}
											},
											"required": [
												"type",
												"value"
											],
											"type": "object"
										},
										"type": "array"
									},
									"havings": {
										"description": "Configure the Having clauses that filter on calculations in the query result.",
										"items": {
											"properties": {
												"key": {
													"type": "string"
												},
												"operation": {
													"enum": [
														"eq",
														"neq",
														"gt",
														"gte",
														"lt",
														"lte"
													],
													"type": "string"
												},
												"value": {
													"type": "number"
												}
											},
											"required": [
												"key",
												"operation",
												"value"
											],
											"type": "object"
										},
										"type": "array"
									},
									"limit": {
										"description": "Set a limit on the number of results / records returned by the query",
										"maximum": 100,
										"minimum": 0,
										"type": "integer"
									},
									"needle": {
										"description": "Define an expression to search using full-text search.",
										"properties": {
											"isRegex": {
												"type": "boolean"
											},
											"matchCase": {
												"type": "boolean"
											},
											"value": {
												"anyOf": [
													{
														"type": "string"
													},
													{
														"type": "number"
													},
													{
														"type": "boolean"
													}
												]
											}
										},
										"required": [
											"value"
										],
										"type": "object"
									},
									"orderBy": {
										"description": "Configure the order of the results returned by the query.",
										"properties": {
											"order": {
												"description": "Set the order of the results",
												"enum": [
													"asc",
													"desc"
												],
												"type": "string"
											},
											"value": {
												"description": "Configure which Calculation to order the results by.",
												"type": "string"
											}
										},
										"required": [
											"value"
										],
										"type": "object"
									}
								},
								"type": "object"
							},
							"patternType": {
								"enum": [
									"message",
									"error"
								],
								"type": "string"
							},
							"queryId": {
								"type": "string"
							},
							"timeframe": {
								"properties": {
									"from": {
										"type": "number"
									},
									"to": {
										"type": "number"
									}
								},
								"required": [
									"to",
									"from"
								],
								"type": "object"
							},
							"view": {
								"default": "calculations",
								"enum": [
									"traces",
									"events",
									"calculations",
									"invocations",
									"requests",
									"patterns"
								],
								"type": "string"
							}
						},
						"required": [
							"queryId",
							"timeframe"
						],
						"type": "object"
					}
				}
			},
			"description": "Query your observability events, requests, and traces. Build visualizations and identify insights.",
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"enum": [
													"Successful request"
												],
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"calculations": {
											"items": {
												"properties": {
													"aggregates": {
														"items": {
															"properties": {
																"count": {
																	"type": "number"
																},
																"groups": {
																	"items": {
																		"properties": {
																			"key": {
																				"type": "string"
																			},
																			"value": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "number"
																					},
																					{
																						"type": "boolean"
																					}
																				]
																			}
																		},
																		"required": [
																			"key",
																			"value"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"interval": {
																	"type": "number"
																},
																"sampleInterval": {
																	"type": "number"
																},
																"value": {
																	"type": "number"
																}
															},
															"required": [
																"value",
																"count",
																"interval",
																"sampleInterval"
															],
															"type": "object"
														},
														"type": "array"
													},
													"alias": {
														"type": "string"
													},
													"calculation": {
														"type": "string"
													},
													"series": {
														"items": {
															"properties": {
																"data": {
																	"items": {
																		"properties": {
																			"count": {
																				"type": "number"
																			},
																			"firstSeen": {
																				"type": "string"
																			},
																			"groups": {
																				"items": {
																					"properties": {
																						"key": {
																							"type": "string"
																						},
																						"value": {
																							"anyOf": [
																								{
																									"type": "string"
																								},
																								{
																									"type": "number"
																								},
																								{
																									"type": "boolean"
																								}
																							]
																						}
																					},
																					"required": [
																						"key",
																						"value"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"interval": {
																				"type": "number"
																			},
																			"lastSeen": {
																				"type": "string"
																			},
																			"sampleInterval": {
																				"type": "number"
																			},
																			"value": {
																				"type": "number"
																			}
																		},
																		"required": [
																			"value",
																			"count",
																			"interval",
																			"sampleInterval",
																			"firstSeen",
																			"lastSeen"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"time": {
																	"type": "string"
																}
															},
															"required": [
																"time",
																"data"
															],
															"type": "object"
														},
														"type": "array"
													}
												},
												"required": [
													"calculation",
													"aggregates",
													"series"
												],
												"type": "object"
											},
											"type": "array"
										},
										"compare": {
											"items": {
												"properties": {
													"aggregates": {
														"items": {
															"properties": {
																"count": {
																	"type": "number"
																},
																"groups": {
																	"items": {
																		"properties": {
																			"key": {
																				"type": "string"
																			},
																			"value": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "number"
																					},
																					{
																						"type": "boolean"
																					}
																				]
																			}
																		},
																		"required": [
																			"key",
																			"value"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"interval": {
																	"type": "number"
																},
																"sampleInterval": {
																	"type": "number"
																},
																"value": {
																	"type": "number"
																}
															},
															"required": [
																"value",
																"count",
																"interval",
																"sampleInterval"
															],
															"type": "object"
														},
														"type": "array"
													},
													"alias": {
														"type": "string"
													},
													"calculation": {
														"type": "string"
													},
													"series": {
														"items": {
															"properties": {
																"data": {
																	"items": {
																		"properties": {
																			"count": {
																				"type": "number"
																			},
																			"firstSeen": {
																				"type": "string"
																			},
																			"groups": {
																				"items": {
																					"properties": {
																						"key": {
																							"type": "string"
																						},
																						"value": {
																							"anyOf": [
																								{
																									"type": "string"
																								},
																								{
																									"type": "number"
																								},
																								{
																									"type": "boolean"
																								}
																							]
																						}
																					},
																					"required": [
																						"key",
																						"value"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"interval": {
																				"type": "number"
																			},
																			"lastSeen": {
																				"type": "string"
																			},
																			"sampleInterval": {
																				"type": "number"
																			},
																			"value": {
																				"type": "number"
																			}
																		},
																		"required": [
																			"value",
																			"count",
																			"interval",
																			"sampleInterval",
																			"firstSeen",
																			"lastSeen"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"time": {
																	"type": "string"
																}
															},
															"required": [
																"time",
																"data"
															],
															"type": "object"
														},
														"type": "array"
													}
												},
												"required": [
													"calculation",
													"aggregates",
													"series"
												],
												"type": "object"
											},
											"type": "array"
										},
										"events": {
											"properties": {
												"count": {
													"type": "number"
												},
												"events": {
													"items": {
														"additionalProperties": false,
														"description": "The data structure of a telemetry event",
														"properties": {
															"$metadata": {
																"properties": {
																	"account": {
																		"type": "string"
																	},
																	"cloudService": {
																		"type": "string"
																	},
																	"coldStart": {
																		"exclusiveMinimum": true,
																		"minimum": 0,
																		"type": "integer"
																	},
																	"cost": {
																		"exclusiveMinimum": true,
																		"minimum": 0,
																		"type": "integer"
																	},
																	"duration": {
																		"exclusiveMinimum": true,
																		"minimum": 0,
																		"type": "integer"
																	},
																	"endTime": {
																		"minimum": 0,
																		"type": "integer"
																	},
																	"error": {
																		"type": "string"
																	},
																	"errorTemplate": {
																		"type": "string"
																	},
																	"fingerprint": {
																		"type": "string"
																	},
																	"id": {
																		"type": "string"
																	},
																	"level": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"messageTemplate": {
																		"type": "string"
																	},
																	"metricName": {
																		"type": "string"
																	},
																	"origin": {
																		"type": "string"
																	},
																	"parentSpanId": {
																		"type": "string"
																	},
																	"provider": {
																		"type": "string"
																	},
																	"region": {
																		"type": "string"
																	},
																	"requestId": {
																		"type": "string"
																	},
																	"service": {
																		"type": "string"
																	},
																	"spanId": {
																		"type": "string"
																	},
																	"spanName": {
																		"type": "string"
																	},
																	"stackId": {
																		"type": "string"
																	},
																	"startTime": {
																		"minimum": 0,
																		"type": "integer"
																	},
																	"statusCode": {
																		"exclusiveMinimum": true,
																		"minimum": 0,
																		"type": "integer"
																	},
																	"traceDuration": {
																		"exclusiveMinimum": true,
																		"minimum": 0,
																		"type": "integer"
																	},
																	"traceId": {
																		"type": "string"
																	},
																	"trigger": {
																		"type": "string"
																	},
																	"type": {
																		"type": "string"
																	},
																	"url": {
																		"type": "string"
																	}
																},
																"required": [
																	"id"
																],
																"type": "object"
															},
															"$workers": {
																"anyOf": [
																	{
																		"properties": {
																			"entrypoint": {
																				"type": "string"
																			},
																			"event": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"type": "string"
																						},
																						{
																							"type": "number"
																						},
																						{
																							"type": "boolean"
																						},
																						{
																							"additionalProperties": {
																								"anyOf": [
																									{
																										"type": "string"
																									},
																									{
																										"type": "number"
																									},
																									{
																										"type": "boolean"
																									},
																									{
																										"additionalProperties": {
																											"anyOf": [
																												{
																													"items": {
																														"anyOf": [
																															{
																																"type": "string"
																															},
																															{
																																"type": "number"
																															},
																															{
																																"type": "boolean"
																															}
																														]
																													},
																													"type": "array"
																												},
																												{
																													"type": "string"
																												},
																												{
																													"type": "number"
																												},
																												{
																													"type": "boolean"
																												}
																											]
																										},
																										"type": "object"
																									}
																								]
																							},
																							"type": "object"
																						}
																					]
																				},
																				"type": "object"
																			},
																			"eventType": {
																				"enum": [
																					"fetch",
																					"scheduled",
																					"alarm",
																					"cron",
																					"queue",
																					"email",
																					"tail",
																					"rpc",
																					"websocket",
																					"unknown"
																				],
																				"type": "string"
																			},
																			"executionModel": {
																				"enum": [
																					"durableObject",
																					"stateless"
																				],
																				"type": "string"
																			},
																			"outcome": {
																				"type": "string"
																			},
																			"requestId": {
																				"type": "string"
																			},
																			"scriptName": {
																				"type": "string"
																			},
																			"scriptVersion": {
																				"properties": {
																					"id": {
																						"type": "string"
																					},
																					"message": {
																						"type": "string"
																					},
																					"tag": {
																						"type": "string"
																					}
																				},
																				"type": "object"
																			},
																			"truncated": {
																				"type": "boolean"
																			}
																		},
																		"required": [
																			"scriptName",
																			"outcome",
																			"eventType",
																			"requestId"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"cpuTimeMs": {
																				"type": "number"
																			},
																			"diagnosticsChannelEvents": {
																				"items": {
																					"properties": {
																						"channel": {
																							"type": "string"
																						},
																						"message": {
																							"type": "string"
																						},
																						"timestamp": {
																							"type": "number"
																						}
																					},
																					"required": [
																						"timestamp",
																						"channel",
																						"message"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"dispatchNamespace": {
																				"type": "string"
																			},
																			"entrypoint": {
																				"type": "string"
																			},
																			"event": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"type": "string"
																						},
																						{
																							"type": "number"
																						},
																						{
																							"type": "boolean"
																						}
																					]
																				},
																				"type": "object"
																			},
																			"eventType": {
																				"enum": [
																					"fetch",
																					"scheduled",
																					"alarm",
																					"cron",
																					"queue",
																					"email",
																					"tail",
																					"rpc",
																					"websocket",
																					"unknown"
																				],
																				"type": "string"
																			},
																			"executionModel": {
																				"enum": [
																					"durableObject",
																					"stateless"
																				],
																				"type": "string"
																			},
																			"outcome": {
																				"type": "string"
																			},
																			"requestId": {
																				"type": "string"
																			},
																			"scriptName": {
																				"type": "string"
																			},
																			"scriptVersion": {
																				"properties": {
																					"id": {
																						"type": "string"
																					},
																					"message": {
																						"type": "string"
																					},
																					"tag": {
																						"type": "string"
																					}
																				},
																				"type": "object"
																			},
																			"truncated": {
																				"type": "boolean"
																			},
																			"wallTimeMs": {
																				"type": "number"
																			}
																		},
																		"required": [
																			"scriptName",
																			"outcome",
																			"eventType",
																			"wallTimeMs",
																			"cpuTimeMs",
																			"requestId"
																		],
																		"type": "object"
																	}
																],
																"description": "Cloudflare Workers event information enriches your logs so you can easily identify and debug issues."
															},
															"dataset": {
																"type": "string"
															},
															"source": {
																"anyOf": [
																	{
																		"type": "string"
																	},
																	{
																		"type": "object"
																	}
																]
															},
															"timestamp": {
																"minimum": 0,
																"type": "integer"
															}
														},
														"required": [
															"dataset",
															"timestamp",
															"source",
															"$metadata"
														],
														"type": "object"
													},
													"type": "array"
												},
												"fields": {
													"items": {
														"properties": {
															"key": {
																"type": "string"
															},
															"type": {
																"type": "string"
															}
														},
														"required": [
															"key",
															"type"
														],
														"type": "object"
													},
													"type": "array"
												},
												"series": {
													"items": {
														"properties": {
															"data": {
																"items": {
																	"properties": {
																		"aggregates": {
																			"properties": {
																				"_count": {
																					"deprecated": true,
																					"exclusiveMinimum": true,
																					"minimum": 0,
																					"type": "integer"
																				},
																				"_firstSeen": {
																					"deprecated": true,
																					"type": "string"
																				},
																				"_interval": {
																					"deprecated": true,
																					"exclusiveMinimum": true,
																					"minimum": 0,
																					"type": "integer"
																				},
																				"_lastSeen": {
																					"deprecated": true,
																					"type": "string"
																				},
																				"bin": {
																					"deprecated": true,
																					"type": "object"
																				}
																			},
																			"required": [
																				"_count",
																				"_interval",
																				"_firstSeen",
																				"_lastSeen"
																			],
																			"type": "object"
																		},
																		"count": {
																			"type": "number"
																		},
																		"errors": {
																			"type": "number"
																		},
																		"groups": {
																			"additionalProperties": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "number"
																					},
																					{
																						"type": "boolean"
																					}
																				]
																			},
																			"description": "Groups in the query results.",
																			"type": "object"
																		},
																		"interval": {
																			"type": "number"
																		},
																		"sampleInterval": {
																			"type": "number"
																		}
																	},
																	"required": [
																		"aggregates",
																		"count",
																		"interval",
																		"sampleInterval"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"time": {
																"type": "string"
															}
														},
														"required": [
															"time",
															"data"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										},
										"invocations": {
											"additionalProperties": {
												"items": {
													"additionalProperties": false,
													"description": "The data structure of a telemetry event",
													"properties": {
														"$metadata": {
															"properties": {
																"account": {
																	"type": "string"
																},
																"cloudService": {
																	"type": "string"
																},
																"coldStart": {
																	"exclusiveMinimum": true,
																	"minimum": 0,
																	"type": "integer"
																},
																"cost": {
																	"exclusiveMinimum": true,
																	"minimum": 0,
																	"type": "integer"
																},
																"duration": {
																	"exclusiveMinimum": true,
																	"minimum": 0,
																	"type": "integer"
																},
																"endTime": {
																	"minimum": 0,
																	"type": "integer"
																},
																"error": {
																	"type": "string"
																},
																"errorTemplate": {
																	"type": "string"
																},
																"fingerprint": {
																	"type": "string"
																},
																"id": {
																	"type": "string"
																},
																"level": {
																	"type": "string"
																},
																"message": {
																	"type": "string"
																},
																"messageTemplate": {
																	"type": "string"
																},
																"metricName": {
																	"type": "string"
																},
																"origin": {
																	"type": "string"
																},
																"parentSpanId": {
																	"type": "string"
																},
																"provider": {
																	"type": "string"
																},
																"region": {
																	"type": "string"
																},
																"requestId": {
																	"type": "string"
																},
																"service": {
																	"type": "string"
																},
																"spanId": {
																	"type": "string"
																},
																"spanName": {
																	"type": "string"
																},
																"stackId": {
																	"type": "string"
																},
																"startTime": {
																	"minimum": 0,
																	"type": "integer"
																},
																"statusCode": {
																	"exclusiveMinimum": true,
																	"minimum": 0,
																	"type": "integer"
																},
																"traceDuration": {
																	"exclusiveMinimum": true,
																	"minimum": 0,
																	"type": "integer"
																},
																"traceId": {
																	"type": "string"
																},
																"trigger": {
																	"type": "string"
																},
																"type": {
																	"type": "string"
																},
																"url": {
																	"type": "string"
																}
															},
															"required": [
																"id"
															],
															"type": "object"
														},
														"$workers": {
															"anyOf": [
																{
																	"properties": {
																		"entrypoint": {
																			"type": "string"
																		},
																		"event": {
																			"additionalProperties": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "number"
																					},
																					{
																						"type": "boolean"
																					},
																					{
																						"additionalProperties": {
																							"anyOf": [
																								{
																									"type": "string"
																								},
																								{
																									"type": "number"
																								},
																								{
																									"type": "boolean"
																								},
																								{
																									"additionalProperties": {
																										"anyOf": [
																											{
																												"items": {
																													"anyOf": [
																														{
																															"type": "string"
																														},
																														{
																															"type": "number"
																														},
																														{
																															"type": "boolean"
																														}
																													]
																												},
																												"type": "array"
																											},
																											{
																												"type": "string"
																											},
																											{
																												"type": "number"
																											},
																											{
																												"type": "boolean"
																											}
																										]
																									},
																									"type": "object"
																								}
																							]
																						},
																						"type": "object"
																					}
																				]
																			},
																			"type": "object"
																		},
																		"eventType": {
																			"enum": [
																				"fetch",
																				"scheduled",
																				"alarm",
																				"cron",
																				"queue",
																				"email",
																				"tail",
																				"rpc",
																				"websocket",
																				"unknown"
																			],
																			"type": "string"
																		},
																		"executionModel": {
																			"enum": [
																				"durableObject",
																				"stateless"
																			],
																			"type": "string"
																		},
																		"outcome": {
																			"type": "string"
																		},
																		"requestId": {
																			"type": "string"
																		},
																		"scriptName": {
																			"type": "string"
																		},
																		"scriptVersion": {
																			"properties": {
																				"id": {
																					"type": "string"
																				},
																				"message": {
																					"type": "string"
																				},
																				"tag": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"truncated": {
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"scriptName",
																		"outcome",
																		"eventType",
																		"requestId"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"cpuTimeMs": {
																			"type": "number"
																		},
																		"diagnosticsChannelEvents": {
																			"items": {
																				"properties": {
																					"channel": {
																						"type": "string"
																					},
																					"message": {
																						"type": "string"
																					},
																					"timestamp": {
																						"type": "number"
																					}
																				},
																				"required": [
																					"timestamp",
																					"channel",
																					"message"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"dispatchNamespace": {
																			"type": "string"
																		},
																		"entrypoint": {
																			"type": "string"
																		},
																		"event": {
																			"additionalProperties": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "number"
																					},
																					{
																						"type": "boolean"
																					}
																				]
																			},
																			"type": "object"
																		},
																		"eventType": {
																			"enum": [
																				"fetch",
																				"scheduled",
																				"alarm",
																				"cron",
																				"queue",
																				"email",
																				"tail",
																				"rpc",
																				"websocket",
																				"unknown"
																			],
																			"type": "string"
																		},
																		"executionModel": {
																			"enum": [
																				"durableObject",
																				"stateless"
																			],
																			"type": "string"
																		},
																		"outcome": {
																			"type": "string"
																		},
																		"requestId": {
																			"type": "string"
																		},
																		"scriptName": {
																			"type": "string"
																		},
																		"scriptVersion": {
																			"properties": {
																				"id": {
																					"type": "string"
																				},
																				"message": {
																					"type": "string"
																				},
																				"tag": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"truncated": {
																			"type": "boolean"
																		},
																		"wallTimeMs": {
																			"type": "number"
																		}
																	},
																	"required": [
																		"scriptName",
																		"outcome",
																		"eventType",
																		"wallTimeMs",
																		"cpuTimeMs",
																		"requestId"
																	],
																	"type": "object"
																}
															],
															"description": "Cloudflare Workers event information enriches your logs so you can easily identify and debug issues."
														},
														"dataset": {
															"type": "string"
														},
														"source": {
															"anyOf": [
																{
																	"type": "string"
																},
																{
																	"type": "object"
																}
															]
														},
														"timestamp": {
															"minimum": 0,
															"type": "integer"
														}
													},
													"required": [
														"dataset",
														"timestamp",
														"source",
														"$metadata"
													],
													"type": "object"
												},
												"type": "array"
											},
											"type": "object"
										},
										"patterns": {
											"items": {
												"properties": {
													"count": {
														"type": "number"
													},
													"pattern": {
														"type": "string"
													},
													"series": {
														"items": {
															"properties": {
																"data": {
																	"properties": {
																		"count": {
																			"type": "number"
																		},
																		"groups": {
																			"items": {
																				"properties": {
																					"key": {
																						"type": "string"
																					},
																					"value": {
																						"anyOf": [
																							{
																								"type": "string"
																							},
																							{
																								"type": "number"
																							},
																							{
																								"type": "boolean"
																							}
																						]
																					}
																				},
																				"required": [
																					"key",
																					"value"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"interval": {
																			"type": "number"
																		},
																		"sampleInterval": {
																			"type": "number"
																		},
																		"value": {
																			"type": "number"
																		}
																	},
																	"required": [
																		"value",
																		"count",
																		"interval",
																		"sampleInterval"
																	],
																	"type": "object"
																},
																"time": {
																	"type": "string"
																}
															},
															"required": [
																"time",
																"data"
															],
															"type": "object"
														},
														"type": "array"
													},
													"service": {
														"type": "string"
													}
												},
												"required": [
													"service",
													"pattern",
													"count",
													"series"
												],
												"type": "object"
											},
											"type": "array"
										},
										"run": {
											"description": "A Workers Observability Query Object",
											"properties": {
												"accountId": {
													"type": "string"
												},
												"created": {
													"type": "string"
												},
												"dry": {
													"type": "boolean"
												},
												"environmentId": {
													"deprecated": true,
													"type": "string"
												},
												"granularity": {
													"type": "number"
												},
												"id": {
													"type": "string"
												},
												"query": {
													"properties": {
														"created": {
															"type": "string"
														},
														"description": {
															"example": "Query description",
															"maxLength": 1000,
															"nullable": true,
															"type": "string"
														},
														"environmentId": {
															"description": "ID of your environment",
															"example": "my-environment",
															"maxLength": 64,
															"minLength": 1,
															"pattern": "^[a-z0-9_]+(?:-[a-z0-9_]+)*$",
															"type": "string"
														},
														"generated": {
															"description": "Flag for alerts automatically created",
															"nullable": true,
															"type": "boolean"
														},
														"id": {
															"description": "ID of the query",
															"example": "query-1",
															"maxLength": 64,
															"minLength": 1,
															"pattern": "^[a-z0-9_]+(?:-[a-z0-9_]+)*$",
															"type": "string"
														},
														"name": {
															"description": "Query name",
															"nullable": true,
															"type": "string"
														},
														"parameters": {
															"properties": {
																"calculations": {
																	"description": "Create Calculations to compute as part of the query.",
																	"items": {
																		"properties": {
																			"alias": {
																				"type": "string"
																			},
																			"key": {
																				"type": "string"
																			},
																			"keyType": {
																				"enum": [
																					"string",
																					"number",
																					"boolean"
																				],
																				"type": "string"
																			},
																			"operator": {
																				"enum": [
																					"uniq",
																					"count",
																					"max",
																					"min",
																					"sum",
																					"avg",
																					"median",
																					"p001",
																					"p01",
																					"p05",
																					"p10",
																					"p25",
																					"p75",
																					"p90",
																					"p95",
																					"p99",
																					"p999",
																					"stddev",
																					"variance",
																					"COUNT_DISTINCT",
																					"COUNT",
																					"MAX",
																					"MIN",
																					"SUM",
																					"AVG",
																					"MEDIAN",
																					"P001",
																					"P01",
																					"P05",
																					"P10",
																					"P25",
																					"P75",
																					"P90",
																					"P95",
																					"P99",
																					"P999",
																					"STDDEV",
																					"VARIANCE"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"operator"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"datasets": {
																	"description": "Set the Datasets to query. Leave it empty to query all the datasets.",
																	"example": [],
																	"items": {
																		"type": "string"
																	},
																	"type": "array"
																},
																"filterCombination": {
																	"description": "Set a Flag to describe how to combine the filters on the query.",
																	"enum": [
																		"and",
																		"or",
																		"AND",
																		"OR"
																	],
																	"type": "string"
																},
																"filters": {
																	"description": "Configure the Filters to apply to the query.",
																	"items": {
																		"properties": {
																			"key": {
																				"type": "string"
																			},
																			"operation": {
																				"enum": [
																					"includes",
																					"not_includes",
																					"starts_with",
																					"regex",
																					"exists",
																					"is_null",
																					"in",
																					"not_in",
																					"eq",
																					"neq",
																					"gt",
																					"gte",
																					"lt",
																					"lte",
																					"=",
																					"!=",
																					">",
																					">=",
																					"<",
																					"<=",
																					"INCLUDES",
																					"DOES_NOT_INCLUDE",
																					"MATCH_REGEX",
																					"EXISTS",
																					"DOES_NOT_EXIST",
																					"IN",
																					"NOT_IN",
																					"STARTS_WITH"
																				],
																				"type": "string"
																			},
																			"type": {
																				"enum": [
																					"string",
																					"number",
																					"boolean"
																				],
																				"type": "string"
																			},
																			"value": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "number"
																					},
																					{
																						"type": "boolean"
																					}
																				]
																			}
																		},
																		"required": [
																			"key",
																			"operation",
																			"type"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"groupBys": {
																	"description": "Define how to group the results of the query.",
																	"items": {
																		"properties": {
																			"type": {
																				"enum": [
																					"string",
																					"number",
																					"boolean"
																				],
																				"type": "string"
																			},
																			"value": {
																				"type": "string"
																			}
																		},
																		"required": [
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"havings": {
																	"description": "Configure the Having clauses that filter on calculations in the query result.",
																	"items": {
																		"properties": {
																			"key": {
																				"type": "string"
																			},
																			"operation": {
																				"enum": [
																					"eq",
																					"neq",
																					"gt",
																					"gte",
																					"lt",
																					"lte"
																				],
																				"type": "string"
																			},
																			"value": {
																				"type": "number"
																			}
																		},
																		"required": [
																			"key",
																			"operation",
																			"value"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"limit": {
																	"description": "Set a limit on the number of results / records returned by the query",
																	"maximum": 100,
																	"minimum": 0,
																	"type": "integer"
																},
																"needle": {
																	"description": "Define an expression to search using full-text search.",
																	"properties": {
																		"isRegex": {
																			"type": "boolean"
																		},
																		"matchCase": {
																			"type": "boolean"
																		},
																		"value": {
																			"anyOf": [
																				{
																					"type": "string"
																				},
																				{
																					"type": "number"
																				},
																				{
																					"type": "boolean"
																				}
																			]
																		}
																	},
																	"required": [
																		"value"
																	],
																	"type": "object"
																},
																"orderBy": {
																	"description": "Configure the order of the results returned by the query.",
																	"properties": {
																		"order": {
																			"description": "Set the order of the results",
																			"enum": [
																				"asc",
																				"desc"
																			],
																			"type": "string"
																		},
																		"value": {
																			"description": "Configure which Calculation to order the results by.",
																			"type": "string"
																		}
																	},
																	"required": [
																		"value"
																	],
																	"type": "object"
																}
															},
															"type": "object"
														},
														"updated": {
															"type": "string"
														},
														"userId": {
															"example": "JY2UKXLO60AEV94R",
															"type": "string"
														},
														"workspaceId": {
															"description": "ID of your workspace",
															"example": "my-workspace",
															"maxLength": 64,
															"minLength": 1,
															"pattern": "^[a-z0-9_]+(?:-[a-z0-9_]+)*$",
															"type": "string"
														}
													},
													"required": [
														"id",
														"workspaceId",
														"environmentId",
														"userId",
														"description",
														"name",
														"generated",
														"parameters",
														"created",
														"updated"
													],
													"type": "object"
												},
												"statistics": {
													"properties": {
														"bytes_read": {
															"description": "Number of uncompressed bytes read from the table.",
															"type": "number"
														},
														"elapsed": {
															"description": "Time in seconds for the query to run.",
															"type": "number"
														},
														"rows_read": {
															"description": "Number of rows scanned from the table.",
															"type": "number"
														}
													},
													"required": [
														"elapsed",
														"rows_read",
														"bytes_read"
													],
													"type": "object"
												},
												"status": {
													"enum": [
														"STARTED",
														"COMPLETED"
													],
													"type": "string"
												},
												"timeframe": {
													"properties": {
														"from": {
															"description": "Set the start time for your query using UNIX time in milliseconds.",
															"exclusiveMinimum": true,
															"minimum": 0,
															"type": "number"
														},
														"to": {
															"description": "Set the end time for your query using UNIX time in milliseconds.",
															"exclusiveMinimum": true,
															"minimum": 0,
															"type": "number"
														}
													},
													"required": [
														"from",
														"to"
													],
													"type": "object"
												},
												"updated": {
													"type": "string"
												},
												"userId": {
													"type": "string"
												},
												"workspaceId": {
													"deprecated": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"query",
												"workspaceId",
												"environmentId",
												"accountId",
												"timeframe",
												"userId",
												"status",
												"granularity",
												"dry"
											],
											"type": "object"
										},
										"statistics": {
											"description": "The statistics object contains information about query performance from the database, it does not include any network latency",
											"properties": {
												"bytes_read": {
													"description": "Number of uncompressed bytes read from the table.",
													"type": "number"
												},
												"elapsed": {
													"description": "Time in seconds for the query to run.",
													"type": "number"
												},
												"rows_read": {
													"description": "Number of rows scanned from the table.",
													"type": "number"
												}
											},
											"required": [
												"elapsed",
												"rows_read",
												"bytes_read"
											],
											"type": "object"
										}
									},
									"required": [
										"run",
										"statistics"
									],
									"type": "object"
								},
								"success": {
									"enum": [
										true
									],
									"type": "boolean"
								}
							},
							"required": [
								"messages",
								"success",
								"errors",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"detail": {
												"type": "string"
											},
											"message": {
												"enum": [
													"Unauthorized"
												],
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"errors",
								"success",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"detail": {
												"type": "string"
											},
											"message": {
												"enum": [
													"Internal error"
												],
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"errors",
								"success",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Internal error"
			}
		},
		"summary": "Run a query",
		"tags": [
			"Query run"
		],
		"x-api-token-group": [
			"Workers Observability Write"
		]
	}
}