{
	"DELETE /accounts/{account_id}/magic/connectors/{connector_id}": {
		"operationId": "mconn-connector-delete",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"messages": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"type": "array"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"result",
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"maxLength": 0,
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"activated": {
													"type": "boolean",
													"x-auditable": true
												},
												"device": {
													"properties": {
														"id": {
															"type": "string",
															"x-auditable": true
														},
														"serial_number": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												},
												"id": {
													"type": "string",
													"x-auditable": true
												},
												"interrupt_window_duration_hours": {
													"type": "number",
													"x-auditable": true
												},
												"interrupt_window_hour_of_day": {
													"type": "number",
													"x-auditable": true
												},
												"last_heartbeat": {
													"type": "string",
													"x-auditable": true
												},
												"last_seen_version": {
													"type": "string",
													"x-auditable": true
												},
												"last_updated": {
													"type": "string",
													"x-auditable": true
												},
												"notes": {
													"type": "string",
													"x-auditable": true
												},
												"timezone": {
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"notes",
												"activated",
												"last_updated",
												"timezone",
												"interrupt_window_hour_of_day",
												"interrupt_window_duration_hours"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Remove a connector from your account",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors": {
		"operationId": "mconn-connector-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"messages": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"type": "array"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"result",
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"maxLength": 0,
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"activated": {
														"type": "boolean",
														"x-auditable": true
													},
													"device": {
														"properties": {
															"id": {
																"type": "string",
																"x-auditable": true
															},
															"serial_number": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"id": {
														"type": "string",
														"x-auditable": true
													},
													"interrupt_window_duration_hours": {
														"type": "number",
														"x-auditable": true
													},
													"interrupt_window_hour_of_day": {
														"type": "number",
														"x-auditable": true
													},
													"last_heartbeat": {
														"type": "string",
														"x-auditable": true
													},
													"last_seen_version": {
														"type": "string",
														"x-auditable": true
													},
													"last_updated": {
														"type": "string",
														"x-auditable": true
													},
													"notes": {
														"type": "string",
														"x-auditable": true
													},
													"timezone": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"id",
													"notes",
													"activated",
													"last_updated",
													"timezone",
													"interrupt_window_hour_of_day",
													"interrupt_window_duration_hours"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List Connectors",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors/{connector_id}": {
		"operationId": "mconn-connector-fetch",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"messages": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"type": "array"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"result",
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"maxLength": 0,
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"activated": {
													"type": "boolean",
													"x-auditable": true
												},
												"device": {
													"properties": {
														"id": {
															"type": "string",
															"x-auditable": true
														},
														"serial_number": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												},
												"id": {
													"type": "string",
													"x-auditable": true
												},
												"interrupt_window_duration_hours": {
													"type": "number",
													"x-auditable": true
												},
												"interrupt_window_hour_of_day": {
													"type": "number",
													"x-auditable": true
												},
												"last_heartbeat": {
													"type": "string",
													"x-auditable": true
												},
												"last_seen_version": {
													"type": "string",
													"x-auditable": true
												},
												"last_updated": {
													"type": "string",
													"x-auditable": true
												},
												"notes": {
													"type": "string",
													"x-auditable": true
												},
												"timezone": {
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"notes",
												"activated",
												"last_updated",
												"timezone",
												"interrupt_window_hour_of_day",
												"interrupt_window_duration_hours"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Fetch Connector",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors/{connector_id}/telemetry/events": {
		"operationId": "mconn-connector-telemetry-events-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "from",
				"required": true,
				"schema": {
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "to",
				"required": true,
				"schema": {
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "cursor",
				"schema": {
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"count": {
													"type": "number"
												},
												"cursor": {
													"type": "string"
												},
												"items": {
													"items": {
														"properties": {
															"a": {
																"description": "Time the Event was collected (seconds since the Unix epoch)",
																"type": "number"
															},
															"k": {
																"description": "Kind",
																"type": "string"
															},
															"n": {
																"description": "Sequence number, used to order events with the same timestamp",
																"type": "number"
															},
															"t": {
																"description": "Time the Event was recorded (seconds since the Unix epoch)",
																"type": "number"
															}
														},
														"required": [
															"a",
															"t",
															"n",
															"k"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"items",
												"count"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"429": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Too Many Requests"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List Events",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors/{connector_id}/telemetry/events/{event_t}.{event_n}": {
		"operationId": "mconn-connector-telemetry-events-get",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "event_t",
				"required": true,
				"schema": {
					"type": "number"
				}
			},
			{
				"in": "path",
				"name": "event_n",
				"required": true,
				"schema": {
					"type": "number"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Recorded Event",
											"properties": {
												"e": {
													"oneOf": [
														{
															"properties": {
																"k": {
																	"description": "Initialized process",
																	"enum": [
																		"Init"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Stopped process",
																	"enum": [
																		"Leave"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Started attestation",
																	"enum": [
																		"StartAttestation"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Finished attestation",
																	"enum": [
																		"FinishAttestationSuccess"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Failed attestation",
																	"enum": [
																		"FinishAttestationFailure"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Started crypt key rotation",
																	"enum": [
																		"StartRotateCryptKey"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Finished crypt key rotation",
																	"enum": [
																		"FinishRotateCryptKeySuccess"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Failed crypt key rotation",
																	"enum": [
																		"FinishRotateCryptKeyFailure"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Started PKI rotation",
																	"enum": [
																		"StartRotatePki"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Finished PKI rotation",
																	"enum": [
																		"FinishRotatePkiSuccess"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Failed PKI rotation",
																	"enum": [
																		"FinishRotatePkiFailure"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Started upgrade",
																	"enum": [
																		"StartUpgrade"
																	],
																	"type": "string"
																},
																"url": {
																	"description": "Location of upgrade bundle",
																	"type": "string"
																}
															},
															"required": [
																"k",
																"url"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Finished upgrade",
																	"enum": [
																		"FinishUpgradeSuccess"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Failed upgrade",
																	"enum": [
																		"FinishUpgradeFailure"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Reconciled",
																	"enum": [
																		"Reconcile"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														},
														{
															"properties": {
																"k": {
																	"description": "Configured Cloudflared tunnel",
																	"enum": [
																		"ConfigureCloudflaredTunnel"
																	],
																	"type": "string"
																}
															},
															"required": [
																"k"
															],
															"type": "object"
														}
													],
													"type": "object"
												},
												"n": {
													"description": "Sequence number, used to order events with the same timestamp",
													"type": "number"
												},
												"t": {
													"description": "Time the Event was recorded (seconds since the Unix epoch)",
													"type": "number"
												}
											},
											"required": [
												"t",
												"n",
												"e"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Not Found"
			},
			"429": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Too Many Requests"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Event",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors/{connector_id}/telemetry/events/latest": {
		"operationId": "mconn-connector-telemetry-events-listLatest",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"count": {
													"type": "number"
												},
												"items": {
													"items": {
														"description": "Recorded Event",
														"properties": {
															"e": {
																"oneOf": [
																	{
																		"properties": {
																			"k": {
																				"description": "Initialized process",
																				"enum": [
																					"Init"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Stopped process",
																				"enum": [
																					"Leave"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Started attestation",
																				"enum": [
																					"StartAttestation"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Finished attestation",
																				"enum": [
																					"FinishAttestationSuccess"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Failed attestation",
																				"enum": [
																					"FinishAttestationFailure"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Started crypt key rotation",
																				"enum": [
																					"StartRotateCryptKey"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Finished crypt key rotation",
																				"enum": [
																					"FinishRotateCryptKeySuccess"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Failed crypt key rotation",
																				"enum": [
																					"FinishRotateCryptKeyFailure"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Started PKI rotation",
																				"enum": [
																					"StartRotatePki"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Finished PKI rotation",
																				"enum": [
																					"FinishRotatePkiSuccess"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Failed PKI rotation",
																				"enum": [
																					"FinishRotatePkiFailure"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Started upgrade",
																				"enum": [
																					"StartUpgrade"
																				],
																				"type": "string"
																			},
																			"url": {
																				"description": "Location of upgrade bundle",
																				"type": "string"
																			}
																		},
																		"required": [
																			"k",
																			"url"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Finished upgrade",
																				"enum": [
																					"FinishUpgradeSuccess"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Failed upgrade",
																				"enum": [
																					"FinishUpgradeFailure"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Reconciled",
																				"enum": [
																					"Reconcile"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"k": {
																				"description": "Configured Cloudflared tunnel",
																				"enum": [
																					"ConfigureCloudflaredTunnel"
																				],
																				"type": "string"
																			}
																		},
																		"required": [
																			"k"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"n": {
																"description": "Sequence number, used to order events with the same timestamp",
																"type": "number"
															},
															"t": {
																"description": "Time the Event was recorded (seconds since the Unix epoch)",
																"type": "number"
															}
														},
														"required": [
															"t",
															"n",
															"e"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"items",
												"count"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Not Found"
			},
			"429": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Too Many Requests"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get latest Events",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors/{connector_id}/telemetry/snapshots": {
		"operationId": "mconn-connector-telemetry-snapshots-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "from",
				"required": true,
				"schema": {
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "to",
				"required": true,
				"schema": {
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "cursor",
				"schema": {
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"count": {
													"type": "number"
												},
												"cursor": {
													"type": "string"
												},
												"items": {
													"items": {
														"properties": {
															"a": {
																"description": "Time the Snapshot was collected (seconds since the Unix epoch)",
																"type": "number"
															},
															"t": {
																"description": "Time the Snapshot was recorded (seconds since the Unix epoch)",
																"type": "number"
															}
														},
														"required": [
															"a",
															"t"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"items",
												"count"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"429": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Too Many Requests"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List Snapshots",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors/{connector_id}/telemetry/snapshots/{snapshot_t}": {
		"operationId": "mconn-connector-telemetry-snapshots-get",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "snapshot_t",
				"required": true,
				"schema": {
					"type": "number"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Snapshot",
											"properties": {
												"count_reclaim_failures": {
													"description": "Count of failures to reclaim space",
													"type": "number"
												},
												"count_reclaimed_paths": {
													"description": "Count of reclaimed paths",
													"type": "number"
												},
												"count_record_failed": {
													"description": "Count of failed snapshot recordings",
													"type": "number"
												},
												"count_transmit_failures": {
													"description": "Count of failed snapshot transmissions",
													"type": "number"
												},
												"cpu_count": {
													"description": "Count of processors/cores",
													"type": "number"
												},
												"cpu_pressure_10s": {
													"description": "Percentage of time over a 10 second window that tasks were stalled",
													"type": "number"
												},
												"cpu_pressure_300s": {
													"description": "Percentage of time over a 5 minute window that tasks were stalled",
													"type": "number"
												},
												"cpu_pressure_60s": {
													"description": "Percentage of time over a 1 minute window that tasks were stalled",
													"type": "number"
												},
												"cpu_pressure_total_us": {
													"description": "Total stall time (microseconds)",
													"type": "number"
												},
												"cpu_time_guest_ms": {
													"description": "Time spent running a virtual CPU or guest OS (milliseconds)",
													"type": "number"
												},
												"cpu_time_guest_nice_ms": {
													"description": "Time spent running a niced guest (milliseconds)",
													"type": "number"
												},
												"cpu_time_idle_ms": {
													"description": "Time spent in idle state (milliseconds)",
													"type": "number"
												},
												"cpu_time_iowait_ms": {
													"description": "Time spent wait for I/O to complete (milliseconds)",
													"type": "number"
												},
												"cpu_time_irq_ms": {
													"description": "Time spent servicing interrupts (milliseconds)",
													"type": "number"
												},
												"cpu_time_nice_ms": {
													"description": "Time spent in low-priority user mode (milliseconds)",
													"type": "number"
												},
												"cpu_time_softirq_ms": {
													"description": "Time spent servicing softirqs (milliseconds)",
													"type": "number"
												},
												"cpu_time_steal_ms": {
													"description": "Time stolen (milliseconds)",
													"type": "number"
												},
												"cpu_time_system_ms": {
													"description": "Time spent in system mode (milliseconds)",
													"type": "number"
												},
												"cpu_time_user_ms": {
													"description": "Time spent in user mode (milliseconds)",
													"type": "number"
												},
												"dhcp_leases": {
													"items": {
														"description": "Snapshot DHCP lease",
														"properties": {
															"client_id": {
																"description": "Client ID of the device the IP Address was leased to",
																"type": "string"
															},
															"connector_id": {
																"description": "Connector identifier",
																"type": "string"
															},
															"expiry_time": {
																"description": "Expiry time of the DHCP lease (seconds since the Unix epoch)",
																"type": "number"
															},
															"hostname": {
																"description": "Hostname of the device the IP Address was leased to",
																"type": "string"
															},
															"interface_name": {
																"description": "Name of the network interface",
																"type": "string"
															},
															"ip_address": {
																"description": "IP Address that was leased",
																"type": "string"
															},
															"mac_address": {
																"description": "MAC Address of the device the IP Address was leased to",
																"type": "string"
															}
														},
														"required": [
															"interface_name",
															"expiry_time",
															"mac_address",
															"ip_address",
															"hostname",
															"client_id"
														],
														"type": "object"
													},
													"type": "array"
												},
												"disks": {
													"items": {
														"description": "Snapshot Disk",
														"properties": {
															"connector_id": {
																"description": "Connector identifier",
																"type": "string"
															},
															"discards": {
																"description": "Discards completed successfully",
																"type": "number"
															},
															"discards_merged": {
																"description": "Discards merged",
																"type": "number"
															},
															"flushes": {
																"description": "Flushes completed successfully",
																"type": "number"
															},
															"in_progress": {
																"description": "I/Os currently in progress",
																"type": "number"
															},
															"major": {
																"description": "Device major number",
																"type": "number"
															},
															"merged": {
																"description": "Reads merged",
																"type": "number"
															},
															"minor": {
																"description": "Device minor number",
																"type": "number"
															},
															"name": {
																"description": "Device name",
																"type": "string"
															},
															"reads": {
																"description": "Reads completed successfully",
																"type": "number"
															},
															"sectors_discarded": {
																"description": "Sectors discarded",
																"type": "number"
															},
															"sectors_read": {
																"description": "Sectors read successfully",
																"type": "number"
															},
															"sectors_written": {
																"description": "Sectors written successfully",
																"type": "number"
															},
															"time_discarding_ms": {
																"description": "Time spent discarding (milliseconds)",
																"type": "number"
															},
															"time_flushing_ms": {
																"description": "Time spent flushing (milliseconds)",
																"type": "number"
															},
															"time_in_progress_ms": {
																"description": "Time spent doing I/Os (milliseconds)",
																"type": "number"
															},
															"time_reading_ms": {
																"description": "Time spent reading (milliseconds)",
																"type": "number"
															},
															"time_writing_ms": {
																"description": "Time spent writing (milliseconds)",
																"type": "number"
															},
															"weighted_time_in_progress_ms": {
																"description": "Weighted time spent doing I/Os (milliseconds)",
																"type": "number"
															},
															"writes": {
																"description": "Writes completed",
																"type": "number"
															},
															"writes_merged": {
																"description": "Writes merged",
																"type": "number"
															}
														},
														"required": [
															"in_progress",
															"major",
															"merged",
															"minor",
															"name",
															"reads",
															"sectors_read",
															"sectors_written",
															"time_in_progress_ms",
															"time_reading_ms",
															"time_writing_ms",
															"weighted_time_in_progress_ms",
															"writes",
															"writes_merged"
														],
														"type": "object"
													},
													"type": "array"
												},
												"ha_state": {
													"description": "Name of high availability state",
													"type": "string"
												},
												"ha_value": {
													"description": "Numeric value associated with high availability state (0 = disabled, 1 = active, 2 = standby, 3 = stopped, 4 = fault)",
													"type": "number"
												},
												"interfaces": {
													"items": {
														"description": "Snapshot Interface",
														"properties": {
															"connector_id": {
																"description": "Connector identifier",
																"type": "string"
															},
															"ip_addresses": {
																"items": {
																	"description": "Snapshot Interface Address",
																	"properties": {
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"interface_name": {
																			"description": "Name of the network interface",
																			"type": "string"
																		},
																		"ip_address": {
																			"description": "IP address of the network interface",
																			"type": "string"
																		}
																	},
																	"required": [
																		"interface_name",
																		"ip_address"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"name": {
																"description": "Name of the network interface",
																"type": "string"
															},
															"operstate": {
																"description": "UP/DOWN state of the network interface",
																"type": "string"
															},
															"speed": {
																"description": "Speed of the network interface (bits per second)",
																"type": "number"
															}
														},
														"required": [
															"name",
															"operstate"
														],
														"type": "object"
													},
													"type": "array"
												},
												"io_pressure_full_10s": {
													"description": "Percentage of time over a 10 second window that all tasks were stalled",
													"type": "number"
												},
												"io_pressure_full_300s": {
													"description": "Percentage of time over a 5 minute window that all tasks were stalled",
													"type": "number"
												},
												"io_pressure_full_60s": {
													"description": "Percentage of time over a 1 minute window that all tasks were stalled",
													"type": "number"
												},
												"io_pressure_full_total_us": {
													"description": "Total stall time (microseconds)",
													"type": "number"
												},
												"io_pressure_some_10s": {
													"description": "Percentage of time over a 10 second window that some tasks were stalled",
													"type": "number"
												},
												"io_pressure_some_300s": {
													"description": "Percentage of time over a 3 minute window that some tasks were stalled",
													"type": "number"
												},
												"io_pressure_some_60s": {
													"description": "Percentage of time over a 1 minute window that some tasks were stalled",
													"type": "number"
												},
												"io_pressure_some_total_us": {
													"description": "Total stall time (microseconds)",
													"type": "number"
												},
												"kernel_btime": {
													"description": "Boot time (seconds since Unix epoch)",
													"type": "number"
												},
												"kernel_ctxt": {
													"description": "Number of context switches that the system underwent",
													"type": "number"
												},
												"kernel_processes": {
													"description": "Number of forks since boot",
													"type": "number"
												},
												"kernel_processes_blocked": {
													"description": "Number of processes blocked waiting for I/O",
													"type": "number"
												},
												"kernel_processes_running": {
													"description": "Number of processes in runnable state",
													"type": "number"
												},
												"load_average_15m": {
													"description": "The fifteen-minute load average",
													"type": "number"
												},
												"load_average_1m": {
													"description": "The one-minute load average",
													"type": "number"
												},
												"load_average_5m": {
													"description": "The five-minute load average",
													"type": "number"
												},
												"load_average_cur": {
													"description": "Number of currently runnable kernel scheduling entities",
													"type": "number"
												},
												"load_average_max": {
													"description": "Number of kernel scheduling entities that currently exist on the system",
													"type": "number"
												},
												"memory_active_bytes": {
													"description": "Memory that has been used more recently",
													"type": "number"
												},
												"memory_anon_hugepages_bytes": {
													"description": "Non-file backed huge pages mapped into user-space page tables",
													"type": "number"
												},
												"memory_anon_pages_bytes": {
													"description": "Non-file backed pages mapped into user-space page tables",
													"type": "number"
												},
												"memory_available_bytes": {
													"description": "Estimate of how much memory is available for starting new applications",
													"type": "number"
												},
												"memory_bounce_bytes": {
													"description": "Memory used for block device bounce buffers",
													"type": "number"
												},
												"memory_buffers_bytes": {
													"description": "Relatively temporary storage for raw disk blocks",
													"type": "number"
												},
												"memory_cached_bytes": {
													"description": "In-memory cache for files read from the disk",
													"type": "number"
												},
												"memory_cma_free_bytes": {
													"description": "Free CMA (Contiguous Memory Allocator) pages",
													"type": "number"
												},
												"memory_cma_total_bytes": {
													"description": "Total CMA (Contiguous Memory Allocator) pages",
													"type": "number"
												},
												"memory_commit_limit_bytes": {
													"description": "Total amount of memory currently available to be allocated on the system",
													"type": "number"
												},
												"memory_committed_as_bytes": {
													"description": "Amount of memory presently allocated on the system",
													"type": "number"
												},
												"memory_dirty_bytes": {
													"description": "Memory which is waiting to get written back to the disk",
													"type": "number"
												},
												"memory_free_bytes": {
													"description": "The sum of LowFree and HighFree",
													"type": "number"
												},
												"memory_high_free_bytes": {
													"description": "Amount of free highmem",
													"type": "number"
												},
												"memory_high_total_bytes": {
													"description": "Total amount of highmem",
													"type": "number"
												},
												"memory_hugepages_free": {
													"description": "The number of huge pages in the pool that are not yet allocated",
													"type": "number"
												},
												"memory_hugepages_rsvd": {
													"description": "Number of huge pages for which a commitment has been made, but no allocation has yet been made",
													"type": "number"
												},
												"memory_hugepages_surp": {
													"description": "Number of huge pages in the pool above the threshold",
													"type": "number"
												},
												"memory_hugepages_total": {
													"description": "The size of the pool of huge pages",
													"type": "number"
												},
												"memory_hugepagesize_bytes": {
													"description": "The size of huge pages",
													"type": "number"
												},
												"memory_inactive_bytes": {
													"description": "Memory which has been less recently used",
													"type": "number"
												},
												"memory_k_reclaimable_bytes": {
													"description": "Kernel allocations that the kernel will attempt to reclaim under memory pressure",
													"type": "number"
												},
												"memory_kernel_stack_bytes": {
													"description": "Amount of memory allocated to kernel stacks",
													"type": "number"
												},
												"memory_low_free_bytes": {
													"description": "Amount of free lowmem",
													"type": "number"
												},
												"memory_low_total_bytes": {
													"description": "Total amount of lowmem",
													"type": "number"
												},
												"memory_mapped_bytes": {
													"description": "Files which have been mapped into memory",
													"type": "number"
												},
												"memory_page_tables_bytes": {
													"description": "Amount of memory dedicated to the lowest level of page tables",
													"type": "number"
												},
												"memory_per_cpu_bytes": {
													"description": "Memory allocated to the per-cpu alloctor used to back per-cpu allocations",
													"type": "number"
												},
												"memory_pressure_full_10s": {
													"description": "Percentage of time over a 10 second window that all tasks were stalled",
													"type": "number"
												},
												"memory_pressure_full_300s": {
													"description": "Percentage of time over a 5 minute window that all tasks were stalled",
													"type": "number"
												},
												"memory_pressure_full_60s": {
													"description": "Percentage of time over a 1 minute window that all tasks were stalled",
													"type": "number"
												},
												"memory_pressure_full_total_us": {
													"description": "Total stall time (microseconds)",
													"type": "number"
												},
												"memory_pressure_some_10s": {
													"description": "Percentage of time over a 10 second window that some tasks were stalled",
													"type": "number"
												},
												"memory_pressure_some_300s": {
													"description": "Percentage of time over a 5 minute window that some tasks were stalled",
													"type": "number"
												},
												"memory_pressure_some_60s": {
													"description": "Percentage of time over a 1 minute window that some tasks were stalled",
													"type": "number"
												},
												"memory_pressure_some_total_us": {
													"description": "Total stall time (microseconds)",
													"type": "number"
												},
												"memory_s_reclaimable_bytes": {
													"description": "Part of slab that can be reclaimed on memory pressure",
													"type": "number"
												},
												"memory_s_unreclaim_bytes": {
													"description": "Part of slab that cannot be reclaimed on memory pressure",
													"type": "number"
												},
												"memory_secondary_page_tables_bytes": {
													"description": "Amount of memory dedicated to the lowest level of page tables",
													"type": "number"
												},
												"memory_shmem_bytes": {
													"description": "Amount of memory consumed by tmpfs",
													"type": "number"
												},
												"memory_shmem_hugepages_bytes": {
													"description": "Memory used by shmem and tmpfs, allocated with huge pages",
													"type": "number"
												},
												"memory_shmem_pmd_mapped_bytes": {
													"description": "Shared memory mapped into user space with huge pages",
													"type": "number"
												},
												"memory_slab_bytes": {
													"description": "In-kernel data structures cache",
													"type": "number"
												},
												"memory_swap_cached_bytes": {
													"description": "Memory swapped out and back in while still in swap file",
													"type": "number"
												},
												"memory_swap_free_bytes": {
													"description": "Amount of swap space that is currently unused",
													"type": "number"
												},
												"memory_swap_total_bytes": {
													"description": "Total amount of swap space available",
													"type": "number"
												},
												"memory_total_bytes": {
													"description": "Total usable RAM",
													"type": "number"
												},
												"memory_vmalloc_chunk_bytes": {
													"description": "Largest contiguous block of vmalloc area which is free",
													"type": "number"
												},
												"memory_vmalloc_total_bytes": {
													"description": "Total size of vmalloc memory area",
													"type": "number"
												},
												"memory_vmalloc_used_bytes": {
													"description": "Amount of vmalloc area which is used",
													"type": "number"
												},
												"memory_writeback_bytes": {
													"description": "Memory which is actively being written back to the disk",
													"type": "number"
												},
												"memory_writeback_tmp_bytes": {
													"description": "Memory used by FUSE for temporary writeback buffers",
													"type": "number"
												},
												"memory_z_swap_bytes": {
													"description": "Memory consumed by the zswap backend, compressed",
													"type": "number"
												},
												"memory_z_swapped_bytes": {
													"description": "Amount of anonymous memory stored in zswap, uncompressed",
													"type": "number"
												},
												"mounts": {
													"items": {
														"description": "Snapshot Mount",
														"properties": {
															"available_bytes": {
																"description": "Available disk size (bytes)",
																"type": "number"
															},
															"connector_id": {
																"description": "Connector identifier",
																"type": "string"
															},
															"file_system": {
																"description": "File system on disk (EXT4, NTFS, etc.)",
																"type": "string"
															},
															"is_read_only": {
																"description": "Determines whether the disk is read-only",
																"type": "boolean"
															},
															"is_removable": {
																"description": "Determines whether the disk is removable",
																"type": "boolean"
															},
															"kind": {
																"description": "Kind of disk (HDD, SSD, etc.)",
																"type": "string"
															},
															"mount_point": {
																"description": "Path where disk is mounted",
																"type": "string"
															},
															"name": {
																"description": "Name of the disk mount",
																"type": "string"
															},
															"total_bytes": {
																"description": "Total disk size (bytes)",
																"type": "number"
															}
														},
														"required": [
															"name",
															"kind",
															"file_system",
															"mount_point"
														],
														"type": "object"
													},
													"type": "array"
												},
												"netdevs": {
													"items": {
														"description": "Snapshot Netdev",
														"properties": {
															"connector_id": {
																"description": "Connector identifier",
																"type": "string"
															},
															"name": {
																"description": "Name of the network device",
																"type": "string"
															},
															"recv_bytes": {
																"description": "Total bytes received",
																"type": "number"
															},
															"recv_compressed": {
																"description": "Compressed packets received",
																"type": "number"
															},
															"recv_drop": {
																"description": "Packets dropped",
																"type": "number"
															},
															"recv_errs": {
																"description": "Bad packets received",
																"type": "number"
															},
															"recv_fifo": {
																"description": "FIFO overruns",
																"type": "number"
															},
															"recv_frame": {
																"description": "Frame alignment errors",
																"type": "number"
															},
															"recv_multicast": {
																"description": "Multicast packets received",
																"type": "number"
															},
															"recv_packets": {
																"description": "Total packets received",
																"type": "number"
															},
															"sent_bytes": {
																"description": "Total bytes transmitted",
																"type": "number"
															},
															"sent_carrier": {
																"description": "Number of packets not sent due to carrier errors",
																"type": "number"
															},
															"sent_colls": {
																"description": "Number of collisions",
																"type": "number"
															},
															"sent_compressed": {
																"description": "Number of compressed packets transmitted",
																"type": "number"
															},
															"sent_drop": {
																"description": "Number of packets dropped during transmission",
																"type": "number"
															},
															"sent_errs": {
																"description": "Number of transmission errors",
																"type": "number"
															},
															"sent_fifo": {
																"description": "FIFO overruns",
																"type": "number"
															},
															"sent_packets": {
																"description": "Total packets transmitted",
																"type": "number"
															}
														},
														"required": [
															"name",
															"recv_bytes",
															"recv_packets",
															"recv_errs",
															"recv_drop",
															"recv_fifo",
															"recv_frame",
															"recv_compressed",
															"recv_multicast",
															"sent_bytes",
															"sent_packets",
															"sent_errs",
															"sent_drop",
															"sent_fifo",
															"sent_colls",
															"sent_carrier",
															"sent_compressed"
														],
														"type": "object"
													},
													"type": "array"
												},
												"snmp_icmp_in_addr_mask_reps": {
													"description": "Number of ICMP Address Mask Reply messages received",
													"type": "number"
												},
												"snmp_icmp_in_addr_masks": {
													"description": "Number of ICMP Address Mask Request messages received",
													"type": "number"
												},
												"snmp_icmp_in_csum_errors": {
													"description": "Number of ICMP messages received with bad checksums",
													"type": "number"
												},
												"snmp_icmp_in_dest_unreachs": {
													"description": "Number of ICMP Destination Unreachable messages received",
													"type": "number"
												},
												"snmp_icmp_in_echo_reps": {
													"description": "Number of ICMP Echo Reply messages received",
													"type": "number"
												},
												"snmp_icmp_in_echos": {
													"description": "Number of ICMP Echo (request) messages received",
													"type": "number"
												},
												"snmp_icmp_in_errors": {
													"description": "Number of ICMP messages received with ICMP-specific errors",
													"type": "number"
												},
												"snmp_icmp_in_msgs": {
													"description": "Number of ICMP messages received",
													"type": "number"
												},
												"snmp_icmp_in_parm_probs": {
													"description": "Number of ICMP Parameter Problem messages received",
													"type": "number"
												},
												"snmp_icmp_in_redirects": {
													"description": "Number of ICMP Redirect messages received",
													"type": "number"
												},
												"snmp_icmp_in_src_quenchs": {
													"description": "Number of ICMP Source Quench messages received",
													"type": "number"
												},
												"snmp_icmp_in_time_excds": {
													"description": "Number of ICMP Time Exceeded messages received",
													"type": "number"
												},
												"snmp_icmp_in_timestamp_reps": {
													"description": "Number of ICMP Address Mask Request messages received",
													"type": "number"
												},
												"snmp_icmp_in_timestamps": {
													"description": "Number of ICMP Timestamp (request) messages received",
													"type": "number"
												},
												"snmp_icmp_out_addr_mask_reps": {
													"description": "Number of ICMP Address Mask Reply messages sent",
													"type": "number"
												},
												"snmp_icmp_out_addr_masks": {
													"description": "Number of ICMP Address Mask Request messages sent",
													"type": "number"
												},
												"snmp_icmp_out_dest_unreachs": {
													"description": "Number of ICMP Destination Unreachable messages sent",
													"type": "number"
												},
												"snmp_icmp_out_echo_reps": {
													"description": "Number of ICMP Echo Reply messages sent",
													"type": "number"
												},
												"snmp_icmp_out_echos": {
													"description": "Number of ICMP Echo (request) messages sent",
													"type": "number"
												},
												"snmp_icmp_out_errors": {
													"description": "Number of ICMP messages which this entity did not send due to ICMP-specific errors",
													"type": "number"
												},
												"snmp_icmp_out_msgs": {
													"description": "Number of ICMP messages attempted to send",
													"type": "number"
												},
												"snmp_icmp_out_parm_probs": {
													"description": "Number of ICMP Parameter Problem messages sent",
													"type": "number"
												},
												"snmp_icmp_out_redirects": {
													"description": "Number of ICMP Redirect messages sent",
													"type": "number"
												},
												"snmp_icmp_out_src_quenchs": {
													"description": "Number of ICMP Source Quench messages sent",
													"type": "number"
												},
												"snmp_icmp_out_time_excds": {
													"description": "Number of ICMP Time Exceeded messages sent",
													"type": "number"
												},
												"snmp_icmp_out_timestamp_reps": {
													"description": "Number of ICMP Timestamp Reply messages sent",
													"type": "number"
												},
												"snmp_icmp_out_timestamps": {
													"description": "Number of ICMP Timestamp (request) messages sent",
													"type": "number"
												},
												"snmp_ip_default_ttl": {
													"description": "Default value of the Time-To-Live field of the IP header",
													"type": "number"
												},
												"snmp_ip_forw_datagrams": {
													"description": "Number of datagrams forwarded to their final destination",
													"type": "number"
												},
												"snmp_ip_forwarding_enabled": {
													"description": "Set when acting as an IP gateway",
													"type": "boolean"
												},
												"snmp_ip_frag_creates": {
													"description": "Number of datagrams generated by fragmentation",
													"type": "number"
												},
												"snmp_ip_frag_fails": {
													"description": "Number of datagrams discarded because fragmentation failed",
													"type": "number"
												},
												"snmp_ip_frag_oks": {
													"description": "Number of datagrams successfully fragmented",
													"type": "number"
												},
												"snmp_ip_in_addr_errors": {
													"description": "Number of input datagrams discarded due to errors in the IP address",
													"type": "number"
												},
												"snmp_ip_in_delivers": {
													"description": "Number of input datagrams successfully delivered to IP user-protocols",
													"type": "number"
												},
												"snmp_ip_in_discards": {
													"description": "Number of input datagrams otherwise discarded",
													"type": "number"
												},
												"snmp_ip_in_hdr_errors": {
													"description": "Number of input datagrams discarded due to errors in the IP header",
													"type": "number"
												},
												"snmp_ip_in_receives": {
													"description": "Number of input datagrams received from interfaces",
													"type": "number"
												},
												"snmp_ip_in_unknown_protos": {
													"description": "Number of input datagrams discarded due unknown or unsupported protocol",
													"type": "number"
												},
												"snmp_ip_out_discards": {
													"description": "Number of output datagrams otherwise discarded",
													"type": "number"
												},
												"snmp_ip_out_no_routes": {
													"description": "Number of output datagrams discarded because no route matched",
													"type": "number"
												},
												"snmp_ip_out_requests": {
													"description": "Number of datagrams supplied for transmission",
													"type": "number"
												},
												"snmp_ip_reasm_fails": {
													"description": "Number of failures detected by the reassembly algorithm",
													"type": "number"
												},
												"snmp_ip_reasm_oks": {
													"description": "Number of datagrams successfully reassembled",
													"type": "number"
												},
												"snmp_ip_reasm_reqds": {
													"description": "Number of fragments received which needed to be reassembled",
													"type": "number"
												},
												"snmp_ip_reasm_timeout": {
													"description": "Number of seconds fragments are held while awaiting reassembly",
													"type": "number"
												},
												"snmp_tcp_active_opens": {
													"description": "Number of times TCP transitions to SYN-SENT from CLOSED",
													"type": "number"
												},
												"snmp_tcp_attempt_fails": {
													"description": "Number of times TCP transitions to CLOSED from SYN-SENT or SYN-RCVD, plus transitions to LISTEN from SYN-RCVD",
													"type": "number"
												},
												"snmp_tcp_curr_estab": {
													"description": "Number of TCP connections in ESTABLISHED or CLOSE-WAIT",
													"type": "number"
												},
												"snmp_tcp_estab_resets": {
													"description": "Number of times TCP transitions to CLOSED from ESTABLISHED or CLOSE-WAIT",
													"type": "number"
												},
												"snmp_tcp_in_csum_errors": {
													"description": "Number of TCP segments received with checksum errors",
													"type": "number"
												},
												"snmp_tcp_in_errs": {
													"description": "Number of TCP segments received in error",
													"type": "number"
												},
												"snmp_tcp_in_segs": {
													"description": "Number of TCP segments received",
													"type": "number"
												},
												"snmp_tcp_max_conn": {
													"description": "Limit on the total number of TCP connections",
													"type": "number"
												},
												"snmp_tcp_out_rsts": {
													"description": "Number of TCP segments sent with RST flag",
													"type": "number"
												},
												"snmp_tcp_out_segs": {
													"description": "Number of TCP segments sent",
													"type": "number"
												},
												"snmp_tcp_passive_opens": {
													"description": "Number of times TCP transitions to SYN-RCVD from LISTEN",
													"type": "number"
												},
												"snmp_tcp_retrans_segs": {
													"description": "Number of TCP segments retransmitted",
													"type": "number"
												},
												"snmp_tcp_rto_max": {
													"description": "Maximum value permitted by a TCP implementation for the retransmission timeout (milliseconds)",
													"type": "number"
												},
												"snmp_tcp_rto_min": {
													"description": "Minimum value permitted by a TCP implementation for the retransmission timeout (milliseconds)",
													"type": "number"
												},
												"snmp_udp_in_datagrams": {
													"description": "Number of UDP datagrams delivered to UDP applications",
													"type": "number"
												},
												"snmp_udp_in_errors": {
													"description": "Number of UDP datagrams failed to be delivered for reasons other than lack of application at the destination port",
													"type": "number"
												},
												"snmp_udp_no_ports": {
													"description": "Number of UDP datagrams received for which there was not application at the destination port",
													"type": "number"
												},
												"snmp_udp_out_datagrams": {
													"description": "Number of UDP datagrams sent",
													"type": "number"
												},
												"system_boot_time_s": {
													"description": "Boottime of the system (seconds since the Unix epoch)",
													"type": "number"
												},
												"t": {
													"description": "Time the Snapshot was recorded (seconds since the Unix epoch)",
													"type": "number"
												},
												"thermals": {
													"items": {
														"description": "Snapshot Thermal",
														"properties": {
															"connector_id": {
																"description": "Connector identifier",
																"type": "string"
															},
															"critical_celcius": {
																"description": "Critical failure temperature of the component (degrees Celsius)",
																"type": "number"
															},
															"current_celcius": {
																"description": "Current temperature of the component (degrees Celsius)",
																"type": "number"
															},
															"label": {
																"description": "Sensor identifier for the component",
																"type": "string"
															},
															"max_celcius": {
																"description": "Maximum temperature of the component (degrees Celsius)",
																"type": "number"
															}
														},
														"required": [
															"label"
														],
														"type": "object"
													},
													"type": "array"
												},
												"tunnels": {
													"items": {
														"description": "Snapshot Tunnels",
														"properties": {
															"connector_id": {
																"description": "Connector identifier",
																"type": "string"
															},
															"health_state": {
																"description": "Name of tunnel health state (unknown, healthy, degraded, down)",
																"type": "string"
															},
															"health_value": {
																"description": "Numeric value associated with tunnel state (0 = unknown, 1 = healthy, 2 = degraded, 3 = down)",
																"type": "number"
															},
															"interface_name": {
																"description": "The tunnel interface name (i.e. xfrm1, xfrm3.99, etc.)",
																"type": "string"
															},
															"tunnel_id": {
																"description": "Tunnel identifier",
																"type": "string"
															}
														},
														"required": [
															"tunnel_id",
															"interface_name",
															"health_state",
															"health_value"
														],
														"type": "object"
													},
													"type": "array"
												},
												"uptime_idle_ms": {
													"description": "Sum of how much time each core has spent idle",
													"type": "number"
												},
												"uptime_total_ms": {
													"description": "Uptime of the system, including time spent in suspend",
													"type": "number"
												},
												"v": {
													"description": "Version",
													"type": "string"
												}
											},
											"required": [
												"t",
												"v",
												"count_reclaim_failures",
												"count_reclaimed_paths",
												"count_record_failed",
												"count_transmit_failures"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Not Found"
			},
			"429": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Too Many Requests"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Snapshot",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/connectors/{connector_id}/telemetry/snapshots/latest": {
		"operationId": "mconn-connector-telemetry-snapshots-listLatest",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"count": {
													"type": "number"
												},
												"items": {
													"items": {
														"description": "Snapshot",
														"properties": {
															"count_reclaim_failures": {
																"description": "Count of failures to reclaim space",
																"type": "number"
															},
															"count_reclaimed_paths": {
																"description": "Count of reclaimed paths",
																"type": "number"
															},
															"count_record_failed": {
																"description": "Count of failed snapshot recordings",
																"type": "number"
															},
															"count_transmit_failures": {
																"description": "Count of failed snapshot transmissions",
																"type": "number"
															},
															"cpu_count": {
																"description": "Count of processors/cores",
																"type": "number"
															},
															"cpu_pressure_10s": {
																"description": "Percentage of time over a 10 second window that tasks were stalled",
																"type": "number"
															},
															"cpu_pressure_300s": {
																"description": "Percentage of time over a 5 minute window that tasks were stalled",
																"type": "number"
															},
															"cpu_pressure_60s": {
																"description": "Percentage of time over a 1 minute window that tasks were stalled",
																"type": "number"
															},
															"cpu_pressure_total_us": {
																"description": "Total stall time (microseconds)",
																"type": "number"
															},
															"cpu_time_guest_ms": {
																"description": "Time spent running a virtual CPU or guest OS (milliseconds)",
																"type": "number"
															},
															"cpu_time_guest_nice_ms": {
																"description": "Time spent running a niced guest (milliseconds)",
																"type": "number"
															},
															"cpu_time_idle_ms": {
																"description": "Time spent in idle state (milliseconds)",
																"type": "number"
															},
															"cpu_time_iowait_ms": {
																"description": "Time spent wait for I/O to complete (milliseconds)",
																"type": "number"
															},
															"cpu_time_irq_ms": {
																"description": "Time spent servicing interrupts (milliseconds)",
																"type": "number"
															},
															"cpu_time_nice_ms": {
																"description": "Time spent in low-priority user mode (milliseconds)",
																"type": "number"
															},
															"cpu_time_softirq_ms": {
																"description": "Time spent servicing softirqs (milliseconds)",
																"type": "number"
															},
															"cpu_time_steal_ms": {
																"description": "Time stolen (milliseconds)",
																"type": "number"
															},
															"cpu_time_system_ms": {
																"description": "Time spent in system mode (milliseconds)",
																"type": "number"
															},
															"cpu_time_user_ms": {
																"description": "Time spent in user mode (milliseconds)",
																"type": "number"
															},
															"dhcp_leases": {
																"items": {
																	"description": "Snapshot DHCP lease",
																	"properties": {
																		"client_id": {
																			"description": "Client ID of the device the IP Address was leased to",
																			"type": "string"
																		},
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"expiry_time": {
																			"description": "Expiry time of the DHCP lease (seconds since the Unix epoch)",
																			"type": "number"
																		},
																		"hostname": {
																			"description": "Hostname of the device the IP Address was leased to",
																			"type": "string"
																		},
																		"interface_name": {
																			"description": "Name of the network interface",
																			"type": "string"
																		},
																		"ip_address": {
																			"description": "IP Address that was leased",
																			"type": "string"
																		},
																		"mac_address": {
																			"description": "MAC Address of the device the IP Address was leased to",
																			"type": "string"
																		}
																	},
																	"required": [
																		"interface_name",
																		"expiry_time",
																		"mac_address",
																		"ip_address",
																		"hostname",
																		"client_id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"disks": {
																"items": {
																	"description": "Snapshot Disk",
																	"properties": {
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"discards": {
																			"description": "Discards completed successfully",
																			"type": "number"
																		},
																		"discards_merged": {
																			"description": "Discards merged",
																			"type": "number"
																		},
																		"flushes": {
																			"description": "Flushes completed successfully",
																			"type": "number"
																		},
																		"in_progress": {
																			"description": "I/Os currently in progress",
																			"type": "number"
																		},
																		"major": {
																			"description": "Device major number",
																			"type": "number"
																		},
																		"merged": {
																			"description": "Reads merged",
																			"type": "number"
																		},
																		"minor": {
																			"description": "Device minor number",
																			"type": "number"
																		},
																		"name": {
																			"description": "Device name",
																			"type": "string"
																		},
																		"reads": {
																			"description": "Reads completed successfully",
																			"type": "number"
																		},
																		"sectors_discarded": {
																			"description": "Sectors discarded",
																			"type": "number"
																		},
																		"sectors_read": {
																			"description": "Sectors read successfully",
																			"type": "number"
																		},
																		"sectors_written": {
																			"description": "Sectors written successfully",
																			"type": "number"
																		},
																		"time_discarding_ms": {
																			"description": "Time spent discarding (milliseconds)",
																			"type": "number"
																		},
																		"time_flushing_ms": {
																			"description": "Time spent flushing (milliseconds)",
																			"type": "number"
																		},
																		"time_in_progress_ms": {
																			"description": "Time spent doing I/Os (milliseconds)",
																			"type": "number"
																		},
																		"time_reading_ms": {
																			"description": "Time spent reading (milliseconds)",
																			"type": "number"
																		},
																		"time_writing_ms": {
																			"description": "Time spent writing (milliseconds)",
																			"type": "number"
																		},
																		"weighted_time_in_progress_ms": {
																			"description": "Weighted time spent doing I/Os (milliseconds)",
																			"type": "number"
																		},
																		"writes": {
																			"description": "Writes completed",
																			"type": "number"
																		},
																		"writes_merged": {
																			"description": "Writes merged",
																			"type": "number"
																		}
																	},
																	"required": [
																		"in_progress",
																		"major",
																		"merged",
																		"minor",
																		"name",
																		"reads",
																		"sectors_read",
																		"sectors_written",
																		"time_in_progress_ms",
																		"time_reading_ms",
																		"time_writing_ms",
																		"weighted_time_in_progress_ms",
																		"writes",
																		"writes_merged"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"ha_state": {
																"description": "Name of high availability state",
																"type": "string"
															},
															"ha_value": {
																"description": "Numeric value associated with high availability state (0 = disabled, 1 = active, 2 = standby, 3 = stopped, 4 = fault)",
																"type": "number"
															},
															"interfaces": {
																"items": {
																	"description": "Snapshot Interface",
																	"properties": {
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"ip_addresses": {
																			"items": {
																				"description": "Snapshot Interface Address",
																				"properties": {
																					"connector_id": {
																						"description": "Connector identifier",
																						"type": "string"
																					},
																					"interface_name": {
																						"description": "Name of the network interface",
																						"type": "string"
																					},
																					"ip_address": {
																						"description": "IP address of the network interface",
																						"type": "string"
																					}
																				},
																				"required": [
																					"interface_name",
																					"ip_address"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"name": {
																			"description": "Name of the network interface",
																			"type": "string"
																		},
																		"operstate": {
																			"description": "UP/DOWN state of the network interface",
																			"type": "string"
																		},
																		"speed": {
																			"description": "Speed of the network interface (bits per second)",
																			"type": "number"
																		}
																	},
																	"required": [
																		"name",
																		"operstate"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"io_pressure_full_10s": {
																"description": "Percentage of time over a 10 second window that all tasks were stalled",
																"type": "number"
															},
															"io_pressure_full_300s": {
																"description": "Percentage of time over a 5 minute window that all tasks were stalled",
																"type": "number"
															},
															"io_pressure_full_60s": {
																"description": "Percentage of time over a 1 minute window that all tasks were stalled",
																"type": "number"
															},
															"io_pressure_full_total_us": {
																"description": "Total stall time (microseconds)",
																"type": "number"
															},
															"io_pressure_some_10s": {
																"description": "Percentage of time over a 10 second window that some tasks were stalled",
																"type": "number"
															},
															"io_pressure_some_300s": {
																"description": "Percentage of time over a 3 minute window that some tasks were stalled",
																"type": "number"
															},
															"io_pressure_some_60s": {
																"description": "Percentage of time over a 1 minute window that some tasks were stalled",
																"type": "number"
															},
															"io_pressure_some_total_us": {
																"description": "Total stall time (microseconds)",
																"type": "number"
															},
															"kernel_btime": {
																"description": "Boot time (seconds since Unix epoch)",
																"type": "number"
															},
															"kernel_ctxt": {
																"description": "Number of context switches that the system underwent",
																"type": "number"
															},
															"kernel_processes": {
																"description": "Number of forks since boot",
																"type": "number"
															},
															"kernel_processes_blocked": {
																"description": "Number of processes blocked waiting for I/O",
																"type": "number"
															},
															"kernel_processes_running": {
																"description": "Number of processes in runnable state",
																"type": "number"
															},
															"load_average_15m": {
																"description": "The fifteen-minute load average",
																"type": "number"
															},
															"load_average_1m": {
																"description": "The one-minute load average",
																"type": "number"
															},
															"load_average_5m": {
																"description": "The five-minute load average",
																"type": "number"
															},
															"load_average_cur": {
																"description": "Number of currently runnable kernel scheduling entities",
																"type": "number"
															},
															"load_average_max": {
																"description": "Number of kernel scheduling entities that currently exist on the system",
																"type": "number"
															},
															"memory_active_bytes": {
																"description": "Memory that has been used more recently",
																"type": "number"
															},
															"memory_anon_hugepages_bytes": {
																"description": "Non-file backed huge pages mapped into user-space page tables",
																"type": "number"
															},
															"memory_anon_pages_bytes": {
																"description": "Non-file backed pages mapped into user-space page tables",
																"type": "number"
															},
															"memory_available_bytes": {
																"description": "Estimate of how much memory is available for starting new applications",
																"type": "number"
															},
															"memory_bounce_bytes": {
																"description": "Memory used for block device bounce buffers",
																"type": "number"
															},
															"memory_buffers_bytes": {
																"description": "Relatively temporary storage for raw disk blocks",
																"type": "number"
															},
															"memory_cached_bytes": {
																"description": "In-memory cache for files read from the disk",
																"type": "number"
															},
															"memory_cma_free_bytes": {
																"description": "Free CMA (Contiguous Memory Allocator) pages",
																"type": "number"
															},
															"memory_cma_total_bytes": {
																"description": "Total CMA (Contiguous Memory Allocator) pages",
																"type": "number"
															},
															"memory_commit_limit_bytes": {
																"description": "Total amount of memory currently available to be allocated on the system",
																"type": "number"
															},
															"memory_committed_as_bytes": {
																"description": "Amount of memory presently allocated on the system",
																"type": "number"
															},
															"memory_dirty_bytes": {
																"description": "Memory which is waiting to get written back to the disk",
																"type": "number"
															},
															"memory_free_bytes": {
																"description": "The sum of LowFree and HighFree",
																"type": "number"
															},
															"memory_high_free_bytes": {
																"description": "Amount of free highmem",
																"type": "number"
															},
															"memory_high_total_bytes": {
																"description": "Total amount of highmem",
																"type": "number"
															},
															"memory_hugepages_free": {
																"description": "The number of huge pages in the pool that are not yet allocated",
																"type": "number"
															},
															"memory_hugepages_rsvd": {
																"description": "Number of huge pages for which a commitment has been made, but no allocation has yet been made",
																"type": "number"
															},
															"memory_hugepages_surp": {
																"description": "Number of huge pages in the pool above the threshold",
																"type": "number"
															},
															"memory_hugepages_total": {
																"description": "The size of the pool of huge pages",
																"type": "number"
															},
															"memory_hugepagesize_bytes": {
																"description": "The size of huge pages",
																"type": "number"
															},
															"memory_inactive_bytes": {
																"description": "Memory which has been less recently used",
																"type": "number"
															},
															"memory_k_reclaimable_bytes": {
																"description": "Kernel allocations that the kernel will attempt to reclaim under memory pressure",
																"type": "number"
															},
															"memory_kernel_stack_bytes": {
																"description": "Amount of memory allocated to kernel stacks",
																"type": "number"
															},
															"memory_low_free_bytes": {
																"description": "Amount of free lowmem",
																"type": "number"
															},
															"memory_low_total_bytes": {
																"description": "Total amount of lowmem",
																"type": "number"
															},
															"memory_mapped_bytes": {
																"description": "Files which have been mapped into memory",
																"type": "number"
															},
															"memory_page_tables_bytes": {
																"description": "Amount of memory dedicated to the lowest level of page tables",
																"type": "number"
															},
															"memory_per_cpu_bytes": {
																"description": "Memory allocated to the per-cpu alloctor used to back per-cpu allocations",
																"type": "number"
															},
															"memory_pressure_full_10s": {
																"description": "Percentage of time over a 10 second window that all tasks were stalled",
																"type": "number"
															},
															"memory_pressure_full_300s": {
																"description": "Percentage of time over a 5 minute window that all tasks were stalled",
																"type": "number"
															},
															"memory_pressure_full_60s": {
																"description": "Percentage of time over a 1 minute window that all tasks were stalled",
																"type": "number"
															},
															"memory_pressure_full_total_us": {
																"description": "Total stall time (microseconds)",
																"type": "number"
															},
															"memory_pressure_some_10s": {
																"description": "Percentage of time over a 10 second window that some tasks were stalled",
																"type": "number"
															},
															"memory_pressure_some_300s": {
																"description": "Percentage of time over a 5 minute window that some tasks were stalled",
																"type": "number"
															},
															"memory_pressure_some_60s": {
																"description": "Percentage of time over a 1 minute window that some tasks were stalled",
																"type": "number"
															},
															"memory_pressure_some_total_us": {
																"description": "Total stall time (microseconds)",
																"type": "number"
															},
															"memory_s_reclaimable_bytes": {
																"description": "Part of slab that can be reclaimed on memory pressure",
																"type": "number"
															},
															"memory_s_unreclaim_bytes": {
																"description": "Part of slab that cannot be reclaimed on memory pressure",
																"type": "number"
															},
															"memory_secondary_page_tables_bytes": {
																"description": "Amount of memory dedicated to the lowest level of page tables",
																"type": "number"
															},
															"memory_shmem_bytes": {
																"description": "Amount of memory consumed by tmpfs",
																"type": "number"
															},
															"memory_shmem_hugepages_bytes": {
																"description": "Memory used by shmem and tmpfs, allocated with huge pages",
																"type": "number"
															},
															"memory_shmem_pmd_mapped_bytes": {
																"description": "Shared memory mapped into user space with huge pages",
																"type": "number"
															},
															"memory_slab_bytes": {
																"description": "In-kernel data structures cache",
																"type": "number"
															},
															"memory_swap_cached_bytes": {
																"description": "Memory swapped out and back in while still in swap file",
																"type": "number"
															},
															"memory_swap_free_bytes": {
																"description": "Amount of swap space that is currently unused",
																"type": "number"
															},
															"memory_swap_total_bytes": {
																"description": "Total amount of swap space available",
																"type": "number"
															},
															"memory_total_bytes": {
																"description": "Total usable RAM",
																"type": "number"
															},
															"memory_vmalloc_chunk_bytes": {
																"description": "Largest contiguous block of vmalloc area which is free",
																"type": "number"
															},
															"memory_vmalloc_total_bytes": {
																"description": "Total size of vmalloc memory area",
																"type": "number"
															},
															"memory_vmalloc_used_bytes": {
																"description": "Amount of vmalloc area which is used",
																"type": "number"
															},
															"memory_writeback_bytes": {
																"description": "Memory which is actively being written back to the disk",
																"type": "number"
															},
															"memory_writeback_tmp_bytes": {
																"description": "Memory used by FUSE for temporary writeback buffers",
																"type": "number"
															},
															"memory_z_swap_bytes": {
																"description": "Memory consumed by the zswap backend, compressed",
																"type": "number"
															},
															"memory_z_swapped_bytes": {
																"description": "Amount of anonymous memory stored in zswap, uncompressed",
																"type": "number"
															},
															"mounts": {
																"items": {
																	"description": "Snapshot Mount",
																	"properties": {
																		"available_bytes": {
																			"description": "Available disk size (bytes)",
																			"type": "number"
																		},
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"file_system": {
																			"description": "File system on disk (EXT4, NTFS, etc.)",
																			"type": "string"
																		},
																		"is_read_only": {
																			"description": "Determines whether the disk is read-only",
																			"type": "boolean"
																		},
																		"is_removable": {
																			"description": "Determines whether the disk is removable",
																			"type": "boolean"
																		},
																		"kind": {
																			"description": "Kind of disk (HDD, SSD, etc.)",
																			"type": "string"
																		},
																		"mount_point": {
																			"description": "Path where disk is mounted",
																			"type": "string"
																		},
																		"name": {
																			"description": "Name of the disk mount",
																			"type": "string"
																		},
																		"total_bytes": {
																			"description": "Total disk size (bytes)",
																			"type": "number"
																		}
																	},
																	"required": [
																		"name",
																		"kind",
																		"file_system",
																		"mount_point"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"netdevs": {
																"items": {
																	"description": "Snapshot Netdev",
																	"properties": {
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"name": {
																			"description": "Name of the network device",
																			"type": "string"
																		},
																		"recv_bytes": {
																			"description": "Total bytes received",
																			"type": "number"
																		},
																		"recv_compressed": {
																			"description": "Compressed packets received",
																			"type": "number"
																		},
																		"recv_drop": {
																			"description": "Packets dropped",
																			"type": "number"
																		},
																		"recv_errs": {
																			"description": "Bad packets received",
																			"type": "number"
																		},
																		"recv_fifo": {
																			"description": "FIFO overruns",
																			"type": "number"
																		},
																		"recv_frame": {
																			"description": "Frame alignment errors",
																			"type": "number"
																		},
																		"recv_multicast": {
																			"description": "Multicast packets received",
																			"type": "number"
																		},
																		"recv_packets": {
																			"description": "Total packets received",
																			"type": "number"
																		},
																		"sent_bytes": {
																			"description": "Total bytes transmitted",
																			"type": "number"
																		},
																		"sent_carrier": {
																			"description": "Number of packets not sent due to carrier errors",
																			"type": "number"
																		},
																		"sent_colls": {
																			"description": "Number of collisions",
																			"type": "number"
																		},
																		"sent_compressed": {
																			"description": "Number of compressed packets transmitted",
																			"type": "number"
																		},
																		"sent_drop": {
																			"description": "Number of packets dropped during transmission",
																			"type": "number"
																		},
																		"sent_errs": {
																			"description": "Number of transmission errors",
																			"type": "number"
																		},
																		"sent_fifo": {
																			"description": "FIFO overruns",
																			"type": "number"
																		},
																		"sent_packets": {
																			"description": "Total packets transmitted",
																			"type": "number"
																		}
																	},
																	"required": [
																		"name",
																		"recv_bytes",
																		"recv_packets",
																		"recv_errs",
																		"recv_drop",
																		"recv_fifo",
																		"recv_frame",
																		"recv_compressed",
																		"recv_multicast",
																		"sent_bytes",
																		"sent_packets",
																		"sent_errs",
																		"sent_drop",
																		"sent_fifo",
																		"sent_colls",
																		"sent_carrier",
																		"sent_compressed"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"snmp_icmp_in_addr_mask_reps": {
																"description": "Number of ICMP Address Mask Reply messages received",
																"type": "number"
															},
															"snmp_icmp_in_addr_masks": {
																"description": "Number of ICMP Address Mask Request messages received",
																"type": "number"
															},
															"snmp_icmp_in_csum_errors": {
																"description": "Number of ICMP messages received with bad checksums",
																"type": "number"
															},
															"snmp_icmp_in_dest_unreachs": {
																"description": "Number of ICMP Destination Unreachable messages received",
																"type": "number"
															},
															"snmp_icmp_in_echo_reps": {
																"description": "Number of ICMP Echo Reply messages received",
																"type": "number"
															},
															"snmp_icmp_in_echos": {
																"description": "Number of ICMP Echo (request) messages received",
																"type": "number"
															},
															"snmp_icmp_in_errors": {
																"description": "Number of ICMP messages received with ICMP-specific errors",
																"type": "number"
															},
															"snmp_icmp_in_msgs": {
																"description": "Number of ICMP messages received",
																"type": "number"
															},
															"snmp_icmp_in_parm_probs": {
																"description": "Number of ICMP Parameter Problem messages received",
																"type": "number"
															},
															"snmp_icmp_in_redirects": {
																"description": "Number of ICMP Redirect messages received",
																"type": "number"
															},
															"snmp_icmp_in_src_quenchs": {
																"description": "Number of ICMP Source Quench messages received",
																"type": "number"
															},
															"snmp_icmp_in_time_excds": {
																"description": "Number of ICMP Time Exceeded messages received",
																"type": "number"
															},
															"snmp_icmp_in_timestamp_reps": {
																"description": "Number of ICMP Address Mask Request messages received",
																"type": "number"
															},
															"snmp_icmp_in_timestamps": {
																"description": "Number of ICMP Timestamp (request) messages received",
																"type": "number"
															},
															"snmp_icmp_out_addr_mask_reps": {
																"description": "Number of ICMP Address Mask Reply messages sent",
																"type": "number"
															},
															"snmp_icmp_out_addr_masks": {
																"description": "Number of ICMP Address Mask Request messages sent",
																"type": "number"
															},
															"snmp_icmp_out_dest_unreachs": {
																"description": "Number of ICMP Destination Unreachable messages sent",
																"type": "number"
															},
															"snmp_icmp_out_echo_reps": {
																"description": "Number of ICMP Echo Reply messages sent",
																"type": "number"
															},
															"snmp_icmp_out_echos": {
																"description": "Number of ICMP Echo (request) messages sent",
																"type": "number"
															},
															"snmp_icmp_out_errors": {
																"description": "Number of ICMP messages which this entity did not send due to ICMP-specific errors",
																"type": "number"
															},
															"snmp_icmp_out_msgs": {
																"description": "Number of ICMP messages attempted to send",
																"type": "number"
															},
															"snmp_icmp_out_parm_probs": {
																"description": "Number of ICMP Parameter Problem messages sent",
																"type": "number"
															},
															"snmp_icmp_out_redirects": {
																"description": "Number of ICMP Redirect messages sent",
																"type": "number"
															},
															"snmp_icmp_out_src_quenchs": {
																"description": "Number of ICMP Source Quench messages sent",
																"type": "number"
															},
															"snmp_icmp_out_time_excds": {
																"description": "Number of ICMP Time Exceeded messages sent",
																"type": "number"
															},
															"snmp_icmp_out_timestamp_reps": {
																"description": "Number of ICMP Timestamp Reply messages sent",
																"type": "number"
															},
															"snmp_icmp_out_timestamps": {
																"description": "Number of ICMP Timestamp (request) messages sent",
																"type": "number"
															},
															"snmp_ip_default_ttl": {
																"description": "Default value of the Time-To-Live field of the IP header",
																"type": "number"
															},
															"snmp_ip_forw_datagrams": {
																"description": "Number of datagrams forwarded to their final destination",
																"type": "number"
															},
															"snmp_ip_forwarding_enabled": {
																"description": "Set when acting as an IP gateway",
																"type": "boolean"
															},
															"snmp_ip_frag_creates": {
																"description": "Number of datagrams generated by fragmentation",
																"type": "number"
															},
															"snmp_ip_frag_fails": {
																"description": "Number of datagrams discarded because fragmentation failed",
																"type": "number"
															},
															"snmp_ip_frag_oks": {
																"description": "Number of datagrams successfully fragmented",
																"type": "number"
															},
															"snmp_ip_in_addr_errors": {
																"description": "Number of input datagrams discarded due to errors in the IP address",
																"type": "number"
															},
															"snmp_ip_in_delivers": {
																"description": "Number of input datagrams successfully delivered to IP user-protocols",
																"type": "number"
															},
															"snmp_ip_in_discards": {
																"description": "Number of input datagrams otherwise discarded",
																"type": "number"
															},
															"snmp_ip_in_hdr_errors": {
																"description": "Number of input datagrams discarded due to errors in the IP header",
																"type": "number"
															},
															"snmp_ip_in_receives": {
																"description": "Number of input datagrams received from interfaces",
																"type": "number"
															},
															"snmp_ip_in_unknown_protos": {
																"description": "Number of input datagrams discarded due unknown or unsupported protocol",
																"type": "number"
															},
															"snmp_ip_out_discards": {
																"description": "Number of output datagrams otherwise discarded",
																"type": "number"
															},
															"snmp_ip_out_no_routes": {
																"description": "Number of output datagrams discarded because no route matched",
																"type": "number"
															},
															"snmp_ip_out_requests": {
																"description": "Number of datagrams supplied for transmission",
																"type": "number"
															},
															"snmp_ip_reasm_fails": {
																"description": "Number of failures detected by the reassembly algorithm",
																"type": "number"
															},
															"snmp_ip_reasm_oks": {
																"description": "Number of datagrams successfully reassembled",
																"type": "number"
															},
															"snmp_ip_reasm_reqds": {
																"description": "Number of fragments received which needed to be reassembled",
																"type": "number"
															},
															"snmp_ip_reasm_timeout": {
																"description": "Number of seconds fragments are held while awaiting reassembly",
																"type": "number"
															},
															"snmp_tcp_active_opens": {
																"description": "Number of times TCP transitions to SYN-SENT from CLOSED",
																"type": "number"
															},
															"snmp_tcp_attempt_fails": {
																"description": "Number of times TCP transitions to CLOSED from SYN-SENT or SYN-RCVD, plus transitions to LISTEN from SYN-RCVD",
																"type": "number"
															},
															"snmp_tcp_curr_estab": {
																"description": "Number of TCP connections in ESTABLISHED or CLOSE-WAIT",
																"type": "number"
															},
															"snmp_tcp_estab_resets": {
																"description": "Number of times TCP transitions to CLOSED from ESTABLISHED or CLOSE-WAIT",
																"type": "number"
															},
															"snmp_tcp_in_csum_errors": {
																"description": "Number of TCP segments received with checksum errors",
																"type": "number"
															},
															"snmp_tcp_in_errs": {
																"description": "Number of TCP segments received in error",
																"type": "number"
															},
															"snmp_tcp_in_segs": {
																"description": "Number of TCP segments received",
																"type": "number"
															},
															"snmp_tcp_max_conn": {
																"description": "Limit on the total number of TCP connections",
																"type": "number"
															},
															"snmp_tcp_out_rsts": {
																"description": "Number of TCP segments sent with RST flag",
																"type": "number"
															},
															"snmp_tcp_out_segs": {
																"description": "Number of TCP segments sent",
																"type": "number"
															},
															"snmp_tcp_passive_opens": {
																"description": "Number of times TCP transitions to SYN-RCVD from LISTEN",
																"type": "number"
															},
															"snmp_tcp_retrans_segs": {
																"description": "Number of TCP segments retransmitted",
																"type": "number"
															},
															"snmp_tcp_rto_max": {
																"description": "Maximum value permitted by a TCP implementation for the retransmission timeout (milliseconds)",
																"type": "number"
															},
															"snmp_tcp_rto_min": {
																"description": "Minimum value permitted by a TCP implementation for the retransmission timeout (milliseconds)",
																"type": "number"
															},
															"snmp_udp_in_datagrams": {
																"description": "Number of UDP datagrams delivered to UDP applications",
																"type": "number"
															},
															"snmp_udp_in_errors": {
																"description": "Number of UDP datagrams failed to be delivered for reasons other than lack of application at the destination port",
																"type": "number"
															},
															"snmp_udp_no_ports": {
																"description": "Number of UDP datagrams received for which there was not application at the destination port",
																"type": "number"
															},
															"snmp_udp_out_datagrams": {
																"description": "Number of UDP datagrams sent",
																"type": "number"
															},
															"system_boot_time_s": {
																"description": "Boottime of the system (seconds since the Unix epoch)",
																"type": "number"
															},
															"t": {
																"description": "Time the Snapshot was recorded (seconds since the Unix epoch)",
																"type": "number"
															},
															"thermals": {
																"items": {
																	"description": "Snapshot Thermal",
																	"properties": {
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"critical_celcius": {
																			"description": "Critical failure temperature of the component (degrees Celsius)",
																			"type": "number"
																		},
																		"current_celcius": {
																			"description": "Current temperature of the component (degrees Celsius)",
																			"type": "number"
																		},
																		"label": {
																			"description": "Sensor identifier for the component",
																			"type": "string"
																		},
																		"max_celcius": {
																			"description": "Maximum temperature of the component (degrees Celsius)",
																			"type": "number"
																		}
																	},
																	"required": [
																		"label"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"tunnels": {
																"items": {
																	"description": "Snapshot Tunnels",
																	"properties": {
																		"connector_id": {
																			"description": "Connector identifier",
																			"type": "string"
																		},
																		"health_state": {
																			"description": "Name of tunnel health state (unknown, healthy, degraded, down)",
																			"type": "string"
																		},
																		"health_value": {
																			"description": "Numeric value associated with tunnel state (0 = unknown, 1 = healthy, 2 = degraded, 3 = down)",
																			"type": "number"
																		},
																		"interface_name": {
																			"description": "The tunnel interface name (i.e. xfrm1, xfrm3.99, etc.)",
																			"type": "string"
																		},
																		"tunnel_id": {
																			"description": "Tunnel identifier",
																			"type": "string"
																		}
																	},
																	"required": [
																		"tunnel_id",
																		"interface_name",
																		"health_state",
																		"health_value"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"uptime_idle_ms": {
																"description": "Sum of how much time each core has spent idle",
																"type": "number"
															},
															"uptime_total_ms": {
																"description": "Uptime of the system, including time spent in suspend",
																"type": "number"
															},
															"v": {
																"description": "Version",
																"type": "string"
															}
														},
														"required": [
															"t",
															"v",
															"count_reclaim_failures",
															"count_reclaimed_paths",
															"count_record_failed",
															"count_transmit_failures"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"items",
												"count"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Not Found"
			},
			"429": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Too Many Requests"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "number"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"type": "boolean"
								}
							},
							"required": [
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get latest Snapshots",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /accounts/{account_id}/magic/connectors/{connector_id}": {
		"operationId": "mconn-connector-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"activated": {
								"type": "boolean",
								"x-auditable": true
							},
							"interrupt_window_duration_hours": {
								"type": "number",
								"x-auditable": true
							},
							"interrupt_window_hour_of_day": {
								"type": "number",
								"x-auditable": true
							},
							"notes": {
								"type": "string",
								"x-auditable": true
							},
							"timezone": {
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"messages": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"type": "array"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"result",
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"maxLength": 0,
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"activated": {
													"type": "boolean",
													"x-auditable": true
												},
												"device": {
													"properties": {
														"id": {
															"type": "string",
															"x-auditable": true
														},
														"serial_number": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												},
												"id": {
													"type": "string",
													"x-auditable": true
												},
												"interrupt_window_duration_hours": {
													"type": "number",
													"x-auditable": true
												},
												"interrupt_window_hour_of_day": {
													"type": "number",
													"x-auditable": true
												},
												"last_heartbeat": {
													"type": "string",
													"x-auditable": true
												},
												"last_seen_version": {
													"type": "string",
													"x-auditable": true
												},
												"last_updated": {
													"type": "string",
													"x-auditable": true
												},
												"notes": {
													"type": "string",
													"x-auditable": true
												},
												"timezone": {
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"notes",
												"activated",
												"last_updated",
												"timezone",
												"interrupt_window_hour_of_day",
												"interrupt_window_duration_hours"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Edit Connector to update specific properties",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /accounts/{account_id}/magic/connectors": {
		"operationId": "mconn-connector-create",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"device": {
										"maxProperties": 1,
										"minProperties": 1,
										"properties": {
											"id": {
												"type": "string",
												"x-auditable": true
											},
											"serial_number": {
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									}
								},
								"required": [
									"device"
								],
								"type": "object"
							},
							{
								"properties": {
									"activated": {
										"type": "boolean",
										"x-auditable": true
									},
									"interrupt_window_duration_hours": {
										"type": "number",
										"x-auditable": true
									},
									"interrupt_window_hour_of_day": {
										"type": "number",
										"x-auditable": true
									},
									"notes": {
										"type": "string",
										"x-auditable": true
									},
									"timezone": {
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"messages": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"type": "array"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"result",
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"maxLength": 0,
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"activated": {
													"type": "boolean",
													"x-auditable": true
												},
												"device": {
													"properties": {
														"id": {
															"type": "string",
															"x-auditable": true
														},
														"serial_number": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												},
												"id": {
													"type": "string",
													"x-auditable": true
												},
												"interrupt_window_duration_hours": {
													"type": "number",
													"x-auditable": true
												},
												"interrupt_window_hour_of_day": {
													"type": "number",
													"x-auditable": true
												},
												"last_heartbeat": {
													"type": "string",
													"x-auditable": true
												},
												"last_seen_version": {
													"type": "string",
													"x-auditable": true
												},
												"last_updated": {
													"type": "string",
													"x-auditable": true
												},
												"notes": {
													"type": "string",
													"x-auditable": true
												},
												"timezone": {
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"notes",
												"activated",
												"last_updated",
												"timezone",
												"interrupt_window_hour_of_day",
												"interrupt_window_duration_hours"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Not Found"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Add a connector to your account",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_id}/magic/connectors/{connector_id}": {
		"operationId": "mconn-connector-replace",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connector_id",
				"required": true,
				"schema": {
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"activated": {
								"type": "boolean",
								"x-auditable": true
							},
							"interrupt_window_duration_hours": {
								"type": "number",
								"x-auditable": true
							},
							"interrupt_window_hour_of_day": {
								"type": "number",
								"x-auditable": true
							},
							"notes": {
								"type": "string",
								"x-auditable": true
							},
							"timezone": {
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"messages": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"type": "array"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"result",
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"items": {
														"properties": {
															"code": {
																"type": "number"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object"
													},
													"maxLength": 0,
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"activated": {
													"type": "boolean",
													"x-auditable": true
												},
												"device": {
													"properties": {
														"id": {
															"type": "string",
															"x-auditable": true
														},
														"serial_number": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												},
												"id": {
													"type": "string",
													"x-auditable": true
												},
												"interrupt_window_duration_hours": {
													"type": "number",
													"x-auditable": true
												},
												"interrupt_window_hour_of_day": {
													"type": "number",
													"x-auditable": true
												},
												"last_heartbeat": {
													"type": "string",
													"x-auditable": true
												},
												"last_seen_version": {
													"type": "string",
													"x-auditable": true
												},
												"last_updated": {
													"type": "string",
													"x-auditable": true
												},
												"notes": {
													"type": "string",
													"x-auditable": true
												},
												"timezone": {
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"notes",
												"activated",
												"last_updated",
												"timezone",
												"interrupt_window_hour_of_day",
												"interrupt_window_duration_hours"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "OK"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized"
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Forbidden"
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"messages": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"type": "number"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"minLength": 1,
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Internal Server Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Replace Connector",
		"tags": [
			"Magic Connectors"
		],
		"x-api-token-group": [
			"Magic WAN Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}