{
	"DELETE /accounts/{account_id}/teamnet/virtual_networks/{virtual_network_id}": {
		"description": "Deletes an existing virtual network.",
		"operationId": "tunnel-virtual-network-delete",
		"parameters": [
			{
				"in": "path",
				"name": "virtual_network_id",
				"required": true,
				"schema": {
					"description": "UUID of the virtual network.",
					"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
					"format": "uuid",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Cloudflare account ID",
					"example": "699d98642c564d2e855e9661899b7252",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"comment": {
													"description": "Optional remark describing the virtual network.",
													"example": "Staging VPC for data science",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												},
												"created_at": {
													"description": "Timestamp of when the resource was created.",
													"example": "2021-01-25T18:22:34.317854Z",
													"format": "date-time",
													"type": "string"
												},
												"deleted_at": {
													"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
													"example": "2009-11-10T23:00:00.000000Z",
													"format": "date-time",
													"type": "string"
												},
												"id": {
													"description": "UUID of the virtual network.",
													"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
													"format": "uuid",
													"type": "string",
													"x-auditable": true
												},
												"is_default_network": {
													"description": "If `true`, this virtual network is the default for the account.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"name": {
													"description": "A user-friendly name for the virtual network.",
													"example": "us-east-1-vpc",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"is_default_network",
												"comment",
												"created_at"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a virtual network response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"comment": {
															"description": "Optional remark describing the virtual network.",
															"example": "Staging VPC for data science",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"created_at": {
															"description": "Timestamp of when the resource was created.",
															"example": "2021-01-25T18:22:34.317854Z",
															"format": "date-time",
															"type": "string"
														},
														"deleted_at": {
															"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
															"example": "2009-11-10T23:00:00.000000Z",
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"description": "UUID of the virtual network.",
															"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
															"format": "uuid",
															"type": "string",
															"x-auditable": true
														},
														"is_default_network": {
															"description": "If `true`, this virtual network is the default for the account.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"name": {
															"description": "A user-friendly name for the virtual network.",
															"example": "us-east-1-vpc",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"is_default_network",
														"comment",
														"created_at"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a virtual network response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			},
			{
				"user_service_key": []
			}
		],
		"summary": "Delete a virtual network",
		"tags": [
			"Tunnel Virtual Network"
		],
		"x-api-token-group": [
			"Cloudflare One Networks Write",
			"Argo Tunnel Write"
		]
	},
	"GET /accounts/{account_id}/teamnet/virtual_networks": {
		"description": "Lists and filters virtual networks in an account.",
		"operationId": "tunnel-virtual-network-list-virtual-networks",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Cloudflare account ID",
					"example": "699d98642c564d2e855e9661899b7252",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "id",
				"schema": {
					"description": "UUID of the virtual network.",
					"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
					"format": "uuid",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "A user-friendly name for the virtual network.",
					"example": "us-east-1-vpc",
					"maxLength": 256,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "is_default",
				"schema": {
					"description": "If `true`, only include the default virtual network. If `false`, exclude the default virtual network. If empty, all virtual networks will be included.",
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "is_deleted",
				"schema": {
					"description": "If `true`, only include deleted virtual networks. If `false`, exclude deleted virtual networks. If empty, all virtual networks will be included.",
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"comment": {
														"description": "Optional remark describing the virtual network.",
														"example": "Staging VPC for data science",
														"maxLength": 256,
														"type": "string",
														"x-auditable": true
													},
													"created_at": {
														"description": "Timestamp of when the resource was created.",
														"example": "2021-01-25T18:22:34.317854Z",
														"format": "date-time",
														"type": "string"
													},
													"deleted_at": {
														"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
														"example": "2009-11-10T23:00:00.000000Z",
														"format": "date-time",
														"type": "string"
													},
													"id": {
														"description": "UUID of the virtual network.",
														"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
														"format": "uuid",
														"type": "string",
														"x-auditable": true
													},
													"is_default_network": {
														"description": "If `true`, this virtual network is the default for the account.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"name": {
														"description": "A user-friendly name for the virtual network.",
														"example": "us-east-1-vpc",
														"maxLength": 256,
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"id",
													"name",
													"is_default_network",
													"comment",
													"created_at"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List virtual networks response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"comment": {
																"description": "Optional remark describing the virtual network.",
																"example": "Staging VPC for data science",
																"maxLength": 256,
																"type": "string",
																"x-auditable": true
															},
															"created_at": {
																"description": "Timestamp of when the resource was created.",
																"example": "2021-01-25T18:22:34.317854Z",
																"format": "date-time",
																"type": "string"
															},
															"deleted_at": {
																"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
																"example": "2009-11-10T23:00:00.000000Z",
																"format": "date-time",
																"type": "string"
															},
															"id": {
																"description": "UUID of the virtual network.",
																"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
																"format": "uuid",
																"type": "string",
																"x-auditable": true
															},
															"is_default_network": {
																"description": "If `true`, this virtual network is the default for the account.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"name": {
																"description": "A user-friendly name for the virtual network.",
																"example": "us-east-1-vpc",
																"maxLength": 256,
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id",
															"name",
															"is_default_network",
															"comment",
															"created_at"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List virtual networks response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			},
			{
				"user_service_key": []
			}
		],
		"summary": "List virtual networks",
		"tags": [
			"Tunnel Virtual Network"
		],
		"x-api-token-group": [
			"Cloudflare One Networks Write",
			"Cloudflare One Networks Read",
			"Argo Tunnel Write",
			"Argo Tunnel Read"
		]
	},
	"GET /accounts/{account_id}/teamnet/virtual_networks/{virtual_network_id}": {
		"description": "Get a virtual network.",
		"operationId": "tunnel-virtual-network-get",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Cloudflare account ID",
					"example": "699d98642c564d2e855e9661899b7252",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "virtual_network_id",
				"required": true,
				"schema": {
					"description": "UUID of the virtual network.",
					"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
					"format": "uuid",
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"comment": {
								"description": "Optional remark describing the virtual network.",
								"example": "Staging VPC for data science",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							},
							"is_default_network": {
								"description": "If `true`, this virtual network is the default for the account.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"name": {
								"description": "A user-friendly name for the virtual network.",
								"example": "us-east-1-vpc",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"comment": {
													"description": "Optional remark describing the virtual network.",
													"example": "Staging VPC for data science",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												},
												"created_at": {
													"description": "Timestamp of when the resource was created.",
													"example": "2021-01-25T18:22:34.317854Z",
													"format": "date-time",
													"type": "string"
												},
												"deleted_at": {
													"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
													"example": "2009-11-10T23:00:00.000000Z",
													"format": "date-time",
													"type": "string"
												},
												"id": {
													"description": "UUID of the virtual network.",
													"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
													"format": "uuid",
													"type": "string",
													"x-auditable": true
												},
												"is_default_network": {
													"description": "If `true`, this virtual network is the default for the account.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"name": {
													"description": "A user-friendly name for the virtual network.",
													"example": "us-east-1-vpc",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"is_default_network",
												"comment",
												"created_at"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "A virtual network response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"comment": {
															"description": "Optional remark describing the virtual network.",
															"example": "Staging VPC for data science",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"created_at": {
															"description": "Timestamp of when the resource was created.",
															"example": "2021-01-25T18:22:34.317854Z",
															"format": "date-time",
															"type": "string"
														},
														"deleted_at": {
															"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
															"example": "2009-11-10T23:00:00.000000Z",
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"description": "UUID of the virtual network.",
															"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
															"format": "uuid",
															"type": "string",
															"x-auditable": true
														},
														"is_default_network": {
															"description": "If `true`, this virtual network is the default for the account.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"name": {
															"description": "A user-friendly name for the virtual network.",
															"example": "us-east-1-vpc",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"is_default_network",
														"comment",
														"created_at"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "A virtual network response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			},
			{
				"user_service_key": []
			}
		],
		"summary": "Get a virtual network",
		"tags": [
			"Tunnel Virtual Network"
		]
	},
	"PATCH /accounts/{account_id}/teamnet/virtual_networks/{virtual_network_id}": {
		"description": "Updates an existing virtual network.",
		"operationId": "tunnel-virtual-network-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Cloudflare account ID",
					"example": "699d98642c564d2e855e9661899b7252",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "virtual_network_id",
				"required": true,
				"schema": {
					"description": "UUID of the virtual network.",
					"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
					"format": "uuid",
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"comment": {
								"description": "Optional remark describing the virtual network.",
								"example": "Staging VPC for data science",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							},
							"is_default_network": {
								"description": "If `true`, this virtual network is the default for the account.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"name": {
								"description": "A user-friendly name for the virtual network.",
								"example": "us-east-1-vpc",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"comment": {
													"description": "Optional remark describing the virtual network.",
													"example": "Staging VPC for data science",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												},
												"created_at": {
													"description": "Timestamp of when the resource was created.",
													"example": "2021-01-25T18:22:34.317854Z",
													"format": "date-time",
													"type": "string"
												},
												"deleted_at": {
													"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
													"example": "2009-11-10T23:00:00.000000Z",
													"format": "date-time",
													"type": "string"
												},
												"id": {
													"description": "UUID of the virtual network.",
													"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
													"format": "uuid",
													"type": "string",
													"x-auditable": true
												},
												"is_default_network": {
													"description": "If `true`, this virtual network is the default for the account.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"name": {
													"description": "A user-friendly name for the virtual network.",
													"example": "us-east-1-vpc",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"is_default_network",
												"comment",
												"created_at"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a virtual network response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"comment": {
															"description": "Optional remark describing the virtual network.",
															"example": "Staging VPC for data science",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"created_at": {
															"description": "Timestamp of when the resource was created.",
															"example": "2021-01-25T18:22:34.317854Z",
															"format": "date-time",
															"type": "string"
														},
														"deleted_at": {
															"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
															"example": "2009-11-10T23:00:00.000000Z",
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"description": "UUID of the virtual network.",
															"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
															"format": "uuid",
															"type": "string",
															"x-auditable": true
														},
														"is_default_network": {
															"description": "If `true`, this virtual network is the default for the account.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"name": {
															"description": "A user-friendly name for the virtual network.",
															"example": "us-east-1-vpc",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"is_default_network",
														"comment",
														"created_at"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a virtual network response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			},
			{
				"user_service_key": []
			}
		],
		"summary": "Update a virtual network",
		"tags": [
			"Tunnel Virtual Network"
		],
		"x-api-token-group": [
			"Cloudflare One Networks Write",
			"Argo Tunnel Write"
		]
	},
	"POST /accounts/{account_id}/teamnet/virtual_networks": {
		"description": "Adds a new virtual network to an account.",
		"operationId": "tunnel-virtual-network-create-a-virtual-network",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Cloudflare account ID",
					"example": "699d98642c564d2e855e9661899b7252",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"comment": {
								"description": "Optional remark describing the virtual network.",
								"example": "Staging VPC for data science",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							},
							"is_default": {
								"description": "If `true`, this virtual network is the default for the account.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"name": {
								"description": "A user-friendly name for the virtual network.",
								"example": "us-east-1-vpc",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"comment": {
													"description": "Optional remark describing the virtual network.",
													"example": "Staging VPC for data science",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												},
												"created_at": {
													"description": "Timestamp of when the resource was created.",
													"example": "2021-01-25T18:22:34.317854Z",
													"format": "date-time",
													"type": "string"
												},
												"deleted_at": {
													"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
													"example": "2009-11-10T23:00:00.000000Z",
													"format": "date-time",
													"type": "string"
												},
												"id": {
													"description": "UUID of the virtual network.",
													"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
													"format": "uuid",
													"type": "string",
													"x-auditable": true
												},
												"is_default_network": {
													"description": "If `true`, this virtual network is the default for the account.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"name": {
													"description": "A user-friendly name for the virtual network.",
													"example": "us-east-1-vpc",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"is_default_network",
												"comment",
												"created_at"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a virtual network response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"comment": {
															"description": "Optional remark describing the virtual network.",
															"example": "Staging VPC for data science",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"created_at": {
															"description": "Timestamp of when the resource was created.",
															"example": "2021-01-25T18:22:34.317854Z",
															"format": "date-time",
															"type": "string"
														},
														"deleted_at": {
															"description": "Timestamp of when the resource was deleted. If `null`, the resource has not been deleted.",
															"example": "2009-11-10T23:00:00.000000Z",
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"description": "UUID of the virtual network.",
															"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
															"format": "uuid",
															"type": "string",
															"x-auditable": true
														},
														"is_default_network": {
															"description": "If `true`, this virtual network is the default for the account.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"name": {
															"description": "A user-friendly name for the virtual network.",
															"example": "us-east-1-vpc",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"is_default_network",
														"comment",
														"created_at"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a virtual network response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			},
			{
				"user_service_key": []
			}
		],
		"summary": "Create a virtual network",
		"tags": [
			"Tunnel Virtual Network"
		],
		"x-api-token-group": [
			"Cloudflare One Networks Write",
			"Argo Tunnel Write"
		]
	}
}