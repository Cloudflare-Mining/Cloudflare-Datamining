{
	"GET /radar/attacks/layer3/summary/bitrate": {
		"description": "Retrieves the distribution of layer 3 attacks by bitrate.",
		"operationId": "radar-get-attacks-layer3-summary-by-bitrate",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"OVER_100_GBPS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"UNDER_500_MBPS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"_10_GBPS_TO_100_GBPS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"_1_GBPS_TO_10_GBPS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"_500_MBPS_TO_1_GBPS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"UNDER_500_MBPS",
												"OVER_100_GBPS",
												"_1_GBPS_TO_10_GBPS",
												"_500_MBPS_TO_1_GBPS",
												"_10_GBPS_TO_100_GBPS"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by bitrate summary",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/duration": {
		"description": "Retrieves the distribution of layer 3 attacks by duration.",
		"operationId": "radar-get-attacks-layer3-summary-by-duration",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"OVER_3_HOURS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"UNDER_10_MINS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"_10_MINS_TO_20_MINS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"_1_HOUR_TO_3_HOURS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"_20_MINS_TO_40_MINS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"_40_MINS_TO_1_HOUR": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"UNDER_10_MINS",
												"_10_MINS_TO_20_MINS",
												"OVER_3_HOURS",
												"_1_HOUR_TO_3_HOURS",
												"_20_MINS_TO_40_MINS",
												"_40_MINS_TO_1_HOUR"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by duration summary",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/industry": {
		"description": "Retrieves the distribution of layer 3 attacks by targeted industry.",
		"operationId": "radar-get-attacks-layer3-summary-by-industry",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"description": "A numeric string.",
												"example": "10",
												"pattern": "^\\d+$",
												"type": "string"
											},
											"example": {
												"Computer Software": "65"
											},
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by targeted industry summary",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/ip_version": {
		"description": "Retrieves the distribution of layer 3 attacks by IP version.",
		"operationId": "radar-get-attacks-layer3-summary-by-ip-version",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"IPv4": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"IPv6": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by IP version summary",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/protocol": {
		"description": "Retrieves the distribution of layer 3 attacks by protocol.",
		"operationId": "radar-get-attacks-layer3-summary-by-protocol",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"GRE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"ICMP": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"TCP": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"UDP": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"TCP",
												"UDP",
												"GRE",
												"ICMP"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by protocol summary",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/vector": {
		"description": "Retrieves the distribution of layer 3 attacks by vector.",
		"operationId": "radar-get-attacks-layer3-summary-by-vector",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"description": "A numeric string.",
												"example": "10",
												"pattern": "^\\d+$",
												"type": "string"
											},
											"example": {
												"ACK Flood": "65.662148",
												"SYN Flood": "16.86401"
											},
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by vector summary",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/vertical": {
		"description": "Retrieves the distribution of layer 3 attacks by targeted vertical.",
		"operationId": "radar-get-attacks-layer3-summary-by-vertical",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"description": "A numeric string.",
												"example": "10",
												"pattern": "^\\d+$",
												"type": "string"
											},
											"example": {
												"Internet and Telecom": "5.519081"
											},
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by targeted vertical summary",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries": {
		"description": "Retrieves layer 3 attacks over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-by-bytes",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE_CHANGE",
						"MIN0_MAX"
					],
					"example": "MIN0_MAX",
					"type": "string"
				}
			},
			{
				"description": "Measurement units, eg. bytes.",
				"in": "query",
				"name": "metric",
				"schema": {
					"default": "bytes",
					"description": "Measurement units, eg. bytes.",
					"enum": [
						"BYTES",
						"BYTES_OLD"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"additionalProperties": {
										"properties": {
											"timestamps": {
												"items": {
													"format": "date-time",
													"type": "string"
												},
												"type": "array"
											},
											"values": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											}
										},
										"required": [
											"timestamps",
											"values"
										],
										"type": "object"
									},
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										}
									},
									"required": [
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by bytes time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/bitrate": {
		"description": "Retrieves the distribution of layer 3 attacks by bitrate over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-bitrate",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"OVER_100_GBPS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"UNDER_500_MBPS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"_10_GBPS_TO_100_GBPS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"_1_GBPS_TO_10_GBPS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"_500_MBPS_TO_1_GBPS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"UNDER_500_MBPS",
												"OVER_100_GBPS",
												"_1_GBPS_TO_10_GBPS",
												"_500_MBPS_TO_1_GBPS",
												"_10_GBPS_TO_100_GBPS"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by bitrate time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/duration": {
		"description": "Retrieves the distribution of layer 3 attacks by duration over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-duration",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"OVER_3_HOURS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"UNDER_10_MINS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"_10_MINS_TO_20_MINS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"_1_HOUR_TO_3_HOURS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"_20_MINS_TO_40_MINS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"_40_MINS_TO_1_HOUR": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"UNDER_10_MINS",
												"_10_MINS_TO_20_MINS",
												"OVER_3_HOURS",
												"_1_HOUR_TO_3_HOURS",
												"_20_MINS_TO_40_MINS",
												"_40_MINS_TO_1_HOUR"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by duration time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/industry": {
		"description": "Retrieves the distribution of layer 3 attacks by targeted industry over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-industry",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"Internet": [
													"5.519081"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by target industries time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/ip_version": {
		"description": "Retrieves the distribution of layer 3 attacks by IP version over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-ip-version",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by IP version time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/protocol": {
		"description": "Retrieves the distribution of layer 3 attacks by protocol over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-protocol",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"GRE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"ICMP": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"TCP": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"UDP": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"TCP",
												"UDP",
												"GRE",
												"ICMP"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by protocol time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/vector": {
		"description": "Retrieves the distribution of layer 3 attacks by vector over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-vector",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"ACK Flood": [
													"97.28898"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by vector time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/vertical": {
		"description": "Retrieves the distribution of layer 3 attacks by targeted vertical over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-vertical",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the `location` filter applies to the source or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `location` filter applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"Internet and Telecom": [
													"5.519081"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get layer 3 attacks by vertical time series",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/attacks": {
		"description": "Retrieves the top layer 3 attacks from origin to target location. Values are a percentage out of the total layer 3 attacks (with billing country). You can optionally limit the number of attacks by origin/target location (useful if all the top attacks are from or to the same location).",
		"operationId": "radar-get-attacks-layer3-top-attacks",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Specifies whether the `limitPerLocation` applies to the source or target location.",
				"in": "query",
				"name": "limitDirection",
				"schema": {
					"default": "ORIGIN",
					"description": "Specifies whether the `limitPerLocation` applies to the source or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"example": "ORIGIN",
					"type": "string"
				}
			},
			{
				"description": "Limits the number of attacks per origin/target (refer to `limitDirection` parameter) location.",
				"in": "query",
				"name": "limitPerLocation",
				"schema": {
					"description": "Limits the number of attacks per origin/target (refer to `limitDirection` parameter) location.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Orders results based on attack magnitude, defined by total mitigated bytes or total mitigated attacks.",
				"in": "query",
				"name": "magnitude",
				"schema": {
					"description": "Orders results based on attack magnitude, defined by total mitigated bytes or total mitigated attacks.",
					"enum": [
						"MITIGATED_BYTES",
						"MITIGATED_ATTACKS"
					],
					"example": "MITIGATED_BYTES",
					"type": "string"
				}
			},
			{
				"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"originCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"originCountryName": {
														"example": "France",
														"type": "string"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"originCountryAlpha2",
													"originCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top layer 3 attack pairs (origin and target locations)",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/industry": {
		"deprecated": true,
		"description": "This endpoint is deprecated. To continue getting this data, switch to the summary by industry endpoint.",
		"operationId": "radar-get-attacks-layer3-top-industries",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "Computer Software",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top industries targeted by layer 3 attacks",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/locations/origin": {
		"description": "Retrieves the origin locations of layer 3 attacks.",
		"operationId": "radar-get-attacks-layer3-top-origin-locations",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"originCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"originCountryName": {
														"example": "France",
														"type": "string"
													},
													"rank": {
														"example": 1,
														"type": "number"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"originCountryAlpha2",
													"originCountryName",
													"value",
													"rank"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top origin locations of layer 3 attacks",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/locations/target": {
		"description": "Retrieves the target locations of layer 3 attacks.",
		"operationId": "radar-get-attacks-layer3-top-target-locations",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"rank": {
														"example": 1,
														"type": "number"
													},
													"targetCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"targetCountryName": {
														"example": "France",
														"type": "string"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"targetCountryAlpha2",
													"targetCountryName",
													"value",
													"rank"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top target locations of layer 3 attacks",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/vertical": {
		"deprecated": true,
		"description": "This endpoint is deprecated. To continue getting this data, switch to the summary by vertical endpoint.",
		"operationId": "radar-get-attacks-layer3-top-verticals",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by IP version (Ipv4 vs. IPv6).",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filters results by IP version (Ipv4 vs. IPv6).",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters the results by layer 3/4 protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters the results by layer 3/4 protocol.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "Internet and Telecom",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top verticals targeted by layer 3 attacks",
		"tags": [
			"Radar Layer 3 Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}