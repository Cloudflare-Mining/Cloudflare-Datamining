{
	"GET /accounts/{account_id}/registrar/domains": {
		"description": "List domains handled by Registrar.",
		"operationId": "registrar-domains-list-domains",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"available": {
																"description": "Shows if a domain is available for transferring into Cloudflare Registrar.",
																"example": false,
																"type": "boolean"
															},
															"can_register": {
																"description": "Indicates if the domain can be registered as a new domain.",
																"example": false,
																"type": "boolean"
															},
															"created_at": {
																"description": "Shows time of creation.",
																"example": "2018-08-28T17:26:26Z",
																"format": "date-time",
																"type": "string"
															},
															"current_registrar": {
																"description": "Shows name of current registrar.",
																"example": "Cloudflare",
																"type": "string"
															},
															"expires_at": {
																"description": "Shows when domain name registration expires.",
																"example": "2019-08-28T23:59:59Z",
																"format": "date-time",
																"type": "string"
															},
															"id": {
																"description": "Domain identifier.",
																"example": "ea95132c15732412d22c1476fa83f27a",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"locked": {
																"description": "Shows whether a registrar lock is in place for a domain.",
																"example": false,
																"type": "boolean",
																"x-auditable": true
															},
															"registrant_contact": {
																"allOf": [
																	{
																		"allOf": [
																			{
																				"properties": {
																					"address": {
																						"description": "Address.",
																						"example": "123 Sesame St.",
																						"type": "string"
																					},
																					"address2": {
																						"description": "Optional address line for unit, floor, suite, etc.",
																						"example": "Suite 430",
																						"type": "string"
																					},
																					"city": {
																						"description": "City.",
																						"example": "Austin",
																						"type": "string"
																					},
																					"country": {
																						"description": "The country in which the user lives.",
																						"example": "US",
																						"maxLength": 30,
																						"nullable": true,
																						"type": "string"
																					},
																					"email": {
																						"description": "The contact email address of the user.",
																						"example": "user@example.com",
																						"maxLength": 90,
																						"type": "string"
																					},
																					"fax": {
																						"description": "Contact fax number.",
																						"example": "123-867-5309",
																						"type": "string"
																					},
																					"first_name": {
																						"description": "User's first name",
																						"example": "John",
																						"maxLength": 60,
																						"nullable": true,
																						"type": "string"
																					},
																					"id": {
																						"description": "Contact Identifier.",
																						"example": "ea95132c15732412d22c1476fa83f27a",
																						"maxLength": 32,
																						"readOnly": true,
																						"type": "string"
																					},
																					"last_name": {
																						"description": "User's last name",
																						"example": "Appleseed",
																						"maxLength": 60,
																						"nullable": true,
																						"type": "string"
																					},
																					"organization": {
																						"description": "Name of organization.",
																						"example": "Cloudflare, Inc.",
																						"type": "string"
																					},
																					"phone": {
																						"description": "User's telephone number",
																						"example": "+1 123-123-1234",
																						"maxLength": 20,
																						"nullable": true,
																						"type": "string"
																					},
																					"state": {
																						"description": "State.",
																						"example": "TX",
																						"type": "string"
																					},
																					"zip": {
																						"description": "The zipcode or postal code where the user lives.",
																						"example": "12345",
																						"maxLength": 20,
																						"nullable": true,
																						"type": "string"
																					}
																				},
																				"required": [
																					"first_name",
																					"last_name",
																					"address",
																					"city",
																					"state",
																					"zip",
																					"country",
																					"phone",
																					"organization"
																				],
																				"type": "object"
																			}
																		],
																		"type": "object"
																	}
																],
																"description": "Shows contact information for domain registrant."
															},
															"registry_statuses": {
																"description": "A comma-separated list of registry status codes. A full list of status codes can be found at [EPP Status Codes](https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en).",
																"example": "ok,serverTransferProhibited",
																"type": "string"
															},
															"supported_tld": {
																"description": "Whether a particular TLD is currently supported by Cloudflare Registrar. Refer to [TLD Policies](https://www.cloudflare.com/tld-policies/) for a list of supported TLDs.",
																"example": true,
																"type": "boolean"
															},
															"transfer_in": {
																"description": "Statuses for domain transfers into Cloudflare Registrar.",
																"properties": {
																	"accept_foa": {
																		"description": "Form of authorization has been accepted by the registrant.",
																		"enum": [
																			"needed",
																			"ok"
																		],
																		"example": "needed",
																		"type": "string"
																	},
																	"approve_transfer": {
																		"description": "Shows transfer status with the registry.",
																		"enum": [
																			"needed",
																			"ok",
																			"pending",
																			"trying",
																			"rejected",
																			"unknown"
																		],
																		"example": "unknown",
																		"type": "string"
																	},
																	"can_cancel_transfer": {
																		"description": "Indicates if cancellation is still possible.",
																		"example": true,
																		"type": "boolean"
																	},
																	"disable_privacy": {
																		"description": "Privacy guards are disabled at the foreign registrar.",
																		"enum": [
																			"needed",
																			"ok",
																			"unknown"
																		],
																		"example": "ok",
																		"type": "string"
																	},
																	"enter_auth_code": {
																		"description": "Auth code has been entered and verified.",
																		"enum": [
																			"needed",
																			"ok",
																			"pending",
																			"trying",
																			"rejected"
																		],
																		"example": "needed",
																		"type": "string"
																	},
																	"unlock_domain": {
																		"description": "Domain is unlocked at the foreign registrar.",
																		"enum": [
																			"needed",
																			"ok",
																			"pending",
																			"trying",
																			"unknown"
																		],
																		"example": "ok",
																		"type": "string"
																	}
																}
															},
															"updated_at": {
																"description": "Last updated.",
																"example": "2018-08-28T17:26:26Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List domains response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"properties": {
																	"available": {
																		"description": "Shows if a domain is available for transferring into Cloudflare Registrar.",
																		"example": false,
																		"type": "boolean"
																	},
																	"can_register": {
																		"description": "Indicates if the domain can be registered as a new domain.",
																		"example": false,
																		"type": "boolean"
																	},
																	"created_at": {
																		"description": "Shows time of creation.",
																		"example": "2018-08-28T17:26:26Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"current_registrar": {
																		"description": "Shows name of current registrar.",
																		"example": "Cloudflare",
																		"type": "string"
																	},
																	"expires_at": {
																		"description": "Shows when domain name registration expires.",
																		"example": "2019-08-28T23:59:59Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"id": {
																		"description": "Domain identifier.",
																		"example": "ea95132c15732412d22c1476fa83f27a",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"locked": {
																		"description": "Shows whether a registrar lock is in place for a domain.",
																		"example": false,
																		"type": "boolean",
																		"x-auditable": true
																	},
																	"registrant_contact": {
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"address": {
																								"description": "Address.",
																								"example": "123 Sesame St.",
																								"type": "string"
																							},
																							"address2": {
																								"description": "Optional address line for unit, floor, suite, etc.",
																								"example": "Suite 430",
																								"type": "string"
																							},
																							"city": {
																								"description": "City.",
																								"example": "Austin",
																								"type": "string"
																							},
																							"country": {
																								"description": "The country in which the user lives.",
																								"example": "US",
																								"maxLength": 30,
																								"nullable": true,
																								"type": "string"
																							},
																							"email": {
																								"description": "The contact email address of the user.",
																								"example": "user@example.com",
																								"maxLength": 90,
																								"type": "string"
																							},
																							"fax": {
																								"description": "Contact fax number.",
																								"example": "123-867-5309",
																								"type": "string"
																							},
																							"first_name": {
																								"description": "User's first name",
																								"example": "John",
																								"maxLength": 60,
																								"nullable": true,
																								"type": "string"
																							},
																							"id": {
																								"description": "Contact Identifier.",
																								"example": "ea95132c15732412d22c1476fa83f27a",
																								"maxLength": 32,
																								"readOnly": true,
																								"type": "string"
																							},
																							"last_name": {
																								"description": "User's last name",
																								"example": "Appleseed",
																								"maxLength": 60,
																								"nullable": true,
																								"type": "string"
																							},
																							"organization": {
																								"description": "Name of organization.",
																								"example": "Cloudflare, Inc.",
																								"type": "string"
																							},
																							"phone": {
																								"description": "User's telephone number",
																								"example": "+1 123-123-1234",
																								"maxLength": 20,
																								"nullable": true,
																								"type": "string"
																							},
																							"state": {
																								"description": "State.",
																								"example": "TX",
																								"type": "string"
																							},
																							"zip": {
																								"description": "The zipcode or postal code where the user lives.",
																								"example": "12345",
																								"maxLength": 20,
																								"nullable": true,
																								"type": "string"
																							}
																						},
																						"required": [
																							"first_name",
																							"last_name",
																							"address",
																							"city",
																							"state",
																							"zip",
																							"country",
																							"phone",
																							"organization"
																						],
																						"type": "object"
																					}
																				],
																				"type": "object"
																			}
																		],
																		"description": "Shows contact information for domain registrant."
																	},
																	"registry_statuses": {
																		"description": "A comma-separated list of registry status codes. A full list of status codes can be found at [EPP Status Codes](https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en).",
																		"example": "ok,serverTransferProhibited",
																		"type": "string"
																	},
																	"supported_tld": {
																		"description": "Whether a particular TLD is currently supported by Cloudflare Registrar. Refer to [TLD Policies](https://www.cloudflare.com/tld-policies/) for a list of supported TLDs.",
																		"example": true,
																		"type": "boolean"
																	},
																	"transfer_in": {
																		"description": "Statuses for domain transfers into Cloudflare Registrar.",
																		"properties": {
																			"accept_foa": {
																				"description": "Form of authorization has been accepted by the registrant.",
																				"enum": [
																					"needed",
																					"ok"
																				],
																				"example": "needed",
																				"type": "string"
																			},
																			"approve_transfer": {
																				"description": "Shows transfer status with the registry.",
																				"enum": [
																					"needed",
																					"ok",
																					"pending",
																					"trying",
																					"rejected",
																					"unknown"
																				],
																				"example": "unknown",
																				"type": "string"
																			},
																			"can_cancel_transfer": {
																				"description": "Indicates if cancellation is still possible.",
																				"example": true,
																				"type": "boolean"
																			},
																			"disable_privacy": {
																				"description": "Privacy guards are disabled at the foreign registrar.",
																				"enum": [
																					"needed",
																					"ok",
																					"unknown"
																				],
																				"example": "ok",
																				"type": "string"
																			},
																			"enter_auth_code": {
																				"description": "Auth code has been entered and verified.",
																				"enum": [
																					"needed",
																					"ok",
																					"pending",
																					"trying",
																					"rejected"
																				],
																				"example": "needed",
																				"type": "string"
																			},
																			"unlock_domain": {
																				"description": "Domain is unlocked at the foreign registrar.",
																				"enum": [
																					"needed",
																					"ok",
																					"pending",
																					"trying",
																					"unknown"
																				],
																				"example": "ok",
																				"type": "string"
																			}
																		}
																	},
																	"updated_at": {
																		"description": "Last updated.",
																		"example": "2018-08-28T17:26:26Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List domains response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List domains",
		"tags": [
			"Registrar Domains"
		],
		"x-api-token-group": null
	},
	"GET /accounts/{account_id}/registrar/domains/{domain_name}": {
		"description": "Show individual domain.",
		"operationId": "registrar-domains-get-domain",
		"parameters": [
			{
				"in": "path",
				"name": "domain_name",
				"required": true,
				"schema": {
					"description": "Domain name.",
					"example": "cloudflare.com",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get domain response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get domain response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get domain",
		"tags": [
			"Registrar Domains"
		],
		"x-api-token-group": null
	},
	"PUT /accounts/{account_id}/registrar/domains/{domain_name}": {
		"description": "Update individual domain.",
		"operationId": "registrar-domains-update-domain",
		"parameters": [
			{
				"in": "path",
				"name": "domain_name",
				"required": true,
				"schema": {
					"description": "Domain name.",
					"example": "cloudflare.com",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"auto_renew": {
										"description": "Auto-renew controls whether subscription is automatically renewed upon domain expiration.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"locked": {
										"description": "Shows whether a registrar lock is in place for a domain.",
										"example": false,
										"type": "boolean",
										"x-auditable": true
									},
									"privacy": {
										"description": "Privacy option controls redacting WHOIS information.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update domain response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update domain response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update domain",
		"tags": [
			"Registrar Domains"
		],
		"x-api-token-group": null
	}
}