{
	"GET /accounts/{account_id}/magic/cf_interconnects": {
		"description": "Lists interconnects associated with an account.",
		"operationId": "magic-interconnects-list-interconnects",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the response body will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"interconnects": {
													"items": {
														"properties": {
															"automatic_return_routing": {
																"default": false,
																"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"colo_name": {
																"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																"example": "pni_ord",
																"type": "string"
															},
															"created_on": {
																"description": "The date and time the tunnel was created.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"description": "An optional description of the interconnect.",
																"example": "Tunnel for Interconnect to ORD",
																"type": "string"
															},
															"gre": {
																"description": "The configuration specific to GRE interconnects.",
																"properties": {
																	"cloudflare_endpoint": {
																		"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																		"example": "203.0.113.1",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"health_check": {
																"properties": {
																	"enabled": {
																		"default": true,
																		"description": "Determines whether to run healthchecks for a tunnel.",
																		"example": true,
																		"type": "boolean",
																		"x-auditable": true
																	},
																	"rate": {
																		"default": "mid",
																		"description": "How frequent the health check is run. The default value is `mid`.",
																		"enum": [
																			"low",
																			"mid",
																			"high"
																		],
																		"example": "low",
																		"type": "string",
																		"x-auditable": true
																	},
																	"target": {
																		"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																		"oneOf": [
																			{
																				"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																				"properties": {
																					"effective": {
																						"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																						"example": "203.0.113.1",
																						"readOnly": true,
																						"type": "string",
																						"x-auditable": true
																					},
																					"saved": {
																						"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																						"example": "203.0.113.1",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			{
																				"type": "string"
																			}
																		]
																	},
																	"type": {
																		"default": "reply",
																		"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																		"enum": [
																			"reply",
																			"request"
																		],
																		"example": "request",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"id": {
																"description": "Identifier",
																"example": "c4a7362d577a6c3019a474fd6f485821",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"interface_address": {
																"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																"example": "192.0.2.0/31",
																"type": "string",
																"x-auditable": true
															},
															"interface_address6": {
																"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
																"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
																"type": "string",
																"x-auditable": true
															},
															"modified_on": {
																"description": "The date and time the tunnel was last modified.",
																"example": "2017-06-14T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"mtu": {
																"default": 1476,
																"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
																"type": "integer"
															},
															"name": {
																"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																"example": "pni_ord",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "List interconnects response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"interconnects": {
															"items": {
																"properties": {
																	"automatic_return_routing": {
																		"default": false,
																		"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
																		"example": true,
																		"type": "boolean",
																		"x-auditable": true
																	},
																	"colo_name": {
																		"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																		"example": "pni_ord",
																		"type": "string"
																	},
																	"created_on": {
																		"description": "The date and time the tunnel was created.",
																		"example": "2017-06-14T00:00:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": {
																		"description": "An optional description of the interconnect.",
																		"example": "Tunnel for Interconnect to ORD",
																		"type": "string"
																	},
																	"gre": {
																		"description": "The configuration specific to GRE interconnects.",
																		"properties": {
																			"cloudflare_endpoint": {
																				"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																				"example": "203.0.113.1",
																				"type": "string"
																			}
																		},
																		"type": "object"
																	},
																	"health_check": {
																		"properties": {
																			"enabled": {
																				"default": true,
																				"description": "Determines whether to run healthchecks for a tunnel.",
																				"example": true,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"rate": {
																				"default": "mid",
																				"description": "How frequent the health check is run. The default value is `mid`.",
																				"enum": [
																					"low",
																					"mid",
																					"high"
																				],
																				"example": "low",
																				"type": "string",
																				"x-auditable": true
																			},
																			"target": {
																				"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																				"oneOf": [
																					{
																						"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																						"properties": {
																							"effective": {
																								"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																								"example": "203.0.113.1",
																								"readOnly": true,
																								"type": "string",
																								"x-auditable": true
																							},
																							"saved": {
																								"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																								"example": "203.0.113.1",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					},
																					{
																						"type": "string"
																					}
																				]
																			},
																			"type": {
																				"default": "reply",
																				"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																				"enum": [
																					"reply",
																					"request"
																				],
																				"example": "request",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"id": {
																		"description": "Identifier",
																		"example": "c4a7362d577a6c3019a474fd6f485821",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"interface_address": {
																		"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																		"example": "192.0.2.0/31",
																		"type": "string",
																		"x-auditable": true
																	},
																	"interface_address6": {
																		"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
																		"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The date and time the tunnel was last modified.",
																		"example": "2017-06-14T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"mtu": {
																		"default": 1476,
																		"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
																		"type": "integer"
																	},
																	"name": {
																		"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																		"example": "pni_ord",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"type": "array"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List interconnects response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List interconnects",
		"tags": [
			"Magic Interconnects"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read",
			"Magic Transit Read",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/magic/cf_interconnects/{cf_interconnect_id}": {
		"description": "Lists details for a specific interconnect.",
		"operationId": "magic-interconnects-list-interconnect-details",
		"parameters": [
			{
				"in": "path",
				"name": "cf_interconnect_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the response body will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"interconnect": {
													"properties": {
														"automatic_return_routing": {
															"default": false,
															"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"colo_name": {
															"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
															"example": "pni_ord",
															"type": "string"
														},
														"created_on": {
															"description": "The date and time the tunnel was created.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An optional description of the interconnect.",
															"example": "Tunnel for Interconnect to ORD",
															"type": "string"
														},
														"gre": {
															"description": "The configuration specific to GRE interconnects.",
															"properties": {
																"cloudflare_endpoint": {
																	"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																	"example": "203.0.113.1",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"health_check": {
															"properties": {
																"enabled": {
																	"default": true,
																	"description": "Determines whether to run healthchecks for a tunnel.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"rate": {
																	"default": "mid",
																	"description": "How frequent the health check is run. The default value is `mid`.",
																	"enum": [
																		"low",
																		"mid",
																		"high"
																	],
																	"example": "low",
																	"type": "string",
																	"x-auditable": true
																},
																"target": {
																	"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																	"oneOf": [
																		{
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																			"properties": {
																				"effective": {
																					"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																					"example": "203.0.113.1",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"saved": {
																					"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																					"example": "203.0.113.1",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		{
																			"type": "string"
																		}
																	]
																},
																"type": {
																	"default": "reply",
																	"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																	"enum": [
																		"reply",
																		"request"
																	],
																	"example": "request",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"id": {
															"description": "Identifier",
															"example": "c4a7362d577a6c3019a474fd6f485821",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"interface_address": {
															"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
															"example": "192.0.2.0/31",
															"type": "string",
															"x-auditable": true
														},
														"interface_address6": {
															"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
															"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "The date and time the tunnel was last modified.",
															"example": "2017-06-14T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"mtu": {
															"default": 1476,
															"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
															"type": "integer"
														},
														"name": {
															"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
															"example": "pni_ord",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List interconnect Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"interconnect": {
															"properties": {
																"automatic_return_routing": {
																	"default": false,
																	"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"colo_name": {
																	"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																	"example": "pni_ord",
																	"type": "string"
																},
																"created_on": {
																	"description": "The date and time the tunnel was created.",
																	"example": "2017-06-14T00:00:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"description": {
																	"description": "An optional description of the interconnect.",
																	"example": "Tunnel for Interconnect to ORD",
																	"type": "string"
																},
																"gre": {
																	"description": "The configuration specific to GRE interconnects.",
																	"properties": {
																		"cloudflare_endpoint": {
																			"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																			"example": "203.0.113.1",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"health_check": {
																	"properties": {
																		"enabled": {
																			"default": true,
																			"description": "Determines whether to run healthchecks for a tunnel.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"rate": {
																			"default": "mid",
																			"description": "How frequent the health check is run. The default value is `mid`.",
																			"enum": [
																				"low",
																				"mid",
																				"high"
																			],
																			"example": "low",
																			"type": "string",
																			"x-auditable": true
																		},
																		"target": {
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																			"oneOf": [
																				{
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																					"properties": {
																						"effective": {
																							"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																							"example": "203.0.113.1",
																							"readOnly": true,
																							"type": "string",
																							"x-auditable": true
																						},
																						"saved": {
																							"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																							"example": "203.0.113.1",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				{
																					"type": "string"
																				}
																			]
																		},
																		"type": {
																			"default": "reply",
																			"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																			"enum": [
																				"reply",
																				"request"
																			],
																			"example": "request",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"id": {
																	"description": "Identifier",
																	"example": "c4a7362d577a6c3019a474fd6f485821",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"interface_address": {
																	"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																	"example": "192.0.2.0/31",
																	"type": "string",
																	"x-auditable": true
																},
																"interface_address6": {
																	"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
																	"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The date and time the tunnel was last modified.",
																	"example": "2017-06-14T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"mtu": {
																	"default": 1476,
																	"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
																	"type": "integer"
																},
																"name": {
																	"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																	"example": "pni_ord",
																	"type": "string"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List interconnect Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List interconnect Details",
		"tags": [
			"Magic Interconnects"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read",
			"Magic Transit Read",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_id}/magic/cf_interconnects": {
		"description": "Updates multiple interconnects associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-interconnects-update-multiple-interconnects",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the request and response bodies will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"id"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"modified": {
													"example": true,
													"type": "boolean"
												},
												"modified_interconnects": {
													"items": {
														"properties": {
															"automatic_return_routing": {
																"default": false,
																"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"colo_name": {
																"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																"example": "pni_ord",
																"type": "string"
															},
															"created_on": {
																"description": "The date and time the tunnel was created.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"description": "An optional description of the interconnect.",
																"example": "Tunnel for Interconnect to ORD",
																"type": "string"
															},
															"gre": {
																"description": "The configuration specific to GRE interconnects.",
																"properties": {
																	"cloudflare_endpoint": {
																		"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																		"example": "203.0.113.1",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"health_check": {
																"properties": {
																	"enabled": {
																		"default": true,
																		"description": "Determines whether to run healthchecks for a tunnel.",
																		"example": true,
																		"type": "boolean",
																		"x-auditable": true
																	},
																	"rate": {
																		"default": "mid",
																		"description": "How frequent the health check is run. The default value is `mid`.",
																		"enum": [
																			"low",
																			"mid",
																			"high"
																		],
																		"example": "low",
																		"type": "string",
																		"x-auditable": true
																	},
																	"target": {
																		"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																		"oneOf": [
																			{
																				"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																				"properties": {
																					"effective": {
																						"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																						"example": "203.0.113.1",
																						"readOnly": true,
																						"type": "string",
																						"x-auditable": true
																					},
																					"saved": {
																						"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																						"example": "203.0.113.1",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			{
																				"type": "string"
																			}
																		]
																	},
																	"type": {
																		"default": "reply",
																		"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																		"enum": [
																			"reply",
																			"request"
																		],
																		"example": "request",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"id": {
																"description": "Identifier",
																"example": "c4a7362d577a6c3019a474fd6f485821",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"interface_address": {
																"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																"example": "192.0.2.0/31",
																"type": "string",
																"x-auditable": true
															},
															"interface_address6": {
																"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
																"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
																"type": "string",
																"x-auditable": true
															},
															"modified_on": {
																"description": "The date and time the tunnel was last modified.",
																"example": "2017-06-14T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"mtu": {
																"default": 1476,
																"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
																"type": "integer"
															},
															"name": {
																"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																"example": "pni_ord",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Update multiple interconnects response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"example": true,
															"type": "boolean"
														},
														"modified_interconnects": {
															"items": {
																"properties": {
																	"automatic_return_routing": {
																		"default": false,
																		"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
																		"example": true,
																		"type": "boolean",
																		"x-auditable": true
																	},
																	"colo_name": {
																		"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																		"example": "pni_ord",
																		"type": "string"
																	},
																	"created_on": {
																		"description": "The date and time the tunnel was created.",
																		"example": "2017-06-14T00:00:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": {
																		"description": "An optional description of the interconnect.",
																		"example": "Tunnel for Interconnect to ORD",
																		"type": "string"
																	},
																	"gre": {
																		"description": "The configuration specific to GRE interconnects.",
																		"properties": {
																			"cloudflare_endpoint": {
																				"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																				"example": "203.0.113.1",
																				"type": "string"
																			}
																		},
																		"type": "object"
																	},
																	"health_check": {
																		"properties": {
																			"enabled": {
																				"default": true,
																				"description": "Determines whether to run healthchecks for a tunnel.",
																				"example": true,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"rate": {
																				"default": "mid",
																				"description": "How frequent the health check is run. The default value is `mid`.",
																				"enum": [
																					"low",
																					"mid",
																					"high"
																				],
																				"example": "low",
																				"type": "string",
																				"x-auditable": true
																			},
																			"target": {
																				"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																				"oneOf": [
																					{
																						"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																						"properties": {
																							"effective": {
																								"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																								"example": "203.0.113.1",
																								"readOnly": true,
																								"type": "string",
																								"x-auditable": true
																							},
																							"saved": {
																								"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																								"example": "203.0.113.1",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					},
																					{
																						"type": "string"
																					}
																				]
																			},
																			"type": {
																				"default": "reply",
																				"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																				"enum": [
																					"reply",
																					"request"
																				],
																				"example": "request",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"id": {
																		"description": "Identifier",
																		"example": "c4a7362d577a6c3019a474fd6f485821",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"interface_address": {
																		"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																		"example": "192.0.2.0/31",
																		"type": "string",
																		"x-auditable": true
																	},
																	"interface_address6": {
																		"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
																		"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The date and time the tunnel was last modified.",
																		"example": "2017-06-14T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"mtu": {
																		"default": 1476,
																		"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
																		"type": "integer"
																	},
																	"name": {
																		"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																		"example": "pni_ord",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"type": "array"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update multiple interconnects response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update multiple interconnects",
		"tags": [
			"Magic Interconnects"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_id}/magic/cf_interconnects/{cf_interconnect_id}": {
		"description": "Updates a specific interconnect associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-interconnects-update-interconnect",
		"parameters": [
			{
				"in": "path",
				"name": "cf_interconnect_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"description": "If true, the health check target in the request and response bodies will be presented using the new object format. Defaults to false.",
				"in": "header",
				"name": "x-magic-new-hc-target",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"automatic_return_routing": {
								"default": false,
								"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"description": {
								"description": "An optional description of the interconnect.",
								"example": "Tunnel for Interconnect to ORD",
								"type": "string"
							},
							"gre": {
								"description": "The configuration specific to GRE interconnects.",
								"properties": {
									"cloudflare_endpoint": {
										"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
										"example": "203.0.113.1",
										"type": "string"
									}
								},
								"type": "object"
							},
							"health_check": {
								"properties": {
									"enabled": {
										"default": true,
										"description": "Determines whether to run healthchecks for a tunnel.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"rate": {
										"default": "mid",
										"description": "How frequent the health check is run. The default value is `mid`.",
										"enum": [
											"low",
											"mid",
											"high"
										],
										"example": "low",
										"type": "string",
										"x-auditable": true
									},
									"target": {
										"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
										"oneOf": [
											{
												"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
												"properties": {
													"effective": {
														"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
														"example": "203.0.113.1",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"saved": {
														"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
														"example": "203.0.113.1",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											{
												"type": "string"
											}
										]
									},
									"type": {
										"default": "reply",
										"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
										"enum": [
											"reply",
											"request"
										],
										"example": "request",
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							"interface_address": {
								"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
								"example": "192.0.2.0/31",
								"type": "string",
								"x-auditable": true
							},
							"interface_address6": {
								"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
								"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
								"type": "string",
								"x-auditable": true
							},
							"mtu": {
								"default": 1476,
								"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
								"type": "integer"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"modified": {
													"example": true,
													"type": "boolean"
												},
												"modified_interconnect": {
													"properties": {
														"automatic_return_routing": {
															"default": false,
															"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"colo_name": {
															"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
															"example": "pni_ord",
															"type": "string"
														},
														"created_on": {
															"description": "The date and time the tunnel was created.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An optional description of the interconnect.",
															"example": "Tunnel for Interconnect to ORD",
															"type": "string"
														},
														"gre": {
															"description": "The configuration specific to GRE interconnects.",
															"properties": {
																"cloudflare_endpoint": {
																	"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																	"example": "203.0.113.1",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"health_check": {
															"properties": {
																"enabled": {
																	"default": true,
																	"description": "Determines whether to run healthchecks for a tunnel.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"rate": {
																	"default": "mid",
																	"description": "How frequent the health check is run. The default value is `mid`.",
																	"enum": [
																		"low",
																		"mid",
																		"high"
																	],
																	"example": "low",
																	"type": "string",
																	"x-auditable": true
																},
																"target": {
																	"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																	"oneOf": [
																		{
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																			"properties": {
																				"effective": {
																					"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																					"example": "203.0.113.1",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"saved": {
																					"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																					"example": "203.0.113.1",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		{
																			"type": "string"
																		}
																	]
																},
																"type": {
																	"default": "reply",
																	"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																	"enum": [
																		"reply",
																		"request"
																	],
																	"example": "request",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"id": {
															"description": "Identifier",
															"example": "c4a7362d577a6c3019a474fd6f485821",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"interface_address": {
															"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
															"example": "192.0.2.0/31",
															"type": "string",
															"x-auditable": true
														},
														"interface_address6": {
															"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
															"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "The date and time the tunnel was last modified.",
															"example": "2017-06-14T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"mtu": {
															"default": 1476,
															"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
															"type": "integer"
														},
														"name": {
															"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
															"example": "pni_ord",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update interconnect response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"example": true,
															"type": "boolean"
														},
														"modified_interconnect": {
															"properties": {
																"automatic_return_routing": {
																	"default": false,
																	"description": "True if automatic stateful return routing should be enabled for a tunnel, false otherwise.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"colo_name": {
																	"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																	"example": "pni_ord",
																	"type": "string"
																},
																"created_on": {
																	"description": "The date and time the tunnel was created.",
																	"example": "2017-06-14T00:00:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"description": {
																	"description": "An optional description of the interconnect.",
																	"example": "Tunnel for Interconnect to ORD",
																	"type": "string"
																},
																"gre": {
																	"description": "The configuration specific to GRE interconnects.",
																	"properties": {
																		"cloudflare_endpoint": {
																			"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
																			"example": "203.0.113.1",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"health_check": {
																	"properties": {
																		"enabled": {
																			"default": true,
																			"description": "Determines whether to run healthchecks for a tunnel.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"rate": {
																			"default": "mid",
																			"description": "How frequent the health check is run. The default value is `mid`.",
																			"enum": [
																				"low",
																				"mid",
																				"high"
																			],
																			"example": "low",
																			"type": "string",
																			"x-auditable": true
																		},
																		"target": {
																			"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false.",
																			"oneOf": [
																				{
																					"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target.",
																					"properties": {
																						"effective": {
																							"description": "The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.",
																							"example": "203.0.113.1",
																							"readOnly": true,
																							"type": "string",
																							"x-auditable": true
																						},
																						"saved": {
																							"description": "The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.",
																							"example": "203.0.113.1",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				{
																					"type": "string"
																				}
																			]
																		},
																		"type": {
																			"default": "reply",
																			"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
																			"enum": [
																				"reply",
																				"request"
																			],
																			"example": "request",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"id": {
																	"description": "Identifier",
																	"example": "c4a7362d577a6c3019a474fd6f485821",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"interface_address": {
																	"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																	"example": "192.0.2.0/31",
																	"type": "string",
																	"x-auditable": true
																},
																"interface_address6": {
																	"description": "A 127 bit IPV6 prefix from within the virtual_subnet6 prefix space with the address being the first IP of the subnet and not same as the address of virtual_subnet6. Eg if virtual_subnet6 is 2606:54c1:7:0:a9fe:12d2::/127 , interface_address6 could be 2606:54c1:7:0:a9fe:12d2:1:200/127",
																	"example": "2606:54c1:7:0:a9fe:12d2:1:200/127",
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The date and time the tunnel was last modified.",
																	"example": "2017-06-14T05:20:00Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"mtu": {
																	"default": 1476,
																	"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
																	"type": "integer"
																},
																"name": {
																	"description": "The name of the interconnect. The name cannot share a name with other tunnels.",
																	"example": "pni_ord",
																	"type": "string"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update interconnect response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update interconnect",
		"tags": [
			"Magic Interconnects"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}