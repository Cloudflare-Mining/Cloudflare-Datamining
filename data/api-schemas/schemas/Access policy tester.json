{
	"GET /accounts/{account_id}/access/policy-tests/{policy_test_id}": {
		"description": "Fetches the current status of a given Access policy test.",
		"operationId": "access-policy-tests-get-an-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "policy_test_id",
				"required": true,
				"schema": {
					"description": "The UUID of the policy test.",
					"example": "f1a8b3c9d4e5f6789a0b1c2d3e4f5678a9b0c1d2e3f4a5b67890c1d2e3f4b5a6",
					"maxLength": 64,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "The UUID of the policy test.",
													"example": "f1a8b3c9d4e5f6789a0b1c2d3e4f5678a9b0c1d2e3f4a5b67890c1d2e3f4b5a6",
													"maxLength": 64,
													"type": "string",
													"x-auditable": true
												},
												"percent_approved": {
													"description": "The percentage of (processed) users approved based on policy evaluation results.",
													"example": 25,
													"type": "integer",
													"x-auditable": true
												},
												"percent_blocked": {
													"description": "The percentage of (processed) users blocked based on policy evaluation results.",
													"example": 25,
													"type": "integer",
													"x-auditable": true
												},
												"percent_errored": {
													"description": "The percentage of (processed) users errored based on policy evaluation results.",
													"example": 25,
													"type": "integer",
													"x-auditable": true
												},
												"percent_users_processed": {
													"description": "The percentage of users processed so far (of the entire user base).",
													"example": 50,
													"type": "integer"
												},
												"status": {
													"description": "The status of the policy test.",
													"enum": [
														"blocked",
														"processing",
														"exceeded time",
														"complete"
													],
													"example": "complete",
													"type": "string",
													"x-auditable": true
												},
												"total_users": {
													"description": "The total number of users in the user base.",
													"example": 20,
													"type": "integer",
													"x-auditable": true
												},
												"users_approved": {
													"description": "The number of (processed) users approved based on policy evaluation results.",
													"example": 5,
													"type": "integer",
													"x-auditable": true
												},
												"users_blocked": {
													"description": "The number of (processed) users blocked based on policy evaluation results.",
													"example": 5,
													"type": "integer",
													"x-auditable": true
												},
												"users_errored": {
													"description": "The number of (processed) users errored based on policy evaluation results.",
													"example": 5,
													"type": "integer"
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get an Access policy test update response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get an Access policy test update response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get the current status of a given Access policy test",
		"tags": [
			"Access policy tester"
		],
		"x-api-token-group": [
			"Access: Policy Test Write",
			"Access: Policy Test Read"
		]
	},
	"GET /accounts/{account_id}/access/policy-tests/{policy_test_id}/users": {
		"description": "Fetches a single page of user results from an Access policy test.",
		"operationId": "access-policy-tests-get-a-user-page",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "policy_test_id",
				"required": true,
				"schema": {
					"description": "The UUID of the policy test.",
					"example": "f1a8b3c9d4e5f6789a0b1c2d3e4f5678a9b0c1d2e3f4a5b67890c1d2e3f4b5a6",
					"maxLength": 64,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 25,
					"type": "integer"
				}
			},
			{
				"description": "Filter users by their policy evaluation status.",
				"in": "query",
				"name": "status",
				"schema": {
					"enum": [
						"success",
						"fail",
						"error"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Page of processed users.",
											"items": {
												"properties": {
													"email": {
														"description": "The email of the user.",
														"example": "jdoe@example.com",
														"format": "email",
														"type": "string"
													},
													"id": {
														"description": "UUID.",
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "The name of the user.",
														"example": "Jane Doe",
														"type": "string"
													},
													"status": {
														"description": "Policy evaluation result for an individual user.",
														"enum": [
															"approved",
															"blocked",
															"error"
														],
														"example": "approved",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get an Access policy tester users page response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get an Access policy tester users page response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get an Access policy test users page",
		"tags": [
			"Access policy tester"
		],
		"x-api-token-group": [
			"Access: Policy Test Write",
			"Access: Policy Test Read"
		]
	},
	"POST /accounts/{account_id}/access/policy-tests": {
		"description": "Starts an Access policy test.",
		"operationId": "access-policy-tests",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"policies": {
								"items": {
									"oneOf": [
										{
											"allOf": [
												{
													"properties": {
														"decision": {
															"description": "The action Access will take if a user matches this policy. Infrastructure application policies can only use the Allow action.",
															"enum": [
																"allow",
																"deny",
																"non_identity",
																"bypass"
															],
															"example": "allow",
															"type": "string"
														},
														"exclude": {
															"default": [],
															"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
															"items": {
																"oneOf": [
																	{
																		"description": "Matches an Access group.",
																		"properties": {
																			"group": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created Access group.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"group"
																		],
																		"title": "Access groups",
																		"type": "object"
																	},
																	{
																		"description": "Matches any valid Access Service Token",
																		"properties": {
																			"any_valid_service_token": {
																				"description": "An empty object which matches on all service tokens.",
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"any_valid_service_token"
																		],
																		"title": "Any Valid Service Token",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Azure Authentication Context.\nRequires an Azure identity provider.",
																		"properties": {
																			"auth_context": {
																				"properties": {
																					"ac_id": {
																						"description": "The ACID of an Authentication context.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"id": {
																						"description": "The ID of an Authentication context.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Azure identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id",
																					"identity_provider_id",
																					"ac_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"auth_context"
																		],
																		"title": "Authentication Context",
																		"type": "object"
																	},
																	{
																		"description": "Enforce different MFA options",
																		"properties": {
																			"auth_method": {
																				"properties": {
																					"auth_method": {
																						"description": "The type of authentication method https://datatracker.ietf.org/doc/html/rfc8176#section-2.",
																						"example": "mfa",
																						"type": "string"
																					}
																				},
																				"required": [
																					"auth_method"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"auth_method"
																		],
																		"title": "Authentication method",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Azure group.\nRequires an Azure identity provider.",
																		"properties": {
																			"azureAD": {
																				"properties": {
																					"id": {
																						"description": "The ID of an Azure group.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Azure identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"azureAD"
																		],
																		"title": "Azure group",
																		"type": "object"
																	},
																	{
																		"description": "Matches any valid client certificate.",
																		"example": {
																			"certificate": {}
																		},
																		"properties": {
																			"certificate": {
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"certificate"
																		],
																		"title": "Valid certificate",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific common name.",
																		"properties": {
																			"common_name": {
																				"properties": {
																					"common_name": {
																						"description": "The common name to match.",
																						"example": "james@example.com",
																						"type": "string"
																					}
																				},
																				"required": [
																					"common_name"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"common_name"
																		],
																		"title": "Common Name",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific country",
																		"properties": {
																			"geo": {
																				"properties": {
																					"country_code": {
																						"description": "The country code that should be matched.",
																						"example": "US",
																						"type": "string"
																					}
																				},
																				"required": [
																					"country_code"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"geo"
																		],
																		"title": "Country",
																		"type": "object"
																	},
																	{
																		"description": "Enforces a device posture rule has run successfully",
																		"properties": {
																			"device_posture": {
																				"properties": {
																					"integration_uid": {
																						"description": "The ID of a device posture integration.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"integration_uid"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"device_posture"
																		],
																		"title": "Device Posture",
																		"type": "object"
																	},
																	{
																		"description": "Match an entire email domain.",
																		"properties": {
																			"email_domain": {
																				"properties": {
																					"domain": {
																						"description": "The email domain to match.",
																						"example": "example.com",
																						"type": "string"
																					}
																				},
																				"required": [
																					"domain"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email_domain"
																		],
																		"title": "Email domain",
																		"type": "object"
																	},
																	{
																		"description": "Matches an email address from a list.",
																		"properties": {
																			"email_list": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created email list.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email_list"
																		],
																		"title": "Email list",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific email.",
																		"properties": {
																			"email": {
																				"properties": {
																					"email": {
																						"description": "The email of the user.",
																						"example": "test@example.com",
																						"format": "email",
																						"type": "string"
																					}
																				},
																				"required": [
																					"email"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email"
																		],
																		"title": "Email",
																		"type": "object"
																	},
																	{
																		"description": "Matches everyone.",
																		"properties": {
																			"everyone": {
																				"description": "An empty object which matches on all users.",
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"everyone"
																		],
																		"title": "Everyone",
																		"type": "object"
																	},
																	{
																		"description": "Create Allow or Block policies which evaluate the user based on custom criteria.",
																		"properties": {
																			"external_evaluation": {
																				"properties": {
																					"evaluate_url": {
																						"description": "The API endpoint containing your business logic.",
																						"example": "https://eval.example.com",
																						"type": "string"
																					},
																					"keys_url": {
																						"description": "The API endpoint containing the key that Access uses to verify that the response came from your API.",
																						"example": "https://eval.example.com/keys",
																						"type": "string"
																					}
																				},
																				"required": [
																					"evaluate_url",
																					"keys_url"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"external_evaluation"
																		],
																		"title": "External Evaluation",
																		"type": "object"
																	},
																	{
																		"description": "Matches a Github organization.\nRequires a Github identity provider.",
																		"properties": {
																			"github-organization": {
																				"properties": {
																					"identity_provider_id": {
																						"description": "The ID of your Github identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"name": {
																						"description": "The name of the organization.",
																						"example": "cloudflare",
																						"type": "string"
																					},
																					"team": {
																						"description": "The name of the team",
																						"example": "api-team",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"github-organization"
																		],
																		"title": "Github organization",
																		"type": "object"
																	},
																	{
																		"description": "Matches a group in Google Workspace.\nRequires a Google Workspace identity provider.",
																		"properties": {
																			"gsuite": {
																				"properties": {
																					"email": {
																						"description": "The email of the Google Workspace group.",
																						"example": "devs@cloudflare.com",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Google Workspace identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"email",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"gsuite"
																		],
																		"title": "Google Workspace group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific identity provider id.",
																		"properties": {
																			"login_method": {
																				"properties": {
																					"id": {
																						"description": "The ID of an identity provider.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"login_method"
																		],
																		"title": "Login Method",
																		"type": "object"
																	},
																	{
																		"description": "Matches an IP address from a list.",
																		"properties": {
																			"ip_list": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created IP list.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"ip_list"
																		],
																		"title": "IP list",
																		"type": "object"
																	},
																	{
																		"description": "Matches an IP address block.",
																		"properties": {
																			"ip": {
																				"properties": {
																					"ip": {
																						"description": "An IPv4 or IPv6 CIDR block.",
																						"example": "2400:cb00:21:10a::/64",
																						"type": "string"
																					}
																				},
																				"required": [
																					"ip"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"ip"
																		],
																		"title": "IP ranges",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Okta group.\nRequires an Okta identity provider.",
																		"properties": {
																			"okta": {
																				"properties": {
																					"identity_provider_id": {
																						"description": "The ID of your Okta identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"name": {
																						"description": "The name of the Okta group.",
																						"example": "devs",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"okta"
																		],
																		"title": "Okta group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a SAML group.\nRequires a SAML identity provider.",
																		"properties": {
																			"saml": {
																				"properties": {
																					"attribute_name": {
																						"description": "The name of the SAML attribute.",
																						"example": "group",
																						"type": "string"
																					},
																					"attribute_value": {
																						"description": "The SAML attribute value to look for.",
																						"example": "devs@cloudflare.com",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your SAML identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"attribute_name",
																					"attribute_value",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"saml"
																		],
																		"title": "SAML group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific Access Service Token",
																		"properties": {
																			"service_token": {
																				"properties": {
																					"token_id": {
																						"description": "The ID of a Service Token.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"token_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"service_token"
																		],
																		"title": "Service Token",
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"include": {
															"default": [],
															"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
															"items": {
																"oneOf": [
																	{
																		"description": "Matches an Access group.",
																		"properties": {
																			"group": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created Access group.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"group"
																		],
																		"title": "Access groups",
																		"type": "object"
																	},
																	{
																		"description": "Matches any valid Access Service Token",
																		"properties": {
																			"any_valid_service_token": {
																				"description": "An empty object which matches on all service tokens.",
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"any_valid_service_token"
																		],
																		"title": "Any Valid Service Token",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Azure Authentication Context.\nRequires an Azure identity provider.",
																		"properties": {
																			"auth_context": {
																				"properties": {
																					"ac_id": {
																						"description": "The ACID of an Authentication context.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"id": {
																						"description": "The ID of an Authentication context.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Azure identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id",
																					"identity_provider_id",
																					"ac_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"auth_context"
																		],
																		"title": "Authentication Context",
																		"type": "object"
																	},
																	{
																		"description": "Enforce different MFA options",
																		"properties": {
																			"auth_method": {
																				"properties": {
																					"auth_method": {
																						"description": "The type of authentication method https://datatracker.ietf.org/doc/html/rfc8176#section-2.",
																						"example": "mfa",
																						"type": "string"
																					}
																				},
																				"required": [
																					"auth_method"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"auth_method"
																		],
																		"title": "Authentication method",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Azure group.\nRequires an Azure identity provider.",
																		"properties": {
																			"azureAD": {
																				"properties": {
																					"id": {
																						"description": "The ID of an Azure group.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Azure identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"azureAD"
																		],
																		"title": "Azure group",
																		"type": "object"
																	},
																	{
																		"description": "Matches any valid client certificate.",
																		"example": {
																			"certificate": {}
																		},
																		"properties": {
																			"certificate": {
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"certificate"
																		],
																		"title": "Valid certificate",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific common name.",
																		"properties": {
																			"common_name": {
																				"properties": {
																					"common_name": {
																						"description": "The common name to match.",
																						"example": "james@example.com",
																						"type": "string"
																					}
																				},
																				"required": [
																					"common_name"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"common_name"
																		],
																		"title": "Common Name",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific country",
																		"properties": {
																			"geo": {
																				"properties": {
																					"country_code": {
																						"description": "The country code that should be matched.",
																						"example": "US",
																						"type": "string"
																					}
																				},
																				"required": [
																					"country_code"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"geo"
																		],
																		"title": "Country",
																		"type": "object"
																	},
																	{
																		"description": "Enforces a device posture rule has run successfully",
																		"properties": {
																			"device_posture": {
																				"properties": {
																					"integration_uid": {
																						"description": "The ID of a device posture integration.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"integration_uid"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"device_posture"
																		],
																		"title": "Device Posture",
																		"type": "object"
																	},
																	{
																		"description": "Match an entire email domain.",
																		"properties": {
																			"email_domain": {
																				"properties": {
																					"domain": {
																						"description": "The email domain to match.",
																						"example": "example.com",
																						"type": "string"
																					}
																				},
																				"required": [
																					"domain"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email_domain"
																		],
																		"title": "Email domain",
																		"type": "object"
																	},
																	{
																		"description": "Matches an email address from a list.",
																		"properties": {
																			"email_list": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created email list.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email_list"
																		],
																		"title": "Email list",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific email.",
																		"properties": {
																			"email": {
																				"properties": {
																					"email": {
																						"description": "The email of the user.",
																						"example": "test@example.com",
																						"format": "email",
																						"type": "string"
																					}
																				},
																				"required": [
																					"email"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email"
																		],
																		"title": "Email",
																		"type": "object"
																	},
																	{
																		"description": "Matches everyone.",
																		"properties": {
																			"everyone": {
																				"description": "An empty object which matches on all users.",
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"everyone"
																		],
																		"title": "Everyone",
																		"type": "object"
																	},
																	{
																		"description": "Create Allow or Block policies which evaluate the user based on custom criteria.",
																		"properties": {
																			"external_evaluation": {
																				"properties": {
																					"evaluate_url": {
																						"description": "The API endpoint containing your business logic.",
																						"example": "https://eval.example.com",
																						"type": "string"
																					},
																					"keys_url": {
																						"description": "The API endpoint containing the key that Access uses to verify that the response came from your API.",
																						"example": "https://eval.example.com/keys",
																						"type": "string"
																					}
																				},
																				"required": [
																					"evaluate_url",
																					"keys_url"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"external_evaluation"
																		],
																		"title": "External Evaluation",
																		"type": "object"
																	},
																	{
																		"description": "Matches a Github organization.\nRequires a Github identity provider.",
																		"properties": {
																			"github-organization": {
																				"properties": {
																					"identity_provider_id": {
																						"description": "The ID of your Github identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"name": {
																						"description": "The name of the organization.",
																						"example": "cloudflare",
																						"type": "string"
																					},
																					"team": {
																						"description": "The name of the team",
																						"example": "api-team",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"github-organization"
																		],
																		"title": "Github organization",
																		"type": "object"
																	},
																	{
																		"description": "Matches a group in Google Workspace.\nRequires a Google Workspace identity provider.",
																		"properties": {
																			"gsuite": {
																				"properties": {
																					"email": {
																						"description": "The email of the Google Workspace group.",
																						"example": "devs@cloudflare.com",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Google Workspace identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"email",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"gsuite"
																		],
																		"title": "Google Workspace group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific identity provider id.",
																		"properties": {
																			"login_method": {
																				"properties": {
																					"id": {
																						"description": "The ID of an identity provider.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"login_method"
																		],
																		"title": "Login Method",
																		"type": "object"
																	},
																	{
																		"description": "Matches an IP address from a list.",
																		"properties": {
																			"ip_list": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created IP list.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"ip_list"
																		],
																		"title": "IP list",
																		"type": "object"
																	},
																	{
																		"description": "Matches an IP address block.",
																		"properties": {
																			"ip": {
																				"properties": {
																					"ip": {
																						"description": "An IPv4 or IPv6 CIDR block.",
																						"example": "2400:cb00:21:10a::/64",
																						"type": "string"
																					}
																				},
																				"required": [
																					"ip"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"ip"
																		],
																		"title": "IP ranges",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Okta group.\nRequires an Okta identity provider.",
																		"properties": {
																			"okta": {
																				"properties": {
																					"identity_provider_id": {
																						"description": "The ID of your Okta identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"name": {
																						"description": "The name of the Okta group.",
																						"example": "devs",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"okta"
																		],
																		"title": "Okta group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a SAML group.\nRequires a SAML identity provider.",
																		"properties": {
																			"saml": {
																				"properties": {
																					"attribute_name": {
																						"description": "The name of the SAML attribute.",
																						"example": "group",
																						"type": "string"
																					},
																					"attribute_value": {
																						"description": "The SAML attribute value to look for.",
																						"example": "devs@cloudflare.com",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your SAML identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"attribute_name",
																					"attribute_value",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"saml"
																		],
																		"title": "SAML group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific Access Service Token",
																		"properties": {
																			"service_token": {
																				"properties": {
																					"token_id": {
																						"description": "The ID of a Service Token.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"token_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"service_token"
																		],
																		"title": "Service Token",
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"name": {
															"description": "The name of the Access policy.",
															"example": "Allow devs",
															"type": "string"
														},
														"require": {
															"default": [],
															"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
															"items": {
																"oneOf": [
																	{
																		"description": "Matches an Access group.",
																		"properties": {
																			"group": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created Access group.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"group"
																		],
																		"title": "Access groups",
																		"type": "object"
																	},
																	{
																		"description": "Matches any valid Access Service Token",
																		"properties": {
																			"any_valid_service_token": {
																				"description": "An empty object which matches on all service tokens.",
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"any_valid_service_token"
																		],
																		"title": "Any Valid Service Token",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Azure Authentication Context.\nRequires an Azure identity provider.",
																		"properties": {
																			"auth_context": {
																				"properties": {
																					"ac_id": {
																						"description": "The ACID of an Authentication context.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"id": {
																						"description": "The ID of an Authentication context.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Azure identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id",
																					"identity_provider_id",
																					"ac_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"auth_context"
																		],
																		"title": "Authentication Context",
																		"type": "object"
																	},
																	{
																		"description": "Enforce different MFA options",
																		"properties": {
																			"auth_method": {
																				"properties": {
																					"auth_method": {
																						"description": "The type of authentication method https://datatracker.ietf.org/doc/html/rfc8176#section-2.",
																						"example": "mfa",
																						"type": "string"
																					}
																				},
																				"required": [
																					"auth_method"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"auth_method"
																		],
																		"title": "Authentication method",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Azure group.\nRequires an Azure identity provider.",
																		"properties": {
																			"azureAD": {
																				"properties": {
																					"id": {
																						"description": "The ID of an Azure group.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Azure identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"azureAD"
																		],
																		"title": "Azure group",
																		"type": "object"
																	},
																	{
																		"description": "Matches any valid client certificate.",
																		"example": {
																			"certificate": {}
																		},
																		"properties": {
																			"certificate": {
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"certificate"
																		],
																		"title": "Valid certificate",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific common name.",
																		"properties": {
																			"common_name": {
																				"properties": {
																					"common_name": {
																						"description": "The common name to match.",
																						"example": "james@example.com",
																						"type": "string"
																					}
																				},
																				"required": [
																					"common_name"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"common_name"
																		],
																		"title": "Common Name",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific country",
																		"properties": {
																			"geo": {
																				"properties": {
																					"country_code": {
																						"description": "The country code that should be matched.",
																						"example": "US",
																						"type": "string"
																					}
																				},
																				"required": [
																					"country_code"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"geo"
																		],
																		"title": "Country",
																		"type": "object"
																	},
																	{
																		"description": "Enforces a device posture rule has run successfully",
																		"properties": {
																			"device_posture": {
																				"properties": {
																					"integration_uid": {
																						"description": "The ID of a device posture integration.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"integration_uid"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"device_posture"
																		],
																		"title": "Device Posture",
																		"type": "object"
																	},
																	{
																		"description": "Match an entire email domain.",
																		"properties": {
																			"email_domain": {
																				"properties": {
																					"domain": {
																						"description": "The email domain to match.",
																						"example": "example.com",
																						"type": "string"
																					}
																				},
																				"required": [
																					"domain"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email_domain"
																		],
																		"title": "Email domain",
																		"type": "object"
																	},
																	{
																		"description": "Matches an email address from a list.",
																		"properties": {
																			"email_list": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created email list.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email_list"
																		],
																		"title": "Email list",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific email.",
																		"properties": {
																			"email": {
																				"properties": {
																					"email": {
																						"description": "The email of the user.",
																						"example": "test@example.com",
																						"format": "email",
																						"type": "string"
																					}
																				},
																				"required": [
																					"email"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"email"
																		],
																		"title": "Email",
																		"type": "object"
																	},
																	{
																		"description": "Matches everyone.",
																		"properties": {
																			"everyone": {
																				"description": "An empty object which matches on all users.",
																				"example": {},
																				"type": "object",
																				"x-stainless-empty-object": true
																			}
																		},
																		"required": [
																			"everyone"
																		],
																		"title": "Everyone",
																		"type": "object"
																	},
																	{
																		"description": "Create Allow or Block policies which evaluate the user based on custom criteria.",
																		"properties": {
																			"external_evaluation": {
																				"properties": {
																					"evaluate_url": {
																						"description": "The API endpoint containing your business logic.",
																						"example": "https://eval.example.com",
																						"type": "string"
																					},
																					"keys_url": {
																						"description": "The API endpoint containing the key that Access uses to verify that the response came from your API.",
																						"example": "https://eval.example.com/keys",
																						"type": "string"
																					}
																				},
																				"required": [
																					"evaluate_url",
																					"keys_url"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"external_evaluation"
																		],
																		"title": "External Evaluation",
																		"type": "object"
																	},
																	{
																		"description": "Matches a Github organization.\nRequires a Github identity provider.",
																		"properties": {
																			"github-organization": {
																				"properties": {
																					"identity_provider_id": {
																						"description": "The ID of your Github identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"name": {
																						"description": "The name of the organization.",
																						"example": "cloudflare",
																						"type": "string"
																					},
																					"team": {
																						"description": "The name of the team",
																						"example": "api-team",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"github-organization"
																		],
																		"title": "Github organization",
																		"type": "object"
																	},
																	{
																		"description": "Matches a group in Google Workspace.\nRequires a Google Workspace identity provider.",
																		"properties": {
																			"gsuite": {
																				"properties": {
																					"email": {
																						"description": "The email of the Google Workspace group.",
																						"example": "devs@cloudflare.com",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your Google Workspace identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"email",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"gsuite"
																		],
																		"title": "Google Workspace group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific identity provider id.",
																		"properties": {
																			"login_method": {
																				"properties": {
																					"id": {
																						"description": "The ID of an identity provider.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"login_method"
																		],
																		"title": "Login Method",
																		"type": "object"
																	},
																	{
																		"description": "Matches an IP address from a list.",
																		"properties": {
																			"ip_list": {
																				"properties": {
																					"id": {
																						"description": "The ID of a previously created IP list.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"ip_list"
																		],
																		"title": "IP list",
																		"type": "object"
																	},
																	{
																		"description": "Matches an IP address block.",
																		"properties": {
																			"ip": {
																				"properties": {
																					"ip": {
																						"description": "An IPv4 or IPv6 CIDR block.",
																						"example": "2400:cb00:21:10a::/64",
																						"type": "string"
																					}
																				},
																				"required": [
																					"ip"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"ip"
																		],
																		"title": "IP ranges",
																		"type": "object"
																	},
																	{
																		"description": "Matches an Okta group.\nRequires an Okta identity provider.",
																		"properties": {
																			"okta": {
																				"properties": {
																					"identity_provider_id": {
																						"description": "The ID of your Okta identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					},
																					"name": {
																						"description": "The name of the Okta group.",
																						"example": "devs",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"okta"
																		],
																		"title": "Okta group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a SAML group.\nRequires a SAML identity provider.",
																		"properties": {
																			"saml": {
																				"properties": {
																					"attribute_name": {
																						"description": "The name of the SAML attribute.",
																						"example": "group",
																						"type": "string"
																					},
																					"attribute_value": {
																						"description": "The SAML attribute value to look for.",
																						"example": "devs@cloudflare.com",
																						"type": "string"
																					},
																					"identity_provider_id": {
																						"description": "The ID of your SAML identity provider.",
																						"example": "ea85612a-29c8-46c2-bacb-669d65136971",
																						"type": "string"
																					}
																				},
																				"required": [
																					"attribute_name",
																					"attribute_value",
																					"identity_provider_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"saml"
																		],
																		"title": "SAML group",
																		"type": "object"
																	},
																	{
																		"description": "Matches a specific Access Service Token",
																		"properties": {
																			"service_token": {
																				"properties": {
																					"token_id": {
																						"description": "The ID of a Service Token.",
																						"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f",
																						"type": "string"
																					}
																				},
																				"required": [
																					"token_id"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"service_token"
																		],
																		"title": "Service Token",
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														}
													},
													"required": [
														"name",
														"decision",
														"include"
													],
													"type": "object"
												}
											],
											"properties": {
												"approval_groups": {
													"description": "Administrators who can approve a temporary authentication request.",
													"example": [
														{
															"approvals_needed": 1,
															"email_addresses": [
																"test1@cloudflare.com",
																"test2@cloudflare.com"
															]
														},
														{
															"approvals_needed": 3,
															"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34"
														}
													],
													"items": {
														"description": "A group of email addresses that can approve a temporary authentication request.",
														"properties": {
															"approvals_needed": {
																"description": "The number of approvals needed to obtain access.",
																"example": 1,
																"minimum": 0,
																"type": "number"
															},
															"email_addresses": {
																"description": "A list of emails that can approve the access request.",
																"example": [
																	"test@cloudflare.com",
																	"test2@cloudflare.com"
																],
																"items": {
																	"type": "string"
																},
																"type": "array"
															},
															"email_list_uuid": {
																"description": "The UUID of an re-usable email list.",
																"type": "string"
															}
														},
														"required": [
															"approvals_needed"
														],
														"type": "object"
													},
													"type": "array"
												},
												"approval_required": {
													"description": "Requires the user to request access from an administrator at the start of each session.",
													"example": true,
													"type": "boolean"
												},
												"isolation_required": {
													"description": "Require this application to be served in an isolated browser for users matching this policy. 'Client Web Isolation' must be on for the account in order to use this feature.",
													"example": false,
													"type": "boolean"
												},
												"purpose_justification_prompt": {
													"description": "A custom message that will appear on the purpose justification screen.",
													"example": "Please enter a justification for entering this protected domain.",
													"type": "string"
												},
												"purpose_justification_required": {
													"description": "Require users to enter a justification when they log in to the application.",
													"example": true,
													"type": "boolean"
												},
												"session_duration": {
													"default": "24h",
													"description": "The amount of time that tokens issued for the application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.",
													"example": "24h",
													"type": "string"
												}
											},
											"type": "object"
										},
										{
											"description": "The UUID of the reusable policy you wish to test",
											"example": "f1a8b3c9d4e5f6789a0b1c2d3e4f5678a9b0c1d2e3f4a5b67890c1d2e3f4b5a6",
											"type": "string"
										}
									]
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "The UUID of the policy test.",
													"example": "f1a8b3c9d4e5f6789a0b1c2d3e4f5678a9b0c1d2e3f4a5b67890c1d2e3f4b5a6",
													"maxLength": 64,
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "The status of the policy test request.",
													"enum": [
														"success"
													],
													"example": "success",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Start Access policy test response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Start Access policy test response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Start Access policy test",
		"tags": [
			"Access policy tester"
		],
		"x-api-token-group": [
			"Access: Policy Test Write"
		]
	}
}