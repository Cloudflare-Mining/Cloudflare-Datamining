{
	"GET /radar/dns/summary/{dimension}": {
		"description": "Retrieves the distribution of DNS queries by the specified dimension.",
		"operationId": "radar-get-dns-summary",
		"parameters": [
			{
				"description": "Specifies the attribute by which to group the results.",
				"in": "path",
				"name": "dimension",
				"required": true,
				"schema": {
					"description": "Specifies the attribute by which to group the results.",
					"enum": [
						"IP_VERSION",
						"CACHE_HIT",
						"DNSSEC",
						"DNSSEC_AWARE",
						"DNSSEC_E2E",
						"MATCHING_ANSWER",
						"PROTOCOL",
						"QUERY_TYPE",
						"RESPONSE_CODE",
						"RESPONSE_TTL"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"type": "string"
											},
											"example": {
												"IPv4": "50.168733",
												"IPv6": "25.084366"
											},
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS summary by dimension",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/dns/summary/cache_hit": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by cache status.",
		"operationId": "radar-get-dns-summary-by-cache-hit-status",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NEGATIVE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"POSITIVE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"POSITIVE",
												"NEGATIVE"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by cache status summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/dnssec": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS responses by DNSSEC (DNS Security Extensions) support.",
		"operationId": "radar-get-dns-summary-by-dnssec",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"INSECURE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"INVALID": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"OTHER": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"SECURE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"INSECURE",
												"SECURE",
												"INVALID",
												"OTHER"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by DNSSEC support summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/dnssec_aware": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by DNSSEC (DNS Security Extensions) client awareness.",
		"operationId": "radar-get-dns-summary-by-dnssec-awareness",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"SUPPORTED": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"NOT_SUPPORTED",
												"SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by DNSSEC awareness summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/dnssec_e2e": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNSSEC-validated answers by end-to-end security status.",
		"operationId": "radar-get-dns-summary-by-dnssec-e2e-version",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NEGATIVE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"POSITIVE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"NEGATIVE",
												"POSITIVE"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by DNSSEC end-to-end summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/ip_version": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by IP version.",
		"operationId": "radar-get-dns-summary-by-ip-version",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"IPv4": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"IPv6": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by IP version summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/matching_answer": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by matching answers.",
		"operationId": "radar-get-dns-summary-by-matching-answer-status",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NEGATIVE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"POSITIVE": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"POSITIVE",
												"NEGATIVE"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by matching answer summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/protocol": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by DNS transport protocol.",
		"operationId": "radar-get-dns-summary-by-protocol",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"HTTPS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"TCP": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"TLS": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"UDP": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"UDP",
												"TLS",
												"HTTPS",
												"TCP"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by protocol summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/query_type": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by type.",
		"operationId": "radar-get-dns-summary-by-query-type",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"description": "A numeric string.",
												"example": "10",
												"pattern": "^\\d+$",
												"type": "string"
											},
											"example": {
												"A": "20",
												"AAAA": "20",
												"HTTPS": "20",
												"NS": "20",
												"PTR": "20"
											},
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by type summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/response_code": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by response code.",
		"operationId": "radar-get-dns-summary-by-response-code",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"description": "A numeric string.",
												"example": "10",
												"pattern": "^\\d+$",
												"type": "string"
											},
											"example": {
												"NOERROR": "70",
												"NOTIMP": "5",
												"NXDOMAIN": "10",
												"REFUSED": "5",
												"SERVFAIL": "5"
											},
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by response code summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/summary/response_ttl": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by minimum response TTL.",
		"operationId": "radar-get-dns-summary-by-response-ttl",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"gt_15m_lte_1h": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"gt_1d_lte_1w": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"gt_1h_lte_1d": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"gt_1m_lte_5m": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"gt_1w": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"gt_5m_lte_15m": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"lte_1m": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												}
											},
											"required": [
												"lte_1m",
												"gt_1m_lte_5m",
												"gt_5m_lte_15m",
												"gt_15m_lte_1h",
												"gt_1h_lte_1d",
												"gt_1d_lte_1w",
												"gt_1w"
											],
											"type": "object"
										}
									},
									"required": [
										"summary_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by response TTL summary",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Summary By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/summary_v2/) instead."
	},
	"GET /radar/dns/timeseries": {
		"description": "Retrieves normalized query volume to the 1.1.1.1 DNS resolver over time.",
		"operationId": "radar-get-dns-timeseries",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"additionalProperties": {
										"properties": {
											"timestamps": {
												"items": {
													"format": "date-time",
													"type": "string"
												},
												"type": "array"
											},
											"values": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											}
										},
										"required": [
											"timestamps",
											"values"
										],
										"type": "object"
									},
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										}
									},
									"required": [
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/dns/timeseries_groups/{dimension}": {
		"description": "Retrieves the distribution of DNS queries grouped by dimension over time.",
		"operationId": "radar-get-dns-timeseries-group",
		"parameters": [
			{
				"description": "Specifies the attribute by which to group the results.",
				"in": "path",
				"name": "dimension",
				"required": true,
				"schema": {
					"description": "Specifies the attribute by which to group the results.",
					"enum": [
						"IP_VERSION",
						"CACHE_HIT",
						"DNSSEC",
						"DNSSEC_AWARE",
						"DNSSEC_E2E",
						"MATCHING_ANSWER",
						"PROTOCOL",
						"QUERY_TYPE",
						"RESPONSE_CODE",
						"RESPONSE_TTL"
					],
					"type": "string"
				}
			},
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"IPv4": [
													"50.168733"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS time series grouped by dimension",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/dns/timeseries_groups/cache_hit": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by cache status over time.",
		"operationId": "radar-get-dns-timeseries-group-by-cache-hit-status",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NEGATIVE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"POSITIVE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"POSITIVE",
												"NEGATIVE"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by cache status time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/dnssec": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS responses by DNSSEC (DNS Security Extensions) support over time.",
		"operationId": "radar-get-dns-timeseries-group-by-dnssec",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"INSECURE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"INVALID": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"OTHER": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"SECURE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"INSECURE",
												"SECURE",
												"INVALID",
												"OTHER"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by DNSSEC support time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/dnssec_aware": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by DNSSEC (DNS Security Extensions) client awareness over time.",
		"operationId": "radar-get-dns-timeseries-group-by-dnssec-awareness",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"SUPPORTED": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NOT_SUPPORTED",
												"SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by DNSSEC awareness time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/dnssec_e2e": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNSSEC-validated answers by end-to-end security status over time.",
		"operationId": "radar-get-dns-timeseries-group-by-dnssec-e2e-version",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NEGATIVE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"POSITIVE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NEGATIVE",
												"POSITIVE"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by DNSSEC end-to-end time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/ip_version": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by IP version over time.",
		"operationId": "radar-get-dns-timeseries-group-by-ip-version",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by IP version time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/matching_answer": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by matching answers over time.",
		"operationId": "radar-get-dns-timeseries-group-by-matching-answer-status",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NEGATIVE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"POSITIVE": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"POSITIVE",
												"NEGATIVE"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by matching answer time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/protocol": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by DNS transport protocol over time.",
		"operationId": "radar-get-dns-timeseries-group-by-protocol",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"HTTPS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"TCP": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"TLS": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"UDP": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"UDP",
												"TLS",
												"HTTPS",
												"TCP"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by protocol time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/query_type": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by type over time.",
		"operationId": "radar-get-dns-timeseries-group-by-query-type",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"A": [
													"20"
												],
												"AAAA": [
													"20"
												],
												"HTTPS": [
													"20"
												],
												"NS": [
													"20"
												],
												"PTR": [
													"20"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by type time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/response_code": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by response code over time.",
		"operationId": "radar-get-dns-timeseries-group-by-response-code",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limits the number of objects per group to the top items within the specified time range. When item count exceeds the limit, extra items appear grouped under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"description": "A numeric string.",
													"example": "10",
													"pattern": "^\\d+$",
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"NOERROR": [
													"70"
												],
												"NOTIMP": [
													"5"
												],
												"NXDOMAIN": [
													"10"
												],
												"REFUSED": [
													"5"
												],
												"SERVFAIL": [
													"5"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by response code time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/timeseries_groups/response_ttl": {
		"deprecated": true,
		"description": "Retrieves the distribution of DNS queries by minimum answer TTL over time.",
		"operationId": "radar-get-dns-timeseries-group-by-response-ttl",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by country code top-level domain (ccTLD).",
				"in": "query",
				"name": "tld",
				"schema": {
					"description": "Filters results by country code top-level domain (ccTLD).",
					"example": "fr",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DNS query type.",
				"in": "query",
				"name": "queryType",
				"schema": {
					"description": "Filters results by DNS query type.",
					"enum": [
						"A",
						"AAAA",
						"A6",
						"AFSDB",
						"ANY",
						"APL",
						"ATMA",
						"AXFR",
						"CAA",
						"CDNSKEY",
						"CDS",
						"CERT",
						"CNAME",
						"CSYNC",
						"DHCID",
						"DLV",
						"DNAME",
						"DNSKEY",
						"DOA",
						"DS",
						"EID",
						"EUI48",
						"EUI64",
						"GPOS",
						"GID",
						"HINFO",
						"HIP",
						"HTTPS",
						"IPSECKEY",
						"ISDN",
						"IXFR",
						"KEY",
						"KX",
						"L32",
						"L64",
						"LOC",
						"LP",
						"MAILA",
						"MAILB",
						"MB",
						"MD",
						"MF",
						"MG",
						"MINFO",
						"MR",
						"MX",
						"NAPTR",
						"NB",
						"NBSTAT",
						"NID",
						"NIMLOC",
						"NINFO",
						"NS",
						"NSAP",
						"NSEC",
						"NSEC3",
						"NSEC3PARAM",
						"NULL",
						"NXT",
						"OPENPGPKEY",
						"OPT",
						"PTR",
						"PX",
						"RKEY",
						"RP",
						"RRSIG",
						"RT",
						"SIG",
						"SINK",
						"SMIMEA",
						"SOA",
						"SPF",
						"SRV",
						"SSHFP",
						"SVCB",
						"TA",
						"TALINK",
						"TKEY",
						"TLSA",
						"TSIG",
						"TXT",
						"UINFO",
						"UID",
						"UNSPEC",
						"URI",
						"WKS",
						"X25",
						"ZONEMD"
					],
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS transport protocol.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Filters results by DNS transport protocol.",
					"enum": [
						"UDP",
						"TCP",
						"HTTPS",
						"TLS"
					],
					"type": "string"
				}
			},
			{
				"description": "Filters results by DNS response code.",
				"in": "query",
				"name": "responseCode",
				"schema": {
					"description": "Filters results by DNS response code.",
					"enum": [
						"NOERROR",
						"FORMERR",
						"SERVFAIL",
						"NXDOMAIN",
						"NOTIMP",
						"REFUSED",
						"YXDOMAIN",
						"YXRRSET",
						"NXRRSET",
						"NOTAUTH",
						"NOTZONE",
						"BADSIG",
						"BADKEY",
						"BADTIME",
						"BADMODE",
						"BADNAME",
						"BADALG",
						"BADTRUNC",
						"BADCOOKIE"
					],
					"type": "string"
				}
			},
			{
				"description": "Specifies whether the response includes empty DNS responses (NODATA).",
				"in": "query",
				"name": "nodata",
				"schema": {
					"description": "Specifies whether the response includes empty DNS responses (NODATA).",
					"type": "boolean"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"aggInterval": {
													"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
													"enum": [
														"FIFTEEN_MINUTES",
														"ONE_HOUR",
														"ONE_DAY",
														"ONE_WEEK",
														"ONE_MONTH"
													],
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units",
												"aggInterval"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"gt_15m_lte_1h": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"gt_1d_lte_1w": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"gt_1h_lte_1d": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"gt_1m_lte_5m": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"gt_1w": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"gt_5m_lte_15m": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												},
												"lte_1m": {
													"items": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"lte_1m",
												"gt_1m_lte_5m",
												"gt_5m_lte_15m",
												"gt_15m_lte_1h",
												"gt_1h_lte_1d",
												"gt_1d_lte_1w",
												"gt_1w"
											],
											"type": "object"
										}
									},
									"required": [
										"serie_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DNS queries by response TTL time series",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		},
		"x-stainless-deprecation-message": "Use [Radar DNS Timeseries Groups By Dimension](https://developers.cloudflare.com/api/resources/radar/subresources/dns/methods/timeseries_groups_v2/) instead."
	},
	"GET /radar/dns/top/ases": {
		"description": "Retrieves the top autonomous systems by DNS queries made to 1.1.1.1 DNS resolver.",
		"operationId": "radar-get-dns-top-ases",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by domain name.",
				"in": "query",
				"name": "domain",
				"schema": {
					"description": "Filters results by domain name.",
					"example": "google.com",
					"items": {
						"pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]{0,63}[a-zA-Z0-9-])?\\.)+[a-zA-Z0-9-]{2,63}$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 174,
														"type": "integer"
													},
													"clientASName": {
														"example": "Cogent-174",
														"type": "string"
													},
													"value": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top ASes by DNS queries",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/dns/top/locations": {
		"description": "Retrieves the top locations by DNS queries made to 1.1.1.1 DNS resolver.",
		"operationId": "radar-get-dns-top-locations",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Filters results by Autonomous System. Specify one or more Autonomous System Numbers (ASNs) as a comma-separated list. Prefix with `-` to exclude ASNs from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Filters results by location. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude locations from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Filters results by continent. Specify a comma-separated list of alpha-2 codes. Prefix with `-` to exclude continents from results. For example, `-EU,NA` excludes results from EU, but includes results from NA.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by domain name.",
				"in": "query",
				"name": "domain",
				"schema": {
					"description": "Filters results by domain name.",
					"example": "google.com",
					"items": {
						"pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]{0,63}[a-zA-Z0-9-])?\\.)+[a-zA-Z0-9-]{2,63}$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"description": "Metadata for the results.",
											"properties": {
												"confidenceInfo": {
													"nullable": true,
													"properties": {
														"annotations": {
															"items": {
																"description": "Annotation associated with the result (e.g. outage or other type of event).",
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endDate": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"description": "Whether event is a single point in time or a time range.",
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"format": "uri",
																		"type": "string"
																	},
																	"startDate": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startDate",
																	"endDate",
																	"linkedUrl",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"description": "Provides an indication of how much confidence Cloudflare has in the data.",
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"description": "Timestamp of the last dataset update.",
													"format": "date-time",
													"type": "string"
												},
												"normalization": {
													"description": "Normalization method applied to the results. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
													"enum": [
														"PERCENTAGE",
														"MIN0_MAX",
														"MIN_MAX",
														"RAW_VALUES",
														"PERCENTAGE_CHANGE",
														"ROLLING_AVERAGE",
														"OVERLAPPED_PERCENTAGE",
														"RATIO"
													],
													"type": "string"
												},
												"units": {
													"description": "Measurement units for the results.",
													"items": {
														"properties": {
															"name": {
																"example": "*",
																"type": "string"
															},
															"value": {
																"example": "requests",
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange",
												"confidenceInfo",
												"normalization",
												"lastUpdated",
												"units"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "PT",
														"type": "string"
													},
													"clientCountryName": {
														"example": "Portugal",
														"type": "string"
													},
													"value": {
														"description": "A numeric string.",
														"example": "10",
														"pattern": "^\\d+$",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"top_0",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top locations by DNS queries",
		"tags": [
			"Radar DNS"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}