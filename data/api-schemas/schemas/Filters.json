{
	"DELETE /zones/{zone_id}/filters": {
		"deprecated": true,
		"description": "Deletes one or more existing filters.",
		"operationId": "filters-delete-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Defines an identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"id": {
								"description": "The unique identifier of the filter.",
								"example": "372e67954025e0ba6aaa6d586b9e0b61",
								"maxLength": 32,
								"minLength": 32,
								"readOnly": true,
								"type": "string"
							}
						},
						"required": [
							"id"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Defines the total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Defines the current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Defines the number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Defines the total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"additionalProperties": false,
												"properties": {
													"description": {
														"description": "An informative summary of the filter.",
														"example": "Restrict access from these browsers on this address range.",
														"maxLength": 500,
														"type": "string"
													},
													"expression": {
														"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
														"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
														"type": "string"
													},
													"id": {
														"description": "The unique identifier of the filter.",
														"example": "372e67954025e0ba6aaa6d586b9e0b61",
														"maxLength": 32,
														"minLength": 32,
														"readOnly": true,
														"type": "string"
													},
													"paused": {
														"description": "When true, indicates that the filter is currently paused.",
														"example": false,
														"type": "boolean"
													},
													"ref": {
														"description": "A short reference tag. Allows you to select related filters.",
														"example": "FIL-100",
														"maxLength": 50,
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete filters response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Defines the total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Defines the current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Defines the number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Defines the total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"additionalProperties": false,
														"properties": {
															"description": {
																"description": "An informative summary of the filter.",
																"example": "Restrict access from these browsers on this address range.",
																"maxLength": 500,
																"type": "string"
															},
															"expression": {
																"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
																"type": "string"
															},
															"id": {
																"description": "The unique identifier of the filter.",
																"example": "372e67954025e0ba6aaa6d586b9e0b61",
																"maxLength": 32,
																"minLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"paused": {
																"description": "When true, indicates that the filter is currently paused.",
																"example": false,
																"type": "boolean"
															},
															"ref": {
																"description": "A short reference tag. Allows you to select related filters.",
																"example": "FIL-100",
																"maxLength": 50,
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete filters",
		"tags": [
			"Filters"
		],
		"x-api-token-group": [
			"Firewall Services Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /zones/{zone_id}/filters/{filter_id}": {
		"deprecated": true,
		"description": "Deletes an existing filter.",
		"operationId": "filters-delete-a-filter",
		"parameters": [
			{
				"in": "path",
				"name": "filter_id",
				"required": true,
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Defines an identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"additionalProperties": false,
											"properties": {
												"description": {
													"description": "An informative summary of the filter.",
													"example": "Restrict access from these browsers on this address range.",
													"maxLength": 500,
													"type": "string"
												},
												"expression": {
													"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
													"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
													"type": "string"
												},
												"id": {
													"description": "The unique identifier of the filter.",
													"example": "372e67954025e0ba6aaa6d586b9e0b61",
													"maxLength": 32,
													"minLength": 32,
													"readOnly": true,
													"type": "string"
												},
												"paused": {
													"description": "When true, indicates that the filter is currently paused.",
													"example": false,
													"type": "boolean"
												},
												"ref": {
													"description": "A short reference tag. Allows you to select related filters.",
													"example": "FIL-100",
													"maxLength": 50,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a filter response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"additionalProperties": false,
													"properties": {
														"description": {
															"description": "An informative summary of the filter.",
															"example": "Restrict access from these browsers on this address range.",
															"maxLength": 500,
															"type": "string"
														},
														"expression": {
															"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
															"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
															"type": "string"
														},
														"id": {
															"description": "The unique identifier of the filter.",
															"example": "372e67954025e0ba6aaa6d586b9e0b61",
															"maxLength": 32,
															"minLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"paused": {
															"description": "When true, indicates that the filter is currently paused.",
															"example": false,
															"type": "boolean"
														},
														"ref": {
															"description": "A short reference tag. Allows you to select related filters.",
															"example": "FIL-100",
															"maxLength": 50,
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a filter response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete a filter",
		"tags": [
			"Filters"
		],
		"x-api-token-group": [
			"Firewall Services Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/filters": {
		"deprecated": true,
		"description": "Fetches filters in a zone. You can filter the results using several optional parameters.",
		"operationId": "filters-list-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Defines an identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "paused",
				"schema": {
					"oneOf": [
						{
							"description": "When true, indicates that the filter is currently paused.",
							"example": false,
							"type": "boolean"
						}
					]
				}
			},
			{
				"in": "query",
				"name": "expression",
				"schema": {
					"description": "A case-insensitive string to find in the expression.",
					"example": "php",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "description",
				"schema": {
					"description": "A case-insensitive string to find in the description.",
					"example": "browsers",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "ref",
				"schema": {
					"description": "The filter ref (a short reference tag) to search for. Must be an exact match.",
					"example": "FIL-100",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 25,
					"description": "Number of filters per page.",
					"maximum": 100,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "id",
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Defines the total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Defines the current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Defines the number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Defines the total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"additionalProperties": false,
												"properties": {
													"description": {
														"description": "An informative summary of the filter.",
														"example": "Restrict access from these browsers on this address range.",
														"maxLength": 500,
														"type": "string"
													},
													"expression": {
														"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
														"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
														"type": "string"
													},
													"id": {
														"description": "The unique identifier of the filter.",
														"example": "372e67954025e0ba6aaa6d586b9e0b61",
														"maxLength": 32,
														"minLength": 32,
														"readOnly": true,
														"type": "string"
													},
													"paused": {
														"description": "When true, indicates that the filter is currently paused.",
														"example": false,
														"type": "boolean"
													},
													"ref": {
														"description": "A short reference tag. Allows you to select related filters.",
														"example": "FIL-100",
														"maxLength": 50,
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List filters response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Defines the total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Defines the current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Defines the number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Defines the total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"additionalProperties": false,
														"properties": {
															"description": {
																"description": "An informative summary of the filter.",
																"example": "Restrict access from these browsers on this address range.",
																"maxLength": 500,
																"type": "string"
															},
															"expression": {
																"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
																"type": "string"
															},
															"id": {
																"description": "The unique identifier of the filter.",
																"example": "372e67954025e0ba6aaa6d586b9e0b61",
																"maxLength": 32,
																"minLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"paused": {
																"description": "When true, indicates that the filter is currently paused.",
																"example": false,
																"type": "boolean"
															},
															"ref": {
																"description": "A short reference tag. Allows you to select related filters.",
																"example": "FIL-100",
																"maxLength": 50,
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List filters",
		"tags": [
			"Filters"
		],
		"x-api-token-group": [
			"Firewall Services Write",
			"Firewall Services Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/filters/{filter_id}": {
		"deprecated": true,
		"description": "Fetches the details of a filter.",
		"operationId": "filters-get-a-filter",
		"parameters": [
			{
				"in": "path",
				"name": "filter_id",
				"required": true,
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Defines an identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"additionalProperties": false,
											"properties": {
												"description": {
													"description": "An informative summary of the filter.",
													"example": "Restrict access from these browsers on this address range.",
													"maxLength": 500,
													"type": "string"
												},
												"expression": {
													"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
													"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
													"type": "string"
												},
												"id": {
													"description": "The unique identifier of the filter.",
													"example": "372e67954025e0ba6aaa6d586b9e0b61",
													"maxLength": 32,
													"minLength": 32,
													"readOnly": true,
													"type": "string"
												},
												"paused": {
													"description": "When true, indicates that the filter is currently paused.",
													"example": false,
													"type": "boolean"
												},
												"ref": {
													"description": "A short reference tag. Allows you to select related filters.",
													"example": "FIL-100",
													"maxLength": 50,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a filter response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"additionalProperties": false,
													"properties": {
														"description": {
															"description": "An informative summary of the filter.",
															"example": "Restrict access from these browsers on this address range.",
															"maxLength": 500,
															"type": "string"
														},
														"expression": {
															"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
															"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
															"type": "string"
														},
														"id": {
															"description": "The unique identifier of the filter.",
															"example": "372e67954025e0ba6aaa6d586b9e0b61",
															"maxLength": 32,
															"minLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"paused": {
															"description": "When true, indicates that the filter is currently paused.",
															"example": false,
															"type": "boolean"
														},
														"ref": {
															"description": "A short reference tag. Allows you to select related filters.",
															"example": "FIL-100",
															"maxLength": 50,
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a filter response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get a filter",
		"tags": [
			"Filters"
		],
		"x-api-token-group": [
			"Firewall Services Write",
			"Firewall Services Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/filters": {
		"deprecated": true,
		"description": "Creates one or more filters.",
		"operationId": "filters-create-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Defines an identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"expression": {
								"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
								"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
								"type": "string"
							}
						},
						"required": [
							"expression"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Defines the total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Defines the current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Defines the number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Defines the total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"additionalProperties": false,
														"properties": {
															"description": {
																"description": "An informative summary of the filter.",
																"example": "Restrict access from these browsers on this address range.",
																"maxLength": 500,
																"type": "string"
															},
															"expression": {
																"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
																"type": "string"
															},
															"id": {
																"description": "The unique identifier of the filter.",
																"example": "372e67954025e0ba6aaa6d586b9e0b61",
																"maxLength": 32,
																"minLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"paused": {
																"description": "When true, indicates that the filter is currently paused.",
																"example": false,
																"type": "boolean"
															},
															"ref": {
																"description": "A short reference tag. Allows you to select related filters.",
																"example": "FIL-100",
																"maxLength": 50,
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								}
							]
						}
					}
				},
				"description": "Create filters response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Defines the total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Defines the current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Defines the number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Defines the total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"additionalProperties": false,
														"properties": {
															"description": {
																"description": "An informative summary of the filter.",
																"example": "Restrict access from these browsers on this address range.",
																"maxLength": 500,
																"type": "string"
															},
															"expression": {
																"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
																"type": "string"
															},
															"id": {
																"description": "The unique identifier of the filter.",
																"example": "372e67954025e0ba6aaa6d586b9e0b61",
																"maxLength": 32,
																"minLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"paused": {
																"description": "When true, indicates that the filter is currently paused.",
																"example": false,
																"type": "boolean"
															},
															"ref": {
																"description": "A short reference tag. Allows you to select related filters.",
																"example": "FIL-100",
																"maxLength": 50,
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create filters",
		"tags": [
			"Filters"
		],
		"x-api-token-group": [
			"Firewall Services Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/filters": {
		"deprecated": true,
		"description": "Updates one or more existing filters.",
		"operationId": "filters-update-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Defines an identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"id": {
								"description": "The unique identifier of the resource.",
								"example": "de677e5818985db1285d0e80225f06e5",
								"maxLength": 32,
								"readOnly": true,
								"type": "string"
							}
						},
						"required": [
							"id"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Defines the total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Defines the current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Defines the number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Defines the total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"additionalProperties": false,
												"properties": {
													"description": {
														"description": "An informative summary of the filter.",
														"example": "Restrict access from these browsers on this address range.",
														"maxLength": 500,
														"type": "string"
													},
													"expression": {
														"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
														"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
														"type": "string"
													},
													"id": {
														"description": "The unique identifier of the filter.",
														"example": "372e67954025e0ba6aaa6d586b9e0b61",
														"maxLength": 32,
														"minLength": 32,
														"readOnly": true,
														"type": "string"
													},
													"paused": {
														"description": "When true, indicates that the filter is currently paused.",
														"example": false,
														"type": "boolean"
													},
													"ref": {
														"description": "A short reference tag. Allows you to select related filters.",
														"example": "FIL-100",
														"maxLength": 50,
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update filters response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Defines the total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Defines the current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Defines the number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Defines the total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"additionalProperties": false,
														"properties": {
															"description": {
																"description": "An informative summary of the filter.",
																"example": "Restrict access from these browsers on this address range.",
																"maxLength": 500,
																"type": "string"
															},
															"expression": {
																"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
																"type": "string"
															},
															"id": {
																"description": "The unique identifier of the filter.",
																"example": "372e67954025e0ba6aaa6d586b9e0b61",
																"maxLength": 32,
																"minLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"paused": {
																"description": "When true, indicates that the filter is currently paused.",
																"example": false,
																"type": "boolean"
															},
															"ref": {
																"description": "A short reference tag. Allows you to select related filters.",
																"example": "FIL-100",
																"maxLength": 50,
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update filters",
		"tags": [
			"Filters"
		],
		"x-api-token-group": [
			"Firewall Services Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/filters/{filter_id}": {
		"deprecated": true,
		"description": "Updates an existing filter.",
		"operationId": "filters-update-a-filter",
		"parameters": [
			{
				"in": "path",
				"name": "filter_id",
				"required": true,
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Defines an identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"id"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"additionalProperties": false,
											"properties": {
												"description": {
													"description": "An informative summary of the filter.",
													"example": "Restrict access from these browsers on this address range.",
													"maxLength": 500,
													"type": "string"
												},
												"expression": {
													"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
													"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
													"type": "string"
												},
												"id": {
													"description": "The unique identifier of the filter.",
													"example": "372e67954025e0ba6aaa6d586b9e0b61",
													"maxLength": 32,
													"minLength": 32,
													"readOnly": true,
													"type": "string"
												},
												"paused": {
													"description": "When true, indicates that the filter is currently paused.",
													"example": false,
													"type": "boolean"
												},
												"ref": {
													"description": "A short reference tag. Allows you to select related filters.",
													"example": "FIL-100",
													"maxLength": 50,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a filter response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"additionalProperties": false,
													"properties": {
														"description": {
															"description": "An informative summary of the filter.",
															"example": "Restrict access from these browsers on this address range.",
															"maxLength": 500,
															"type": "string"
														},
														"expression": {
															"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
															"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
															"type": "string"
														},
														"id": {
															"description": "The unique identifier of the filter.",
															"example": "372e67954025e0ba6aaa6d586b9e0b61",
															"maxLength": 32,
															"minLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"paused": {
															"description": "When true, indicates that the filter is currently paused.",
															"example": false,
															"type": "boolean"
														},
														"ref": {
															"description": "A short reference tag. Allows you to select related filters.",
															"example": "FIL-100",
															"maxLength": 50,
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a filter response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update a filter",
		"tags": [
			"Filters"
		],
		"x-api-token-group": [
			"Firewall Services Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}