{
	"DELETE /zones/{zone_id}": {
		"description": "Deletes an existing zone.",
		"operationId": "zones-0-delete",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Zone response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Zone response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Zone",
		"tags": [
			"Zone"
		],
		"x-api-token-group": [
			"Zone Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones": {
		"description": "Lists, searches, sorts, and filters your zones. Listing zones across more than 500 accounts\nis currently not allowed.\n",
		"operationId": "zones-get",
		"parameters": [
			{
				"examples": {
					"Basic Query": {
						"summary": "Simple Query",
						"value": "example.com"
					},
					"Contains Query": {
						"summary": "Contains Query",
						"value": "contains:.org"
					},
					"Ends With Query": {
						"summary": "Ends With Query",
						"value": "ends_with:arpa"
					},
					"Starts With Query": {
						"summary": "Starts With Query",
						"value": "starts_with:dev"
					}
				},
				"in": "query",
				"name": "name",
				"schema": {
					"description": "A domain name. Optional filter operators can be provided to extend refine the search:\n  * `equal` (default)\n  * `not_equal`\n  * `starts_with`\n  * `ends_with`\n  * `contains`\n  * `starts_with_case_sensitive`\n  * `ends_with_case_sensitive`\n  * `contains_case_sensitive`\n",
					"maxLength": 253,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "status",
				"schema": {
					"description": "Specify a zone status to filter by.",
					"enum": [
						"initializing",
						"pending",
						"active",
						"moved"
					],
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "account.id",
				"schema": {
					"description": "Filter by an account ID.",
					"type": "string"
				}
			},
			{
				"examples": {
					"Basic Query": {
						"summary": "Simple Query",
						"value": "Dev Account"
					},
					"Contains Query": {
						"summary": "Contains Query",
						"value": "contains:Test"
					}
				},
				"in": "query",
				"name": "account.name",
				"schema": {
					"description": "An account Name. Optional filter operators can be provided to extend refine the search:\n  * `equal` (default)\n  * `not_equal`\n  * `starts_with`\n  * `ends_with`\n  * `contains`\n  * `starts_with_case_sensitive`\n  * `ends_with_case_sensitive`\n  * `contains_case_sensitive`\n",
					"maxLength": 253,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Number of zones per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "order",
				"schema": {
					"description": "Field to order zones by.",
					"enum": [
						"name",
						"status",
						"account.id",
						"account.name",
						"plan.id"
					],
					"example": "status",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "Direction to order zones.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "desc",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "match",
				"schema": {
					"default": "all",
					"description": "Whether to match all search requirements or at least one (any).",
					"enum": [
						"any",
						"all"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service.",
													"example": 1,
													"type": "number"
												},
												"page": {
													"description": "Current page within paginated list of results.",
													"example": 1,
													"type": "number"
												},
												"per_page": {
													"description": "Number of results per page of results.",
													"example": 20,
													"type": "number"
												},
												"total_count": {
													"description": "Total results available without any search parameters.",
													"example": 2000,
													"type": "number"
												},
												"total_pages": {
													"description": "Total number of pages",
													"example": 100,
													"type": "number"
												}
											},
											"type": "object"
										}
									}
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"account": {
														"description": "The account the zone belongs to.",
														"properties": {
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"type": "string"
															},
															"name": {
																"description": "The name of the account.",
																"example": "Example Account Name",
																"type": "string"
															}
														},
														"type": "object"
													},
													"activated_on": {
														"description": "The last time proof of ownership was detected and the zone was made\nactive.",
														"example": "2014-01-02T00:01:00.12345Z",
														"format": "date-time",
														"nullable": true,
														"readOnly": true,
														"type": "string"
													},
													"cname_suffix": {
														"description": "Allows the customer to use a custom apex.\n*Tenants Only Configuration*.",
														"example": "cdn.cloudflare.com",
														"type": "string"
													},
													"created_on": {
														"description": "When the zone was created.",
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													},
													"development_mode": {
														"description": "The interval (in seconds) from when development mode expires\n(positive integer) or last expired (negative integer) for the\ndomain. If development mode has never been enabled, this value is 0.",
														"example": 7200,
														"readOnly": true,
														"type": "number"
													},
													"id": {
														"description": "Identifier",
														"example": "023e105f4ecef8ad9ca31a8372d0c353",
														"maxLength": 32,
														"type": "string"
													},
													"meta": {
														"description": "Metadata about the zone.",
														"properties": {
															"cdn_only": {
																"description": "The zone is only configured for CDN.",
																"example": true,
																"type": "boolean"
															},
															"custom_certificate_quota": {
																"description": "Number of Custom Certificates the zone can have.",
																"example": 1,
																"type": "integer"
															},
															"dns_only": {
																"description": "The zone is only configured for DNS.",
																"example": true,
																"type": "boolean"
															},
															"foundation_dns": {
																"description": "The zone is setup with Foundation DNS.",
																"example": true,
																"type": "boolean"
															},
															"page_rule_quota": {
																"description": "Number of Page Rules a zone can have.",
																"example": 100,
																"type": "integer"
															},
															"phishing_detected": {
																"description": "The zone has been flagged for phishing.",
																"example": false,
																"type": "boolean"
															},
															"step": {
																"example": 2,
																"type": "integer"
															}
														},
														"type": "object"
													},
													"modified_on": {
														"description": "When the zone was last modified.",
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													},
													"name": {
														"description": "The domain name.",
														"example": "example.com",
														"maxLength": 253,
														"pattern": "^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$",
														"type": "string"
													},
													"name_servers": {
														"description": "The name servers Cloudflare assigns to a zone.",
														"example": [
															"bob.ns.cloudflare.com",
															"lola.ns.cloudflare.com"
														],
														"items": {
															"format": "hostname",
															"type": "string"
														},
														"readOnly": true,
														"type": "array"
													},
													"original_dnshost": {
														"description": "DNS host at the time of switching to Cloudflare.",
														"example": "NameCheap",
														"maxLength": 50,
														"nullable": true,
														"readOnly": true,
														"type": "string"
													},
													"original_name_servers": {
														"description": "Original name servers before moving to Cloudflare.",
														"example": [
															"ns1.originaldnshost.com",
															"ns2.originaldnshost.com"
														],
														"items": {
															"format": "hostname",
															"type": "string"
														},
														"nullable": true,
														"readOnly": true,
														"type": "array"
													},
													"original_registrar": {
														"description": "Registrar for the domain at the time of switching to Cloudflare.",
														"example": "GoDaddy",
														"nullable": true,
														"readOnly": true,
														"type": "string"
													},
													"owner": {
														"description": "The owner of the zone.",
														"properties": {
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"type": "string"
															},
															"name": {
																"description": "Name of the owner.",
																"example": "Example Org",
																"type": "string"
															},
															"type": {
																"description": "The type of owner.",
																"example": "organization",
																"type": "string"
															}
														},
														"type": "object"
													},
													"paused": {
														"default": false,
														"description": "Indicates whether the zone is only using Cloudflare DNS services. A\ntrue value means the zone will not receive security or performance\nbenefits.\n",
														"type": "boolean"
													},
													"permissions": {
														"deprecated": true,
														"description": "Legacy permissions based on legacy user membership information.",
														"items": {
															"example": "#worker:read",
															"type": "string"
														},
														"type": "array",
														"x-stainless-message": "This has been replaced by Account memberships."
													},
													"plan": {
														"deprecated": true,
														"description": "A Zones subscription information.",
														"properties": {
															"can_subscribe": {
																"description": "States if the subscription can be activated.",
																"example": false,
																"type": "boolean"
															},
															"currency": {
																"description": "The denomination of the customer.",
																"example": "USD",
																"type": "string"
															},
															"externally_managed": {
																"description": "If this Zone is managed by another company.",
																"example": false,
																"type": "boolean"
															},
															"frequency": {
																"description": "How often the customer is billed.",
																"example": "monthly",
																"type": "string"
															},
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"type": "string"
															},
															"is_subscribed": {
																"description": "States if the subscription active.",
																"example": false,
																"type": "boolean"
															},
															"legacy_discount": {
																"description": "If the legacy discount applies to this Zone.",
																"example": false,
																"type": "boolean"
															},
															"legacy_id": {
																"description": "The legacy name of the plan.",
																"example": "free",
																"type": "string"
															},
															"name": {
																"description": "Name of the owner.",
																"example": "Example Org",
																"type": "string"
															},
															"price": {
																"description": "How much the customer is paying.",
																"example": 10.99,
																"type": "number"
															}
														},
														"x-stainless-message": "Please use the `/zones/{zone_id}/subscription` API\nto update a zone's plan. Changing this value will create/cancel\nassociated subscriptions. To view available plans for this zone,\nsee [Zone Plans](https://developers.cloudflare.com/api/resources/zones/subresources/plans/)."
													},
													"status": {
														"description": "The zone status on Cloudflare.",
														"enum": [
															"initializing",
															"pending",
															"active",
															"moved"
														],
														"example": "active",
														"readOnly": true,
														"type": "string"
													},
													"tenant": {
														"description": "The root organizational unit that this zone belongs to (such as a tenant or organization).",
														"properties": {
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"type": "string"
															},
															"name": {
																"description": "The name of the Tenant account.",
																"example": "Example Account Name",
																"type": "string"
															}
														}
													},
													"tenant_unit": {
														"description": "The immediate parent organizational unit that this zone belongs to (such as under a tenant or sub-organization).",
														"properties": {
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"type": "string"
															}
														}
													},
													"type": {
														"default": "full",
														"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is\ntypically a partner-hosted zone or a CNAME setup.\n",
														"enum": [
															"full",
															"partial",
															"secondary",
															"internal"
														],
														"example": "full",
														"type": "string"
													},
													"vanity_name_servers": {
														"default": [],
														"description": "An array of domains used for custom name servers. This is only available for Business and Enterprise plans.",
														"example": [
															"ns1.example.com",
															"ns2.example.com"
														],
														"items": {
															"format": "hostname",
															"maxLength": 253,
															"type": "string"
														},
														"type": "array"
													},
													"verification_key": {
														"description": "Verification key for partial zone setup.",
														"example": "284344499-1084221259",
														"readOnly": true,
														"type": "string"
													}
												},
												"required": [
													"id",
													"name",
													"development_mode",
													"owner",
													"account",
													"meta",
													"name_servers",
													"original_name_servers",
													"original_registrar",
													"original_dnshost",
													"created_on",
													"modified_on",
													"activated_on",
													"plan"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Zones response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List Zones response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Zones",
		"tags": [
			"Zone"
		]
	},
	"GET /zones/{zone_id}": {
		"operationId": "zones-0-get",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"account": {
													"description": "The account the zone belongs to.",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "The name of the account.",
															"example": "Example Account Name",
															"type": "string"
														}
													},
													"type": "object"
												},
												"activated_on": {
													"description": "The last time proof of ownership was detected and the zone was made\nactive.",
													"example": "2014-01-02T00:01:00.12345Z",
													"format": "date-time",
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"cname_suffix": {
													"description": "Allows the customer to use a custom apex.\n*Tenants Only Configuration*.",
													"example": "cdn.cloudflare.com",
													"type": "string"
												},
												"created_on": {
													"description": "When the zone was created.",
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"development_mode": {
													"description": "The interval (in seconds) from when development mode expires\n(positive integer) or last expired (negative integer) for the\ndomain. If development mode has never been enabled, this value is 0.",
													"example": 7200,
													"readOnly": true,
													"type": "number"
												},
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string"
												},
												"meta": {
													"description": "Metadata about the zone.",
													"properties": {
														"cdn_only": {
															"description": "The zone is only configured for CDN.",
															"example": true,
															"type": "boolean"
														},
														"custom_certificate_quota": {
															"description": "Number of Custom Certificates the zone can have.",
															"example": 1,
															"type": "integer"
														},
														"dns_only": {
															"description": "The zone is only configured for DNS.",
															"example": true,
															"type": "boolean"
														},
														"foundation_dns": {
															"description": "The zone is setup with Foundation DNS.",
															"example": true,
															"type": "boolean"
														},
														"page_rule_quota": {
															"description": "Number of Page Rules a zone can have.",
															"example": 100,
															"type": "integer"
														},
														"phishing_detected": {
															"description": "The zone has been flagged for phishing.",
															"example": false,
															"type": "boolean"
														},
														"step": {
															"example": 2,
															"type": "integer"
														}
													},
													"type": "object"
												},
												"modified_on": {
													"description": "When the zone was last modified.",
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"name": {
													"description": "The domain name.",
													"example": "example.com",
													"maxLength": 253,
													"pattern": "^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$",
													"type": "string"
												},
												"name_servers": {
													"description": "The name servers Cloudflare assigns to a zone.",
													"example": [
														"bob.ns.cloudflare.com",
														"lola.ns.cloudflare.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"readOnly": true,
													"type": "array"
												},
												"original_dnshost": {
													"description": "DNS host at the time of switching to Cloudflare.",
													"example": "NameCheap",
													"maxLength": 50,
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"original_name_servers": {
													"description": "Original name servers before moving to Cloudflare.",
													"example": [
														"ns1.originaldnshost.com",
														"ns2.originaldnshost.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"nullable": true,
													"readOnly": true,
													"type": "array"
												},
												"original_registrar": {
													"description": "Registrar for the domain at the time of switching to Cloudflare.",
													"example": "GoDaddy",
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"owner": {
													"description": "The owner of the zone.",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "Name of the owner.",
															"example": "Example Org",
															"type": "string"
														},
														"type": {
															"description": "The type of owner.",
															"example": "organization",
															"type": "string"
														}
													},
													"type": "object"
												},
												"paused": {
													"default": false,
													"description": "Indicates whether the zone is only using Cloudflare DNS services. A\ntrue value means the zone will not receive security or performance\nbenefits.\n",
													"type": "boolean"
												},
												"permissions": {
													"deprecated": true,
													"description": "Legacy permissions based on legacy user membership information.",
													"items": {
														"example": "#worker:read",
														"type": "string"
													},
													"type": "array",
													"x-stainless-message": "This has been replaced by Account memberships."
												},
												"plan": {
													"deprecated": true,
													"description": "A Zones subscription information.",
													"properties": {
														"can_subscribe": {
															"description": "States if the subscription can be activated.",
															"example": false,
															"type": "boolean"
														},
														"currency": {
															"description": "The denomination of the customer.",
															"example": "USD",
															"type": "string"
														},
														"externally_managed": {
															"description": "If this Zone is managed by another company.",
															"example": false,
															"type": "boolean"
														},
														"frequency": {
															"description": "How often the customer is billed.",
															"example": "monthly",
															"type": "string"
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"is_subscribed": {
															"description": "States if the subscription active.",
															"example": false,
															"type": "boolean"
														},
														"legacy_discount": {
															"description": "If the legacy discount applies to this Zone.",
															"example": false,
															"type": "boolean"
														},
														"legacy_id": {
															"description": "The legacy name of the plan.",
															"example": "free",
															"type": "string"
														},
														"name": {
															"description": "Name of the owner.",
															"example": "Example Org",
															"type": "string"
														},
														"price": {
															"description": "How much the customer is paying.",
															"example": 10.99,
															"type": "number"
														}
													},
													"x-stainless-message": "Please use the `/zones/{zone_id}/subscription` API\nto update a zone's plan. Changing this value will create/cancel\nassociated subscriptions. To view available plans for this zone,\nsee [Zone Plans](https://developers.cloudflare.com/api/resources/zones/subresources/plans/)."
												},
												"status": {
													"description": "The zone status on Cloudflare.",
													"enum": [
														"initializing",
														"pending",
														"active",
														"moved"
													],
													"example": "active",
													"readOnly": true,
													"type": "string"
												},
												"tenant": {
													"description": "The root organizational unit that this zone belongs to (such as a tenant or organization).",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "The name of the Tenant account.",
															"example": "Example Account Name",
															"type": "string"
														}
													}
												},
												"tenant_unit": {
													"description": "The immediate parent organizational unit that this zone belongs to (such as under a tenant or sub-organization).",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														}
													}
												},
												"type": {
													"default": "full",
													"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is\ntypically a partner-hosted zone or a CNAME setup.\n",
													"enum": [
														"full",
														"partial",
														"secondary",
														"internal"
													],
													"example": "full",
													"type": "string"
												},
												"vanity_name_servers": {
													"default": [],
													"description": "An array of domains used for custom name servers. This is only available for Business and Enterprise plans.",
													"example": [
														"ns1.example.com",
														"ns2.example.com"
													],
													"items": {
														"format": "hostname",
														"maxLength": 253,
														"type": "string"
													},
													"type": "array"
												},
												"verification_key": {
													"description": "Verification key for partial zone setup.",
													"example": "284344499-1084221259",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"development_mode",
												"owner",
												"account",
												"meta",
												"name_servers",
												"original_name_servers",
												"original_registrar",
												"original_dnshost",
												"created_on",
												"modified_on",
												"activated_on",
												"plan"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Zone Details response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Zone Details response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Zone Details",
		"tags": [
			"Zone"
		],
		"x-api-token-group": [
			"Trust and Safety Write",
			"Trust and Safety Read",
			"Zero Trust: PII Read",
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin",
			"Access: Apps and Policies Revoke",
			"Access: Apps and Policies Write",
			"Access: Apps and Policies Read",
			"Access: Apps and Policies Revoke",
			"Access: Mutual TLS Certificates Write",
			"Access: Organizations, Identity Providers, and Groups Write",
			"Zone Settings Write",
			"Zone Settings Read",
			"Zone Read",
			"DNS Read",
			"Workers Scripts Write",
			"Workers Scripts Read",
			"Zone Write",
			"Workers Routes Write",
			"Workers Routes Read",
			"Stream Write",
			"Stream Read",
			"SSL and Certificates Write",
			"SSL and Certificates Read",
			"Logs Write",
			"Logs Read",
			"Cache Purge",
			"Page Rules Write",
			"Page Rules Read",
			"Load Balancers Write",
			"Load Balancers Read",
			"Firewall Services Write",
			"Firewall Services Read",
			"DNS Write",
			"Apps Write",
			"Analytics Read",
			"Access: Apps and Policies Write",
			"Access: Apps and Policies Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_id}": {
		"description": "Edits a zone. Only one zone property can be changed at a time.",
		"operationId": "zones-0-patch",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"example": {
							"paused": true
						},
						"properties": {
							"paused": {
								"default": false,
								"description": "Indicates whether the zone is only using Cloudflare DNS services. A\ntrue value means the zone will not receive security or performance\nbenefits.\n",
								"type": "boolean"
							},
							"plan": {
								"description": "(Deprecated) Please use the `/zones/{zone_id}/subscription` API\nto update a zone's plan. Changing this value will create/cancel\nassociated subscriptions. To view available plans for this zone,\nsee Zone Plans.\n",
								"properties": {
									"id": {
										"description": "Identifier",
										"example": "023e105f4ecef8ad9ca31a8372d0c353",
										"maxLength": 32,
										"type": "string"
									}
								},
								"type": "object"
							},
							"type": {
								"description": "A full zone implies that DNS is hosted with Cloudflare. A partial\nzone is typically a partner-hosted zone or a CNAME setup. This\nparameter is only available to Enterprise customers or if it has\nbeen explicitly enabled on a zone.\n",
								"enum": [
									"full",
									"partial",
									"secondary",
									"internal"
								],
								"example": "full",
								"type": "string"
							},
							"vanity_name_servers": {
								"default": [],
								"description": "An array of domains used for custom name servers. This is only\navailable for Business and Enterprise plans.",
								"example": [
									"ns1.example.com",
									"ns2.example.com"
								],
								"items": {
									"format": "hostname",
									"maxLength": 253,
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"account": {
													"description": "The account the zone belongs to.",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "The name of the account.",
															"example": "Example Account Name",
															"type": "string"
														}
													},
													"type": "object"
												},
												"activated_on": {
													"description": "The last time proof of ownership was detected and the zone was made\nactive.",
													"example": "2014-01-02T00:01:00.12345Z",
													"format": "date-time",
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"cname_suffix": {
													"description": "Allows the customer to use a custom apex.\n*Tenants Only Configuration*.",
													"example": "cdn.cloudflare.com",
													"type": "string"
												},
												"created_on": {
													"description": "When the zone was created.",
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"development_mode": {
													"description": "The interval (in seconds) from when development mode expires\n(positive integer) or last expired (negative integer) for the\ndomain. If development mode has never been enabled, this value is 0.",
													"example": 7200,
													"readOnly": true,
													"type": "number"
												},
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string"
												},
												"meta": {
													"description": "Metadata about the zone.",
													"properties": {
														"cdn_only": {
															"description": "The zone is only configured for CDN.",
															"example": true,
															"type": "boolean"
														},
														"custom_certificate_quota": {
															"description": "Number of Custom Certificates the zone can have.",
															"example": 1,
															"type": "integer"
														},
														"dns_only": {
															"description": "The zone is only configured for DNS.",
															"example": true,
															"type": "boolean"
														},
														"foundation_dns": {
															"description": "The zone is setup with Foundation DNS.",
															"example": true,
															"type": "boolean"
														},
														"page_rule_quota": {
															"description": "Number of Page Rules a zone can have.",
															"example": 100,
															"type": "integer"
														},
														"phishing_detected": {
															"description": "The zone has been flagged for phishing.",
															"example": false,
															"type": "boolean"
														},
														"step": {
															"example": 2,
															"type": "integer"
														}
													},
													"type": "object"
												},
												"modified_on": {
													"description": "When the zone was last modified.",
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"name": {
													"description": "The domain name.",
													"example": "example.com",
													"maxLength": 253,
													"pattern": "^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$",
													"type": "string"
												},
												"name_servers": {
													"description": "The name servers Cloudflare assigns to a zone.",
													"example": [
														"bob.ns.cloudflare.com",
														"lola.ns.cloudflare.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"readOnly": true,
													"type": "array"
												},
												"original_dnshost": {
													"description": "DNS host at the time of switching to Cloudflare.",
													"example": "NameCheap",
													"maxLength": 50,
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"original_name_servers": {
													"description": "Original name servers before moving to Cloudflare.",
													"example": [
														"ns1.originaldnshost.com",
														"ns2.originaldnshost.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"nullable": true,
													"readOnly": true,
													"type": "array"
												},
												"original_registrar": {
													"description": "Registrar for the domain at the time of switching to Cloudflare.",
													"example": "GoDaddy",
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"owner": {
													"description": "The owner of the zone.",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "Name of the owner.",
															"example": "Example Org",
															"type": "string"
														},
														"type": {
															"description": "The type of owner.",
															"example": "organization",
															"type": "string"
														}
													},
													"type": "object"
												},
												"paused": {
													"default": false,
													"description": "Indicates whether the zone is only using Cloudflare DNS services. A\ntrue value means the zone will not receive security or performance\nbenefits.\n",
													"type": "boolean"
												},
												"permissions": {
													"deprecated": true,
													"description": "Legacy permissions based on legacy user membership information.",
													"items": {
														"example": "#worker:read",
														"type": "string"
													},
													"type": "array",
													"x-stainless-message": "This has been replaced by Account memberships."
												},
												"plan": {
													"deprecated": true,
													"description": "A Zones subscription information.",
													"properties": {
														"can_subscribe": {
															"description": "States if the subscription can be activated.",
															"example": false,
															"type": "boolean"
														},
														"currency": {
															"description": "The denomination of the customer.",
															"example": "USD",
															"type": "string"
														},
														"externally_managed": {
															"description": "If this Zone is managed by another company.",
															"example": false,
															"type": "boolean"
														},
														"frequency": {
															"description": "How often the customer is billed.",
															"example": "monthly",
															"type": "string"
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"is_subscribed": {
															"description": "States if the subscription active.",
															"example": false,
															"type": "boolean"
														},
														"legacy_discount": {
															"description": "If the legacy discount applies to this Zone.",
															"example": false,
															"type": "boolean"
														},
														"legacy_id": {
															"description": "The legacy name of the plan.",
															"example": "free",
															"type": "string"
														},
														"name": {
															"description": "Name of the owner.",
															"example": "Example Org",
															"type": "string"
														},
														"price": {
															"description": "How much the customer is paying.",
															"example": 10.99,
															"type": "number"
														}
													},
													"x-stainless-message": "Please use the `/zones/{zone_id}/subscription` API\nto update a zone's plan. Changing this value will create/cancel\nassociated subscriptions. To view available plans for this zone,\nsee [Zone Plans](https://developers.cloudflare.com/api/resources/zones/subresources/plans/)."
												},
												"status": {
													"description": "The zone status on Cloudflare.",
													"enum": [
														"initializing",
														"pending",
														"active",
														"moved"
													],
													"example": "active",
													"readOnly": true,
													"type": "string"
												},
												"tenant": {
													"description": "The root organizational unit that this zone belongs to (such as a tenant or organization).",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "The name of the Tenant account.",
															"example": "Example Account Name",
															"type": "string"
														}
													}
												},
												"tenant_unit": {
													"description": "The immediate parent organizational unit that this zone belongs to (such as under a tenant or sub-organization).",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														}
													}
												},
												"type": {
													"default": "full",
													"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is\ntypically a partner-hosted zone or a CNAME setup.\n",
													"enum": [
														"full",
														"partial",
														"secondary",
														"internal"
													],
													"example": "full",
													"type": "string"
												},
												"vanity_name_servers": {
													"default": [],
													"description": "An array of domains used for custom name servers. This is only available for Business and Enterprise plans.",
													"example": [
														"ns1.example.com",
														"ns2.example.com"
													],
													"items": {
														"format": "hostname",
														"maxLength": 253,
														"type": "string"
													},
													"type": "array"
												},
												"verification_key": {
													"description": "Verification key for partial zone setup.",
													"example": "284344499-1084221259",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"development_mode",
												"owner",
												"account",
												"meta",
												"name_servers",
												"original_name_servers",
												"original_registrar",
												"original_dnshost",
												"created_on",
												"modified_on",
												"activated_on",
												"plan"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Edit Zone response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Edit Zone response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Edit Zone",
		"tags": [
			"Zone"
		],
		"x-api-token-group": [
			"Zone Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones": {
		"operationId": "zones-post",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"account": {
								"properties": {
									"id": {
										"description": "Identifier",
										"example": "023e105f4ecef8ad9ca31a8372d0c353",
										"maxLength": 32,
										"type": "string"
									}
								},
								"type": "object"
							},
							"name": {
								"description": "The domain name.",
								"example": "example.com",
								"maxLength": 253,
								"pattern": "^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$",
								"type": "string"
							},
							"type": {
								"default": "full",
								"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is\ntypically a partner-hosted zone or a CNAME setup.\n",
								"enum": [
									"full",
									"partial",
									"secondary",
									"internal"
								],
								"example": "full",
								"type": "string"
							}
						},
						"required": [
							"name",
							"account"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"account": {
													"description": "The account the zone belongs to.",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "The name of the account.",
															"example": "Example Account Name",
															"type": "string"
														}
													},
													"type": "object"
												},
												"activated_on": {
													"description": "The last time proof of ownership was detected and the zone was made\nactive.",
													"example": "2014-01-02T00:01:00.12345Z",
													"format": "date-time",
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"cname_suffix": {
													"description": "Allows the customer to use a custom apex.\n*Tenants Only Configuration*.",
													"example": "cdn.cloudflare.com",
													"type": "string"
												},
												"created_on": {
													"description": "When the zone was created.",
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"development_mode": {
													"description": "The interval (in seconds) from when development mode expires\n(positive integer) or last expired (negative integer) for the\ndomain. If development mode has never been enabled, this value is 0.",
													"example": 7200,
													"readOnly": true,
													"type": "number"
												},
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string"
												},
												"meta": {
													"description": "Metadata about the zone.",
													"properties": {
														"cdn_only": {
															"description": "The zone is only configured for CDN.",
															"example": true,
															"type": "boolean"
														},
														"custom_certificate_quota": {
															"description": "Number of Custom Certificates the zone can have.",
															"example": 1,
															"type": "integer"
														},
														"dns_only": {
															"description": "The zone is only configured for DNS.",
															"example": true,
															"type": "boolean"
														},
														"foundation_dns": {
															"description": "The zone is setup with Foundation DNS.",
															"example": true,
															"type": "boolean"
														},
														"page_rule_quota": {
															"description": "Number of Page Rules a zone can have.",
															"example": 100,
															"type": "integer"
														},
														"phishing_detected": {
															"description": "The zone has been flagged for phishing.",
															"example": false,
															"type": "boolean"
														},
														"step": {
															"example": 2,
															"type": "integer"
														}
													},
													"type": "object"
												},
												"modified_on": {
													"description": "When the zone was last modified.",
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"name": {
													"description": "The domain name.",
													"example": "example.com",
													"maxLength": 253,
													"pattern": "^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$",
													"type": "string"
												},
												"name_servers": {
													"description": "The name servers Cloudflare assigns to a zone.",
													"example": [
														"bob.ns.cloudflare.com",
														"lola.ns.cloudflare.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"readOnly": true,
													"type": "array"
												},
												"original_dnshost": {
													"description": "DNS host at the time of switching to Cloudflare.",
													"example": "NameCheap",
													"maxLength": 50,
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"original_name_servers": {
													"description": "Original name servers before moving to Cloudflare.",
													"example": [
														"ns1.originaldnshost.com",
														"ns2.originaldnshost.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"nullable": true,
													"readOnly": true,
													"type": "array"
												},
												"original_registrar": {
													"description": "Registrar for the domain at the time of switching to Cloudflare.",
													"example": "GoDaddy",
													"nullable": true,
													"readOnly": true,
													"type": "string"
												},
												"owner": {
													"description": "The owner of the zone.",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "Name of the owner.",
															"example": "Example Org",
															"type": "string"
														},
														"type": {
															"description": "The type of owner.",
															"example": "organization",
															"type": "string"
														}
													},
													"type": "object"
												},
												"paused": {
													"default": false,
													"description": "Indicates whether the zone is only using Cloudflare DNS services. A\ntrue value means the zone will not receive security or performance\nbenefits.\n",
													"type": "boolean"
												},
												"permissions": {
													"deprecated": true,
													"description": "Legacy permissions based on legacy user membership information.",
													"items": {
														"example": "#worker:read",
														"type": "string"
													},
													"type": "array",
													"x-stainless-message": "This has been replaced by Account memberships."
												},
												"plan": {
													"deprecated": true,
													"description": "A Zones subscription information.",
													"properties": {
														"can_subscribe": {
															"description": "States if the subscription can be activated.",
															"example": false,
															"type": "boolean"
														},
														"currency": {
															"description": "The denomination of the customer.",
															"example": "USD",
															"type": "string"
														},
														"externally_managed": {
															"description": "If this Zone is managed by another company.",
															"example": false,
															"type": "boolean"
														},
														"frequency": {
															"description": "How often the customer is billed.",
															"example": "monthly",
															"type": "string"
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"is_subscribed": {
															"description": "States if the subscription active.",
															"example": false,
															"type": "boolean"
														},
														"legacy_discount": {
															"description": "If the legacy discount applies to this Zone.",
															"example": false,
															"type": "boolean"
														},
														"legacy_id": {
															"description": "The legacy name of the plan.",
															"example": "free",
															"type": "string"
														},
														"name": {
															"description": "Name of the owner.",
															"example": "Example Org",
															"type": "string"
														},
														"price": {
															"description": "How much the customer is paying.",
															"example": 10.99,
															"type": "number"
														}
													},
													"x-stainless-message": "Please use the `/zones/{zone_id}/subscription` API\nto update a zone's plan. Changing this value will create/cancel\nassociated subscriptions. To view available plans for this zone,\nsee [Zone Plans](https://developers.cloudflare.com/api/resources/zones/subresources/plans/)."
												},
												"status": {
													"description": "The zone status on Cloudflare.",
													"enum": [
														"initializing",
														"pending",
														"active",
														"moved"
													],
													"example": "active",
													"readOnly": true,
													"type": "string"
												},
												"tenant": {
													"description": "The root organizational unit that this zone belongs to (such as a tenant or organization).",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														},
														"name": {
															"description": "The name of the Tenant account.",
															"example": "Example Account Name",
															"type": "string"
														}
													}
												},
												"tenant_unit": {
													"description": "The immediate parent organizational unit that this zone belongs to (such as under a tenant or sub-organization).",
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string"
														}
													}
												},
												"type": {
													"default": "full",
													"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is\ntypically a partner-hosted zone or a CNAME setup.\n",
													"enum": [
														"full",
														"partial",
														"secondary",
														"internal"
													],
													"example": "full",
													"type": "string"
												},
												"vanity_name_servers": {
													"default": [],
													"description": "An array of domains used for custom name servers. This is only available for Business and Enterprise plans.",
													"example": [
														"ns1.example.com",
														"ns2.example.com"
													],
													"items": {
														"format": "hostname",
														"maxLength": 253,
														"type": "string"
													},
													"type": "array"
												},
												"verification_key": {
													"description": "Verification key for partial zone setup.",
													"example": "284344499-1084221259",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"development_mode",
												"owner",
												"account",
												"meta",
												"name_servers",
												"original_name_servers",
												"original_registrar",
												"original_dnshost",
												"created_on",
												"modified_on",
												"activated_on",
												"plan"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Zone response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create Zone response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Zone",
		"tags": [
			"Zone"
		],
		"x-api-token-group": [
			"Zone Zone Edit",
			"Zone DNS Edit"
		]
	},
	"POST /zones/{zone_id}/purge_cache": {
		"description": "### Purge All Cached Content\nRemoves ALL files from Cloudflare's cache. All tiers can purge everything.\n```\n{\"purge_everything\": true}\n```\n\n### Purge Cached Content by URL\nGranularly removes one or more files from Cloudflare's cache by specifying URLs. All tiers can purge by URL.\n\nTo purge files with custom cache keys, include the headers used to compute the cache key as in the example. If you have a device type or geo in your cache key, you will need to include the CF-Device-Type or CF-IPCountry headers. If you have lang in your cache key, you will need to include the Accept-Language header.\n\n**NB:** When including the Origin header, be sure to include the **scheme** and **hostname**. The port number can be omitted if it is the default port (80 for http, 443 for https), but must be included otherwise.\n\nSingle file purge example with files:\n```\n{\"files\": [\"http://www.example.com/css/styles.css\", \"http://www.example.com/js/index.js\"]}\n```\nSingle file purge example with url and header pairs:\n```\n{\"files\": [{url: \"http://www.example.com/cat_picture.jpg\", headers: { \"CF-IPCountry\": \"US\", \"CF-Device-Type\": \"desktop\", \"Accept-Language\": \"zh-CN\" }}, {url: \"http://www.example.com/dog_picture.jpg\", headers: { \"CF-IPCountry\": \"EU\", \"CF-Device-Type\": \"mobile\", \"Accept-Language\": \"en-US\" }}]}\n```\n\n### Purge Cached Content by Tag, Host or Prefix\nGranularly removes one or more files from Cloudflare's cache either by specifying the host, the associated Cache-Tag, or a Prefix.\n\nFlex purge with tags:\n```\n{\"tags\": [\"a-cache-tag\", \"another-cache-tag\"]}\n```\nFlex purge with hosts:\n```\n{\"hosts\": [\"www.example.com\", \"images.example.com\"]}\n```\nFlex purge with prefixes:\n```\n{\"prefixes\": [\"www.example.com/foo\", \"images.example.com/bar/baz\"]}\n```\n\n### Availability and limits\nplease refer to [purge cache availability and limits documentation page](https://developers.cloudflare.com/cache/how-to/purge-cache/#availability-and-limits).\n",
		"operationId": "zone-purge",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"examples": {
						"Flex Purge with Hosts": {
							"summary": "Flex purge example with hosts list",
							"value": {
								"hosts": [
									"www.example.com",
									"images.example.com"
								]
							}
						},
						"Flex Purge with Prefixes": {
							"summary": "Flex purge example with prefixes list",
							"value": {
								"prefixes": [
									"www.example.com/foo",
									"images.example.com/bar/baz"
								]
							}
						},
						"Flex Purge with Tags": {
							"summary": "Flex purge example with tags list",
							"value": {
								"tags": [
									"a-cache-tag",
									"another-cache-tag"
								]
							}
						},
						"Purge Everything": {
							"summary": "Purge everything example",
							"value": {
								"purge_everything": true
							}
						},
						"Single File Purge": {
							"summary": "Single file purge example with files list",
							"value": {
								"files": [
									"http://www.example.com/css/styles.css",
									"http://www.example.com/js/index.js"
								]
							}
						},
						"Single File Purge with UrlAndHeaders": {
							"summary": "Single file purge example with url and headers list",
							"value": {
								"files": [
									{
										"headers": {
											"Accept-Language": "zh-CN",
											"CF-Device-Type": "desktop",
											"CF-IPCountry": "US"
										},
										"url": "http://www.example.com/cat_picture.jpg"
									},
									{
										"headers": {
											"Accept-Language": "en-US",
											"CF-Device-Type": "mobile",
											"CF-IPCountry": "EU"
										},
										"url": "http://www.example.com/dog_picture.jpg"
									}
								]
							}
						}
					},
					"schema": {
						"anyOf": [
							{
								"properties": {
									"tags": {
										"description": "For more information on cache tags and purging by tags, please refer to [purge by cache-tags documentation page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-tags/).",
										"example": [
											"a-cache-tag",
											"another-cache-tag"
										],
										"items": {
											"type": "string",
											"x-auditable": true
										},
										"type": "array"
									}
								},
								"title": "Purge by tags",
								"type": "object"
							},
							{
								"properties": {
									"hosts": {
										"description": "For more information purging by hostnames, please refer to [purge by hostname documentation page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-hostname/).",
										"example": [
											"www.example.com",
											"images.example.com"
										],
										"items": {
											"type": "string",
											"x-auditable": true
										},
										"type": "array"
									}
								},
								"title": "Purge by hostnames",
								"type": "object"
							},
							{
								"properties": {
									"prefixes": {
										"description": "For more information on purging by prefixes, please refer to [purge by prefix documentation page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge_by_prefix/).",
										"example": [
											"www.example.com/foo",
											"images.example.com/bar/baz"
										],
										"items": {
											"type": "string",
											"x-auditable": true
										},
										"type": "array"
									}
								},
								"title": "Purge by prefixes",
								"type": "object"
							},
							{
								"properties": {
									"purge_everything": {
										"description": "For more information, please refer to [purge everything documentation page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-everything/).",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									}
								},
								"title": "Purge everything",
								"type": "object"
							},
							{
								"properties": {
									"files": {
										"description": "For more information on purging files, please refer to [purge by single-file documentation page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-single-file/).",
										"example": [
											"http://www.example.com/css/styles.css",
											"http://www.example.com/js/index.js"
										],
										"items": {
											"type": "string",
											"x-auditable": true
										},
										"type": "array"
									}
								},
								"title": "Purge files",
								"type": "object"
							},
							{
								"properties": {
									"files": {
										"description": "For more information on purging files with URL and headers, please refer to [purge by single-file documentation page](https://developers.cloudflare.com/cache/how-to/purge-cache/purge-by-single-file/).",
										"example": [
											{
												"headers": {
													"Accept-Language": "zh-CN",
													"CF-Device-Type": "desktop",
													"CF-IPCountry": "US"
												},
												"url": "http://www.example.com/cat_picture.jpg"
											},
											{
												"headers": {
													"Accept-Language": "en-US",
													"CF-Device-Type": "mobile",
													"CF-IPCountry": "EU"
												},
												"url": "http://www.example.com/dog_picture.jpg"
											}
										],
										"items": {
											"properties": {
												"headers": {
													"additionalProperties": {
														"type": "string",
														"x-auditable": true
													},
													"example": "<HTTP header object>",
													"type": "object"
												},
												"url": {
													"example": "http://www.example.com/cat_picture.jpg",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										},
										"type": "array"
									}
								},
								"title": "Purge files with URL and headers",
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"properties": {
										"id": {
											"example": "023e105f4ecef8ad9ca31a8372d0c353",
											"maxLength": 32,
											"type": "string"
										}
									},
									"required": [
										"id"
									],
									"type": "object"
								},
								"success": {
									"description": "Indicates the API call's success or failure.",
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Request to purge cached content successfull."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"nullable": true,
											"properties": {
												"id": {
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										},
										"success": {
											"description": "Indicates the API call's success or failure.",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicates the API call's success or failure.",
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Request to purge cached content failed."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Purge Cached Content",
		"tags": [
			"Zone"
		],
		"x-api-token-group": [
			"Cache Purge"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#cache_purge:edit"
			]
		}
	},
	"PUT /zones/{zone_id}/activation_check": {
		"description": "Triggeres a new activation check for a PENDING Zone. This can be\ntriggered every 5 min for paygo/ent customers, every hour for FREE\nZones.",
		"operationId": "put-zones-zone_id-activation_check",
		"parameters": [
			{
				"description": "Zone ID",
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "Identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Successful Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Rerun the Activation Check",
		"tags": [
			"Zone"
		],
		"x-api-token-group": [
			"Zone Write"
		]
	}
}