{
	"DELETE /organizations/{organization_id}": {
		"description": "Delete an organization. The organization MUST be empty before deleting.\nIt must not contain any sub-organizations, accounts, members or users.",
		"operationId": "Organizations_delete",
		"parameters": [
			{
				"description": "The ID of the organization to delete.",
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"pattern": "^[a-f0-9]{32}$",
					"type": "string"
				}
			}
		],
		"responses": {
			"204": {
				"description": "There is no content to send for this request, but the headers may be useful."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete organization",
		"tags": [
			"Organizations"
		]
	},
	"GET /accounts/{account_id}/realtimekit/analytics/daywise": {
		"description": "Returns day-wise session and recording analytics data of an organization for the specified time range start_date to end_date. If start_date and end_date are not provided, the default time range is set from 30 days ago to the current date.",
		"operationId": "get-org-analytics",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"description": "start date in YYYY-MM-DD format",
				"examples": {
					"default": {
						"value": "2022-09-01"
					}
				},
				"in": "query",
				"name": "start_date",
				"schema": {
					"example": "2022-09-01",
					"type": "string"
				}
			},
			{
				"description": "end date in YYYY-MM-DD format",
				"examples": {
					"default": {
						"value": "2022-09-22"
					}
				},
				"in": "query",
				"name": "end_date",
				"schema": {
					"example": "2022-09-22",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"data": {
									"properties": {
										"recording_stats": {
											"description": "Recording statistics of an organization during the range specified",
											"properties": {
												"day_stats": {
													"description": "Day wise recording stats",
													"items": {
														"properties": {
															"day": {
																"type": "string"
															},
															"total_recording_minutes": {
																"description": "Total recording minutes for a specific day",
																"type": "integer"
															},
															"total_recordings": {
																"description": "Total number of recordings for a specific day",
																"type": "integer"
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"recording_count": {
													"description": "Total number of recordings during the range specified",
													"type": "integer"
												},
												"recording_minutes_consumed": {
													"description": "Total recording minutes during the range specified",
													"type": "number"
												}
											},
											"type": "object"
										},
										"session_stats": {
											"description": "Session statistics of an organization during the range specified",
											"properties": {
												"day_stats": {
													"description": "Day wise session stats",
													"items": {
														"properties": {
															"day": {
																"type": "string"
															},
															"total_session_minutes": {
																"description": "Total session minutes for a specific day",
																"type": "number"
															},
															"total_sessions": {
																"description": "Total number of sessions for a specific day",
																"type": "integer"
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"sessions_count": {
													"description": "Total number of sessions during the range specified",
													"type": "integer"
												},
												"sessions_minutes_consumed": {
													"description": "Total session minutes during the range specified",
													"type": "number"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								},
								"success": {
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "OK"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Fetch day-wise session and recording analytics data for an organization",
		"tags": [
			"Analytics",
			"Organizations"
		]
	},
	"GET /accounts/{account_id}/realtimekit/orgs": {
		"description": "Returns organization details of all the users.",
		"operationId": "getAllOrgs",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"description": "Number of values to return in a single page. Default value is 25.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The page number to return. Default value is 1.",
				"in": "query",
				"name": "page_no",
				"schema": {
					"minimum": 1,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"data": {
									"items": {
										"allOf": [
											{
												"properties": {
													"apikey": {
														"example": "4deeb3d8e8b5e74d5522",
														"type": "string"
													},
													"contact": {
														"example": "778-330-2389",
														"type": "string"
													},
													"created_at": {
														"example": "2022-05-28T08:18:34.804Z",
														"format": "date-time",
														"type": "string"
													},
													"feature_flags": {
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"id": {
														"description": "ID of the organization",
														"example": "bbb0e958-93ce-41c7-9745-16e7aa51c568",
														"format": "uuid",
														"type": "string"
													},
													"name": {
														"description": "Must be a unique organization name",
														"example": "RealtimeKit",
														"type": "string"
													},
													"preferred_region": {
														"example": "us-east-1",
														"type": "string"
													},
													"updated_at": {
														"example": "2022-05-28T08:18:34.804Z",
														"format": "date-time",
														"type": "string"
													},
													"website": {
														"example": "https://realtimekit.cloudflare.com",
														"format": "uri",
														"type": "string"
													}
												},
												"required": [
													"id",
													"name",
													"contact",
													"website",
													"apikey",
													"preferred_region",
													"feature_flags",
													"created_at",
													"updated_at"
												],
												"type": "object"
											}
										]
									},
									"type": "array"
								},
								"paging": {
									"properties": {
										"end_offset": {
											"example": 30,
											"type": "number"
										},
										"start_offset": {
											"example": 1,
											"type": "number"
										},
										"total_count": {
											"example": 30,
											"type": "number"
										}
									},
									"required": [
										"total_count",
										"start_offset",
										"end_offset"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"data",
								"paging"
							],
							"type": "object"
						}
					}
				},
				"description": "Operation successful"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Malformed request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized user"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Fetch organization details of all users",
		"tags": [
			"Organizations"
		]
	},
	"GET /accounts/{account_id}/realtimekit/orgs/{org_id}": {
		"description": "Returns organization details for the given organization ID. The user must be the organization's owner.",
		"operationId": "getOrg",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"description": "ID of the organization",
				"in": "path",
				"name": "org_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"data": {
									"allOf": [
										{
											"properties": {
												"apikey": {
													"example": "4deeb3d8e8b5e74d5522",
													"type": "string"
												},
												"contact": {
													"example": "778-330-2389",
													"type": "string"
												},
												"created_at": {
													"example": "2022-05-28T08:18:34.804Z",
													"format": "date-time",
													"type": "string"
												},
												"feature_flags": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"id": {
													"description": "ID of the organization",
													"example": "bbb0e958-93ce-41c7-9745-16e7aa51c568",
													"format": "uuid",
													"type": "string"
												},
												"name": {
													"description": "Must be a unique organization name",
													"example": "RealtimeKit",
													"type": "string"
												},
												"preferred_region": {
													"example": "us-east-1",
													"type": "string"
												},
												"updated_at": {
													"example": "2022-05-28T08:18:34.804Z",
													"format": "date-time",
													"type": "string"
												},
												"website": {
													"example": "https://realtimekit.cloudflare.com",
													"format": "uri",
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"contact",
												"website",
												"apikey",
												"preferred_region",
												"feature_flags",
												"created_at",
												"updated_at"
											],
											"type": "object"
										}
									]
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"data"
							],
							"type": "object"
						}
					}
				},
				"description": "Operation successful"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Malformed request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "User is not authorized to perform this operation."
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Fetch details of an organization",
		"tags": [
			"Organizations"
		]
	},
	"GET /organizations/{organization_id}": {
		"description": "Retrieve the details of a certain organization.",
		"operationId": "Organizations_retrieve",
		"parameters": [
			{
				"description": "The ID of the organization to retrieve.",
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"pattern": "^[a-f0-9]{32}$",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"type": "object"
									},
									"maxItems": 0,
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"description": "Represents an Organization in the Cloudflare data model",
									"properties": {
										"create_time": {
											"format": "date-time",
											"readOnly": true,
											"type": "string"
										},
										"id": {
											"allOf": [
												{
													"pattern": "^[a-f0-9]{32}$",
													"type": "string"
												}
											],
											"readOnly": true
										},
										"meta": {
											"additionalProperties": {
												"type": "object"
											},
											"properties": {
												"flags": {
													"allOf": [
														{
															"description": "Organization flags for feature enablement",
															"properties": {
																"account_creation": {
																	"type": "string"
																},
																"account_deletion": {
																	"type": "string"
																},
																"account_migration": {
																	"type": "string"
																},
																"account_mobility": {
																	"type": "string"
																},
																"sub_org_creation": {
																	"type": "string"
																}
															},
															"required": [
																"account_creation",
																"account_deletion",
																"account_migration",
																"account_mobility",
																"sub_org_creation"
															],
															"type": "object"
														}
													]
												},
												"managed_by": {
													"type": "string"
												}
											},
											"readOnly": true,
											"type": "object"
										},
										"name": {
											"type": "string"
										},
										"parent": {
											"properties": {
												"id": {
													"pattern": "^[a-f0-9]{32}$",
													"type": "string"
												},
												"name": {
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										},
										"profile": {
											"properties": {
												"business_address": {
													"type": "string"
												},
												"business_email": {
													"type": "string"
												},
												"business_name": {
													"type": "string"
												},
												"business_phone": {
													"type": "string"
												},
												"external_metadata": {
													"type": "string"
												}
											},
											"required": [
												"business_name",
												"business_email",
												"business_phone",
												"business_address",
												"external_metadata"
											],
											"type": "object"
										}
									},
									"required": [
										"id",
										"name",
										"create_time",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"enum": [
										true
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "The request has succeeded."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get organization",
		"tags": [
			"Organizations"
		]
	},
	"GET /organizations/{organization_id}/accounts": {
		"description": "Retrieve a list of accounts that belong to a specific organization.",
		"operationId": "Organizations_getAccounts",
		"parameters": [
			{
				"description": "The ID of the organization to retrieve a list of accounts for.",
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"pattern": "^[a-f0-9]{32}$",
					"type": "string"
				}
			},
			{
				"deprecated": true,
				"description": "(case-insensitive) Filter the list of accounts to where the account_pubname is equal to\na particular string.",
				"explode": false,
				"in": "query",
				"name": "account_pubname",
				"schema": {
					"type": "string"
				}
			},
			{
				"deprecated": true,
				"description": "(case-insensitive) Filter the list of accounts to where the account_pubname starts with\na particular string.",
				"explode": false,
				"in": "query",
				"name": "account_pubname.startsWith",
				"schema": {
					"type": "string"
				}
			},
			{
				"deprecated": true,
				"description": "(case-insensitive) Filter the list of accounts to where the account_pubname ends with\na particular string.",
				"explode": false,
				"in": "query",
				"name": "account_pubname.endsWith",
				"schema": {
					"type": "string"
				}
			},
			{
				"deprecated": true,
				"description": "(case-insensitive) Filter the list of accounts to where the account_pubname contains\na particular string.",
				"explode": false,
				"in": "query",
				"name": "account_pubname.contains",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "(case-insensitive) Filter the list of accounts to where the name is equal to a\nparticular string.",
				"explode": false,
				"in": "query",
				"name": "name",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "(case-insensitive) Filter the list of accounts to where the name starts with a\nparticular string.",
				"explode": false,
				"in": "query",
				"name": "name.startsWith",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "(case-insensitive) Filter the list of accounts to where the name ends with a particular\nstring.",
				"explode": false,
				"in": "query",
				"name": "name.endsWith",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "(case-insensitive) Filter the list of accounts to where the name contains a particular\nstring.",
				"explode": false,
				"in": "query",
				"name": "name.contains",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "An opaque token returned from the last list response that when\nprovided will retrieve the next page.\n\nParameters used to filter the retrieved list must remain in subsequent\nrequests with a page token.",
				"explode": false,
				"in": "query",
				"name": "page_token",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "The amount of items to return. Defaults to 10.",
				"explode": false,
				"in": "query",
				"name": "page_size",
				"schema": {
					"maximum": 1000,
					"minimum": 0,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"type": "object"
									},
									"maxItems": 0,
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"items": {
										"properties": {
											"created_on": {
												"format": "date-time",
												"type": "string"
											},
											"id": {
												"type": "string"
											},
											"name": {
												"nullable": true,
												"type": "string"
											},
											"settings": {
												"properties": {
													"abuse_contact_email": {
														"nullable": true,
														"type": "string"
													},
													"access_approval_expiry": {
														"format": "date-time",
														"nullable": true,
														"type": "string"
													},
													"api_access_enabled": {
														"nullable": true,
														"type": "boolean"
													},
													"default_nameservers": {
														"deprecated": true,
														"description": "Use [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-list-dns-settings) instead. Deprecated.",
														"nullable": true,
														"type": "string"
													},
													"enforce_twofactor": {
														"nullable": true,
														"type": "boolean"
													},
													"use_account_custom_ns_by_default": {
														"deprecated": true,
														"description": "Use [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-list-dns-settings) instead. Deprecated.",
														"nullable": true,
														"type": "boolean"
													}
												},
												"required": [
													"enforce_twofactor",
													"api_access_enabled",
													"access_approval_expiry",
													"abuse_contact_email",
													"use_account_custom_ns_by_default",
													"default_nameservers"
												],
												"type": "object"
											},
											"type": {
												"enum": [
													"standard",
													"enterprise"
												],
												"type": "string"
											}
										},
										"required": [
											"id",
											"name",
											"type",
											"settings",
											"created_on"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result_info": {
									"properties": {
										"next_page_token": {
											"description": "Use this opaque token in the next request to retrieve the\nnext page.\n\nParameters used to filter the retrieved list must remain in subsequent\nrequests with a page token.",
											"type": "string"
										},
										"total_size": {
											"description": "Counts the total amount of items in a list with the applied filters. The API omits next_page_token to indicate no more items in a particular list.",
											"type": "integer"
										}
									},
									"type": "object"
								},
								"success": {
									"enum": [
										true
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result",
								"result_info"
							],
							"type": "object"
						}
					}
				},
				"description": "The request has succeeded."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get organization accounts",
		"tags": [
			"Organizations"
		]
	},
	"GET /organizations/{organization_id}/profile": {
		"description": "Get an organizations profile if it exists.",
		"operationId": "Organizations_getProfile",
		"parameters": [
			{
				"description": "The ID of the organization to retrieve a profile for.",
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"pattern": "^[a-f0-9]{32}$",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"type": "object"
									},
									"maxItems": 0,
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"properties": {
										"business_address": {
											"type": "string"
										},
										"business_email": {
											"type": "string"
										},
										"business_name": {
											"type": "string"
										},
										"business_phone": {
											"type": "string"
										},
										"external_metadata": {
											"type": "string"
										}
									},
									"required": [
										"business_name",
										"business_email",
										"business_phone",
										"business_address",
										"external_metadata"
									],
									"type": "object"
								},
								"success": {
									"enum": [
										true
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "The request has succeeded."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get organization profile",
		"tags": [
			"Organizations"
		]
	},
	"PATCH /accounts/{account_id}/realtimekit/orgs/{org_id}": {
		"description": "Edits organization details for the given organization ID. The user must be the organization's owner.",
		"operationId": "editOrg",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"description": "ID of the organization",
				"in": "path",
				"name": "org_id",
				"required": true,
				"schema": {
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"contact": {
								"type": "string"
							},
							"feature_flags": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"name": {
								"description": "Must be a unique organization name",
								"type": "string"
							},
							"preferred_region": {
								"enum": [
									"ap-south-1",
									"ap-southeast-1",
									"us-east-1",
									"eu-central-1"
								],
								"type": "string"
							},
							"website": {
								"example": "https://realtimekit.cloudflare.com",
								"format": "uri",
								"type": "string"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"data": {
									"allOf": [
										{
											"properties": {
												"apikey": {
													"example": "4deeb3d8e8b5e74d5522",
													"type": "string"
												},
												"contact": {
													"example": "778-330-2389",
													"type": "string"
												},
												"created_at": {
													"example": "2022-05-28T08:18:34.804Z",
													"format": "date-time",
													"type": "string"
												},
												"feature_flags": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"id": {
													"description": "ID of the organization",
													"example": "bbb0e958-93ce-41c7-9745-16e7aa51c568",
													"format": "uuid",
													"type": "string"
												},
												"name": {
													"description": "Must be a unique organization name",
													"example": "RealtimeKit",
													"type": "string"
												},
												"preferred_region": {
													"example": "us-east-1",
													"type": "string"
												},
												"updated_at": {
													"example": "2022-05-28T08:18:34.804Z",
													"format": "date-time",
													"type": "string"
												},
												"website": {
													"example": "https://realtimekit.cloudflare.com",
													"format": "uri",
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"contact",
												"website",
												"apikey",
												"preferred_region",
												"feature_flags",
												"created_at",
												"updated_at"
											],
											"type": "object"
										}
									]
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"data"
							],
							"type": "object"
						}
					}
				},
				"description": "Operation successful"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Malformed request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized user"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Edit details of an organization",
		"tags": [
			"Organizations"
		]
	},
	"POST /accounts/{account_id}/realtimekit/orgs": {
		"description": "Creates an organization. The authenticated user becomes the owner of the organization.",
		"operationId": "createOrg",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"contact": {
								"example": "778-330-2389",
								"type": "string"
							},
							"feature_flags": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"name": {
								"description": "Must be a unique organization name",
								"example": "RealtimeKit",
								"type": "string"
							},
							"preferred_region": {
								"default": "ap-south-1",
								"enum": [
									"ap-south-1",
									"ap-southeast-1",
									"us-east-1",
									"eu-central-1"
								],
								"example": "us-east-1",
								"type": "string"
							},
							"website": {
								"example": "https://realtimekit.cloudflare.com",
								"format": "uri",
								"type": "string"
							}
						},
						"required": [
							"name",
							"contact",
							"website"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"201": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"data": {
									"allOf": [
										{
											"properties": {
												"apikey": {
													"example": "4deeb3d8e8b5e74d5522",
													"type": "string"
												},
												"contact": {
													"example": "778-330-2389",
													"type": "string"
												},
												"created_at": {
													"example": "2022-05-28T08:18:34.804Z",
													"format": "date-time",
													"type": "string"
												},
												"feature_flags": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"id": {
													"description": "ID of the organization",
													"example": "bbb0e958-93ce-41c7-9745-16e7aa51c568",
													"format": "uuid",
													"type": "string"
												},
												"name": {
													"description": "Must be a unique organization name",
													"example": "RealtimeKit",
													"type": "string"
												},
												"preferred_region": {
													"example": "us-east-1",
													"type": "string"
												},
												"updated_at": {
													"example": "2022-05-28T08:18:34.804Z",
													"format": "date-time",
													"type": "string"
												},
												"website": {
													"example": "https://realtimekit.cloudflare.com",
													"format": "uri",
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"contact",
												"website",
												"apikey",
												"preferred_region",
												"feature_flags",
												"created_at",
												"updated_at"
											],
											"type": "object"
										}
									]
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"data"
							],
							"type": "object"
						}
					}
				},
				"description": "Operation successful"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Malformed request"
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Unauthorized user"
			},
			"409": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"description": "Object containing details of the error that occurred",
									"properties": {
										"code": {
											"description": "Error code",
											"example": 404,
											"type": "number"
										},
										"message": {
											"description": "Error message",
											"example": "Error: resource not found",
											"type": "string"
										}
									},
									"required": [
										"code",
										"message"
									],
									"type": "object"
								},
								"success": {
									"description": "Whether the operation succeeded or not",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Organization with the provided name already exists"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Create an organization",
		"tags": [
			"Organizations"
		]
	},
	"POST /organizations": {
		"description": "Create a new organization for a user.",
		"operationId": "Organizations_createUserOrganization",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Represents an Organization in the Cloudflare data model",
						"properties": {
							"create_time": {
								"format": "date-time",
								"readOnly": true,
								"type": "string"
							},
							"id": {
								"allOf": [
									{
										"pattern": "^[a-f0-9]{32}$",
										"type": "string"
									}
								],
								"readOnly": true
							},
							"meta": {
								"additionalProperties": {
									"type": "object"
								},
								"properties": {
									"flags": {
										"allOf": [
											{
												"description": "Organization flags for feature enablement",
												"properties": {
													"account_creation": {
														"type": "string"
													},
													"account_deletion": {
														"type": "string"
													},
													"account_migration": {
														"type": "string"
													},
													"account_mobility": {
														"type": "string"
													},
													"sub_org_creation": {
														"type": "string"
													}
												},
												"required": [
													"account_creation",
													"account_deletion",
													"account_migration",
													"account_mobility",
													"sub_org_creation"
												],
												"type": "object"
											}
										]
									},
									"managed_by": {
										"type": "string"
									}
								},
								"readOnly": true,
								"type": "object"
							},
							"name": {
								"type": "string"
							},
							"parent": {
								"properties": {
									"id": {
										"pattern": "^[a-f0-9]{32}$",
										"type": "string"
									},
									"name": {
										"readOnly": true,
										"type": "string"
									}
								},
								"required": [
									"id",
									"name"
								],
								"type": "object"
							},
							"profile": {
								"properties": {
									"business_address": {
										"type": "string"
									},
									"business_email": {
										"type": "string"
									},
									"business_name": {
										"type": "string"
									},
									"business_phone": {
										"type": "string"
									},
									"external_metadata": {
										"type": "string"
									}
								},
								"required": [
									"business_name",
									"business_email",
									"business_phone",
									"business_address",
									"external_metadata"
								],
								"type": "object"
							}
						},
						"required": [
							"id",
							"name",
							"create_time",
							"meta"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"type": "object"
									},
									"maxItems": 0,
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"description": "Represents an Organization in the Cloudflare data model",
									"properties": {
										"create_time": {
											"format": "date-time",
											"readOnly": true,
											"type": "string"
										},
										"id": {
											"allOf": [
												{
													"pattern": "^[a-f0-9]{32}$",
													"type": "string"
												}
											],
											"readOnly": true
										},
										"meta": {
											"additionalProperties": {
												"type": "object"
											},
											"properties": {
												"flags": {
													"allOf": [
														{
															"description": "Organization flags for feature enablement",
															"properties": {
																"account_creation": {
																	"type": "string"
																},
																"account_deletion": {
																	"type": "string"
																},
																"account_migration": {
																	"type": "string"
																},
																"account_mobility": {
																	"type": "string"
																},
																"sub_org_creation": {
																	"type": "string"
																}
															},
															"required": [
																"account_creation",
																"account_deletion",
																"account_migration",
																"account_mobility",
																"sub_org_creation"
															],
															"type": "object"
														}
													]
												},
												"managed_by": {
													"type": "string"
												}
											},
											"readOnly": true,
											"type": "object"
										},
										"name": {
											"type": "string"
										},
										"parent": {
											"properties": {
												"id": {
													"pattern": "^[a-f0-9]{32}$",
													"type": "string"
												},
												"name": {
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										},
										"profile": {
											"properties": {
												"business_address": {
													"type": "string"
												},
												"business_email": {
													"type": "string"
												},
												"business_name": {
													"type": "string"
												},
												"business_phone": {
													"type": "string"
												},
												"external_metadata": {
													"type": "string"
												}
											},
											"required": [
												"business_name",
												"business_email",
												"business_phone",
												"business_address",
												"external_metadata"
											],
											"type": "object"
										}
									},
									"required": [
										"id",
										"name",
										"create_time",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"enum": [
										true
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "The request has succeeded."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create organization",
		"tags": [
			"Organizations"
		],
		"x-api-token-group": [
			"User Details Write"
		]
	},
	"PUT /organizations/{organization_id}": {
		"operationId": "Organizations_modify",
		"parameters": [
			{
				"description": "The ID of the organization to modify.",
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"pattern": "^[a-f0-9]{32}$",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Represents an Organization in the Cloudflare data model",
						"properties": {
							"create_time": {
								"format": "date-time",
								"readOnly": true,
								"type": "string"
							},
							"id": {
								"allOf": [
									{
										"pattern": "^[a-f0-9]{32}$",
										"type": "string"
									}
								],
								"readOnly": true
							},
							"meta": {
								"additionalProperties": {
									"type": "object"
								},
								"properties": {
									"flags": {
										"allOf": [
											{
												"description": "Organization flags for feature enablement",
												"properties": {
													"account_creation": {
														"type": "string"
													},
													"account_deletion": {
														"type": "string"
													},
													"account_migration": {
														"type": "string"
													},
													"account_mobility": {
														"type": "string"
													},
													"sub_org_creation": {
														"type": "string"
													}
												},
												"required": [
													"account_creation",
													"account_deletion",
													"account_migration",
													"account_mobility",
													"sub_org_creation"
												],
												"type": "object"
											}
										]
									},
									"managed_by": {
										"type": "string"
									}
								},
								"readOnly": true,
								"type": "object"
							},
							"name": {
								"type": "string"
							},
							"parent": {
								"properties": {
									"id": {
										"pattern": "^[a-f0-9]{32}$",
										"type": "string"
									},
									"name": {
										"readOnly": true,
										"type": "string"
									}
								},
								"required": [
									"id",
									"name"
								],
								"type": "object"
							},
							"profile": {
								"properties": {
									"business_address": {
										"type": "string"
									},
									"business_email": {
										"type": "string"
									},
									"business_name": {
										"type": "string"
									},
									"business_phone": {
										"type": "string"
									},
									"external_metadata": {
										"type": "string"
									}
								},
								"required": [
									"business_name",
									"business_email",
									"business_phone",
									"business_address",
									"external_metadata"
								],
								"type": "object"
							}
						},
						"required": [
							"id",
							"name",
							"create_time",
							"meta"
						],
						"type": "object"
					}
				}
			},
			"description": "The new details of the organization. Only accepts updates\nto \"name\" currently.",
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"type": "object"
									},
									"maxItems": 0,
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"description": "Represents an Organization in the Cloudflare data model",
									"properties": {
										"create_time": {
											"format": "date-time",
											"readOnly": true,
											"type": "string"
										},
										"id": {
											"allOf": [
												{
													"pattern": "^[a-f0-9]{32}$",
													"type": "string"
												}
											],
											"readOnly": true
										},
										"meta": {
											"additionalProperties": {
												"type": "object"
											},
											"properties": {
												"flags": {
													"allOf": [
														{
															"description": "Organization flags for feature enablement",
															"properties": {
																"account_creation": {
																	"type": "string"
																},
																"account_deletion": {
																	"type": "string"
																},
																"account_migration": {
																	"type": "string"
																},
																"account_mobility": {
																	"type": "string"
																},
																"sub_org_creation": {
																	"type": "string"
																}
															},
															"required": [
																"account_creation",
																"account_deletion",
																"account_migration",
																"account_mobility",
																"sub_org_creation"
															],
															"type": "object"
														}
													]
												},
												"managed_by": {
													"type": "string"
												}
											},
											"readOnly": true,
											"type": "object"
										},
										"name": {
											"type": "string"
										},
										"parent": {
											"properties": {
												"id": {
													"pattern": "^[a-f0-9]{32}$",
													"type": "string"
												},
												"name": {
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										},
										"profile": {
											"properties": {
												"business_address": {
													"type": "string"
												},
												"business_email": {
													"type": "string"
												},
												"business_name": {
													"type": "string"
												},
												"business_phone": {
													"type": "string"
												},
												"external_metadata": {
													"type": "string"
												}
											},
											"required": [
												"business_name",
												"business_email",
												"business_phone",
												"business_address",
												"external_metadata"
											],
											"type": "object"
										}
									},
									"required": [
										"id",
										"name",
										"create_time",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"enum": [
										true
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "The request has succeeded."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Modify organization",
		"tags": [
			"Organizations"
		]
	},
	"PUT /organizations/{organization_id}/profile": {
		"operationId": "Organizations_modifyProfile",
		"parameters": [
			{
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"pattern": "^[a-f0-9]{32}$",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"business_address": {
								"type": "string"
							},
							"business_email": {
								"type": "string"
							},
							"business_name": {
								"type": "string"
							},
							"business_phone": {
								"type": "string"
							},
							"external_metadata": {
								"type": "string"
							}
						},
						"required": [
							"business_name",
							"business_email",
							"business_phone",
							"business_address",
							"external_metadata"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"204": {
				"description": "There is no content to send for this request, but the headers may be useful."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"error",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Modify organization profile",
		"tags": [
			"Organizations"
		]
	}
}