{
	"GET /accounts/{account_id}/email-security/investigate": {
		"description": "Returns information for each email that matches the search parameter(s).",
		"operationId": "email_security_investigate",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"description": "The beginning of the search date range.\nDefaults to `now - 30 days`.",
				"example": "2022-06-25T14:30:00Z",
				"in": "query",
				"name": "start",
				"schema": {
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"description": "The end of the search date range.\nDefaults to `now`.",
				"example": "2022-07-25T14:30:00Z",
				"in": "query",
				"name": "end",
				"schema": {
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"description": "The space-delimited term used in the query. The search is case-insensitive.\n\nThe content of the following email metadata fields are searched:\n* alert_id\n* CC\n* From (envelope_from)\n* From Name\n* final_disposition\n* md5 hash (of any attachment)\n* sha1 hash (of any attachment)\n* sha256 hash (of any attachment)\n* name (of any attachment)\n* Reason\n* Received DateTime (yyyy-mm-ddThh:mm:ss)\n* Sent DateTime (yyyy-mm-ddThh:mm:ss)\n* ReplyTo\n* To (envelope_to)\n* To Name\n* Message-ID\n* smtp_helo_server_ip\n* smtp_previous_hop_ip\n* x_originating_ip\n* Subject",
				"example": "bob jones",
				"in": "query",
				"name": "query",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "Determines if the search results will include detections or not.",
				"in": "query",
				"name": "detections_only",
				"schema": {
					"default": true,
					"type": "boolean"
				}
			},
			{
				"description": "Determines if the message action log is included in the response.",
				"in": "query",
				"name": "action_log",
				"schema": {
					"default": true,
					"type": "boolean"
				}
			},
			{
				"description": "The dispositions the search filters by.",
				"in": "query",
				"name": "final_disposition",
				"schema": {
					"allOf": [
						{
							"enum": [
								"MALICIOUS",
								"SUSPICIOUS",
								"SPOOF",
								"SPAM",
								"BULK",
								"NONE"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"in": "query",
				"name": "metric",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "The message actions the search filters by.",
				"in": "query",
				"name": "message_action",
				"schema": {
					"allOf": [
						{
							"enum": [
								"PREVIEW",
								"QUARANTINE_RELEASED",
								"MOVED"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"example": "me@example.com",
				"in": "query",
				"name": "recipient",
				"schema": {
					"type": "string"
				}
			},
			{
				"example": "noreply@example.com",
				"in": "query",
				"name": "sender",
				"schema": {
					"type": "string"
				}
			},
			{
				"example": "4Njp3P0STMz2c02Q-2022-12-30T02:44:49",
				"in": "query",
				"name": "alert_id",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "The sender domains the search filters by.",
				"example": "example.com",
				"in": "query",
				"name": "domain",
				"schema": {
					"type": "string"
				}
			},
			{
				"example": "<4VAZPrAdg7IGNxdt1DWRNu0gvOeL_iZiwP4BQfo4DaE.Yw-woXuugQbeFhBpzwFQtqq_v2v1HOKznoMBqbciQpE@example.com>",
				"in": "query",
				"name": "message_id",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "The page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"action_log": {},
															"alert_id": {
																"nullable": true,
																"type": "string"
															},
															"client_recipients": {
																"items": {
																	"type": "string"
																},
																"type": "array"
															},
															"delivery_mode": {
																"allOf": [
																	{
																		"enum": [
																			"DIRECT",
																			"BCC",
																			"JOURNAL",
																			"REVIEW_SUBMISSION",
																			"DMARC_UNVERIFIED",
																			"DMARC_FAILURE_REPORT",
																			"DMARC_AGGREGATE_REPORT",
																			"THREAT_INTEL_SUBMISSION",
																			"SIMULATION_SUBMISSION",
																			"API",
																			"RETRO_SCAN"
																		],
																		"type": "string"
																	},
																	{
																		"nullable": true,
																		"type": "string"
																	}
																]
															},
															"detection_reasons": {
																"items": {
																	"type": "string"
																},
																"type": "array"
															},
															"edf_hash": {
																"nullable": true,
																"type": "string"
															},
															"final_disposition": {
																"allOf": [
																	{
																		"enum": [
																			"MALICIOUS",
																			"MALICIOUS-BEC",
																			"SUSPICIOUS",
																			"SPOOF",
																			"SPAM",
																			"BULK",
																			"ENCRYPTED",
																			"EXTERNAL",
																			"UNKNOWN",
																			"NONE"
																		],
																		"type": "string"
																	},
																	{
																		"nullable": true,
																		"type": "string"
																	}
																]
															},
															"from": {
																"nullable": true,
																"type": "string"
															},
															"from_name": {
																"nullable": true,
																"type": "string"
															},
															"is_phish_submission": {
																"type": "boolean"
															},
															"is_quarantined": {
																"type": "boolean"
															},
															"message_id": {
																"nullable": true,
																"type": "string"
															},
															"postfix_id": {
																"description": "The identifier of the message.",
																"example": "4Njp3P0STMz2c02Q",
																"title": "postfix_id",
																"type": "string"
															},
															"properties": {
																"properties": {
																	"allowlisted_pattern_type": {
																		"type": "string"
																	},
																	"whitelisted_pattern_type": {
																		"deprecated": true,
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"sent_date": {
																"nullable": true,
																"type": "string"
															},
															"subject": {
																"nullable": true,
																"type": "string"
															},
															"threat_categories": {
																"items": {
																	"type": "string"
																},
																"nullable": true,
																"type": "array"
															},
															"to": {
																"items": {
																	"type": "string"
																},
																"nullable": true,
																"type": "array"
															},
															"to_name": {
																"items": {
																	"type": "string"
																},
																"nullable": true,
																"type": "array"
															},
															"ts": {
																"type": "string"
															},
															"validation": {
																"allOf": [
																	{
																		"properties": {
																			"comment": {
																				"nullable": true,
																				"type": "string"
																			},
																			"dkim": {
																				"allOf": [
																					{
																						"enum": [
																							"pass",
																							"neutral",
																							"fail",
																							"error",
																							"none"
																						],
																						"type": "string"
																					},
																					{
																						"nullable": true,
																						"type": "string"
																					}
																				]
																			},
																			"dmarc": {
																				"allOf": [
																					{
																						"enum": [
																							"pass",
																							"neutral",
																							"fail",
																							"error",
																							"none"
																						],
																						"type": "string"
																					},
																					{
																						"nullable": true,
																						"type": "string"
																					}
																				]
																			},
																			"spf": {
																				"allOf": [
																					{
																						"enum": [
																							"pass",
																							"neutral",
																							"fail",
																							"error",
																							"none"
																						],
																						"type": "string"
																					},
																					{
																						"nullable": true,
																						"type": "string"
																					}
																				]
																			}
																		},
																		"type": "object"
																	},
																	{
																		"nullable": true,
																		"type": "object"
																	}
																]
															}
														},
														"required": [
															"ts",
															"client_recipients",
															"postfix_id",
															"detection_reasons",
															"action_log",
															"is_quarantined",
															"is_phish_submission",
															"properties"
														],
														"type": "object"
													},
													{
														"properties": {
															"id": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													}
												],
												"example": {
													"action_log": [],
													"alert_id": "4Njp3P0STMz2c02Q-2022-12-30T02:44:49",
													"client_recipients": [
														"email@example.com"
													],
													"delivery_mode": "DIRECT",
													"detection_reasons": [
														"Selector is a source of spam/uce : Smtp-Helo-Server-Ip=<b>127.0.0[dot]186</b>"
													],
													"edf_hash": null,
													"final_disposition": "MALICIOUS",
													"from": "d1994@example.com",
													"from_name": "Sender Name",
													"id": "47JJcT1w6GztQV7-email@example.com",
													"is_phish_submission": false,
													"is_quarantined": false,
													"message_id": "<4VAZPrAdg7IGNxdt1DWRNu0gvOeL_iZiwP4BQfo4DaE.Yw-woXuugQbeFhBpzwFQtqq_v2v1HOKznoMBqbciQpE@example.com>",
													"postfix_id": "47JJcT1w6GztQV7",
													"properties": {},
													"sent_date": "2019-11-21T00:22:01",
													"subject": "listen, I highly recommend u to read that email, just to ensure not a thing will take place",
													"threat_categories": [
														"IPReputation",
														"ASNReputation"
													],
													"to": [
														"email@example.com"
													],
													"to_name": [
														"Recipient Name"
													],
													"ts": "2019-11-20T23:22:01",
													"validation": {
														"comment": null,
														"dkim": "pass",
														"dmarc": "none",
														"spf": "fail"
													}
												}
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"format": "int32",
													"type": "integer"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"page",
												"per_page",
												"total_count"
											],
											"type": "object"
										}
									},
									"required": [
										"result",
										"result_info"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the search results for the provided query."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Search email messages",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": [
			"Cloud Email Security: Write",
			"Cloud Email Security: Read"
		]
	},
	"GET /accounts/{account_id}/email-security/investigate/{postfix_id}": {
		"operationId": "email_security_get_message",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "postfix_id",
				"required": true,
				"schema": {
					"description": "The identifier of the message.",
					"example": "4Njp3P0STMz2c02Q",
					"title": "postfix_id",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"action_log": {},
														"alert_id": {
															"nullable": true,
															"type": "string"
														},
														"client_recipients": {
															"items": {
																"type": "string"
															},
															"type": "array"
														},
														"delivery_mode": {
															"allOf": [
																{
																	"enum": [
																		"DIRECT",
																		"BCC",
																		"JOURNAL",
																		"REVIEW_SUBMISSION",
																		"DMARC_UNVERIFIED",
																		"DMARC_FAILURE_REPORT",
																		"DMARC_AGGREGATE_REPORT",
																		"THREAT_INTEL_SUBMISSION",
																		"SIMULATION_SUBMISSION",
																		"API",
																		"RETRO_SCAN"
																	],
																	"type": "string"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														},
														"detection_reasons": {
															"items": {
																"type": "string"
															},
															"type": "array"
														},
														"edf_hash": {
															"nullable": true,
															"type": "string"
														},
														"final_disposition": {
															"allOf": [
																{
																	"enum": [
																		"MALICIOUS",
																		"MALICIOUS-BEC",
																		"SUSPICIOUS",
																		"SPOOF",
																		"SPAM",
																		"BULK",
																		"ENCRYPTED",
																		"EXTERNAL",
																		"UNKNOWN",
																		"NONE"
																	],
																	"type": "string"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														},
														"from": {
															"nullable": true,
															"type": "string"
														},
														"from_name": {
															"nullable": true,
															"type": "string"
														},
														"is_phish_submission": {
															"type": "boolean"
														},
														"is_quarantined": {
															"type": "boolean"
														},
														"message_id": {
															"nullable": true,
															"type": "string"
														},
														"postfix_id": {
															"description": "The identifier of the message.",
															"example": "4Njp3P0STMz2c02Q",
															"title": "postfix_id",
															"type": "string"
														},
														"properties": {
															"properties": {
																"allowlisted_pattern_type": {
																	"type": "string"
																},
																"whitelisted_pattern_type": {
																	"deprecated": true,
																	"type": "string"
																}
															},
															"type": "object"
														},
														"sent_date": {
															"nullable": true,
															"type": "string"
														},
														"subject": {
															"nullable": true,
															"type": "string"
														},
														"threat_categories": {
															"items": {
																"type": "string"
															},
															"nullable": true,
															"type": "array"
														},
														"to": {
															"items": {
																"type": "string"
															},
															"nullable": true,
															"type": "array"
														},
														"to_name": {
															"items": {
																"type": "string"
															},
															"nullable": true,
															"type": "array"
														},
														"ts": {
															"type": "string"
														},
														"validation": {
															"allOf": [
																{
																	"properties": {
																		"comment": {
																			"nullable": true,
																			"type": "string"
																		},
																		"dkim": {
																			"allOf": [
																				{
																					"enum": [
																						"pass",
																						"neutral",
																						"fail",
																						"error",
																						"none"
																					],
																					"type": "string"
																				},
																				{
																					"nullable": true,
																					"type": "string"
																				}
																			]
																		},
																		"dmarc": {
																			"allOf": [
																				{
																					"enum": [
																						"pass",
																						"neutral",
																						"fail",
																						"error",
																						"none"
																					],
																					"type": "string"
																				},
																				{
																					"nullable": true,
																					"type": "string"
																				}
																			]
																		},
																		"spf": {
																			"allOf": [
																				{
																					"enum": [
																						"pass",
																						"neutral",
																						"fail",
																						"error",
																						"none"
																					],
																					"type": "string"
																				},
																				{
																					"nullable": true,
																					"type": "string"
																				}
																			]
																		}
																	},
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "object"
																}
															]
														}
													},
													"required": [
														"ts",
														"client_recipients",
														"postfix_id",
														"detection_reasons",
														"action_log",
														"is_quarantined",
														"is_phish_submission",
														"properties"
													],
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												}
											],
											"example": {
												"action_log": [],
												"alert_id": "4Njp3P0STMz2c02Q-2022-12-30T02:44:49",
												"client_recipients": [
													"email@example.com"
												],
												"delivery_mode": "DIRECT",
												"detection_reasons": [
													"Selector is a source of spam/uce : Smtp-Helo-Server-Ip=<b>127.0.0[dot]186</b>"
												],
												"edf_hash": null,
												"final_disposition": "MALICIOUS",
												"from": "d1994@example.com",
												"from_name": "Sender Name",
												"id": "47JJcT1w6GztQV7-email@example.com",
												"is_phish_submission": false,
												"is_quarantined": false,
												"message_id": "<4VAZPrAdg7IGNxdt1DWRNu0gvOeL_iZiwP4BQfo4DaE.Yw-woXuugQbeFhBpzwFQtqq_v2v1HOKznoMBqbciQpE@example.com>",
												"postfix_id": "47JJcT1w6GztQV7",
												"properties": {},
												"sent_date": "2019-11-21T00:22:01",
												"subject": "listen, I highly recommend u to read that email, just to ensure not a thing will take place",
												"threat_categories": [
													"IPReputation",
													"ASNReputation"
												],
												"to": [
													"email@example.com"
												],
												"to_name": [
													"Recipient Name"
												],
												"ts": "2019-11-20T23:22:01",
												"validation": {
													"comment": null,
													"dkim": "pass",
													"dmarc": "none",
													"spf": "fail"
												}
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the email message details."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get message details",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": [
			"Cloud Email Security: Write",
			"Cloud Email Security: Read"
		]
	},
	"GET /accounts/{account_id}/email-security/investigate/{postfix_id}/detections": {
		"description": "Returns detection details such as threat categories and sender information for non-benign messages.",
		"operationId": "email_security_get_message_detections",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "postfix_id",
				"required": true,
				"schema": {
					"description": "The identifier of the message.",
					"example": "4Njp3P0STMz2c02Q",
					"title": "postfix_id",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {
												"action": "QUARANTINED",
												"attachments": [],
												"final_disposition": "MALICIOUS",
												"headers": [
													{
														"name": "From",
														"value": "Sender Name <d1994@example.com>"
													},
													{
														"name": "Subject",
														"value": "listen, I highly recommend u to read that email, just to ensure not a thing will take place"
													}
												],
												"links": [
													{
														"href": "https://example.com",
														"text": "Click here!"
													}
												],
												"sender_info": {
													"as_name": "AS0",
													"as_number": 0,
													"geo": "US/-/-",
													"ip": "127.0.0.1",
													"pld": "example.com"
												},
												"threat_categories": [
													{
														"description": null,
														"id": 1234,
														"name": "IP Reputation"
													}
												],
												"validation": {
													"comment": null,
													"dkim": "pass",
													"dmarc": "none",
													"spf": "fail"
												}
											},
											"properties": {
												"action": {
													"type": "string"
												},
												"attachments": {
													"items": {
														"properties": {
															"content_type": {
																"nullable": true,
																"type": "string"
															},
															"detection": {
																"allOf": [
																	{
																		"enum": [
																			"MALICIOUS",
																			"MALICIOUS-BEC",
																			"SUSPICIOUS",
																			"SPOOF",
																			"SPAM",
																			"BULK",
																			"ENCRYPTED",
																			"EXTERNAL",
																			"UNKNOWN",
																			"NONE"
																		],
																		"type": "string"
																	},
																	{
																		"nullable": true,
																		"type": "string"
																	}
																]
															},
															"encrypted": {
																"nullable": true,
																"type": "boolean"
															},
															"name": {
																"nullable": true,
																"type": "string"
															},
															"size": {
																"minimum": 0,
																"type": "integer"
															}
														},
														"required": [
															"size"
														],
														"type": "object"
													},
													"type": "array"
												},
												"final_disposition": {
													"allOf": [
														{
															"enum": [
																"MALICIOUS",
																"MALICIOUS-BEC",
																"SUSPICIOUS",
																"SPOOF",
																"SPAM",
																"BULK",
																"ENCRYPTED",
																"EXTERNAL",
																"UNKNOWN",
																"NONE"
															],
															"type": "string"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												},
												"headers": {
													"items": {
														"properties": {
															"name": {
																"type": "string"
															},
															"value": {
																"type": "string"
															}
														},
														"required": [
															"name",
															"value"
														],
														"type": "object"
													},
													"type": "array"
												},
												"links": {
													"items": {
														"properties": {
															"href": {
																"type": "string"
															},
															"text": {
																"nullable": true,
																"type": "string"
															}
														},
														"required": [
															"href"
														],
														"type": "object"
													},
													"type": "array"
												},
												"sender_info": {
													"properties": {
														"as_name": {
															"description": "The name of the autonomous system.",
															"nullable": true,
															"type": "string"
														},
														"as_number": {
															"description": "The number of the autonomous system.",
															"format": "int64",
															"nullable": true,
															"type": "integer"
														},
														"geo": {
															"nullable": true,
															"type": "string"
														},
														"ip": {
															"nullable": true,
															"type": "string"
														},
														"pld": {
															"nullable": true,
															"type": "string"
														}
													},
													"type": "object"
												},
												"threat_categories": {
													"items": {
														"properties": {
															"description": {
																"nullable": true,
																"type": "string"
															},
															"id": {
																"format": "int64",
																"type": "integer"
															},
															"name": {
																"nullable": true,
																"type": "string"
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"type": "array"
												},
												"validation": {
													"properties": {
														"comment": {
															"nullable": true,
															"type": "string"
														},
														"dkim": {
															"allOf": [
																{
																	"enum": [
																		"pass",
																		"neutral",
																		"fail",
																		"error",
																		"none"
																	],
																	"type": "string"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														},
														"dmarc": {
															"allOf": [
																{
																	"enum": [
																		"pass",
																		"neutral",
																		"fail",
																		"error",
																		"none"
																	],
																	"type": "string"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														},
														"spf": {
															"allOf": [
																{
																	"enum": [
																		"pass",
																		"neutral",
																		"fail",
																		"error",
																		"none"
																	],
																	"type": "string"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													},
													"type": "object"
												}
											},
											"required": [
												"validation",
												"headers",
												"threat_categories",
												"sender_info",
												"links",
												"action",
												"attachments"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the email message details."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get message detection details",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": [
			"Cloud Email Security: Write",
			"Cloud Email Security: Read"
		]
	},
	"GET /accounts/{account_id}/email-security/investigate/{postfix_id}/preview": {
		"description": "Returns a preview of the message body as a base64 encoded PNG image for non-benign messages.",
		"operationId": "email_security_get_message_preview",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "postfix_id",
				"required": true,
				"schema": {
					"description": "The identifier of the message.",
					"example": "4Njp3P0STMz2c02Q",
					"title": "postfix_id",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {
												"screenshot": "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"
											},
											"properties": {
												"screenshot": {
													"description": "A base64 encoded PNG image of the email.",
													"type": "string"
												}
											},
											"required": [
												"screenshot"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains a preview of the email."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get email preview",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": [
			"Cloud Email Security: Write",
			"Cloud Email Security: Read"
		]
	},
	"GET /accounts/{account_id}/email-security/investigate/{postfix_id}/raw": {
		"description": "Returns the raw eml of any non-benign message.",
		"operationId": "email_security_get_message_raw",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "postfix_id",
				"required": true,
				"schema": {
					"description": "The identifier of the message.",
					"example": "4Njp3P0STMz2c02Q",
					"title": "postfix_id",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {
												"raw": "MIME-Version: 1.0\nContent-Type: text/plain; charset=\"utf-8\"\n\nFrom: sender@example.com\nTo: recipient@example.com\nSubject: Test Email\n\nThis is a test email."
											},
											"properties": {
												"raw": {
													"description": "A UTF-8 encoded eml file of the email.",
													"type": "string"
												}
											},
											"required": [
												"raw"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the raw content of the email."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get raw email content",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": [
			"Cloud Email Security: Write",
			"Cloud Email Security: Read"
		]
	},
	"GET /accounts/{account_id}/email-security/investigate/{postfix_id}/trace": {
		"operationId": "email_security_get_message_trace",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "postfix_id",
				"required": true,
				"schema": {
					"description": "The identifier of the message.",
					"example": "4Njp3P0STMz2c02Q",
					"title": "postfix_id",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"inbound": {
													"properties": {
														"lines": {
															"items": {
																"properties": {
																	"lineno": {
																		"format": "int64",
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	},
																	"ts": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"ts",
																	"lineno",
																	"message"
																],
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												"outbound": {
													"properties": {
														"lines": {
															"items": {
																"properties": {
																	"lineno": {
																		"format": "int64",
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	},
																	"ts": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"ts",
																	"lineno",
																	"message"
																],
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												}
											},
											"required": [
												"inbound",
												"outbound"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the email trace."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get email trace",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": [
			"Cloud Email Security: Write",
			"Cloud Email Security: Read"
		]
	},
	"GET /accounts/{account_id}/email-security/submissions": {
		"description": "This endpoint returns information for submissions to made to reclassify emails.",
		"operationId": "email_security_submissions",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"description": "The beginning of the search date range.\nDefaults to `now - 30 days`.",
				"example": "2022-06-25T14:30:00Z",
				"in": "query",
				"name": "start",
				"schema": {
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"description": "The end of the search date range.\nDefaults to `now`.",
				"example": "2022-07-25T14:30:00Z",
				"in": "query",
				"name": "end",
				"schema": {
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "type",
				"schema": {
					"allOf": [
						{
							"enum": [
								"TEAM",
								"USER"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"in": "query",
				"name": "submission_id",
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "original_disposition",
				"schema": {
					"allOf": [
						{
							"enum": [
								"MALICIOUS",
								"SUSPICIOUS",
								"SPOOF",
								"SPAM",
								"BULK",
								"NONE"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"in": "query",
				"name": "requested_disposition",
				"schema": {
					"allOf": [
						{
							"enum": [
								"MALICIOUS",
								"SUSPICIOUS",
								"SPOOF",
								"SPAM",
								"BULK",
								"NONE"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"in": "query",
				"name": "outcome_disposition",
				"schema": {
					"allOf": [
						{
							"enum": [
								"MALICIOUS",
								"SUSPICIOUS",
								"SPOOF",
								"SPAM",
								"BULK",
								"NONE"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"in": "query",
				"name": "query",
				"schema": {
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "The page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"original_disposition": {
														"allOf": [
															{
																"enum": [
																	"MALICIOUS",
																	"MALICIOUS-BEC",
																	"SUSPICIOUS",
																	"SPOOF",
																	"SPAM",
																	"BULK",
																	"ENCRYPTED",
																	"EXTERNAL",
																	"UNKNOWN",
																	"NONE"
																],
																"type": "string"
															},
															{
																"nullable": true,
																"type": "string"
															}
														]
													},
													"original_edf_hash": {
														"nullable": true,
														"type": "string"
													},
													"outcome": {
														"nullable": true,
														"type": "string"
													},
													"outcome_disposition": {
														"allOf": [
															{
																"enum": [
																	"MALICIOUS",
																	"MALICIOUS-BEC",
																	"SUSPICIOUS",
																	"SPOOF",
																	"SPAM",
																	"BULK",
																	"ENCRYPTED",
																	"EXTERNAL",
																	"UNKNOWN",
																	"NONE"
																],
																"type": "string"
															},
															{
																"nullable": true,
																"type": "string"
															}
														]
													},
													"requested_by": {
														"nullable": true,
														"type": "string"
													},
													"requested_disposition": {
														"allOf": [
															{
																"enum": [
																	"MALICIOUS",
																	"MALICIOUS-BEC",
																	"SUSPICIOUS",
																	"SPOOF",
																	"SPAM",
																	"BULK",
																	"ENCRYPTED",
																	"EXTERNAL",
																	"UNKNOWN",
																	"NONE"
																],
																"type": "string"
															},
															{
																"nullable": true,
																"type": "string"
															}
														]
													},
													"requested_ts": {
														"format": "date-time",
														"type": "string"
													},
													"status": {
														"nullable": true,
														"type": "string"
													},
													"subject": {
														"nullable": true,
														"type": "string"
													},
													"submission_id": {
														"type": "string"
													},
													"type": {
														"nullable": true,
														"type": "string"
													}
												},
												"required": [
													"submission_id",
													"requested_ts"
												],
												"type": "object"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"format": "int32",
													"type": "integer"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"page",
												"per_page",
												"total_count"
											],
											"type": "object"
										}
									},
									"required": [
										"result",
										"result_info"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get reclassify submissions",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": null
	},
	"POST /accounts/{account_id}/email-security/investigate/{postfix_id}/move": {
		"operationId": "email_security_post_message_move",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "postfix_id",
				"required": true,
				"schema": {
					"description": "The identifier of the message.",
					"example": "4Njp3P0STMz2c02Q",
					"title": "postfix_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"destination": {
								"enum": [
									"Inbox",
									"JunkEmail",
									"DeletedItems",
									"RecoverableItemsDeletions",
									"RecoverableItemsPurges"
								],
								"type": "string"
							}
						},
						"required": [
							"destination"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"completed_timestamp": {
														"format": "date-time",
														"type": "string"
													},
													"destination": {
														"type": "string"
													},
													"item_count": {
														"format": "int32",
														"type": "integer"
													},
													"message_id": {
														"type": "string"
													},
													"operation": {
														"type": "string"
													},
													"recipient": {
														"type": "string"
													},
													"status": {
														"type": "string"
													}
												},
												"required": [
													"destination",
													"item_count",
													"completed_timestamp",
													"message_id",
													"recipient",
													"operation",
													"status"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Move a message",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": null
	},
	"POST /accounts/{account_id}/email-security/investigate/{postfix_id}/reclassify": {
		"operationId": "email_security_post_reclassify",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "postfix_id",
				"required": true,
				"schema": {
					"description": "The identifier of the message.",
					"example": "4Njp3P0STMz2c02Q",
					"title": "postfix_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"eml_content": {
								"description": "Base64 encoded content of the EML file",
								"nullable": true,
								"type": "string"
							},
							"expected_disposition": {
								"enum": [
									"NONE",
									"BULK",
									"MALICIOUS",
									"SPAM",
									"SPOOF",
									"SUSPICIOUS"
								],
								"type": "string"
							}
						},
						"required": [
							"expected_disposition"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"202": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change email classfication",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": null
	},
	"POST /accounts/{account_id}/email-security/investigate/move": {
		"operationId": "email_security_post_bulk_message_move",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"destination": {
								"enum": [
									"Inbox",
									"JunkEmail",
									"DeletedItems",
									"RecoverableItemsDeletions",
									"RecoverableItemsPurges"
								],
								"type": "string"
							},
							"postfix_ids": {
								"items": {
									"description": "The identifier of the message.",
									"example": "4Njp3P0STMz2c02Q",
									"title": "postfix_id",
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"postfix_ids",
							"destination"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"completed_timestamp": {
														"format": "date-time",
														"type": "string"
													},
													"destination": {
														"type": "string"
													},
													"item_count": {
														"format": "int32",
														"type": "integer"
													},
													"message_id": {
														"type": "string"
													},
													"operation": {
														"type": "string"
													},
													"recipient": {
														"type": "string"
													},
													"status": {
														"type": "string"
													}
												},
												"required": [
													"destination",
													"item_count",
													"completed_timestamp",
													"message_id",
													"recipient",
													"operation",
													"status"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Move multiple messages",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": null
	},
	"POST /accounts/{account_id}/email-security/investigate/preview": {
		"operationId": "email_security_post_preview",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"postfix_id": {
								"description": "The identifier of the message.",
								"example": "4Njp3P0STMz2c02Q",
								"title": "postfix_id",
								"type": "string"
							}
						},
						"required": [
							"postfix_id"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {
												"screenshot": "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"
											},
											"properties": {
												"screenshot": {
													"description": "A base64 encoded PNG image of the email.",
													"type": "string"
												}
											},
											"required": [
												"screenshot"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Preview for non-detection messages",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": null
	},
	"POST /accounts/{account_id}/email-security/investigate/release": {
		"operationId": "email_security_post_release",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "A list of messages identfied by their `postfix_id`s that should be released.",
						"items": {
							"description": "The identifier of the message.",
							"example": "4Njp3P0STMz2c02Q",
							"title": "postfix_id",
							"type": "string"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"delivered": {
																"items": {
																	"type": "string"
																},
																"nullable": true,
																"type": "array"
															},
															"failed": {
																"items": {
																	"type": "string"
																},
																"nullable": true,
																"type": "array"
															},
															"undelivered": {
																"items": {
																	"type": "string"
																},
																"nullable": true,
																"type": "array"
															}
														},
														"type": "object"
													},
													{
														"properties": {
															"postfix_id": {
																"description": "The identifier of the message.",
																"example": "4Njp3P0STMz2c02Q",
																"title": "postfix_id",
																"type": "string"
															}
														},
														"required": [
															"postfix_id"
														],
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Release messages from quarantine",
		"tags": [
			"Email Security"
		],
		"x-api-token-group": null
	}
}