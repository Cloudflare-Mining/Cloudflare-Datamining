{
	"DELETE /accounts/{account_id}/stream/{identifier}": {
		"description": "Deletes a video and its copies from Cloudflare Stream.",
		"operationId": "stream-videos-delete-video",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "A Cloudflare-generated unique identifier for a media item.",
					"example": "ea95132c15732412d22c1476fa83f27a",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {}
				},
				"description": "Delete video response"
			},
			"4XX": {
				"content": {
					"application/json": {}
				},
				"description": "Delete video response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete video",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	},
	"GET /accounts/{account_id}/stream": {
		"description": "Lists up to 1000 videos from a single request. For a specific range, refer to the optional parameters.",
		"operationId": "stream-videos-list-videos",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "status",
				"schema": {
					"description": "Specifies the processing status for all quality levels for a video.",
					"enum": [
						"pendingupload",
						"downloading",
						"queued",
						"inprogress",
						"ready",
						"error"
					],
					"example": "inprogress",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "creator",
				"schema": {
					"description": "A user-defined identifier for the media creator.",
					"example": "creator-id_abcde12345",
					"maxLength": 64,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "type",
				"schema": {
					"description": "Specifies whether the video is `vod` or `live`.",
					"example": "live",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "asc",
				"schema": {
					"default": false,
					"description": "Lists videos in ascending order of creation.",
					"example": true,
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "search",
				"schema": {
					"description": "Searches over the `name` key in the `meta` field. This field can be set with or after the upload request.",
					"example": "puppy.mp4",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "start",
				"schema": {
					"description": "Lists videos created after the specified date.",
					"example": "2014-01-02T02:20:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "end",
				"schema": {
					"description": "Lists videos created before the specified date.",
					"example": "2014-01-02T02:20:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "include_counts",
				"schema": {
					"default": false,
					"description": "Includes the total number of videos associated with the submitted query parameters.",
					"example": true,
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"allowedOrigins": {
														"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
														"example": [
															"example.com"
														],
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"created": {
														"description": "The date and time the media item was created.",
														"example": "2014-01-02T02:20:00Z",
														"format": "date-time",
														"type": "string"
													},
													"creator": {
														"description": "A user-defined identifier for the media creator.",
														"example": "creator-id_abcde12345",
														"maxLength": 64,
														"type": "string"
													},
													"duration": {
														"description": "The duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload and before the video is ready.",
														"type": "number"
													},
													"input": {
														"properties": {
															"height": {
																"description": "The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.",
																"type": "integer"
															},
															"width": {
																"description": "The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.",
																"type": "integer"
															}
														},
														"type": "object"
													},
													"liveInput": {
														"description": "The live input ID used to upload a video with Stream Live.",
														"example": "fc0a8dc887b16759bfd9ad922230a014",
														"maxLength": 32,
														"type": "string"
													},
													"maxDurationSeconds": {
														"description": "The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown.",
														"maximum": 21600,
														"minimum": 1,
														"type": "integer"
													},
													"meta": {
														"description": "A user modifiable key-value store used to reference other systems of record for managing videos.",
														"example": {
															"name": "video12345.mp4"
														},
														"type": "object"
													},
													"modified": {
														"description": "The date and time the media item was last modified.",
														"example": "2014-01-02T02:20:00Z",
														"format": "date-time",
														"type": "string"
													},
													"playback": {
														"properties": {
															"dash": {
																"description": "DASH Media Presentation Description for the video.",
																"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd",
																"type": "string"
															},
															"hls": {
																"description": "The HLS manifest for the video.",
																"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8",
																"type": "string"
															}
														},
														"type": "object"
													},
													"preview": {
														"description": "The video's preview page URI. This field is omitted until encoding is complete.",
														"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/watch",
														"format": "uri",
														"type": "string"
													},
													"readyToStream": {
														"description": "Indicates whether the video is playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
														"example": true,
														"type": "boolean"
													},
													"readyToStreamAt": {
														"description": "Indicates the time at which the video became playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
														"example": "2014-01-02T02:20:00Z",
														"format": "date-time",
														"type": "string"
													},
													"requireSignedURLs": {
														"default": false,
														"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
														"example": true,
														"type": "boolean"
													},
													"scheduledDeletion": {
														"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
														"example": "2014-01-02T02:20:00Z",
														"format": "date-time",
														"type": "string"
													},
													"size": {
														"description": "The size of the media item in bytes.",
														"example": 4190963,
														"type": "number"
													},
													"status": {
														"description": "Specifies a detailed status for a video. If the `state` is `inprogress` or `error`, the `step` field returns `encoding` or `manifest`. If the `state` is `inprogress`, `pctComplete` returns a number between 0 and 100 to indicate the approximate percent of completion. If the `state` is `error`, `errorReasonCode` and `errorReasonText` provide additional details.",
														"properties": {
															"errorReasonCode": {
																"description": "Specifies why the video failed to encode. This field is empty if the video is not in an `error` state. Preferred for programmatic use.",
																"example": "ERR_NON_VIDEO",
																"type": "string"
															},
															"errorReasonText": {
																"description": "Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `error` state.",
																"example": "The file was not recognized as a valid video file.",
																"type": "string"
															},
															"pctComplete": {
																"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
																"maximum": 100,
																"minimum": 0,
																"type": "string"
															},
															"state": {
																"description": "Specifies the processing status for all quality levels for a video.",
																"enum": [
																	"pendingupload",
																	"downloading",
																	"queued",
																	"inprogress",
																	"ready",
																	"error"
																],
																"example": "inprogress",
																"type": "string"
															}
														}
													},
													"thumbnail": {
														"description": "The media item's thumbnail URI. This field is omitted until encoding is complete.",
														"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg",
														"format": "uri",
														"type": "string"
													},
													"thumbnailTimestampPct": {
														"default": 0,
														"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
														"example": 0.529241,
														"maximum": 1,
														"minimum": 0,
														"type": "number"
													},
													"uid": {
														"description": "A Cloudflare-generated unique identifier for a media item.",
														"example": "ea95132c15732412d22c1476fa83f27a",
														"maxLength": 32,
														"type": "string"
													},
													"uploadExpiry": {
														"description": "The date and time when the video upload URL is no longer valid for direct user uploads.",
														"example": "2014-01-02T02:20:00Z",
														"format": "date-time",
														"type": "string"
													},
													"uploaded": {
														"description": "The date and time the media item was uploaded.",
														"example": "2014-01-02T02:20:00Z",
														"format": "date-time",
														"type": "string"
													},
													"watermark": {
														"properties": {
															"created": {
																"description": "The date and a time a watermark profile was created.",
																"example": "2014-01-02T02:20:00Z",
																"format": "date-time",
																"type": "string"
															},
															"downloadedFrom": {
																"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
																"example": "https://company.com/logo.png",
																"type": "string"
															},
															"height": {
																"description": "The height of the image in pixels.",
																"type": "integer"
															},
															"name": {
																"default": "",
																"description": "A short description of the watermark profile.",
																"example": "Marketing Videos",
																"type": "string"
															},
															"opacity": {
																"default": 1,
																"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
																"example": 0.75,
																"maximum": 1,
																"minimum": 0,
																"type": "number"
															},
															"padding": {
																"default": 0.05,
																"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
																"example": 0.1,
																"maximum": 1,
																"minimum": 0,
																"type": "number"
															},
															"position": {
																"default": "upperRight",
																"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter.",
																"example": "center",
																"type": "string"
															},
															"scale": {
																"default": 0.15,
																"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
																"example": 0.1,
																"maximum": 1,
																"minimum": 0,
																"type": "number"
															},
															"size": {
																"description": "The size of the image in bytes.",
																"example": 29472,
																"type": "number"
															},
															"uid": {
																"description": "The unique identifier for a watermark profile.",
																"example": "ea95132c15732412d22c1476fa83f27a",
																"maxLength": 32,
																"type": "string"
															},
															"width": {
																"description": "The width of the image in pixels.",
																"type": "integer"
															}
														},
														"type": "object"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								},
								{
									"properties": {
										"range": {
											"description": "The total number of remaining videos based on cursor position.",
											"example": 1000,
											"type": "integer"
										},
										"total": {
											"description": "The total number of videos that match the provided filters.",
											"example": 35586,
											"type": "integer"
										}
									}
								}
							]
						}
					}
				},
				"description": "List videos response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List videos response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List videos",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write",
			"Stream Read"
		]
	},
	"GET /accounts/{account_id}/stream/{identifier}": {
		"description": "Fetches details for a single video.",
		"operationId": "stream-videos-retrieve-video-details",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "A Cloudflare-generated unique identifier for a media item.",
					"example": "ea95132c15732412d22c1476fa83f27a",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allowedOrigins": {
													"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
													"example": [
														"example.com"
													],
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"created": {
													"description": "The date and time the media item was created.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"creator": {
													"description": "A user-defined identifier for the media creator.",
													"example": "creator-id_abcde12345",
													"maxLength": 64,
													"type": "string"
												},
												"duration": {
													"description": "The duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload and before the video is ready.",
													"type": "number"
												},
												"input": {
													"properties": {
														"height": {
															"description": "The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.",
															"type": "integer"
														},
														"width": {
															"description": "The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.",
															"type": "integer"
														}
													},
													"type": "object"
												},
												"liveInput": {
													"description": "The live input ID used to upload a video with Stream Live.",
													"example": "fc0a8dc887b16759bfd9ad922230a014",
													"maxLength": 32,
													"type": "string"
												},
												"maxDurationSeconds": {
													"description": "The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown.",
													"maximum": 21600,
													"minimum": 1,
													"type": "integer"
												},
												"meta": {
													"description": "A user modifiable key-value store used to reference other systems of record for managing videos.",
													"example": {
														"name": "video12345.mp4"
													},
													"type": "object"
												},
												"modified": {
													"description": "The date and time the media item was last modified.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"playback": {
													"properties": {
														"dash": {
															"description": "DASH Media Presentation Description for the video.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd",
															"type": "string"
														},
														"hls": {
															"description": "The HLS manifest for the video.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8",
															"type": "string"
														}
													},
													"type": "object"
												},
												"preview": {
													"description": "The video's preview page URI. This field is omitted until encoding is complete.",
													"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/watch",
													"format": "uri",
													"type": "string"
												},
												"readyToStream": {
													"description": "Indicates whether the video is playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
													"example": true,
													"type": "boolean"
												},
												"readyToStreamAt": {
													"description": "Indicates the time at which the video became playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"requireSignedURLs": {
													"default": false,
													"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
													"example": true,
													"type": "boolean"
												},
												"scheduledDeletion": {
													"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"size": {
													"description": "The size of the media item in bytes.",
													"example": 4190963,
													"type": "number"
												},
												"status": {
													"description": "Specifies a detailed status for a video. If the `state` is `inprogress` or `error`, the `step` field returns `encoding` or `manifest`. If the `state` is `inprogress`, `pctComplete` returns a number between 0 and 100 to indicate the approximate percent of completion. If the `state` is `error`, `errorReasonCode` and `errorReasonText` provide additional details.",
													"properties": {
														"errorReasonCode": {
															"description": "Specifies why the video failed to encode. This field is empty if the video is not in an `error` state. Preferred for programmatic use.",
															"example": "ERR_NON_VIDEO",
															"type": "string"
														},
														"errorReasonText": {
															"description": "Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `error` state.",
															"example": "The file was not recognized as a valid video file.",
															"type": "string"
														},
														"pctComplete": {
															"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
															"maximum": 100,
															"minimum": 0,
															"type": "string"
														},
														"state": {
															"description": "Specifies the processing status for all quality levels for a video.",
															"enum": [
																"pendingupload",
																"downloading",
																"queued",
																"inprogress",
																"ready",
																"error"
															],
															"example": "inprogress",
															"type": "string"
														}
													}
												},
												"thumbnail": {
													"description": "The media item's thumbnail URI. This field is omitted until encoding is complete.",
													"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg",
													"format": "uri",
													"type": "string"
												},
												"thumbnailTimestampPct": {
													"default": 0,
													"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
													"example": 0.529241,
													"maximum": 1,
													"minimum": 0,
													"type": "number"
												},
												"uid": {
													"description": "A Cloudflare-generated unique identifier for a media item.",
													"example": "ea95132c15732412d22c1476fa83f27a",
													"maxLength": 32,
													"type": "string"
												},
												"uploadExpiry": {
													"description": "The date and time when the video upload URL is no longer valid for direct user uploads.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"uploaded": {
													"description": "The date and time the media item was uploaded.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"watermark": {
													"properties": {
														"created": {
															"description": "The date and a time a watermark profile was created.",
															"example": "2014-01-02T02:20:00Z",
															"format": "date-time",
															"type": "string"
														},
														"downloadedFrom": {
															"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
															"example": "https://company.com/logo.png",
															"type": "string"
														},
														"height": {
															"description": "The height of the image in pixels.",
															"type": "integer"
														},
														"name": {
															"default": "",
															"description": "A short description of the watermark profile.",
															"example": "Marketing Videos",
															"type": "string"
														},
														"opacity": {
															"default": 1,
															"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
															"example": 0.75,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"padding": {
															"default": 0.05,
															"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"position": {
															"default": "upperRight",
															"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter.",
															"example": "center",
															"type": "string"
														},
														"scale": {
															"default": 0.15,
															"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"size": {
															"description": "The size of the image in bytes.",
															"example": 29472,
															"type": "number"
														},
														"uid": {
															"description": "The unique identifier for a watermark profile.",
															"example": "ea95132c15732412d22c1476fa83f27a",
															"maxLength": 32,
															"type": "string"
														},
														"width": {
															"description": "The width of the image in pixels.",
															"type": "integer"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Retrieve video details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Retrieve video details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Retrieve video details",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write",
			"Stream Read"
		]
	},
	"GET /accounts/{account_id}/stream/{identifier}/embed": {
		"description": "Fetches an HTML code snippet to embed a video in a web page delivered through Cloudflare. On success, returns an HTML fragment for use on web pages to display a video. On failure, returns a JSON response body.",
		"operationId": "stream-videos-retreieve-embed-code-html",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "A Cloudflare-generated unique identifier for a media item.",
					"example": "ea95132c15732412d22c1476fa83f27a",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"example": "<stream id=\"ea95132c15732412d22c1476fa83f27a\"></stream><script data-cfasync=\"false\" defer type=\"text/javascript\" src=\"https://embed.cloudflarestream.com/embed/we4g.fla9.latest.js\"></script>"
						}
					}
				},
				"description": "Retreieve embed Code HTML response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Retreieve embed Code HTML response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Retrieve embed Code HTML",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write",
			"Stream Read"
		]
	},
	"GET /accounts/{account_id}/stream/storage-usage": {
		"description": "Returns information about an account's storage use.",
		"operationId": "stream-videos-storage-usage",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "creator",
				"schema": {
					"description": "A user-defined identifier for the media creator.",
					"example": "creator-id_abcde12345",
					"maxLength": 64,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"creator": {
													"description": "A user-defined identifier for the media creator.",
													"example": "creator-id_abcde12345",
													"maxLength": 64,
													"type": "string"
												},
												"totalStorageMinutes": {
													"description": "The total minutes of video content stored in the account.",
													"type": "integer"
												},
												"totalStorageMinutesLimit": {
													"description": "The storage capacity alloted for the account.",
													"type": "integer"
												},
												"videoCount": {
													"description": "The total count of videos associated with the account.",
													"type": "integer"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Returns information about an account's storage use response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Returns information about an account's storage use response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Storage use",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write",
			"Stream Read"
		]
	},
	"POST /accounts/{account_id}/stream": {
		"description": "Initiates a video upload using the TUS protocol. On success, the server responds with a status code 201 (created) and includes a `location` header to indicate where the content should be uploaded. Refer to https://tus.io for protocol details.",
		"operationId": "stream-videos-initiate-video-uploads-using-tus",
		"parameters": [
			{
				"in": "header",
				"name": "Tus-Resumable",
				"required": true,
				"schema": {
					"description": "Specifies the TUS protocol version. This value must be included in every upload request.\nNotes: The only supported version of TUS protocol is 1.0.0.",
					"enum": [
						"1.0.0"
					],
					"example": "1.0.0",
					"type": "string"
				}
			},
			{
				"in": "header",
				"name": "Upload-Creator",
				"schema": {
					"description": "A user-defined identifier for the media creator.",
					"example": "creator-id_abcde12345",
					"maxLength": 64,
					"type": "string"
				}
			},
			{
				"in": "header",
				"name": "Upload-Length",
				"required": true,
				"schema": {
					"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
					"minimum": 0,
					"type": "integer"
				}
			},
			{
				"in": "header",
				"name": "Upload-Metadata",
				"schema": {
					"description": "Comma-separated key-value pairs following the TUS protocol specification. Values are Base-64 encoded.\nSupported keys: `name`, `requiresignedurls`, `allowedorigins`, `thumbnailtimestamppct`, `watermark`, `scheduleddeletion`, `maxdurationseconds`.",
					"example": "name aGVsbG8gd29ybGQ=, requiresignedurls, allowedorigins ZXhhbXBsZS5jb20sdGVzdC5jb20=",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "direct_user",
				"schema": {
					"default": false,
					"description": "Provisions a URL to let your end users upload videos directly to Cloudflare Stream without exposing your API token to clients.",
					"example": true,
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {}
				},
				"description": "Initiate video uploads using TUS response"
			},
			"4XX": {
				"content": {
					"application/json": {}
				},
				"description": "Initiate video uploads using TUS response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Initiate video uploads using TUS",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	},
	"POST /accounts/{account_id}/stream/{identifier}": {
		"description": "Edit details for a single video.",
		"operationId": "stream-videos-update-video-details",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "A Cloudflare-generated unique identifier for a media item.",
					"example": "ea95132c15732412d22c1476fa83f27a",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allowedOrigins": {
								"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
								"example": [
									"example.com"
								],
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"creator": {
								"description": "A user-defined identifier for the media creator.",
								"example": "creator-id_abcde12345",
								"maxLength": 64,
								"type": "string"
							},
							"maxDurationSeconds": {
								"description": "The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown.",
								"maximum": 21600,
								"minimum": 1,
								"type": "integer"
							},
							"meta": {
								"description": "A user modifiable key-value store used to reference other systems of record for managing videos.",
								"example": {
									"name": "video12345.mp4"
								},
								"type": "object"
							},
							"requireSignedURLs": {
								"default": false,
								"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
								"example": true,
								"type": "boolean"
							},
							"scheduledDeletion": {
								"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
								"example": "2014-01-02T02:20:00Z",
								"format": "date-time",
								"type": "string"
							},
							"thumbnailTimestampPct": {
								"default": 0,
								"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
								"example": 0.529241,
								"maximum": 1,
								"minimum": 0,
								"type": "number"
							},
							"uploadExpiry": {
								"description": "The date and time when the video upload URL is no longer valid for direct user uploads.",
								"example": "2014-01-02T02:20:00Z",
								"format": "date-time",
								"type": "string"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allowedOrigins": {
													"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
													"example": [
														"example.com"
													],
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"created": {
													"description": "The date and time the media item was created.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"creator": {
													"description": "A user-defined identifier for the media creator.",
													"example": "creator-id_abcde12345",
													"maxLength": 64,
													"type": "string"
												},
												"duration": {
													"description": "The duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload and before the video is ready.",
													"type": "number"
												},
												"input": {
													"properties": {
														"height": {
															"description": "The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.",
															"type": "integer"
														},
														"width": {
															"description": "The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.",
															"type": "integer"
														}
													},
													"type": "object"
												},
												"liveInput": {
													"description": "The live input ID used to upload a video with Stream Live.",
													"example": "fc0a8dc887b16759bfd9ad922230a014",
													"maxLength": 32,
													"type": "string"
												},
												"maxDurationSeconds": {
													"description": "The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown.",
													"maximum": 21600,
													"minimum": 1,
													"type": "integer"
												},
												"meta": {
													"description": "A user modifiable key-value store used to reference other systems of record for managing videos.",
													"example": {
														"name": "video12345.mp4"
													},
													"type": "object"
												},
												"modified": {
													"description": "The date and time the media item was last modified.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"playback": {
													"properties": {
														"dash": {
															"description": "DASH Media Presentation Description for the video.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd",
															"type": "string"
														},
														"hls": {
															"description": "The HLS manifest for the video.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8",
															"type": "string"
														}
													},
													"type": "object"
												},
												"preview": {
													"description": "The video's preview page URI. This field is omitted until encoding is complete.",
													"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/watch",
													"format": "uri",
													"type": "string"
												},
												"readyToStream": {
													"description": "Indicates whether the video is playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
													"example": true,
													"type": "boolean"
												},
												"readyToStreamAt": {
													"description": "Indicates the time at which the video became playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"requireSignedURLs": {
													"default": false,
													"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
													"example": true,
													"type": "boolean"
												},
												"scheduledDeletion": {
													"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"size": {
													"description": "The size of the media item in bytes.",
													"example": 4190963,
													"type": "number"
												},
												"status": {
													"description": "Specifies a detailed status for a video. If the `state` is `inprogress` or `error`, the `step` field returns `encoding` or `manifest`. If the `state` is `inprogress`, `pctComplete` returns a number between 0 and 100 to indicate the approximate percent of completion. If the `state` is `error`, `errorReasonCode` and `errorReasonText` provide additional details.",
													"properties": {
														"errorReasonCode": {
															"description": "Specifies why the video failed to encode. This field is empty if the video is not in an `error` state. Preferred for programmatic use.",
															"example": "ERR_NON_VIDEO",
															"type": "string"
														},
														"errorReasonText": {
															"description": "Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `error` state.",
															"example": "The file was not recognized as a valid video file.",
															"type": "string"
														},
														"pctComplete": {
															"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
															"maximum": 100,
															"minimum": 0,
															"type": "string"
														},
														"state": {
															"description": "Specifies the processing status for all quality levels for a video.",
															"enum": [
																"pendingupload",
																"downloading",
																"queued",
																"inprogress",
																"ready",
																"error"
															],
															"example": "inprogress",
															"type": "string"
														}
													}
												},
												"thumbnail": {
													"description": "The media item's thumbnail URI. This field is omitted until encoding is complete.",
													"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg",
													"format": "uri",
													"type": "string"
												},
												"thumbnailTimestampPct": {
													"default": 0,
													"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
													"example": 0.529241,
													"maximum": 1,
													"minimum": 0,
													"type": "number"
												},
												"uid": {
													"description": "A Cloudflare-generated unique identifier for a media item.",
													"example": "ea95132c15732412d22c1476fa83f27a",
													"maxLength": 32,
													"type": "string"
												},
												"uploadExpiry": {
													"description": "The date and time when the video upload URL is no longer valid for direct user uploads.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"uploaded": {
													"description": "The date and time the media item was uploaded.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"watermark": {
													"properties": {
														"created": {
															"description": "The date and a time a watermark profile was created.",
															"example": "2014-01-02T02:20:00Z",
															"format": "date-time",
															"type": "string"
														},
														"downloadedFrom": {
															"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
															"example": "https://company.com/logo.png",
															"type": "string"
														},
														"height": {
															"description": "The height of the image in pixels.",
															"type": "integer"
														},
														"name": {
															"default": "",
															"description": "A short description of the watermark profile.",
															"example": "Marketing Videos",
															"type": "string"
														},
														"opacity": {
															"default": 1,
															"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
															"example": 0.75,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"padding": {
															"default": 0.05,
															"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"position": {
															"default": "upperRight",
															"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter.",
															"example": "center",
															"type": "string"
														},
														"scale": {
															"default": 0.15,
															"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"size": {
															"description": "The size of the image in bytes.",
															"example": 29472,
															"type": "number"
														},
														"uid": {
															"description": "The unique identifier for a watermark profile.",
															"example": "ea95132c15732412d22c1476fa83f27a",
															"maxLength": 32,
															"type": "string"
														},
														"width": {
															"description": "The width of the image in pixels.",
															"type": "integer"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Edit video details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Edit video details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Edit video details",
		"tags": [
			"Stream Videos"
		]
	},
	"POST /accounts/{account_id}/stream/{identifier}/token": {
		"description": "Creates a signed URL token for a video. If a body is not provided in the request, a token is created with default values.",
		"operationId": "stream-videos-create-signed-url-tokens-for-videos",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "A Cloudflare-generated unique identifier for a media item.",
					"example": "ea95132c15732412d22c1476fa83f27a",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"accessRules": {
								"description": "The optional list of access rule constraints on the token. Access can be blocked or allowed based on an IP, IP range, or by country. Access rules are evaluated from first to last. If a rule matches, the associated action is applied and no further rules are evaluated.",
								"example": [
									{
										"action": "block",
										"country": [
											"US",
											"MX"
										],
										"type": "ip.geoip.country"
									},
									{
										"action": "allow",
										"ip": [
											"93.184.216.0/24",
											"2400:cb00::/32"
										],
										"type": "ip.src"
									},
									{
										"action": "block",
										"type": "any"
									}
								],
								"items": {
									"description": "Defines rules for fine-grained control over content than signed URL tokens alone. Access rules primarily make tokens conditionally valid based on user information. Access Rules are specified on token payloads as the `accessRules` property containing an array of Rule objects.",
									"properties": {
										"action": {
											"description": "The action to take when a request matches a rule. If the action is `block`, the signed token blocks views for viewers matching the rule.",
											"enum": [
												"allow",
												"block"
											],
											"example": "allow",
											"type": "string"
										},
										"country": {
											"description": "An array of 2-letter country codes in ISO 3166-1 Alpha-2 format used to match requests.",
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"ip": {
											"description": "An array of IPv4 or IPV6 addresses or CIDRs used to match requests.",
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"type": {
											"description": "Lists available rule types to match for requests. An `any` type matches all requests and can be used as a wildcard to apply default actions after other rules.",
											"enum": [
												"any",
												"ip.src",
												"ip.geoip.country"
											],
											"example": "ip.src",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"downloadable": {
								"default": false,
								"description": "The optional boolean value that enables using signed tokens to access MP4 download links for a video.",
								"type": "boolean"
							},
							"exp": {
								"description": "The optional unix epoch timestamp that specficies the time after a token is not accepted. The maximum time specification is 24 hours from issuing time. If this field is not set, the default is one hour after issuing.",
								"type": "integer"
							},
							"id": {
								"description": "The optional ID of a Stream signing key. If present, the `pem` field is also required.",
								"example": "ab0d4ef71g4425f8dcba9041231813000",
								"type": "string"
							},
							"nbf": {
								"description": "The optional unix epoch timestamp that specifies the time before a the token is not accepted. If this field is not set, the default is one hour before issuing.",
								"type": "integer"
							},
							"pem": {
								"description": "The optional base64 encoded private key in PEM format associated with a Stream signing key. If present, the `id` field is also required.",
								"example": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc284dnBvOFpEWXRkOUgzbWlPaW1qYXAzVXlVM0oyZ3kwTUYvN1R4blJuRnkwRHpDCkxqUk9naFZsQ0hPQmxsd3NVaE9GU0lyYnN4K05tUTdBeS90TFpXSGxuVGF3UWJ5WGZGOStJeDhVSnNlSHBGV1oKNVF5Z1JYd2liSjh1MVVsZ2xlcmZHMkpueldjVXpZTzEySktZN3doSkw1ajROMWgxZFJNUXQ5Q1pkZFlCQWRzOQpCdk02cjRFMDcxQkhQekhWeDMrUTI1VWtubGdUNXIwS3FiM1E1Y0dlTlBXY1JreW1ybkJEWWR0OXR4eFFMb1dPCllzNXdsMnVYWFVYL0VGcDMwajU0Nmp6czllWExLYlNDbjJjTDZFVE96Y2x3aG9DRGx2a2VQT05rUE9LMDVKNUMKTm1TdFdhMG9hV1VGRzM0MFl3cVVrWGt4OU9tNndXd1JldU1uU1FJREFRQUJBb0lCQUFJOHo1ck5kOEdtOGJBMgo1S3pxQjI1R2lOVENwbUNJeW53NXRJWHZTQmNHcEdydUcvdlN2WG9kVlFVSVY0TWdHQkVXUEFrVzdsNWVBcHI4CnA1ZFd5SkRXYTNkdklFSE9vSEpYU3dBYksxZzZEMTNVa2NkZ1EyRGpoNVhuWDhHZCtBY2c2SmRTQWgxOWtYSHEKMk54RUtBVDB6Ri83a1g2MkRkREFBcWxmQkpGSXJodVIvZUdEVWh4L2piTTRhQ2JCcFdiM0pnRE9OYm5tS1ZoMwpxS2ZwZmRZZENZU1lzWUxrNTlxRDF2VFNwUVFUQ0VadW9VKzNzRVNhdkJzaUs1bU0vTzY5ZkRMRXNURG1MeTVQCmhEK3BMQXI0SlhNNjFwRGVBS0l3cUVqWWJybXlDRHRXTUdJNnZzZ0E1eXQzUUJaME9vV2w5QUkwdWxoZ3p4dXQKZ2ZFNTRRRUNnWUVBN0F3a0lhVEEzYmQ4Nk9jSVZnNFlrWGk1cm5aNDdsM1k4V24zcjIzUmVISXhLdkllRUtSbgp5bUlFNDFtRVBBSmlGWFpLK1VPTXdkeS9EcnFJUithT1JiT2NiV01jWUg2QzgvbG1wdVJFaXE3SW1Ub3VWcnA4CnlnUkprMWprVDA4cTIvNmg4eTBEdjJqMitsaHFXNzRNOUt0cmwxcTRlWmZRUFREL01tR1NnTWtDZ1lFQXdhY04KaSttN1p6dnJtL3NuekF2VlZ5SEtwZHVUUjNERk1naC9maC9tZ0ZHZ1RwZWtUOVV5b3FleGNYQXdwMVlhL01iQQoyNTVJVDZRbXZZTm5yNXp6Wmxic2tMV0hsYllvbWhmWnVXTHhXR3hRaEFORWdaMFVVdUVTRGMvbWx2UXZHbEtSCkZoaGhBUWlVSmdDamhPaHk1SlBiNGFldGRKd0UxK09lVWRFaE1vRUNnWUVBNG8yZ25CM1o4ck5xa3NzemlBek4KYmNuMlJVbDJOaW9pejBwS3JMaDFaT29NNE5BekpQdjJsaHRQMzdtS0htS1hLMHczRjFqTEgwSTBxZmxFVmVZbQpSU1huakdHazJjUnpBYUVzOGgrQzNheDE0Z01pZUtGU3BqNUpNOEFNbVVZOXQ1cUVhN2FYc3o0V1ZoOUlMYmVTCkRiNzlhKzVwd21LQVBrcnBsTHhyZFdrQ2dZQlNNSHVBWVdBbmJYZ1BDS2FZWklGVWJNUWNacmY0ZnpWQ2lmYksKYWZHampvRlNPZXdEOGdGK3BWdWJRTGwxbkFieU44ek1xVDRaaHhybUhpcFlqMjJDaHV2NmN3RXJtbGRiSnpwQwpBMnRaVXdkTk1ESFlMUG5lUHlZeGRJWnlsUXFVeW14SGkydElUQUxNcWtLOGV3ZWdXZHpkeGhQSlJScU5JazhrCmZIVHhnUUtCZ1FEUFc2UXIxY3F3QjNUdnVWdWR4WGRqUTdIcDFodXhrNEVWaEFJZllKNFhSTW1NUE5YS28wdHUKdUt6LzE0QW14R0dvSWJxYVc1bDMzeFNteUxhem84clNUN0tSTjVKME9JSHcrZkR5SFgxdHpVSjZCTldDcEFTcwpjbWdNK0htSzVON0w2bkNaZFJQY2IwU1hGaVRQUGhCUG1PVWFDUnpER0ZMK2JYM1VwajJKbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
								"type": "string",
								"x-sensitive": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"token": {
													"description": "The signed token used with the signed URLs feature.",
													"example": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIn0.eyJzdWIiOiJlYTk1MTMyYzE1NzMyNDEyZDIyYzE0NzZmYTgzZjI3YSIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIiwiZXhwIjoiMTUzNzQ2MDM2NSIsIm5iZiI6IjE1Mzc0NTMxNjUifQ.OZhqOARADn1iubK6GKcn25hN3nU-hCFF5q9w2C4yup0C4diG7aMIowiRpP-eDod8dbAJubsiFuTKrqPcmyCKWYsiv0TQueukqbQlF7HCO1TV-oF6El5-7ldJ46eD-ZQ0XgcIYEKrQOYFF8iDQbqPm3REWd6BnjKZdeVrLzuRaiSnZ9qqFpGu5dfxIY9-nZKDubJHqCr3Imtb211VIG_b9MdtO92JjvkDS-rxT_pkEfTZSafl1OU-98A7KBGtPSJHz2dHORIrUiTA6on4eIXTj9aFhGiir4rSn-rn0OjPRTtJMWIDMoQyE_fwrSYzB7MPuzL2t82BWaEbHZTfixBm5A",
													"type": "string",
													"x-sensitive": true
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Create signed URL tokens for videos response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create signed URL tokens for videos response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create signed URL tokens for videos",
		"tags": [
			"Stream Videos"
		]
	},
	"POST /accounts/{account_id}/stream/copy": {
		"description": "Uploads a video to Stream from a provided URL.",
		"operationId": "stream-videos-upload-videos-from-a-url",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "header",
				"name": "Upload-Creator",
				"schema": {
					"description": "A user-defined identifier for the media creator.",
					"example": "creator-id_abcde12345",
					"maxLength": 64,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allowedOrigins": {
								"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
								"example": [
									"example.com"
								],
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"creator": {
								"description": "A user-defined identifier for the media creator.",
								"example": "creator-id_abcde12345",
								"maxLength": 64,
								"type": "string"
							},
							"meta": {
								"description": "A user modifiable key-value store used to reference other systems of record for managing videos.",
								"example": {
									"name": "video12345.mp4"
								},
								"type": "object"
							},
							"requireSignedURLs": {
								"default": false,
								"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
								"example": true,
								"type": "boolean"
							},
							"scheduledDeletion": {
								"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
								"example": "2014-01-02T02:20:00Z",
								"format": "date-time",
								"type": "string"
							},
							"thumbnailTimestampPct": {
								"default": 0,
								"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
								"example": 0.529241,
								"maximum": 1,
								"minimum": 0,
								"type": "number"
							},
							"url": {
								"description": "A video's URL. The server must be publicly routable and support `HTTP HEAD` requests and `HTTP GET` range requests. The server should respond to `HTTP HEAD` requests with a `content-range` header that includes the size of the file.",
								"example": "https://example.com/myvideo.mp4",
								"format": "uri",
								"type": "string"
							},
							"watermark": {
								"properties": {
									"uid": {
										"description": "The unique identifier for the watermark profile.",
										"example": "ea95132c15732412d22c1476fa83f27a",
										"maxLength": 32,
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"required": [
							"url"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allowedOrigins": {
													"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
													"example": [
														"example.com"
													],
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"created": {
													"description": "The date and time the media item was created.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"creator": {
													"description": "A user-defined identifier for the media creator.",
													"example": "creator-id_abcde12345",
													"maxLength": 64,
													"type": "string"
												},
												"duration": {
													"description": "The duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload and before the video is ready.",
													"type": "number"
												},
												"input": {
													"properties": {
														"height": {
															"description": "The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.",
															"type": "integer"
														},
														"width": {
															"description": "The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.",
															"type": "integer"
														}
													},
													"type": "object"
												},
												"liveInput": {
													"description": "The live input ID used to upload a video with Stream Live.",
													"example": "fc0a8dc887b16759bfd9ad922230a014",
													"maxLength": 32,
													"type": "string"
												},
												"maxDurationSeconds": {
													"description": "The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown.",
													"maximum": 21600,
													"minimum": 1,
													"type": "integer"
												},
												"meta": {
													"description": "A user modifiable key-value store used to reference other systems of record for managing videos.",
													"example": {
														"name": "video12345.mp4"
													},
													"type": "object"
												},
												"modified": {
													"description": "The date and time the media item was last modified.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"playback": {
													"properties": {
														"dash": {
															"description": "DASH Media Presentation Description for the video.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd",
															"type": "string"
														},
														"hls": {
															"description": "The HLS manifest for the video.",
															"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8",
															"type": "string"
														}
													},
													"type": "object"
												},
												"preview": {
													"description": "The video's preview page URI. This field is omitted until encoding is complete.",
													"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/watch",
													"format": "uri",
													"type": "string"
												},
												"readyToStream": {
													"description": "Indicates whether the video is playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
													"example": true,
													"type": "boolean"
												},
												"readyToStreamAt": {
													"description": "Indicates the time at which the video became playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"requireSignedURLs": {
													"default": false,
													"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
													"example": true,
													"type": "boolean"
												},
												"scheduledDeletion": {
													"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"size": {
													"description": "The size of the media item in bytes.",
													"example": 4190963,
													"type": "number"
												},
												"status": {
													"description": "Specifies a detailed status for a video. If the `state` is `inprogress` or `error`, the `step` field returns `encoding` or `manifest`. If the `state` is `inprogress`, `pctComplete` returns a number between 0 and 100 to indicate the approximate percent of completion. If the `state` is `error`, `errorReasonCode` and `errorReasonText` provide additional details.",
													"properties": {
														"errorReasonCode": {
															"description": "Specifies why the video failed to encode. This field is empty if the video is not in an `error` state. Preferred for programmatic use.",
															"example": "ERR_NON_VIDEO",
															"type": "string"
														},
														"errorReasonText": {
															"description": "Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `error` state.",
															"example": "The file was not recognized as a valid video file.",
															"type": "string"
														},
														"pctComplete": {
															"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
															"maximum": 100,
															"minimum": 0,
															"type": "string"
														},
														"state": {
															"description": "Specifies the processing status for all quality levels for a video.",
															"enum": [
																"pendingupload",
																"downloading",
																"queued",
																"inprogress",
																"ready",
																"error"
															],
															"example": "inprogress",
															"type": "string"
														}
													}
												},
												"thumbnail": {
													"description": "The media item's thumbnail URI. This field is omitted until encoding is complete.",
													"example": "https://customer-m033z5x00ks6nunl.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg",
													"format": "uri",
													"type": "string"
												},
												"thumbnailTimestampPct": {
													"default": 0,
													"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
													"example": 0.529241,
													"maximum": 1,
													"minimum": 0,
													"type": "number"
												},
												"uid": {
													"description": "A Cloudflare-generated unique identifier for a media item.",
													"example": "ea95132c15732412d22c1476fa83f27a",
													"maxLength": 32,
													"type": "string"
												},
												"uploadExpiry": {
													"description": "The date and time when the video upload URL is no longer valid for direct user uploads.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"uploaded": {
													"description": "The date and time the media item was uploaded.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"watermark": {
													"properties": {
														"created": {
															"description": "The date and a time a watermark profile was created.",
															"example": "2014-01-02T02:20:00Z",
															"format": "date-time",
															"type": "string"
														},
														"downloadedFrom": {
															"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
															"example": "https://company.com/logo.png",
															"type": "string"
														},
														"height": {
															"description": "The height of the image in pixels.",
															"type": "integer"
														},
														"name": {
															"default": "",
															"description": "A short description of the watermark profile.",
															"example": "Marketing Videos",
															"type": "string"
														},
														"opacity": {
															"default": 1,
															"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
															"example": 0.75,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"padding": {
															"default": 0.05,
															"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"position": {
															"default": "upperRight",
															"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter.",
															"example": "center",
															"type": "string"
														},
														"scale": {
															"default": 0.15,
															"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"size": {
															"description": "The size of the image in bytes.",
															"example": 29472,
															"type": "number"
														},
														"uid": {
															"description": "The unique identifier for a watermark profile.",
															"example": "ea95132c15732412d22c1476fa83f27a",
															"maxLength": 32,
															"type": "string"
														},
														"width": {
															"description": "The width of the image in pixels.",
															"type": "integer"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Upload videos from a URL response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Upload videos from a URL response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Upload videos from a URL",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	},
	"POST /accounts/{account_id}/stream/direct_upload": {
		"description": "Creates a direct upload that allows video uploads without an API key.",
		"operationId": "stream-videos-upload-videos-via-direct-upload-ur-ls",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "header",
				"name": "Upload-Creator",
				"schema": {
					"description": "A user-defined identifier for the media creator.",
					"example": "creator-id_abcde12345",
					"maxLength": 64,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allowedOrigins": {
								"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
								"example": [
									"example.com"
								],
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"creator": {
								"description": "A user-defined identifier for the media creator.",
								"example": "creator-id_abcde12345",
								"maxLength": 64,
								"type": "string"
							},
							"expiry": {
								"default": "Now + 30 minutes",
								"description": "The date and time after upload when videos will not be accepted.",
								"example": "2021-01-02T02:20:00Z",
								"format": "date-time",
								"type": "string"
							},
							"maxDurationSeconds": {
								"description": "The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown.",
								"maximum": 21600,
								"minimum": 1,
								"type": "integer"
							},
							"meta": {
								"description": "A user modifiable key-value store used to reference other systems of record for managing videos.",
								"example": {
									"name": "video12345.mp4"
								},
								"type": "object"
							},
							"requireSignedURLs": {
								"default": false,
								"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
								"example": true,
								"type": "boolean"
							},
							"scheduledDeletion": {
								"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
								"example": "2014-01-02T02:20:00Z",
								"format": "date-time",
								"type": "string"
							},
							"thumbnailTimestampPct": {
								"default": 0,
								"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
								"example": 0.529241,
								"maximum": 1,
								"minimum": 0,
								"type": "number"
							},
							"watermark": {
								"properties": {
									"uid": {
										"description": "The unique identifier for the watermark profile.",
										"example": "ea95132c15732412d22c1476fa83f27a",
										"maxLength": 32,
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"required": [
							"maxDurationSeconds"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"scheduledDeletion": {
													"description": "Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a `null` value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.",
													"example": "2014-01-02T02:20:00Z",
													"format": "date-time",
													"type": "string"
												},
												"uid": {
													"description": "A Cloudflare-generated unique identifier for a media item.",
													"example": "ea95132c15732412d22c1476fa83f27a",
													"maxLength": 32,
													"type": "string"
												},
												"uploadURL": {
													"description": "The URL an unauthenticated upload can use for a single `HTTP POST multipart/form-data` request.",
													"example": "www.example.com/samplepath",
													"type": "string"
												},
												"watermark": {
													"properties": {
														"created": {
															"description": "The date and a time a watermark profile was created.",
															"example": "2014-01-02T02:20:00Z",
															"format": "date-time",
															"type": "string"
														},
														"downloadedFrom": {
															"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
															"example": "https://company.com/logo.png",
															"type": "string"
														},
														"height": {
															"description": "The height of the image in pixels.",
															"type": "integer"
														},
														"name": {
															"default": "",
															"description": "A short description of the watermark profile.",
															"example": "Marketing Videos",
															"type": "string"
														},
														"opacity": {
															"default": 1,
															"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
															"example": 0.75,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"padding": {
															"default": 0.05,
															"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"position": {
															"default": "upperRight",
															"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter.",
															"example": "center",
															"type": "string"
														},
														"scale": {
															"default": 0.15,
															"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
															"example": 0.1,
															"maximum": 1,
															"minimum": 0,
															"type": "number"
														},
														"size": {
															"description": "The size of the image in bytes.",
															"example": 29472,
															"type": "number"
														},
														"uid": {
															"description": "The unique identifier for a watermark profile.",
															"example": "ea95132c15732412d22c1476fa83f27a",
															"maxLength": 32,
															"type": "string"
														},
														"width": {
															"description": "The width of the image in pixels.",
															"type": "integer"
														}
													},
													"type": "object"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Upload videos via direct upload URLs response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Upload videos via direct upload URLs response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Upload videos via direct upload URLs",
		"tags": [
			"Stream Videos"
		],
		"x-api-token-group": [
			"Stream Write"
		]
	}
}