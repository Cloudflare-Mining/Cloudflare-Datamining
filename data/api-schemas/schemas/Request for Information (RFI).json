{
	"DELETE /accounts/{account_id}/cloudforce-one/requests/{request_id}": {
		"operationId": "cloudforce-one-request-delete",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										true
									],
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete request response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete request response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a Request",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"DELETE /accounts/{account_id}/cloudforce-one/requests/{request_id}/asset/{asset_id}": {
		"operationId": "cloudforce-one-request-asset-delete",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "asset_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										true
									],
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete request asset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete request asset response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a Request Asset",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"DELETE /accounts/{account_id}/cloudforce-one/requests/{request_id}/message/{message_id}": {
		"operationId": "cloudforce-one-request-message-delete",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "message_id",
				"required": true,
				"schema": {
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										true
									],
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete request message response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete request message response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a Request Message",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"GET /accounts/{account_id}/cloudforce-one/requests/{request_id}": {
		"operationId": "cloudforce-one-request-get",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"completed": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"content": {
													"description": "Request content.",
													"example": "What regions were most effected by the recent DoS?",
													"type": "string"
												},
												"created": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "UUID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string"
												},
												"message_tokens": {
													"description": "Tokens for the request messages.",
													"example": 1,
													"type": "integer",
													"x-auditable": true
												},
												"priority": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"readable_id": {
													"description": "Readable Request ID.",
													"example": "RFI-2022-000001",
													"title": "Request Readable ID",
													"type": "string",
													"x-auditable": true
												},
												"request": {
													"description": "Requested information from request.",
													"example": "Victomology",
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Request Status.",
													"enum": [
														"open",
														"accepted",
														"reported",
														"approved",
														"completed",
														"declined"
													],
													"title": "Request Status",
													"type": "string",
													"x-auditable": true
												},
												"summary": {
													"description": "Brief description of the request.",
													"example": "DoS attack",
													"type": "string",
													"x-auditable": true
												},
												"tlp": {
													"description": "The CISA defined Traffic Light Protocol (TLP).",
													"enum": [
														"clear",
														"amber",
														"amber-strict",
														"green",
														"red"
													],
													"title": "TLP",
													"type": "string",
													"x-auditable": true
												},
												"tokens": {
													"description": "Tokens for the request.",
													"example": 16,
													"type": "integer",
													"x-auditable": true
												},
												"updated": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"created",
												"updated",
												"content",
												"priority",
												"request",
												"summary",
												"tlp"
											],
											"title": "Request Item",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a Request",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write",
			"Cloudforce One Read"
		]
	},
	"GET /accounts/{account_id}/cloudforce-one/requests/{request_id}/asset/{asset_id}": {
		"operationId": "cloudforce-one-request-asset-get",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "asset_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created": {
														"allOf": [
															{
																"example": "2022-04-01T05:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Defines the asset creation time.",
														"example": "2022-01-01T00:00:00Z"
													},
													"description": {
														"description": "Asset description.",
														"example": "example description",
														"type": "string",
														"x-auditable": true
													},
													"file_type": {
														"description": "Asset file type.",
														"example": "docx",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Asset ID.",
														"type": "integer",
														"x-auditable": true
													},
													"name": {
														"description": "Asset name.",
														"example": "example.docx",
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"id",
													"name"
												],
												"title": "Request Asset Item",
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request asset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request asset response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a Request Asset",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write",
			"Cloudforce One Read"
		]
	},
	"GET /accounts/{account_id}/cloudforce-one/requests/constants": {
		"operationId": "cloudforce-one-request-constants",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"priority": {
													"example": [
														"routine",
														"high",
														"urgent"
													],
													"items": {
														"enum": [
															"routine",
															"high",
															"urgent"
														],
														"title": "Request Priority",
														"type": "string",
														"x-auditable": true
													},
													"type": "array"
												},
												"status": {
													"example": [
														"open",
														"accepted",
														"reported",
														"approved",
														"completed",
														"declined"
													],
													"items": {
														"description": "Request Status.",
														"enum": [
															"open",
															"accepted",
															"reported",
															"approved",
															"completed",
															"declined"
														],
														"title": "Request Status",
														"type": "string",
														"x-auditable": true
													},
													"type": "array"
												},
												"tlp": {
													"example": [
														"clear",
														"green",
														"amber",
														"amber-strict",
														"red"
													],
													"items": {
														"description": "The CISA defined Traffic Light Protocol (TLP).",
														"enum": [
															"clear",
															"amber",
															"amber-strict",
															"green",
															"red"
														],
														"title": "TLP",
														"type": "string",
														"x-auditable": true
													},
													"type": "array"
												}
											},
											"title": "Request Constants",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request constants response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request constants response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Request Priority, Status, and TLP constants",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write",
			"Cloudforce One Read"
		]
	},
	"GET /accounts/{account_id}/cloudforce-one/requests/quota": {
		"operationId": "cloudforce-one-request-quota",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"anniversary_date": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Anniversary date is when annual quota limit is refreshed.",
													"example": "2022-04-01T00:00:00Z"
												},
												"quarter_anniversary_date": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Quarter anniversary date is when quota limit is refreshed each quarter.",
													"example": "2022-04-01T00:00:00Z"
												},
												"quota": {
													"description": "Tokens for the quarter.",
													"example": 120,
													"type": "integer",
													"x-auditable": true
												},
												"remaining": {
													"description": "Tokens remaining for the quarter.",
													"example": 64,
													"type": "integer",
													"x-auditable": true
												}
											},
											"title": "Quota",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request quota response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request quota response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Request Quota",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write",
			"Cloudforce One Read"
		]
	},
	"GET /accounts/{account_id}/cloudforce-one/requests/types": {
		"operationId": "cloudforce-one-request-types",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": [
												"Indicators of Compromise",
												"Victomology"
											],
											"items": {
												"description": "Request Types.",
												"type": "string",
												"x-auditable": true
											},
											"title": "Request Types",
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request types response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get request types response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Request Types",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write",
			"Cloudforce One Read"
		]
	},
	"POST /accounts/{account_id}/cloudforce-one/requests": {
		"operationId": "cloudforce-one-request-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"completed_after": {
								"allOf": [
									{
										"example": "2022-04-01T05:20:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									}
								],
								"description": "Retrieve requests completed after this time.",
								"example": "2022-01-01T00:00:00Z"
							},
							"completed_before": {
								"allOf": [
									{
										"example": "2022-04-01T05:20:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									}
								],
								"description": "Retrieve requests completed before this time.",
								"example": "2024-01-01T00:00:00Z"
							},
							"created_after": {
								"allOf": [
									{
										"example": "2022-04-01T05:20:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									}
								],
								"description": "Retrieve requests created after this time.",
								"example": "2022-01-01T00:00:00Z"
							},
							"created_before": {
								"allOf": [
									{
										"example": "2022-04-01T05:20:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									}
								],
								"description": "Retrieve requests created before this time.",
								"example": "2024-01-01T00:00:00Z"
							},
							"page": {
								"description": "Page number of results.",
								"type": "integer"
							},
							"per_page": {
								"description": "Number of results per page.",
								"example": 10,
								"type": "integer"
							},
							"request_type": {
								"description": "Requested information from request.",
								"example": "Victomology",
								"type": "string",
								"x-auditable": true
							},
							"sort_by": {
								"description": "Field to sort results by.",
								"example": "created",
								"type": "string"
							},
							"sort_order": {
								"description": "Sort order (asc or desc).",
								"enum": [
									"asc",
									"desc"
								],
								"type": "string"
							},
							"status": {
								"description": "Request Status.",
								"enum": [
									"open",
									"accepted",
									"reported",
									"approved",
									"completed",
									"declined"
								],
								"title": "Request Status",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"page",
							"per_page"
						],
						"title": "Request List Parameters",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"completed": {
														"allOf": [
															{
																"example": "2022-04-01T05:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Request completion time.",
														"example": "2024-01-01T00:00:00Z"
													},
													"created": {
														"allOf": [
															{
																"example": "2022-04-01T05:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Request creation time.",
														"example": "2022-04-01T00:00:00Z"
													},
													"id": {
														"description": "UUID.",
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string"
													},
													"message_tokens": {
														"description": "Tokens for the request messages.",
														"example": 16,
														"type": "integer",
														"x-auditable": true
													},
													"priority": {
														"enum": [
															"routine",
															"high",
															"urgent"
														],
														"title": "Request Priority",
														"type": "string",
														"x-auditable": true
													},
													"readable_id": {
														"description": "Readable Request ID.",
														"example": "RFI-2022-000001",
														"title": "Request Readable ID",
														"type": "string",
														"x-auditable": true
													},
													"request": {
														"description": "Requested information from request.",
														"example": "Victomology",
														"type": "string",
														"x-auditable": true
													},
													"status": {
														"description": "Request Status.",
														"enum": [
															"open",
															"accepted",
															"reported",
															"approved",
															"completed",
															"declined"
														],
														"title": "Request Status",
														"type": "string",
														"x-auditable": true
													},
													"summary": {
														"description": "Brief description of the request.",
														"example": "DoS attack",
														"type": "string",
														"x-auditable": true
													},
													"tlp": {
														"description": "The CISA defined Traffic Light Protocol (TLP).",
														"enum": [
															"clear",
															"amber",
															"amber-strict",
															"green",
															"red"
														],
														"title": "TLP",
														"type": "string",
														"x-auditable": true
													},
													"tokens": {
														"description": "Tokens for the request.",
														"type": "integer",
														"x-auditable": true
													},
													"updated": {
														"allOf": [
															{
																"example": "2022-04-01T05:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Request last updated time.",
														"example": "2022-04-01T00:00:00Z"
													}
												},
												"required": [
													"id",
													"created",
													"updated",
													"priority",
													"request",
													"summary",
													"tlp"
												],
												"title": "Request List Item",
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List requests response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Requests",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"POST /accounts/{account_id}/cloudforce-one/requests/{request_id}/asset": {
		"operationId": "cloudforce-one-request-asset-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"page": {
								"description": "Page number of results.",
								"type": "integer"
							},
							"per_page": {
								"description": "Number of results per page.",
								"example": 10,
								"type": "integer"
							}
						},
						"required": [
							"page",
							"per_page"
						],
						"title": "Request Asset List Parameters",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created": {
														"allOf": [
															{
																"example": "2022-04-01T05:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Defines the asset creation time.",
														"example": "2022-01-01T00:00:00Z"
													},
													"description": {
														"description": "Asset description.",
														"example": "example description",
														"type": "string",
														"x-auditable": true
													},
													"file_type": {
														"description": "Asset file type.",
														"example": "docx",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Asset ID.",
														"type": "integer",
														"x-auditable": true
													},
													"name": {
														"description": "Asset name.",
														"example": "example.docx",
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"id",
													"name"
												],
												"title": "Request Asset Item",
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List request assets response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List request assets response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Request Assets",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"POST /accounts/{account_id}/cloudforce-one/requests/{request_id}/asset/new": {
		"operationId": "cloudforce-one-request-asset-new",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"multipart/form-data": {
					"schema": {
						"properties": {
							"source": {
								"description": "Asset file to upload.",
								"example": "@/Users/me/example.docx",
								"type": "string"
							}
						},
						"title": "Request Asset Editable Attributes",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Defines the asset creation time.",
													"example": "2022-01-01T00:00:00Z"
												},
												"description": {
													"description": "Asset description.",
													"example": "example description",
													"type": "string",
													"x-auditable": true
												},
												"file_type": {
													"description": "Asset file type.",
													"example": "docx",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Asset ID.",
													"type": "integer",
													"x-auditable": true
												},
												"name": {
													"description": "Asset name.",
													"example": "example.docx",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name"
											],
											"title": "Request Asset Item",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create request asset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create request asset response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a New Request Asset",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"POST /accounts/{account_id}/cloudforce-one/requests/{request_id}/message": {
		"operationId": "cloudforce-one-request-message-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"after": {
								"allOf": [
									{
										"example": "2022-04-01T05:20:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									}
								],
								"description": "Retrieve mes  ges created after this time.",
								"example": "2022-01-01T00:00:Z"
							},
							"before": {
								"allOf": [
									{
										"example": "2022-04-01T05:20:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									}
								],
								"description": "Retrieve messages created before this time.",
								"example": "2024-01-01T00:00:00Z"
							},
							"page": {
								"description": "Page number of results.",
								"type": "integer"
							},
							"per_page": {
								"description": "Number of results per page.",
								"example": 10,
								"type": "integer"
							},
							"sort_by": {
								"description": "Field to sort results by.",
								"example": "created",
								"type": "string"
							},
							"sort_order": {
								"description": "Sort order (asc or desc).",
								"enum": [
									"asc",
									"desc"
								],
								"type": "string"
							}
						},
						"required": [
							"page",
							"per_page"
						],
						"title": "Request Message List Parameters",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"author": {
														"description": "Author of message.",
														"example": "user@domain.com",
														"type": "string",
														"x-auditable": true
													},
													"content": {
														"description": "Content of message.",
														"example": "Can you elaborate on the type of DoS that occurred?",
														"type": "string",
														"x-auditable": true
													},
													"created": {
														"allOf": [
															{
																"example": "2022-04-01T05:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Defines the message creation time.",
														"example": "2022-01-01T00:00:00Z"
													},
													"id": {
														"description": "Message ID.",
														"type": "integer",
														"x-auditable": true
													},
													"is_follow_on_request": {
														"description": "Whether the message is a follow-on request.",
														"type": "boolean",
														"x-auditable": true
													},
													"updated": {
														"allOf": [
															{
																"example": "2022-04-01T05:20:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Defines the message last updated time.",
														"example": "2022-01-01T00:00:00Z"
													}
												},
												"required": [
													"id",
													"updated",
													"content",
													"author",
													"is_follow_on_request"
												],
												"title": "Request Message Item",
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List request messages response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List request messages response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Request Messages",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"POST /accounts/{account_id}/cloudforce-one/requests/{request_id}/message/new": {
		"operationId": "cloudforce-one-request-message-new",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"content": {
								"description": "Content of message.",
								"example": "Can you elaborate on the type of DoS that occurred?",
								"type": "string",
								"x-auditable": true
							}
						},
						"title": "Request Message Editable Attributes",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"author": {
													"description": "Author of message.",
													"example": "user@domain.com",
													"type": "string",
													"x-auditable": true
												},
												"content": {
													"description": "Content of message.",
													"example": "Can you elaborate on the type of DoS that occurred?",
													"type": "string",
													"x-auditable": true
												},
												"created": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Defines the message creation time.",
													"example": "2022-01-01T00:00:00Z"
												},
												"id": {
													"description": "Message ID.",
													"type": "integer",
													"x-auditable": true
												},
												"is_follow_on_request": {
													"description": "Whether the message is a follow-on request.",
													"type": "boolean",
													"x-auditable": true
												},
												"updated": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Defines the message last updated time.",
													"example": "2022-01-01T00:00:00Z"
												}
											},
											"required": [
												"id",
												"updated",
												"content",
												"author",
												"is_follow_on_request"
											],
											"title": "Request Message Item",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create request message response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create request message response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a New Request Message",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"POST /accounts/{account_id}/cloudforce-one/requests/new": {
		"description": "Creating a request adds the request into the Cloudforce One queue for analysis. In addition to the content, a short title, type, priority, and releasability should be provided. If one is not provided, a default will be assigned.",
		"operationId": "cloudforce-one-request-new",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"content": {
								"description": "Request content.",
								"example": "What regions were most effected by the recent DoS?",
								"type": "string"
							},
							"priority": {
								"description": "Priority for analyzing the request.",
								"example": "routine",
								"type": "string",
								"x-auditable": true
							},
							"request_type": {
								"description": "Requested information from request.",
								"example": "Victomology",
								"type": "string",
								"x-auditable": true
							},
							"summary": {
								"description": "Brief description of the request.",
								"example": "DoS attack",
								"type": "string",
								"x-auditable": true
							},
							"tlp": {
								"description": "The CISA defined Traffic Light Protocol (TLP).",
								"enum": [
									"clear",
									"amber",
									"amber-strict",
									"green",
									"red"
								],
								"title": "TLP",
								"type": "string",
								"x-auditable": true
							}
						},
						"title": "Request Editable Parameters",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"completed": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"content": {
													"description": "Request content.",
													"example": "What regions were most effected by the recent DoS?",
													"type": "string"
												},
												"created": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "UUID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string"
												},
												"message_tokens": {
													"description": "Tokens for the request messages.",
													"example": 1,
													"type": "integer",
													"x-auditable": true
												},
												"priority": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"readable_id": {
													"description": "Readable Request ID.",
													"example": "RFI-2022-000001",
													"title": "Request Readable ID",
													"type": "string",
													"x-auditable": true
												},
												"request": {
													"description": "Requested information from request.",
													"example": "Victomology",
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Request Status.",
													"enum": [
														"open",
														"accepted",
														"reported",
														"approved",
														"completed",
														"declined"
													],
													"title": "Request Status",
													"type": "string",
													"x-auditable": true
												},
												"summary": {
													"description": "Brief description of the request.",
													"example": "DoS attack",
													"type": "string",
													"x-auditable": true
												},
												"tlp": {
													"description": "The CISA defined Traffic Light Protocol (TLP).",
													"enum": [
														"clear",
														"amber",
														"amber-strict",
														"green",
														"red"
													],
													"title": "TLP",
													"type": "string",
													"x-auditable": true
												},
												"tokens": {
													"description": "Tokens for the request.",
													"example": 16,
													"type": "integer",
													"x-auditable": true
												},
												"updated": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"created",
												"updated",
												"content",
												"priority",
												"request",
												"summary",
												"tlp"
											],
											"title": "Request Item",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create request response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a New Request.",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"PUT /accounts/{account_id}/cloudforce-one/requests/{request_id}": {
		"description": "Updating a request alters the request in the Cloudforce One queue. This API may be used to update any attributes of the request after the initial submission. Only fields that you choose to update need to be add to the request body.",
		"operationId": "cloudforce-one-request-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"content": {
								"description": "Request content.",
								"example": "What regions were most effected by the recent DoS?",
								"type": "string"
							},
							"priority": {
								"description": "Priority for analyzing the request.",
								"example": "routine",
								"type": "string",
								"x-auditable": true
							},
							"request_type": {
								"description": "Requested information from request.",
								"example": "Victomology",
								"type": "string",
								"x-auditable": true
							},
							"summary": {
								"description": "Brief description of the request.",
								"example": "DoS attack",
								"type": "string",
								"x-auditable": true
							},
							"tlp": {
								"description": "The CISA defined Traffic Light Protocol (TLP).",
								"enum": [
									"clear",
									"amber",
									"amber-strict",
									"green",
									"red"
								],
								"title": "TLP",
								"type": "string",
								"x-auditable": true
							}
						},
						"title": "Request Editable Parameters",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"completed": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"content": {
													"description": "Request content.",
													"example": "What regions were most effected by the recent DoS?",
													"type": "string"
												},
												"created": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "UUID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string"
												},
												"message_tokens": {
													"description": "Tokens for the request messages.",
													"example": 1,
													"type": "integer",
													"x-auditable": true
												},
												"priority": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"readable_id": {
													"description": "Readable Request ID.",
													"example": "RFI-2022-000001",
													"title": "Request Readable ID",
													"type": "string",
													"x-auditable": true
												},
												"request": {
													"description": "Requested information from request.",
													"example": "Victomology",
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Request Status.",
													"enum": [
														"open",
														"accepted",
														"reported",
														"approved",
														"completed",
														"declined"
													],
													"title": "Request Status",
													"type": "string",
													"x-auditable": true
												},
												"summary": {
													"description": "Brief description of the request.",
													"example": "DoS attack",
													"type": "string",
													"x-auditable": true
												},
												"tlp": {
													"description": "The CISA defined Traffic Light Protocol (TLP).",
													"enum": [
														"clear",
														"amber",
														"amber-strict",
														"green",
														"red"
													],
													"title": "TLP",
													"type": "string",
													"x-auditable": true
												},
												"tokens": {
													"description": "Tokens for the request.",
													"example": 16,
													"type": "integer",
													"x-auditable": true
												},
												"updated": {
													"example": "2022-04-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"created",
												"updated",
												"content",
												"priority",
												"request",
												"summary",
												"tlp"
											],
											"title": "Request Item",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update request response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update request response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a Request",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"PUT /accounts/{account_id}/cloudforce-one/requests/{request_id}/asset/{asset_id}": {
		"operationId": "cloudforce-one-request-asset-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "asset_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"source": {
								"description": "Asset file to upload.",
								"example": "@/Users/me/example.docx",
								"type": "string"
							}
						},
						"title": "Request Asset Editable Attributes",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Defines the asset creation time.",
													"example": "2022-01-01T00:00:00Z"
												},
												"description": {
													"description": "Asset description.",
													"example": "example description",
													"type": "string",
													"x-auditable": true
												},
												"file_type": {
													"description": "Asset file type.",
													"example": "docx",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Asset ID.",
													"type": "integer",
													"x-auditable": true
												},
												"name": {
													"description": "Asset name.",
													"example": "example.docx",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name"
											],
											"title": "Request Asset Item",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update request asset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update request asset response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a Request Asset",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	},
	"PUT /accounts/{account_id}/cloudforce-one/requests/{request_id}/message/{message_id}": {
		"operationId": "cloudforce-one-request-message-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "request_id",
				"required": true,
				"schema": {
					"description": "UUID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "message_id",
				"required": true,
				"schema": {
					"type": "integer"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"content": {
								"description": "Content of message.",
								"example": "Can you elaborate on the type of DoS that occurred?",
								"type": "string",
								"x-auditable": true
							}
						},
						"title": "Request Message Editable Attributes",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"author": {
													"description": "Author of message.",
													"example": "user@domain.com",
													"type": "string",
													"x-auditable": true
												},
												"content": {
													"description": "Content of message.",
													"example": "Can you elaborate on the type of DoS that occurred?",
													"type": "string",
													"x-auditable": true
												},
												"created": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Defines the message creation time.",
													"example": "2022-01-01T00:00:00Z"
												},
												"id": {
													"description": "Message ID.",
													"type": "integer",
													"x-auditable": true
												},
												"is_follow_on_request": {
													"description": "Whether the message is a follow-on request.",
													"type": "boolean",
													"x-auditable": true
												},
												"updated": {
													"allOf": [
														{
															"example": "2022-04-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "Defines the message last updated time.",
													"example": "2022-01-01T00:00:00Z"
												}
											},
											"required": [
												"id",
												"updated",
												"content",
												"author",
												"is_follow_on_request"
											],
											"title": "Request Message Item",
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update request message response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"properties": {
												"code": {
													"example": 10433,
													"type": "integer"
												},
												"message": {
													"example": "request error",
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"example": false,
											"type": "boolean"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update request message response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a Request Message",
		"tags": [
			"Request for Information (RFI)"
		],
		"x-api-token-group": [
			"Cloudforce One Write"
		]
	}
}