{
	"DELETE /accounts/{account_id}/images/v1/variants/{variant_id}": {
		"description": "Deleting a variant purges the cache for all images associated with the variant.",
		"operationId": "cloudflare-images-variants-delete-a-variant",
		"parameters": [
			{
				"in": "path",
				"name": "variant_id",
				"required": true,
				"schema": {
					"example": "hero",
					"maxLength": 99,
					"pattern": "^[a-zA-Z0-9]$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete a variant response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"example": {},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a variant response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a variant",
		"tags": [
			"Cloudflare Images Variants"
		],
		"x-api-token-group": [
			"Images Write"
		]
	},
	"GET /accounts/{account_id}/images/v1/variants": {
		"description": "Lists existing variants.",
		"operationId": "cloudflare-images-variants-list-variants",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"variants": {
													"properties": {
														"hero": {
															"properties": {
																"id": {
																	"example": "hero",
																	"maxLength": 99,
																	"pattern": "^[a-zA-Z0-9]$",
																	"type": "string",
																	"x-auditable": true
																},
																"neverRequireSignedURLs": {
																	"default": false,
																	"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"options": {
																	"description": "Allows you to define image resizing sizes for different use cases.",
																	"properties": {
																		"fit": {
																			"description": "The fit property describes how the width and height dimensions should be interpreted.",
																			"enum": [
																				"scale-down",
																				"contain",
																				"cover",
																				"crop",
																				"pad"
																			],
																			"example": "scale-down",
																			"type": "string",
																			"x-auditable": true
																		},
																		"height": {
																			"description": "Maximum height in image pixels.",
																			"example": 768,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		},
																		"metadata": {
																			"description": "What EXIF data should be preserved in the output image.",
																			"enum": [
																				"keep",
																				"copyright",
																				"none"
																			],
																			"example": "none",
																			"type": "string",
																			"x-auditable": true
																		},
																		"width": {
																			"description": "Maximum width in image pixels.",
																			"example": 1366,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"fit",
																		"metadata",
																		"width",
																		"height"
																	],
																	"type": "object"
																}
															},
															"required": [
																"id",
																"options"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List variants response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"variants": {
															"properties": {
																"hero": {
																	"properties": {
																		"id": {
																			"example": "hero",
																			"maxLength": 99,
																			"pattern": "^[a-zA-Z0-9]$",
																			"type": "string",
																			"x-auditable": true
																		},
																		"neverRequireSignedURLs": {
																			"default": false,
																			"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"options": {
																			"description": "Allows you to define image resizing sizes for different use cases.",
																			"properties": {
																				"fit": {
																					"description": "The fit property describes how the width and height dimensions should be interpreted.",
																					"enum": [
																						"scale-down",
																						"contain",
																						"cover",
																						"crop",
																						"pad"
																					],
																					"example": "scale-down",
																					"type": "string",
																					"x-auditable": true
																				},
																				"height": {
																					"description": "Maximum height in image pixels.",
																					"example": 768,
																					"minimum": 1,
																					"type": "number",
																					"x-auditable": true
																				},
																				"metadata": {
																					"description": "What EXIF data should be preserved in the output image.",
																					"enum": [
																						"keep",
																						"copyright",
																						"none"
																					],
																					"example": "none",
																					"type": "string",
																					"x-auditable": true
																				},
																				"width": {
																					"description": "Maximum width in image pixels.",
																					"example": 1366,
																					"minimum": 1,
																					"type": "number",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"fit",
																				"metadata",
																				"width",
																				"height"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"options"
																	],
																	"type": "object"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List variants response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List variants",
		"tags": [
			"Cloudflare Images Variants"
		],
		"x-api-token-group": [
			"Images Read",
			"Images Write"
		]
	},
	"GET /accounts/{account_id}/images/v1/variants/{variant_id}": {
		"description": "Fetch details for a single variant.",
		"operationId": "cloudflare-images-variants-variant-details",
		"parameters": [
			{
				"in": "path",
				"name": "variant_id",
				"required": true,
				"schema": {
					"example": "hero",
					"maxLength": 99,
					"pattern": "^[a-zA-Z0-9]$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"variant": {
													"properties": {
														"id": {
															"example": "hero",
															"maxLength": 99,
															"pattern": "^[a-zA-Z0-9]$",
															"type": "string",
															"x-auditable": true
														},
														"neverRequireSignedURLs": {
															"default": false,
															"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"options": {
															"description": "Allows you to define image resizing sizes for different use cases.",
															"properties": {
																"fit": {
																	"description": "The fit property describes how the width and height dimensions should be interpreted.",
																	"enum": [
																		"scale-down",
																		"contain",
																		"cover",
																		"crop",
																		"pad"
																	],
																	"example": "scale-down",
																	"type": "string",
																	"x-auditable": true
																},
																"height": {
																	"description": "Maximum height in image pixels.",
																	"example": 768,
																	"minimum": 1,
																	"type": "number",
																	"x-auditable": true
																},
																"metadata": {
																	"description": "What EXIF data should be preserved in the output image.",
																	"enum": [
																		"keep",
																		"copyright",
																		"none"
																	],
																	"example": "none",
																	"type": "string",
																	"x-auditable": true
																},
																"width": {
																	"description": "Maximum width in image pixels.",
																	"example": 1366,
																	"minimum": 1,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"required": [
																"fit",
																"metadata",
																"width",
																"height"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"options"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Variant details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"variant": {
															"properties": {
																"id": {
																	"example": "hero",
																	"maxLength": 99,
																	"pattern": "^[a-zA-Z0-9]$",
																	"type": "string",
																	"x-auditable": true
																},
																"neverRequireSignedURLs": {
																	"default": false,
																	"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"options": {
																	"description": "Allows you to define image resizing sizes for different use cases.",
																	"properties": {
																		"fit": {
																			"description": "The fit property describes how the width and height dimensions should be interpreted.",
																			"enum": [
																				"scale-down",
																				"contain",
																				"cover",
																				"crop",
																				"pad"
																			],
																			"example": "scale-down",
																			"type": "string",
																			"x-auditable": true
																		},
																		"height": {
																			"description": "Maximum height in image pixels.",
																			"example": 768,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		},
																		"metadata": {
																			"description": "What EXIF data should be preserved in the output image.",
																			"enum": [
																				"keep",
																				"copyright",
																				"none"
																			],
																			"example": "none",
																			"type": "string",
																			"x-auditable": true
																		},
																		"width": {
																			"description": "Maximum width in image pixels.",
																			"example": 1366,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"fit",
																		"metadata",
																		"width",
																		"height"
																	],
																	"type": "object"
																}
															},
															"required": [
																"id",
																"options"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Variant details response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Variant details",
		"tags": [
			"Cloudflare Images Variants"
		],
		"x-api-token-group": [
			"Images Read",
			"Images Write"
		]
	},
	"PATCH /accounts/{account_id}/images/v1/variants/{variant_id}": {
		"description": "Updating a variant purges the cache for all images associated with the variant.",
		"operationId": "cloudflare-images-variants-update-a-variant",
		"parameters": [
			{
				"in": "path",
				"name": "variant_id",
				"required": true,
				"schema": {
					"example": "hero",
					"maxLength": 99,
					"pattern": "^[a-zA-Z0-9]$",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"neverRequireSignedURLs": {
								"default": false,
								"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"options": {
								"description": "Allows you to define image resizing sizes for different use cases.",
								"properties": {
									"fit": {
										"description": "The fit property describes how the width and height dimensions should be interpreted.",
										"enum": [
											"scale-down",
											"contain",
											"cover",
											"crop",
											"pad"
										],
										"example": "scale-down",
										"type": "string",
										"x-auditable": true
									},
									"height": {
										"description": "Maximum height in image pixels.",
										"example": 768,
										"minimum": 1,
										"type": "number",
										"x-auditable": true
									},
									"metadata": {
										"description": "What EXIF data should be preserved in the output image.",
										"enum": [
											"keep",
											"copyright",
											"none"
										],
										"example": "none",
										"type": "string",
										"x-auditable": true
									},
									"width": {
										"description": "Maximum width in image pixels.",
										"example": 1366,
										"minimum": 1,
										"type": "number",
										"x-auditable": true
									}
								},
								"required": [
									"fit",
									"metadata",
									"width",
									"height"
								],
								"type": "object"
							}
						},
						"required": [
							"options"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"variant": {
													"properties": {
														"id": {
															"example": "hero",
															"maxLength": 99,
															"pattern": "^[a-zA-Z0-9]$",
															"type": "string",
															"x-auditable": true
														},
														"neverRequireSignedURLs": {
															"default": false,
															"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"options": {
															"description": "Allows you to define image resizing sizes for different use cases.",
															"properties": {
																"fit": {
																	"description": "The fit property describes how the width and height dimensions should be interpreted.",
																	"enum": [
																		"scale-down",
																		"contain",
																		"cover",
																		"crop",
																		"pad"
																	],
																	"example": "scale-down",
																	"type": "string",
																	"x-auditable": true
																},
																"height": {
																	"description": "Maximum height in image pixels.",
																	"example": 768,
																	"minimum": 1,
																	"type": "number",
																	"x-auditable": true
																},
																"metadata": {
																	"description": "What EXIF data should be preserved in the output image.",
																	"enum": [
																		"keep",
																		"copyright",
																		"none"
																	],
																	"example": "none",
																	"type": "string",
																	"x-auditable": true
																},
																"width": {
																	"description": "Maximum width in image pixels.",
																	"example": 1366,
																	"minimum": 1,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"required": [
																"fit",
																"metadata",
																"width",
																"height"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"options"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update a variant response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"variant": {
															"properties": {
																"id": {
																	"example": "hero",
																	"maxLength": 99,
																	"pattern": "^[a-zA-Z0-9]$",
																	"type": "string",
																	"x-auditable": true
																},
																"neverRequireSignedURLs": {
																	"default": false,
																	"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"options": {
																	"description": "Allows you to define image resizing sizes for different use cases.",
																	"properties": {
																		"fit": {
																			"description": "The fit property describes how the width and height dimensions should be interpreted.",
																			"enum": [
																				"scale-down",
																				"contain",
																				"cover",
																				"crop",
																				"pad"
																			],
																			"example": "scale-down",
																			"type": "string",
																			"x-auditable": true
																		},
																		"height": {
																			"description": "Maximum height in image pixels.",
																			"example": 768,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		},
																		"metadata": {
																			"description": "What EXIF data should be preserved in the output image.",
																			"enum": [
																				"keep",
																				"copyright",
																				"none"
																			],
																			"example": "none",
																			"type": "string",
																			"x-auditable": true
																		},
																		"width": {
																			"description": "Maximum width in image pixels.",
																			"example": 1366,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"fit",
																		"metadata",
																		"width",
																		"height"
																	],
																	"type": "object"
																}
															},
															"required": [
																"id",
																"options"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a variant response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a variant",
		"tags": [
			"Cloudflare Images Variants"
		],
		"x-api-token-group": [
			"Images Write"
		]
	},
	"POST /accounts/{account_id}/images/v1/variants": {
		"description": "Specify variants that allow you to resize images for different use cases.",
		"operationId": "cloudflare-images-variants-create-a-variant",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account identifier tag.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"id": {
								"example": "hero",
								"maxLength": 99,
								"pattern": "^[a-zA-Z0-9]$",
								"type": "string",
								"x-auditable": true
							},
							"neverRequireSignedURLs": {
								"default": false,
								"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"options": {
								"description": "Allows you to define image resizing sizes for different use cases.",
								"properties": {
									"fit": {
										"description": "The fit property describes how the width and height dimensions should be interpreted.",
										"enum": [
											"scale-down",
											"contain",
											"cover",
											"crop",
											"pad"
										],
										"example": "scale-down",
										"type": "string",
										"x-auditable": true
									},
									"height": {
										"description": "Maximum height in image pixels.",
										"example": 768,
										"minimum": 1,
										"type": "number",
										"x-auditable": true
									},
									"metadata": {
										"description": "What EXIF data should be preserved in the output image.",
										"enum": [
											"keep",
											"copyright",
											"none"
										],
										"example": "none",
										"type": "string",
										"x-auditable": true
									},
									"width": {
										"description": "Maximum width in image pixels.",
										"example": 1366,
										"minimum": 1,
										"type": "number",
										"x-auditable": true
									}
								},
								"required": [
									"fit",
									"metadata",
									"width",
									"height"
								],
								"type": "object"
							}
						},
						"required": [
							"id",
							"options"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"variant": {
													"properties": {
														"id": {
															"example": "hero",
															"maxLength": 99,
															"pattern": "^[a-zA-Z0-9]$",
															"type": "string",
															"x-auditable": true
														},
														"neverRequireSignedURLs": {
															"default": false,
															"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"options": {
															"description": "Allows you to define image resizing sizes for different use cases.",
															"properties": {
																"fit": {
																	"description": "The fit property describes how the width and height dimensions should be interpreted.",
																	"enum": [
																		"scale-down",
																		"contain",
																		"cover",
																		"crop",
																		"pad"
																	],
																	"example": "scale-down",
																	"type": "string",
																	"x-auditable": true
																},
																"height": {
																	"description": "Maximum height in image pixels.",
																	"example": 768,
																	"minimum": 1,
																	"type": "number",
																	"x-auditable": true
																},
																"metadata": {
																	"description": "What EXIF data should be preserved in the output image.",
																	"enum": [
																		"keep",
																		"copyright",
																		"none"
																	],
																	"example": "none",
																	"type": "string",
																	"x-auditable": true
																},
																"width": {
																	"description": "Maximum width in image pixels.",
																	"example": 1366,
																	"minimum": 1,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"required": [
																"fit",
																"metadata",
																"width",
																"height"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"options"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create a variant response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer",
																		"x-auditable": true
																	},
																	"message": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"variant": {
															"properties": {
																"id": {
																	"example": "hero",
																	"maxLength": 99,
																	"pattern": "^[a-zA-Z0-9]$",
																	"type": "string",
																	"x-auditable": true
																},
																"neverRequireSignedURLs": {
																	"default": false,
																	"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"options": {
																	"description": "Allows you to define image resizing sizes for different use cases.",
																	"properties": {
																		"fit": {
																			"description": "The fit property describes how the width and height dimensions should be interpreted.",
																			"enum": [
																				"scale-down",
																				"contain",
																				"cover",
																				"crop",
																				"pad"
																			],
																			"example": "scale-down",
																			"type": "string",
																			"x-auditable": true
																		},
																		"height": {
																			"description": "Maximum height in image pixels.",
																			"example": 768,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		},
																		"metadata": {
																			"description": "What EXIF data should be preserved in the output image.",
																			"enum": [
																				"keep",
																				"copyright",
																				"none"
																			],
																			"example": "none",
																			"type": "string",
																			"x-auditable": true
																		},
																		"width": {
																			"description": "Maximum width in image pixels.",
																			"example": 1366,
																			"minimum": 1,
																			"type": "number",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"fit",
																		"metadata",
																		"width",
																		"height"
																	],
																	"type": "object"
																}
															},
															"required": [
																"id",
																"options"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer",
																"x-auditable": true
															},
															"message": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a variant response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a variant",
		"tags": [
			"Cloudflare Images Variants"
		],
		"x-api-token-group": [
			"Images Write"
		]
	}
}