{
	"GET /user/load_balancing_analytics/events": {
		"description": "List origin health changes.",
		"operationId": "load-balancer-healthcheck-events-list-healthcheck-events",
		"parameters": [
			{
				"in": "query",
				"name": "until",
				"schema": {
					"description": "End date and time of requesting data period in the ISO8601 format.",
					"example": "2016-11-11T13:00:00Z",
					"format": "date-time",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "pool_name",
				"schema": {
					"description": "The name for the pool to filter.",
					"example": "primary-dc",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "origin_healthy",
				"schema": {
					"default": true,
					"description": "If true, filter events where the origin status is healthy. If false, filter events where the origin status is unhealthy.",
					"example": true,
					"type": "boolean",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "pool_id",
				"schema": {
					"example": "17b5962d775c646f3f9725cbc7a53df4",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "since",
				"schema": {
					"description": "Start date and time of requesting data period in the ISO8601 format.",
					"example": "2016-11-11T12:00:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "origin_name",
				"schema": {
					"description": "The name for the origin to filter.",
					"example": "primary-dc-1",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "pool_healthy",
				"schema": {
					"default": true,
					"description": "If true, filter events where the pool status is healthy. If false, filter events where the pool status is unhealthy.",
					"example": true,
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results on the current page.",
															"example": 20,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														},
														"total_pages": {
															"description": "Total number of pages available.",
															"example": 100,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"required": [
										"result_info"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"id": {
														"default": 1,
														"type": "integer"
													},
													"origins": {
														"example": [
															{
																"address": "198.51.100.4",
																"changed": true,
																"enabled": true,
																"failure_reason": "No failures",
																"healthy": true,
																"ip": "198.51.100.4",
																"name": "some-origin"
															}
														],
														"items": {
															"properties": {
																"address": {
																	"description": "The IP address (IPv4 or IPv6) of the origin, or its publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare. To set an internal/reserved address, virtual_network_id must also be set.",
																	"example": "0.0.0.0",
																	"type": "string",
																	"x-auditable": true
																},
																"changed": {
																	"description": "Whether the origin has changed health status.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"enabled": {
																	"default": true,
																	"description": "Whether to enable (the default) this origin within the pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"failure_reason": {
																	"description": "Failure reason for un-healthy origin health check.",
																	"example": "No failures",
																	"type": "string",
																	"x-auditable": true
																},
																"healthy": {
																	"description": "Whether the origin is reported as healthy.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"ip": {
																	"description": "The IP address (IPv4 or IPv6) of the origin.",
																	"example": "198.51.100.4",
																	"type": "string",
																	"x-auditable": true
																},
																"name": {
																	"description": "A human-identifiable name for the origin.",
																	"example": "app-server-1",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": "array"
													},
													"pool": {
														"example": {
															"changed": true,
															"healthy": true,
															"id": "74bc6a8b9b0dda3d651707a2928bad0c",
															"minimum_origins": 1,
															"name": "some-pool"
														},
														"type": "object"
													},
													"timestamp": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Healthcheck Events response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results on the current page.",
																	"example": 20,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																},
																"total_pages": {
																	"description": "Total number of pages available.",
																	"example": 100,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"required": [
												"result_info"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"id": {
																"default": 1,
																"type": "integer"
															},
															"origins": {
																"example": [
																	{
																		"address": "198.51.100.4",
																		"changed": true,
																		"enabled": true,
																		"failure_reason": "No failures",
																		"healthy": true,
																		"ip": "198.51.100.4",
																		"name": "some-origin"
																	}
																],
																"items": {
																	"properties": {
																		"address": {
																			"description": "The IP address (IPv4 or IPv6) of the origin, or its publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare. To set an internal/reserved address, virtual_network_id must also be set.",
																			"example": "0.0.0.0",
																			"type": "string",
																			"x-auditable": true
																		},
																		"changed": {
																			"description": "Whether the origin has changed health status.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"enabled": {
																			"default": true,
																			"description": "Whether to enable (the default) this origin within the pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"failure_reason": {
																			"description": "Failure reason for un-healthy origin health check.",
																			"example": "No failures",
																			"type": "string",
																			"x-auditable": true
																		},
																		"healthy": {
																			"description": "Whether the origin is reported as healthy.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"ip": {
																			"description": "The IP address (IPv4 or IPv6) of the origin.",
																			"example": "198.51.100.4",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A human-identifiable name for the origin.",
																			"example": "app-server-1",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"type": "array"
															},
															"pool": {
																"example": {
																	"changed": true,
																	"healthy": true,
																	"id": "74bc6a8b9b0dda3d651707a2928bad0c",
																	"minimum_origins": 1,
																	"name": "some-pool"
																},
																"type": "object"
															},
															"timestamp": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Healthcheck Events response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List Healthcheck Events",
		"tags": [
			"Load Balancer Healthcheck Events"
		],
		"x-api-token-group": [
			"Load Balancing: Monitors and Pools Write",
			"Load Balancing: Monitors and Pools Read"
		]
	}
}