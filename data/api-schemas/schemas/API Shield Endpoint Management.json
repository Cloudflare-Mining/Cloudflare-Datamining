{
	"DELETE /zones/{zone_id}/api_gateway/operations": {
		"operationId": "api-shield-endpoint-management-delete-multiple-operations",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"example": [
							{
								"operation_id": "b17c8043-99a0-4202-b7d9-8f7cdbee02cd"
							},
							{
								"operation_id": "3818d821-5901-4147-a474-f5f5aec1d54e"
							}
						],
						"items": {
							"properties": {
								"operation_id": {
									"allOf": [
										{
											"description": "The ID of the operation",
											"type": "string",
											"x-auditable": true
										},
										{
											"allOf": [
												{
													"minLength": 36,
													"type": "string",
													"x-auditable": true
												},
												{
													"description": "UUID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string",
													"x-auditable": true
												}
											]
										}
									]
								}
							},
							"required": [
								"operation_id"
							],
							"type": "object"
						},
						"type": "array",
						"uniqueItems": true
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										true
									],
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete multiple operations response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete multiple operations response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete multiple operations",
		"tags": [
			"API Shield Endpoint Management"
		],
		"x-api-token-group": [
			"Account API Gateway",
			"Domain API Gateway"
		]
	},
	"DELETE /zones/{zone_id}/api_gateway/operations/{operation_id}": {
		"operationId": "api-shield-endpoint-management-delete-an-operation",
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										true
									],
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete an operation response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete an operation response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete an operation",
		"tags": [
			"API Shield Endpoint Management"
		],
		"x-api-token-group": [
			"Account API Gateway",
			"Domain API Gateway"
		]
	},
	"GET /zones/{zone_id}/api_gateway/operations": {
		"operationId": "api-shield-endpoint-management-retrieve-information-about-all-operations-on-a-zone",
		"parameters": [
			{
				"description": "Page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "Maximum number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"maximum": 50,
					"minimum": 5,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "order",
				"schema": {
					"description": "Field to order by. When requesting a feature, the feature keys are available for ordering as well, e.g., `thresholds.suggested_threshold`.",
					"enum": [
						"method",
						"host",
						"endpoint",
						"thresholds.$key"
					],
					"example": "method",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "Direction to order results.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "desc",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "host",
				"schema": {
					"description": "Filter results to only include the specified hosts.",
					"items": {
						"example": "api.cloudflare.com",
						"type": "string"
					},
					"type": "array",
					"uniqueItems": true
				}
			},
			{
				"in": "query",
				"name": "method",
				"schema": {
					"description": "Filter results to only include the specified HTTP methods.",
					"items": {
						"example": "GET",
						"type": "string"
					},
					"type": "array",
					"uniqueItems": true
				}
			},
			{
				"in": "query",
				"name": "endpoint",
				"schema": {
					"description": "Filter results to only include endpoints containing this pattern.",
					"example": "/api/v1",
					"type": "string"
				}
			},
			{
				"description": "Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning.",
				"in": "query",
				"name": "feature",
				"schema": {
					"example": [
						"thresholds"
					],
					"items": {
						"enum": [
							"thresholds",
							"parameter_schemas",
							"schema_info"
						],
						"example": "thresholds",
						"type": "string"
					},
					"type": "array",
					"uniqueItems": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"allOf": [
															{
																"allOf": [
																	{
																		"properties": {
																			"endpoint": {
																				"description": "The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.",
																				"example": "/api/v1/users/{var1}",
																				"format": "uri-template",
																				"maxLength": 4096,
																				"pattern": "^/.*$",
																				"type": "string",
																				"x-auditable": true
																			},
																			"host": {
																				"description": "RFC3986-compliant host.",
																				"example": "www.example.com",
																				"format": "hostname",
																				"maxLength": 255,
																				"type": "string",
																				"x-auditable": true
																			},
																			"method": {
																				"description": "The HTTP method used to access the endpoint.",
																				"enum": [
																					"GET",
																					"POST",
																					"HEAD",
																					"OPTIONS",
																					"PUT",
																					"DELETE",
																					"CONNECT",
																					"PATCH",
																					"TRACE"
																				],
																				"example": "GET",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"method",
																			"host",
																			"endpoint"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"last_updated": {
																				"allOf": [
																					{
																						"example": "2014-01-01T05:20:00.12345Z",
																						"format": "date-time",
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"readOnly": true,
																						"type": "string",
																						"x-auditable": true
																					}
																				]
																			},
																			"operation_id": {
																				"allOf": [
																					{
																						"minLength": 36,
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"description": "UUID.",
																						"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																						"maxLength": 36,
																						"type": "string",
																						"x-auditable": true
																					}
																				]
																			}
																		},
																		"required": [
																			"operation_id",
																			"last_updated"
																		],
																		"type": "object"
																	}
																]
															},
															{
																"default": {},
																"nullable": true,
																"properties": {
																	"features": {
																		"anyOf": [
																			{
																				"properties": {
																					"thresholds": {
																						"properties": {
																							"auth_id_tokens": {
																								"description": "The total number of auth-ids seen across this calculation.",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							},
																							"data_points": {
																								"description": "The number of data points used for the threshold suggestion calculation.",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							},
																							"last_updated": {
																								"example": "2014-01-01T05:20:00.12345Z",
																								"format": "date-time",
																								"type": "string",
																								"x-auditable": true
																							},
																							"p50": {
																								"description": "The p50 quantile of requests (in period_seconds).",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							},
																							"p90": {
																								"description": "The p90 quantile of requests (in period_seconds).",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							},
																							"p99": {
																								"description": "The p99 quantile of requests (in period_seconds).",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							},
																							"period_seconds": {
																								"description": "The period over which this threshold is suggested.",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							},
																							"requests": {
																								"description": "The estimated number of requests covered by these calculations.",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							},
																							"suggested_threshold": {
																								"description": "The suggested threshold in requests done by the same auth_id or period_seconds.",
																								"readOnly": true,
																								"type": "integer",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					}
																				},
																				"readOnly": true,
																				"required": [
																					"period_seconds",
																					"suggested_threshold",
																					"p50",
																					"p90",
																					"p99",
																					"requests",
																					"auth_id_tokens",
																					"data_points",
																					"last_updated"
																				],
																				"type": "object"
																			},
																			{
																				"properties": {
																					"parameter_schemas": {
																						"properties": {
																							"last_updated": {
																								"example": "2014-01-01T05:20:00.12345Z",
																								"format": "date-time",
																								"type": "string",
																								"x-auditable": true
																							},
																							"parameter_schemas": {
																								"description": "An operation schema object containing a response.",
																								"example": {
																									"parameters": [
																										{
																											"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																											"in": "path",
																											"name": "var1",
																											"required": true,
																											"schema": {
																												"maximum": 10,
																												"minimum": 1,
																												"type": "integer"
																											}
																										}
																									],
																									"responses": null
																								},
																								"properties": {
																									"parameters": {
																										"description": "An array containing the learned parameter schemas.",
																										"example": [
																											{
																												"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																												"in": "path",
																												"name": "var1",
																												"required": true,
																												"schema": {
																													"maximum": 10,
																													"minimum": 1,
																													"type": "integer"
																												}
																											}
																										],
																										"items": {
																											"type": "object"
																										},
																										"readOnly": true,
																										"type": "array"
																									},
																									"responses": {
																										"description": "An empty response object. This field is required to yield a valid operation schema.",
																										"nullable": true,
																										"readOnly": true,
																										"type": "object"
																									}
																								},
																								"readOnly": true,
																								"type": "object"
																							}
																						},
																						"type": "object"
																					}
																				},
																				"readOnly": true,
																				"required": [
																					"parameter_schemas",
																					"last_updated"
																				],
																				"type": "object"
																			},
																			{
																				"example": {
																					"api_routing": {
																						"last_updated": "2014-01-01T05:20:00.12345Z",
																						"route": "https://api.example.com/api/service"
																					}
																				},
																				"properties": {
																					"api_routing": {
																						"description": "API Routing settings on endpoint.",
																						"properties": {
																							"last_updated": {
																								"example": "2014-01-01T05:20:00.12345Z",
																								"format": "date-time",
																								"type": "string",
																								"x-auditable": true
																							},
																							"route": {
																								"description": "Target route.",
																								"example": "https://api.example.com/api/service",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					}
																				},
																				"readOnly": true,
																				"type": "object"
																			},
																			{
																				"example": {
																					"confidence_intervals": {
																						"last_updated": "2014-01-01T05:20:00.12345Z",
																						"suggested_threshold": {
																							"confidence_intervals": {
																								"p90": {
																									"lower": 23.1,
																									"upper": 23.9
																								},
																								"p95": {
																									"lower": 22,
																									"upper": 24.1
																								},
																								"p99": {
																									"lower": 20.2,
																									"upper": 30
																								}
																							},
																							"mean": 23.5
																						}
																					}
																				},
																				"properties": {
																					"confidence_intervals": {
																						"properties": {
																							"last_updated": {
																								"example": "2014-01-01T05:20:00.12345Z",
																								"format": "date-time",
																								"type": "string",
																								"x-auditable": true
																							},
																							"suggested_threshold": {
																								"properties": {
																									"confidence_intervals": {
																										"properties": {
																											"p90": {
																												"description": "Upper and lower bound for percentile estimate",
																												"properties": {
																													"lower": {
																														"description": "Lower bound for percentile estimate",
																														"example": 20.5,
																														"type": "number",
																														"x-auditable": true
																													},
																													"upper": {
																														"description": "Upper bound for percentile estimate",
																														"example": 30.4,
																														"type": "number",
																														"x-auditable": true
																													}
																												},
																												"readOnly": true,
																												"type": "object"
																											},
																											"p95": {
																												"description": "Upper and lower bound for percentile estimate",
																												"properties": {
																													"lower": {
																														"description": "Lower bound for percentile estimate",
																														"example": 20.5,
																														"type": "number",
																														"x-auditable": true
																													},
																													"upper": {
																														"description": "Upper bound for percentile estimate",
																														"example": 30.4,
																														"type": "number",
																														"x-auditable": true
																													}
																												},
																												"readOnly": true,
																												"type": "object"
																											},
																											"p99": {
																												"description": "Upper and lower bound for percentile estimate",
																												"properties": {
																													"lower": {
																														"description": "Lower bound for percentile estimate",
																														"example": 20.5,
																														"type": "number",
																														"x-auditable": true
																													},
																													"upper": {
																														"description": "Upper bound for percentile estimate",
																														"example": 30.4,
																														"type": "number",
																														"x-auditable": true
																													}
																												},
																												"readOnly": true,
																												"type": "object"
																											}
																										},
																										"type": "object"
																									},
																									"mean": {
																										"description": "Suggested threshold.",
																										"example": 25.5,
																										"type": "number",
																										"x-auditable": true
																									}
																								},
																								"type": "object"
																							}
																						},
																						"type": "object"
																					}
																				},
																				"readOnly": true,
																				"type": "object"
																			},
																			{
																				"properties": {
																					"schema_info": {
																						"properties": {
																							"active_schema": {
																								"description": "Schema active on endpoint.",
																								"properties": {
																									"created_at": {
																										"example": "2014-01-01T05:20:00.12345Z",
																										"format": "date-time",
																										"type": "string",
																										"x-auditable": true
																									},
																									"id": {
																										"allOf": [
																											{
																												"minLength": 36,
																												"type": "string",
																												"x-auditable": true
																											},
																											{
																												"description": "UUID.",
																												"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																												"maxLength": 36,
																												"type": "string",
																												"x-auditable": true
																											}
																										]
																									},
																									"is_learned": {
																										"description": "True if schema is Cloudflare-provided.",
																										"example": true,
																										"type": "boolean",
																										"x-auditable": true
																									},
																									"name": {
																										"description": "Schema file name.",
																										"example": "api-endpoints-8694824bf5c04d019edcbf399c03c103-api-discovery.example.com-thresholds.json",
																										"type": "string",
																										"x-auditable": true
																									}
																								},
																								"type": "object"
																							},
																							"learned_available": {
																								"description": "True if a Cloudflare-provided learned schema is available for this endpoint.",
																								"example": true,
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"mitigation_action": {
																								"description": "Action taken on requests failing validation.",
																								"enum": [
																									"none",
																									"log",
																									"block"
																								],
																								"example": "block",
																								"nullable": true,
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					}
																				},
																				"readOnly": true,
																				"type": "object"
																			}
																		],
																		"readOnly": true,
																		"type": "object"
																	}
																},
																"type": "object"
															}
														]
													}
												]
											},
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Retrieve information about all operations on a zone response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Retrieve information about all operations on a zone response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Retrieve information about all operations on a zone",
		"tags": [
			"API Shield Endpoint Management"
		],
		"x-api-token-group": [
			"Account API Gateway",
			"Account API Gateway Read",
			"Domain API Gateway",
			"Domain API Gateway Read"
		]
	},
	"GET /zones/{zone_id}/api_gateway/operations/{operation_id}": {
		"operationId": "api-shield-endpoint-management-retrieve-information-about-an-operation",
		"parameters": [
			{
				"description": "Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning.",
				"in": "query",
				"name": "feature",
				"schema": {
					"example": [
						"thresholds"
					],
					"items": {
						"enum": [
							"thresholds",
							"parameter_schemas",
							"schema_info"
						],
						"example": "thresholds",
						"type": "string"
					},
					"type": "array",
					"uniqueItems": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"allOf": [
														{
															"allOf": [
																{
																	"properties": {
																		"endpoint": {
																			"description": "The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.",
																			"example": "/api/v1/users/{var1}",
																			"format": "uri-template",
																			"maxLength": 4096,
																			"pattern": "^/.*$",
																			"type": "string",
																			"x-auditable": true
																		},
																		"host": {
																			"description": "RFC3986-compliant host.",
																			"example": "www.example.com",
																			"format": "hostname",
																			"maxLength": 255,
																			"type": "string",
																			"x-auditable": true
																		},
																		"method": {
																			"description": "The HTTP method used to access the endpoint.",
																			"enum": [
																				"GET",
																				"POST",
																				"HEAD",
																				"OPTIONS",
																				"PUT",
																				"DELETE",
																				"CONNECT",
																				"PATCH",
																				"TRACE"
																			],
																			"example": "GET",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"method",
																		"host",
																		"endpoint"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"last_updated": {
																			"allOf": [
																				{
																					"example": "2014-01-01T05:20:00.12345Z",
																					"format": "date-time",
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				}
																			]
																		},
																		"operation_id": {
																			"allOf": [
																				{
																					"minLength": 36,
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"description": "UUID.",
																					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																					"maxLength": 36,
																					"type": "string",
																					"x-auditable": true
																				}
																			]
																		}
																	},
																	"required": [
																		"operation_id",
																		"last_updated"
																	],
																	"type": "object"
																}
															]
														},
														{
															"default": {},
															"nullable": true,
															"properties": {
																"features": {
																	"anyOf": [
																		{
																			"properties": {
																				"thresholds": {
																					"properties": {
																						"auth_id_tokens": {
																							"description": "The total number of auth-ids seen across this calculation.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"data_points": {
																							"description": "The number of data points used for the threshold suggestion calculation.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"p50": {
																							"description": "The p50 quantile of requests (in period_seconds).",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"p90": {
																							"description": "The p90 quantile of requests (in period_seconds).",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"p99": {
																							"description": "The p99 quantile of requests (in period_seconds).",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"period_seconds": {
																							"description": "The period over which this threshold is suggested.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"requests": {
																							"description": "The estimated number of requests covered by these calculations.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"suggested_threshold": {
																							"description": "The suggested threshold in requests done by the same auth_id or period_seconds.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"required": [
																				"period_seconds",
																				"suggested_threshold",
																				"p50",
																				"p90",
																				"p99",
																				"requests",
																				"auth_id_tokens",
																				"data_points",
																				"last_updated"
																			],
																			"type": "object"
																		},
																		{
																			"properties": {
																				"parameter_schemas": {
																					"properties": {
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"parameter_schemas": {
																							"description": "An operation schema object containing a response.",
																							"example": {
																								"parameters": [
																									{
																										"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																										"in": "path",
																										"name": "var1",
																										"required": true,
																										"schema": {
																											"maximum": 10,
																											"minimum": 1,
																											"type": "integer"
																										}
																									}
																								],
																								"responses": null
																							},
																							"properties": {
																								"parameters": {
																									"description": "An array containing the learned parameter schemas.",
																									"example": [
																										{
																											"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																											"in": "path",
																											"name": "var1",
																											"required": true,
																											"schema": {
																												"maximum": 10,
																												"minimum": 1,
																												"type": "integer"
																											}
																										}
																									],
																									"items": {
																										"type": "object"
																									},
																									"readOnly": true,
																									"type": "array"
																								},
																								"responses": {
																									"description": "An empty response object. This field is required to yield a valid operation schema.",
																									"nullable": true,
																									"readOnly": true,
																									"type": "object"
																								}
																							},
																							"readOnly": true,
																							"type": "object"
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"required": [
																				"parameter_schemas",
																				"last_updated"
																			],
																			"type": "object"
																		},
																		{
																			"example": {
																				"api_routing": {
																					"last_updated": "2014-01-01T05:20:00.12345Z",
																					"route": "https://api.example.com/api/service"
																				}
																			},
																			"properties": {
																				"api_routing": {
																					"description": "API Routing settings on endpoint.",
																					"properties": {
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"route": {
																							"description": "Target route.",
																							"example": "https://api.example.com/api/service",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"type": "object"
																		},
																		{
																			"example": {
																				"confidence_intervals": {
																					"last_updated": "2014-01-01T05:20:00.12345Z",
																					"suggested_threshold": {
																						"confidence_intervals": {
																							"p90": {
																								"lower": 23.1,
																								"upper": 23.9
																							},
																							"p95": {
																								"lower": 22,
																								"upper": 24.1
																							},
																							"p99": {
																								"lower": 20.2,
																								"upper": 30
																							}
																						},
																						"mean": 23.5
																					}
																				}
																			},
																			"properties": {
																				"confidence_intervals": {
																					"properties": {
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"suggested_threshold": {
																							"properties": {
																								"confidence_intervals": {
																									"properties": {
																										"p90": {
																											"description": "Upper and lower bound for percentile estimate",
																											"properties": {
																												"lower": {
																													"description": "Lower bound for percentile estimate",
																													"example": 20.5,
																													"type": "number",
																													"x-auditable": true
																												},
																												"upper": {
																													"description": "Upper bound for percentile estimate",
																													"example": 30.4,
																													"type": "number",
																													"x-auditable": true
																												}
																											},
																											"readOnly": true,
																											"type": "object"
																										},
																										"p95": {
																											"description": "Upper and lower bound for percentile estimate",
																											"properties": {
																												"lower": {
																													"description": "Lower bound for percentile estimate",
																													"example": 20.5,
																													"type": "number",
																													"x-auditable": true
																												},
																												"upper": {
																													"description": "Upper bound for percentile estimate",
																													"example": 30.4,
																													"type": "number",
																													"x-auditable": true
																												}
																											},
																											"readOnly": true,
																											"type": "object"
																										},
																										"p99": {
																											"description": "Upper and lower bound for percentile estimate",
																											"properties": {
																												"lower": {
																													"description": "Lower bound for percentile estimate",
																													"example": 20.5,
																													"type": "number",
																													"x-auditable": true
																												},
																												"upper": {
																													"description": "Upper bound for percentile estimate",
																													"example": 30.4,
																													"type": "number",
																													"x-auditable": true
																												}
																											},
																											"readOnly": true,
																											"type": "object"
																										}
																									},
																									"type": "object"
																								},
																								"mean": {
																									"description": "Suggested threshold.",
																									"example": 25.5,
																									"type": "number",
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"type": "object"
																		},
																		{
																			"properties": {
																				"schema_info": {
																					"properties": {
																						"active_schema": {
																							"description": "Schema active on endpoint.",
																							"properties": {
																								"created_at": {
																									"example": "2014-01-01T05:20:00.12345Z",
																									"format": "date-time",
																									"type": "string",
																									"x-auditable": true
																								},
																								"id": {
																									"allOf": [
																										{
																											"minLength": 36,
																											"type": "string",
																											"x-auditable": true
																										},
																										{
																											"description": "UUID.",
																											"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																											"maxLength": 36,
																											"type": "string",
																											"x-auditable": true
																										}
																									]
																								},
																								"is_learned": {
																									"description": "True if schema is Cloudflare-provided.",
																									"example": true,
																									"type": "boolean",
																									"x-auditable": true
																								},
																								"name": {
																									"description": "Schema file name.",
																									"example": "api-endpoints-8694824bf5c04d019edcbf399c03c103-api-discovery.example.com-thresholds.json",
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						"learned_available": {
																							"description": "True if a Cloudflare-provided learned schema is available for this endpoint.",
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"mitigation_action": {
																							"description": "Action taken on requests failing validation.",
																							"enum": [
																								"none",
																								"log",
																								"block"
																							],
																							"example": "block",
																							"nullable": true,
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"type": "object"
																		}
																	],
																	"readOnly": true,
																	"type": "object"
																}
															},
															"type": "object"
														}
													]
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Retrieve information about an operation response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Retrieve information about an operation response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Retrieve information about an operation",
		"tags": [
			"API Shield Endpoint Management"
		],
		"x-api-token-group": [
			"Account API Gateway",
			"Account API Gateway Read",
			"Domain API Gateway",
			"Domain API Gateway Read"
		]
	},
	"GET /zones/{zone_id}/api_gateway/schemas": {
		"operationId": "api-shield-endpoint-management-retrieve-operations-and-features-as-open-api-schemas",
		"parameters": [
			{
				"in": "query",
				"name": "host",
				"schema": {
					"description": "Receive schema only for the given host(s).",
					"items": {
						"example": "www.example.com",
						"type": "string"
					},
					"type": "array",
					"uniqueItems": true
				}
			},
			{
				"description": "Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning.",
				"in": "query",
				"name": "feature",
				"schema": {
					"example": [
						"thresholds"
					],
					"items": {
						"enum": [
							"thresholds",
							"parameter_schemas",
							"schema_info"
						],
						"example": "thresholds",
						"type": "string"
					},
					"type": "array",
					"uniqueItems": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"schemas": {
													"items": {
														"description": "A OpenAPI 3.0.0 compliant schema.",
														"example": {
															"info": {
																"title": "OpenAPI JSON schema for www.example.com",
																"version": "1.0"
															},
															"openapi": "3.0.0",
															"paths": {
																"... Further paths ...": {},
																"/api/v1/users/{var1}": {
																	"get": {
																		"parameters": [
																			{
																				"in": "path",
																				"name": "var1",
																				"required": true,
																				"schema": {
																					"type": "string"
																				}
																			}
																		]
																	}
																}
															},
															"servers": [
																{
																	"url": "www.example.com"
																}
															]
														},
														"type": "object"
													},
													"type": "array"
												},
												"timestamp": {
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Retrieve operations and features as OpenAPI schemas response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Retrieve operations and features as OpenAPI schemas response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Retrieve operations and features as OpenAPI schemas",
		"tags": [
			"API Shield Endpoint Management"
		],
		"x-api-token-group": [
			"Account API Gateway",
			"Account API Gateway Read",
			"Domain API Gateway",
			"Domain API Gateway Read"
		]
	},
	"POST /zones/{zone_id}/api_gateway/operations": {
		"description": "Add one or more operations to a zone. Endpoints can contain path variables. Host, method, endpoint will be normalized to a canoncial form when creating an operation and must be unique on the zone. Inserting an operation that matches an existing one will return the record of the already existing operation and update its last_updated date.",
		"operationId": "api-shield-endpoint-management-add-operations-to-a-zone",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"endpoint": {
									"description": "The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.",
									"example": "/api/v1/users/{var1}",
									"format": "uri-template",
									"maxLength": 4096,
									"pattern": "^/.*$",
									"type": "string",
									"x-auditable": true
								},
								"host": {
									"description": "RFC3986-compliant host.",
									"example": "www.example.com",
									"format": "hostname",
									"maxLength": 255,
									"type": "string",
									"x-auditable": true
								},
								"method": {
									"description": "The HTTP method used to access the endpoint.",
									"enum": [
										"GET",
										"POST",
										"HEAD",
										"OPTIONS",
										"PUT",
										"DELETE",
										"CONNECT",
										"PATCH",
										"TRACE"
									],
									"example": "GET",
									"type": "string",
									"x-auditable": true
								}
							},
							"required": [
								"method",
								"host",
								"endpoint"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"allOf": [
															{
																"properties": {
																	"endpoint": {
																		"description": "The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.",
																		"example": "/api/v1/users/{var1}",
																		"format": "uri-template",
																		"maxLength": 4096,
																		"pattern": "^/.*$",
																		"type": "string",
																		"x-auditable": true
																	},
																	"host": {
																		"description": "RFC3986-compliant host.",
																		"example": "www.example.com",
																		"format": "hostname",
																		"maxLength": 255,
																		"type": "string",
																		"x-auditable": true
																	},
																	"method": {
																		"description": "The HTTP method used to access the endpoint.",
																		"enum": [
																			"GET",
																			"POST",
																			"HEAD",
																			"OPTIONS",
																			"PUT",
																			"DELETE",
																			"CONNECT",
																			"PATCH",
																			"TRACE"
																		],
																		"example": "GET",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"method",
																	"host",
																	"endpoint"
																],
																"type": "object"
															},
															{
																"properties": {
																	"last_updated": {
																		"allOf": [
																			{
																				"example": "2014-01-01T05:20:00.12345Z",
																				"format": "date-time",
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		]
																	},
																	"operation_id": {
																		"allOf": [
																			{
																				"minLength": 36,
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"description": "UUID.",
																				"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																				"maxLength": 36,
																				"type": "string",
																				"x-auditable": true
																			}
																		]
																	}
																},
																"required": [
																	"operation_id",
																	"last_updated"
																],
																"type": "object"
															}
														]
													},
													{
														"default": {},
														"nullable": true,
														"properties": {
															"features": {
																"anyOf": [
																	{
																		"properties": {
																			"thresholds": {
																				"properties": {
																					"auth_id_tokens": {
																						"description": "The total number of auth-ids seen across this calculation.",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					},
																					"data_points": {
																						"description": "The number of data points used for the threshold suggestion calculation.",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					},
																					"last_updated": {
																						"example": "2014-01-01T05:20:00.12345Z",
																						"format": "date-time",
																						"type": "string",
																						"x-auditable": true
																					},
																					"p50": {
																						"description": "The p50 quantile of requests (in period_seconds).",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					},
																					"p90": {
																						"description": "The p90 quantile of requests (in period_seconds).",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					},
																					"p99": {
																						"description": "The p99 quantile of requests (in period_seconds).",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					},
																					"period_seconds": {
																						"description": "The period over which this threshold is suggested.",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					},
																					"requests": {
																						"description": "The estimated number of requests covered by these calculations.",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					},
																					"suggested_threshold": {
																						"description": "The suggested threshold in requests done by the same auth_id or period_seconds.",
																						"readOnly": true,
																						"type": "integer",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"readOnly": true,
																		"required": [
																			"period_seconds",
																			"suggested_threshold",
																			"p50",
																			"p90",
																			"p99",
																			"requests",
																			"auth_id_tokens",
																			"data_points",
																			"last_updated"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"parameter_schemas": {
																				"properties": {
																					"last_updated": {
																						"example": "2014-01-01T05:20:00.12345Z",
																						"format": "date-time",
																						"type": "string",
																						"x-auditable": true
																					},
																					"parameter_schemas": {
																						"description": "An operation schema object containing a response.",
																						"example": {
																							"parameters": [
																								{
																									"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																									"in": "path",
																									"name": "var1",
																									"required": true,
																									"schema": {
																										"maximum": 10,
																										"minimum": 1,
																										"type": "integer"
																									}
																								}
																							],
																							"responses": null
																						},
																						"properties": {
																							"parameters": {
																								"description": "An array containing the learned parameter schemas.",
																								"example": [
																									{
																										"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																										"in": "path",
																										"name": "var1",
																										"required": true,
																										"schema": {
																											"maximum": 10,
																											"minimum": 1,
																											"type": "integer"
																										}
																									}
																								],
																								"items": {
																									"type": "object"
																								},
																								"readOnly": true,
																								"type": "array"
																							},
																							"responses": {
																								"description": "An empty response object. This field is required to yield a valid operation schema.",
																								"nullable": true,
																								"readOnly": true,
																								"type": "object"
																							}
																						},
																						"readOnly": true,
																						"type": "object"
																					}
																				},
																				"type": "object"
																			}
																		},
																		"readOnly": true,
																		"required": [
																			"parameter_schemas",
																			"last_updated"
																		],
																		"type": "object"
																	},
																	{
																		"example": {
																			"api_routing": {
																				"last_updated": "2014-01-01T05:20:00.12345Z",
																				"route": "https://api.example.com/api/service"
																			}
																		},
																		"properties": {
																			"api_routing": {
																				"description": "API Routing settings on endpoint.",
																				"properties": {
																					"last_updated": {
																						"example": "2014-01-01T05:20:00.12345Z",
																						"format": "date-time",
																						"type": "string",
																						"x-auditable": true
																					},
																					"route": {
																						"description": "Target route.",
																						"example": "https://api.example.com/api/service",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"readOnly": true,
																		"type": "object"
																	},
																	{
																		"example": {
																			"confidence_intervals": {
																				"last_updated": "2014-01-01T05:20:00.12345Z",
																				"suggested_threshold": {
																					"confidence_intervals": {
																						"p90": {
																							"lower": 23.1,
																							"upper": 23.9
																						},
																						"p95": {
																							"lower": 22,
																							"upper": 24.1
																						},
																						"p99": {
																							"lower": 20.2,
																							"upper": 30
																						}
																					},
																					"mean": 23.5
																				}
																			}
																		},
																		"properties": {
																			"confidence_intervals": {
																				"properties": {
																					"last_updated": {
																						"example": "2014-01-01T05:20:00.12345Z",
																						"format": "date-time",
																						"type": "string",
																						"x-auditable": true
																					},
																					"suggested_threshold": {
																						"properties": {
																							"confidence_intervals": {
																								"properties": {
																									"p90": {
																										"description": "Upper and lower bound for percentile estimate",
																										"properties": {
																											"lower": {
																												"description": "Lower bound for percentile estimate",
																												"example": 20.5,
																												"type": "number",
																												"x-auditable": true
																											},
																											"upper": {
																												"description": "Upper bound for percentile estimate",
																												"example": 30.4,
																												"type": "number",
																												"x-auditable": true
																											}
																										},
																										"readOnly": true,
																										"type": "object"
																									},
																									"p95": {
																										"description": "Upper and lower bound for percentile estimate",
																										"properties": {
																											"lower": {
																												"description": "Lower bound for percentile estimate",
																												"example": 20.5,
																												"type": "number",
																												"x-auditable": true
																											},
																											"upper": {
																												"description": "Upper bound for percentile estimate",
																												"example": 30.4,
																												"type": "number",
																												"x-auditable": true
																											}
																										},
																										"readOnly": true,
																										"type": "object"
																									},
																									"p99": {
																										"description": "Upper and lower bound for percentile estimate",
																										"properties": {
																											"lower": {
																												"description": "Lower bound for percentile estimate",
																												"example": 20.5,
																												"type": "number",
																												"x-auditable": true
																											},
																											"upper": {
																												"description": "Upper bound for percentile estimate",
																												"example": 30.4,
																												"type": "number",
																												"x-auditable": true
																											}
																										},
																										"readOnly": true,
																										"type": "object"
																									}
																								},
																								"type": "object"
																							},
																							"mean": {
																								"description": "Suggested threshold.",
																								"example": 25.5,
																								"type": "number",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					}
																				},
																				"type": "object"
																			}
																		},
																		"readOnly": true,
																		"type": "object"
																	},
																	{
																		"properties": {
																			"schema_info": {
																				"properties": {
																					"active_schema": {
																						"description": "Schema active on endpoint.",
																						"properties": {
																							"created_at": {
																								"example": "2014-01-01T05:20:00.12345Z",
																								"format": "date-time",
																								"type": "string",
																								"x-auditable": true
																							},
																							"id": {
																								"allOf": [
																									{
																										"minLength": 36,
																										"type": "string",
																										"x-auditable": true
																									},
																									{
																										"description": "UUID.",
																										"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																										"maxLength": 36,
																										"type": "string",
																										"x-auditable": true
																									}
																								]
																							},
																							"is_learned": {
																								"description": "True if schema is Cloudflare-provided.",
																								"example": true,
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Schema file name.",
																								"example": "api-endpoints-8694824bf5c04d019edcbf399c03c103-api-discovery.example.com-thresholds.json",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"type": "object"
																					},
																					"learned_available": {
																						"description": "True if a Cloudflare-provided learned schema is available for this endpoint.",
																						"example": true,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"mitigation_action": {
																						"description": "Action taken on requests failing validation.",
																						"enum": [
																							"none",
																							"log",
																							"block"
																						],
																						"example": "block",
																						"nullable": true,
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"readOnly": true,
																		"type": "object"
																	}
																],
																"readOnly": true,
																"type": "object"
															}
														},
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add operations to a zone response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Add operations to a zone response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Add operations to a zone",
		"tags": [
			"API Shield Endpoint Management"
		],
		"x-api-token-group": [
			"Account API Gateway",
			"Domain API Gateway"
		]
	},
	"POST /zones/{zone_id}/api_gateway/operations/item": {
		"description": "Add one operation to a zone. Endpoints can contain path variables. Host, method, endpoint will be normalized to a canoncial form when creating an operation and must be unique on the zone. Inserting an operation that matches an existing one will return the record of the already existing operation and update its last_updated date.",
		"operationId": "api-shield-endpoint-management-add-operation-to-a-zone",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"endpoint": {
								"description": "The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.",
								"example": "/api/v1/users/{var1}",
								"format": "uri-template",
								"maxLength": 4096,
								"pattern": "^/.*$",
								"type": "string",
								"x-auditable": true
							},
							"host": {
								"description": "RFC3986-compliant host.",
								"example": "www.example.com",
								"format": "hostname",
								"maxLength": 255,
								"type": "string",
								"x-auditable": true
							},
							"method": {
								"description": "The HTTP method used to access the endpoint.",
								"enum": [
									"GET",
									"POST",
									"HEAD",
									"OPTIONS",
									"PUT",
									"DELETE",
									"CONNECT",
									"PATCH",
									"TRACE"
								],
								"example": "GET",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"method",
							"host",
							"endpoint"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"allOf": [
														{
															"allOf": [
																{
																	"properties": {
																		"endpoint": {
																			"description": "The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.",
																			"example": "/api/v1/users/{var1}",
																			"format": "uri-template",
																			"maxLength": 4096,
																			"pattern": "^/.*$",
																			"type": "string",
																			"x-auditable": true
																		},
																		"host": {
																			"description": "RFC3986-compliant host.",
																			"example": "www.example.com",
																			"format": "hostname",
																			"maxLength": 255,
																			"type": "string",
																			"x-auditable": true
																		},
																		"method": {
																			"description": "The HTTP method used to access the endpoint.",
																			"enum": [
																				"GET",
																				"POST",
																				"HEAD",
																				"OPTIONS",
																				"PUT",
																				"DELETE",
																				"CONNECT",
																				"PATCH",
																				"TRACE"
																			],
																			"example": "GET",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"method",
																		"host",
																		"endpoint"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"last_updated": {
																			"allOf": [
																				{
																					"example": "2014-01-01T05:20:00.12345Z",
																					"format": "date-time",
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				}
																			]
																		},
																		"operation_id": {
																			"allOf": [
																				{
																					"minLength": 36,
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"description": "UUID.",
																					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																					"maxLength": 36,
																					"type": "string",
																					"x-auditable": true
																				}
																			]
																		}
																	},
																	"required": [
																		"operation_id",
																		"last_updated"
																	],
																	"type": "object"
																}
															]
														},
														{
															"default": {},
															"nullable": true,
															"properties": {
																"features": {
																	"anyOf": [
																		{
																			"properties": {
																				"thresholds": {
																					"properties": {
																						"auth_id_tokens": {
																							"description": "The total number of auth-ids seen across this calculation.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"data_points": {
																							"description": "The number of data points used for the threshold suggestion calculation.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"p50": {
																							"description": "The p50 quantile of requests (in period_seconds).",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"p90": {
																							"description": "The p90 quantile of requests (in period_seconds).",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"p99": {
																							"description": "The p99 quantile of requests (in period_seconds).",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"period_seconds": {
																							"description": "The period over which this threshold is suggested.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"requests": {
																							"description": "The estimated number of requests covered by these calculations.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						},
																						"suggested_threshold": {
																							"description": "The suggested threshold in requests done by the same auth_id or period_seconds.",
																							"readOnly": true,
																							"type": "integer",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"required": [
																				"period_seconds",
																				"suggested_threshold",
																				"p50",
																				"p90",
																				"p99",
																				"requests",
																				"auth_id_tokens",
																				"data_points",
																				"last_updated"
																			],
																			"type": "object"
																		},
																		{
																			"properties": {
																				"parameter_schemas": {
																					"properties": {
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"parameter_schemas": {
																							"description": "An operation schema object containing a response.",
																							"example": {
																								"parameters": [
																									{
																										"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																										"in": "path",
																										"name": "var1",
																										"required": true,
																										"schema": {
																											"maximum": 10,
																											"minimum": 1,
																											"type": "integer"
																										}
																									}
																								],
																								"responses": null
																							},
																							"properties": {
																								"parameters": {
																									"description": "An array containing the learned parameter schemas.",
																									"example": [
																										{
																											"description": "Sufficient requests have been observed for this parameter to provide high confidence in this parameter schema.",
																											"in": "path",
																											"name": "var1",
																											"required": true,
																											"schema": {
																												"maximum": 10,
																												"minimum": 1,
																												"type": "integer"
																											}
																										}
																									],
																									"items": {
																										"type": "object"
																									},
																									"readOnly": true,
																									"type": "array"
																								},
																								"responses": {
																									"description": "An empty response object. This field is required to yield a valid operation schema.",
																									"nullable": true,
																									"readOnly": true,
																									"type": "object"
																								}
																							},
																							"readOnly": true,
																							"type": "object"
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"required": [
																				"parameter_schemas",
																				"last_updated"
																			],
																			"type": "object"
																		},
																		{
																			"example": {
																				"api_routing": {
																					"last_updated": "2014-01-01T05:20:00.12345Z",
																					"route": "https://api.example.com/api/service"
																				}
																			},
																			"properties": {
																				"api_routing": {
																					"description": "API Routing settings on endpoint.",
																					"properties": {
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"route": {
																							"description": "Target route.",
																							"example": "https://api.example.com/api/service",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"type": "object"
																		},
																		{
																			"example": {
																				"confidence_intervals": {
																					"last_updated": "2014-01-01T05:20:00.12345Z",
																					"suggested_threshold": {
																						"confidence_intervals": {
																							"p90": {
																								"lower": 23.1,
																								"upper": 23.9
																							},
																							"p95": {
																								"lower": 22,
																								"upper": 24.1
																							},
																							"p99": {
																								"lower": 20.2,
																								"upper": 30
																							}
																						},
																						"mean": 23.5
																					}
																				}
																			},
																			"properties": {
																				"confidence_intervals": {
																					"properties": {
																						"last_updated": {
																							"example": "2014-01-01T05:20:00.12345Z",
																							"format": "date-time",
																							"type": "string",
																							"x-auditable": true
																						},
																						"suggested_threshold": {
																							"properties": {
																								"confidence_intervals": {
																									"properties": {
																										"p90": {
																											"description": "Upper and lower bound for percentile estimate",
																											"properties": {
																												"lower": {
																													"description": "Lower bound for percentile estimate",
																													"example": 20.5,
																													"type": "number",
																													"x-auditable": true
																												},
																												"upper": {
																													"description": "Upper bound for percentile estimate",
																													"example": 30.4,
																													"type": "number",
																													"x-auditable": true
																												}
																											},
																											"readOnly": true,
																											"type": "object"
																										},
																										"p95": {
																											"description": "Upper and lower bound for percentile estimate",
																											"properties": {
																												"lower": {
																													"description": "Lower bound for percentile estimate",
																													"example": 20.5,
																													"type": "number",
																													"x-auditable": true
																												},
																												"upper": {
																													"description": "Upper bound for percentile estimate",
																													"example": 30.4,
																													"type": "number",
																													"x-auditable": true
																												}
																											},
																											"readOnly": true,
																											"type": "object"
																										},
																										"p99": {
																											"description": "Upper and lower bound for percentile estimate",
																											"properties": {
																												"lower": {
																													"description": "Lower bound for percentile estimate",
																													"example": 20.5,
																													"type": "number",
																													"x-auditable": true
																												},
																												"upper": {
																													"description": "Upper bound for percentile estimate",
																													"example": 30.4,
																													"type": "number",
																													"x-auditable": true
																												}
																											},
																											"readOnly": true,
																											"type": "object"
																										}
																									},
																									"type": "object"
																								},
																								"mean": {
																									"description": "Suggested threshold.",
																									"example": 25.5,
																									"type": "number",
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"type": "object"
																		},
																		{
																			"properties": {
																				"schema_info": {
																					"properties": {
																						"active_schema": {
																							"description": "Schema active on endpoint.",
																							"properties": {
																								"created_at": {
																									"example": "2014-01-01T05:20:00.12345Z",
																									"format": "date-time",
																									"type": "string",
																									"x-auditable": true
																								},
																								"id": {
																									"allOf": [
																										{
																											"minLength": 36,
																											"type": "string",
																											"x-auditable": true
																										},
																										{
																											"description": "UUID.",
																											"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																											"maxLength": 36,
																											"type": "string",
																											"x-auditable": true
																										}
																									]
																								},
																								"is_learned": {
																									"description": "True if schema is Cloudflare-provided.",
																									"example": true,
																									"type": "boolean",
																									"x-auditable": true
																								},
																								"name": {
																									"description": "Schema file name.",
																									"example": "api-endpoints-8694824bf5c04d019edcbf399c03c103-api-discovery.example.com-thresholds.json",
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						"learned_available": {
																							"description": "True if a Cloudflare-provided learned schema is available for this endpoint.",
																							"example": true,
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"mitigation_action": {
																							"description": "Action taken on requests failing validation.",
																							"enum": [
																								"none",
																								"log",
																								"block"
																							],
																							"example": "block",
																							"nullable": true,
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"readOnly": true,
																			"type": "object"
																		}
																	],
																	"readOnly": true,
																	"type": "object"
																}
															},
															"type": "object"
														}
													]
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add one operation to a zone response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Add one operation to a zone response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Add one operation to a zone",
		"tags": [
			"API Shield Endpoint Management"
		],
		"x-api-token-group": [
			"Account API Gateway",
			"Domain API Gateway"
		]
	}
}