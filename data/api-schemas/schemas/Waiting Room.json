{
	"DELETE /zones/{zone_id}/waiting_rooms/{waiting_room_id}": {
		"description": "Deletes a waiting room.",
		"operationId": "waiting-room-delete-waiting-room",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete waiting room response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete waiting room response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete waiting room",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"DELETE /zones/{zone_id}/waiting_rooms/{waiting_room_id}/events/{event_id}": {
		"description": "Deletes an event for a waiting room.",
		"operationId": "waiting-room-delete-event",
		"parameters": [
			{
				"in": "path",
				"name": "event_id",
				"required": true,
				"schema": {
					"example": "25756b2dfe6e378a06b033b670413757",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": "25756b2dfe6e378a06b033b670413757",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete event response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"example": "25756b2dfe6e378a06b033b670413757",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete event response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete event",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"DELETE /zones/{zone_id}/waiting_rooms/{waiting_room_id}/rules/{rule_id}": {
		"description": "Deletes a rule for a waiting room.",
		"operationId": "waiting-room-delete-waiting-room-rule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_id",
				"required": true,
				"schema": {
					"description": "The ID of the rule.",
					"example": "25756b2dfe6e378a06b033b670413757",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"action": {
														"description": "The action to take when the expression matches.",
														"enum": [
															"bypass_waiting_room"
														],
														"example": "bypass_waiting_room",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "The description of the rule.",
														"example": "allow all traffic from 10.20.30.40",
														"type": "string",
														"x-auditable": true
													},
													"enabled": {
														"default": true,
														"description": "When set to true, the rule is enabled.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"expression": {
														"description": "Criteria defining when there is a match for the current rule.",
														"example": "ip.src in {10.20.30.40}",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "The ID of the rule.",
														"example": "25756b2dfe6e378a06b033b670413757",
														"type": "string",
														"x-auditable": true
													},
													"last_updated": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Waiting Room Rule response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"action": {
																"description": "The action to take when the expression matches.",
																"enum": [
																	"bypass_waiting_room"
																],
																"example": "bypass_waiting_room",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "The description of the rule.",
																"example": "allow all traffic from 10.20.30.40",
																"type": "string",
																"x-auditable": true
															},
															"enabled": {
																"default": true,
																"description": "When set to true, the rule is enabled.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"expression": {
																"description": "Criteria defining when there is a match for the current rule.",
																"example": "ip.src in {10.20.30.40}",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "The ID of the rule.",
																"example": "25756b2dfe6e378a06b033b670413757",
																"type": "string",
																"x-auditable": true
															},
															"last_updated": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"version": {
																"description": "The version of the rule.",
																"example": "1",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Waiting Room Rule response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Waiting Room Rule",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_id}/waiting_rooms": {
		"description": "Lists waiting rooms for account.",
		"operationId": "waiting-room-list-waiting-rooms-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"description": "Page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"description": "Maximum number of results per page. Must be a multiple of 5.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 25,
					"maximum": 1000,
					"minimum": 5,
					"type": "number"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"additional_routes": {
														"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
														"items": {
															"properties": {
																"host": {
																	"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																	"example": "shop2.example.com",
																	"type": "string",
																	"x-auditable": true
																},
																"path": {
																	"default": "/",
																	"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																	"example": "/shop2/checkout",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": "array"
													},
													"cookie_attributes": {
														"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
														"properties": {
															"samesite": {
																"default": "auto",
																"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																"enum": [
																	"auto",
																	"lax",
																	"none",
																	"strict"
																],
																"example": "auto",
																"type": "string",
																"x-auditable": true
															},
															"secure": {
																"default": "auto",
																"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																"enum": [
																	"auto",
																	"always",
																	"never"
																],
																"example": "auto",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"cookie_suffix": {
														"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
														"example": "abcd",
														"type": "string",
														"x-auditable": true
													},
													"created_on": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"custom_page_html": {
														"default": "",
														"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
														"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
														"type": "string",
														"x-auditable": true
													},
													"default_template_language": {
														"default": "en-US",
														"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
														"enum": [
															"en-US",
															"es-ES",
															"de-DE",
															"fr-FR",
															"it-IT",
															"ja-JP",
															"ko-KR",
															"pt-BR",
															"zh-CN",
															"zh-TW",
															"nl-NL",
															"pl-PL",
															"id-ID",
															"tr-TR",
															"ar-EG",
															"ru-RU",
															"fa-IR",
															"bg-BG",
															"hr-HR",
															"cs-CZ",
															"da-DK",
															"fi-FI",
															"lt-LT",
															"ms-MY",
															"nb-NO",
															"ro-RO",
															"el-GR",
															"he-IL",
															"hi-IN",
															"hu-HU",
															"sr-BA",
															"sk-SK",
															"sl-SI",
															"sv-SE",
															"tl-PH",
															"th-TH",
															"uk-UA",
															"vi-VN"
														],
														"example": "es-ES",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "A note that you can use to add more details about the waiting room.",
														"example": "Production - DO NOT MODIFY",
														"type": "string",
														"x-auditable": true
													},
													"disable_session_renewal": {
														"default": false,
														"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
														"example": false,
														"type": "boolean",
														"x-auditable": true
													},
													"enabled_origin_commands": {
														"default": [],
														"description": "A list of enabled origin commands.",
														"items": {
															"enum": [
																"revoke"
															],
															"type": "string",
															"uniqueItems": true,
															"x-auditable": true
														},
														"type": "array"
													},
													"host": {
														"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
														"example": "shop.example.com",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"example": "699d98642c564d2e855e9661899b7252",
														"type": "string",
														"x-auditable": true
													},
													"json_response_enabled": {
														"default": false,
														"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
														"example": false,
														"type": "boolean",
														"x-auditable": true
													},
													"modified_on": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
														"example": "production_webinar",
														"type": "string",
														"x-auditable": true
													},
													"new_users_per_minute": {
														"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
														"maximum": 2147483647,
														"minimum": 200,
														"type": "integer",
														"x-auditable": true
													},
													"next_event_prequeue_start_time": {
														"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
														"example": "2021-09-28T15:00:00.000Z",
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"next_event_start_time": {
														"description": "An ISO 8601 timestamp that marks when the next event will start.",
														"example": "2021-09-28T15:00:00.000Z",
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"path": {
														"default": "/",
														"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
														"example": "/shop/checkout",
														"type": "string",
														"x-auditable": true
													},
													"queue_all": {
														"default": false,
														"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"queueing_method": {
														"default": "fifo",
														"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
														"enum": [
															"fifo",
															"random",
															"passthrough",
															"reject"
														],
														"example": "fifo",
														"type": "string",
														"x-auditable": true
													},
													"queueing_status_code": {
														"default": 200,
														"description": "HTTP status code returned to a user while in the queue.",
														"enum": [
															200,
															202,
															429
														],
														"example": 202,
														"type": "integer",
														"x-auditable": true
													},
													"session_duration": {
														"default": 5,
														"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
														"maximum": 30,
														"minimum": 1,
														"type": "integer",
														"x-auditable": true
													},
													"suspended": {
														"default": false,
														"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
														"type": "boolean",
														"x-auditable": true
													},
													"total_active_users": {
														"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
														"maximum": 2147483647,
														"minimum": 200,
														"type": "integer",
														"x-auditable": true
													},
													"turnstile_action": {
														"default": "log",
														"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
														"enum": [
															"log",
															"infinite_queue"
														],
														"type": "string",
														"x-auditable": true
													},
													"turnstile_mode": {
														"default": "invisible",
														"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
														"enum": [
															"off",
															"invisible",
															"visible_non_interactive",
															"visible_managed"
														],
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List waiting rooms for account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"additional_routes": {
																"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
																"items": {
																	"properties": {
																		"host": {
																			"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																			"example": "shop2.example.com",
																			"type": "string",
																			"x-auditable": true
																		},
																		"path": {
																			"default": "/",
																			"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																			"example": "/shop2/checkout",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"type": "array"
															},
															"cookie_attributes": {
																"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
																"properties": {
																	"samesite": {
																		"default": "auto",
																		"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																		"enum": [
																			"auto",
																			"lax",
																			"none",
																			"strict"
																		],
																		"example": "auto",
																		"type": "string",
																		"x-auditable": true
																	},
																	"secure": {
																		"default": "auto",
																		"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																		"enum": [
																			"auto",
																			"always",
																			"never"
																		],
																		"example": "auto",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"cookie_suffix": {
																"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
																"example": "abcd",
																"type": "string",
																"x-auditable": true
															},
															"created_on": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"custom_page_html": {
																"default": "",
																"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
																"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
																"type": "string",
																"x-auditable": true
															},
															"default_template_language": {
																"default": "en-US",
																"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
																"enum": [
																	"en-US",
																	"es-ES",
																	"de-DE",
																	"fr-FR",
																	"it-IT",
																	"ja-JP",
																	"ko-KR",
																	"pt-BR",
																	"zh-CN",
																	"zh-TW",
																	"nl-NL",
																	"pl-PL",
																	"id-ID",
																	"tr-TR",
																	"ar-EG",
																	"ru-RU",
																	"fa-IR",
																	"bg-BG",
																	"hr-HR",
																	"cs-CZ",
																	"da-DK",
																	"fi-FI",
																	"lt-LT",
																	"ms-MY",
																	"nb-NO",
																	"ro-RO",
																	"el-GR",
																	"he-IL",
																	"hi-IN",
																	"hu-HU",
																	"sr-BA",
																	"sk-SK",
																	"sl-SI",
																	"sv-SE",
																	"tl-PH",
																	"th-TH",
																	"uk-UA",
																	"vi-VN"
																],
																"example": "es-ES",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "A note that you can use to add more details about the waiting room.",
																"example": "Production - DO NOT MODIFY",
																"type": "string",
																"x-auditable": true
															},
															"disable_session_renewal": {
																"default": false,
																"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
																"example": false,
																"type": "boolean",
																"x-auditable": true
															},
															"enabled_origin_commands": {
																"default": [],
																"description": "A list of enabled origin commands.",
																"items": {
																	"enum": [
																		"revoke"
																	],
																	"type": "string",
																	"uniqueItems": true,
																	"x-auditable": true
																},
																"type": "array"
															},
															"host": {
																"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
																"example": "shop.example.com",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"example": "699d98642c564d2e855e9661899b7252",
																"type": "string",
																"x-auditable": true
															},
															"json_response_enabled": {
																"default": false,
																"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
																"example": false,
																"type": "boolean",
																"x-auditable": true
															},
															"modified_on": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
																"example": "production_webinar",
																"type": "string",
																"x-auditable": true
															},
															"new_users_per_minute": {
																"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
																"maximum": 2147483647,
																"minimum": 200,
																"type": "integer",
																"x-auditable": true
															},
															"next_event_prequeue_start_time": {
																"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
																"example": "2021-09-28T15:00:00.000Z",
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"next_event_start_time": {
																"description": "An ISO 8601 timestamp that marks when the next event will start.",
																"example": "2021-09-28T15:00:00.000Z",
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"path": {
																"default": "/",
																"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																"example": "/shop/checkout",
																"type": "string",
																"x-auditable": true
															},
															"queue_all": {
																"default": false,
																"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"queueing_method": {
																"default": "fifo",
																"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
																"enum": [
																	"fifo",
																	"random",
																	"passthrough",
																	"reject"
																],
																"example": "fifo",
																"type": "string",
																"x-auditable": true
															},
															"queueing_status_code": {
																"default": 200,
																"description": "HTTP status code returned to a user while in the queue.",
																"enum": [
																	200,
																	202,
																	429
																],
																"example": 202,
																"type": "integer",
																"x-auditable": true
															},
															"session_duration": {
																"default": 5,
																"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
																"maximum": 30,
																"minimum": 1,
																"type": "integer",
																"x-auditable": true
															},
															"suspended": {
																"default": false,
																"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
																"type": "boolean",
																"x-auditable": true
															},
															"total_active_users": {
																"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
																"maximum": 2147483647,
																"minimum": 200,
																"type": "integer",
																"x-auditable": true
															},
															"turnstile_action": {
																"default": "log",
																"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
																"enum": [
																	"log",
																	"infinite_queue"
																],
																"type": "string",
																"x-auditable": true
															},
															"turnstile_mode": {
																"default": "invisible",
																"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
																"enum": [
																	"off",
																	"invisible",
																	"visible_non_interactive",
																	"visible_managed"
																],
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List waiting rooms for account response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List waiting rooms for account",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Account Waiting Rooms Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms": {
		"description": "Lists waiting rooms for zone.",
		"operationId": "waiting-room-list-waiting-rooms",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"description": "Page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"description": "Maximum number of results per page. Must be a multiple of 5.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 25,
					"maximum": 1000,
					"minimum": 5,
					"type": "number"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"additional_routes": {
														"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
														"items": {
															"properties": {
																"host": {
																	"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																	"example": "shop2.example.com",
																	"type": "string",
																	"x-auditable": true
																},
																"path": {
																	"default": "/",
																	"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																	"example": "/shop2/checkout",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": "array"
													},
													"cookie_attributes": {
														"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
														"properties": {
															"samesite": {
																"default": "auto",
																"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																"enum": [
																	"auto",
																	"lax",
																	"none",
																	"strict"
																],
																"example": "auto",
																"type": "string",
																"x-auditable": true
															},
															"secure": {
																"default": "auto",
																"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																"enum": [
																	"auto",
																	"always",
																	"never"
																],
																"example": "auto",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"cookie_suffix": {
														"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
														"example": "abcd",
														"type": "string",
														"x-auditable": true
													},
													"created_on": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"custom_page_html": {
														"default": "",
														"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
														"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
														"type": "string",
														"x-auditable": true
													},
													"default_template_language": {
														"default": "en-US",
														"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
														"enum": [
															"en-US",
															"es-ES",
															"de-DE",
															"fr-FR",
															"it-IT",
															"ja-JP",
															"ko-KR",
															"pt-BR",
															"zh-CN",
															"zh-TW",
															"nl-NL",
															"pl-PL",
															"id-ID",
															"tr-TR",
															"ar-EG",
															"ru-RU",
															"fa-IR",
															"bg-BG",
															"hr-HR",
															"cs-CZ",
															"da-DK",
															"fi-FI",
															"lt-LT",
															"ms-MY",
															"nb-NO",
															"ro-RO",
															"el-GR",
															"he-IL",
															"hi-IN",
															"hu-HU",
															"sr-BA",
															"sk-SK",
															"sl-SI",
															"sv-SE",
															"tl-PH",
															"th-TH",
															"uk-UA",
															"vi-VN"
														],
														"example": "es-ES",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "A note that you can use to add more details about the waiting room.",
														"example": "Production - DO NOT MODIFY",
														"type": "string",
														"x-auditable": true
													},
													"disable_session_renewal": {
														"default": false,
														"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
														"example": false,
														"type": "boolean",
														"x-auditable": true
													},
													"enabled_origin_commands": {
														"default": [],
														"description": "A list of enabled origin commands.",
														"items": {
															"enum": [
																"revoke"
															],
															"type": "string",
															"uniqueItems": true,
															"x-auditable": true
														},
														"type": "array"
													},
													"host": {
														"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
														"example": "shop.example.com",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"example": "699d98642c564d2e855e9661899b7252",
														"type": "string",
														"x-auditable": true
													},
													"json_response_enabled": {
														"default": false,
														"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
														"example": false,
														"type": "boolean",
														"x-auditable": true
													},
													"modified_on": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
														"example": "production_webinar",
														"type": "string",
														"x-auditable": true
													},
													"new_users_per_minute": {
														"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
														"maximum": 2147483647,
														"minimum": 200,
														"type": "integer",
														"x-auditable": true
													},
													"next_event_prequeue_start_time": {
														"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
														"example": "2021-09-28T15:00:00.000Z",
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"next_event_start_time": {
														"description": "An ISO 8601 timestamp that marks when the next event will start.",
														"example": "2021-09-28T15:00:00.000Z",
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"path": {
														"default": "/",
														"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
														"example": "/shop/checkout",
														"type": "string",
														"x-auditable": true
													},
													"queue_all": {
														"default": false,
														"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"queueing_method": {
														"default": "fifo",
														"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
														"enum": [
															"fifo",
															"random",
															"passthrough",
															"reject"
														],
														"example": "fifo",
														"type": "string",
														"x-auditable": true
													},
													"queueing_status_code": {
														"default": 200,
														"description": "HTTP status code returned to a user while in the queue.",
														"enum": [
															200,
															202,
															429
														],
														"example": 202,
														"type": "integer",
														"x-auditable": true
													},
													"session_duration": {
														"default": 5,
														"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
														"maximum": 30,
														"minimum": 1,
														"type": "integer",
														"x-auditable": true
													},
													"suspended": {
														"default": false,
														"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
														"type": "boolean",
														"x-auditable": true
													},
													"total_active_users": {
														"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
														"maximum": 2147483647,
														"minimum": 200,
														"type": "integer",
														"x-auditable": true
													},
													"turnstile_action": {
														"default": "log",
														"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
														"enum": [
															"log",
															"infinite_queue"
														],
														"type": "string",
														"x-auditable": true
													},
													"turnstile_mode": {
														"default": "invisible",
														"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
														"enum": [
															"off",
															"invisible",
															"visible_non_interactive",
															"visible_managed"
														],
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List waiting rooms for zone response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"additional_routes": {
																"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
																"items": {
																	"properties": {
																		"host": {
																			"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																			"example": "shop2.example.com",
																			"type": "string",
																			"x-auditable": true
																		},
																		"path": {
																			"default": "/",
																			"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																			"example": "/shop2/checkout",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																"type": "array"
															},
															"cookie_attributes": {
																"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
																"properties": {
																	"samesite": {
																		"default": "auto",
																		"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																		"enum": [
																			"auto",
																			"lax",
																			"none",
																			"strict"
																		],
																		"example": "auto",
																		"type": "string",
																		"x-auditable": true
																	},
																	"secure": {
																		"default": "auto",
																		"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																		"enum": [
																			"auto",
																			"always",
																			"never"
																		],
																		"example": "auto",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"cookie_suffix": {
																"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
																"example": "abcd",
																"type": "string",
																"x-auditable": true
															},
															"created_on": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"custom_page_html": {
																"default": "",
																"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
																"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
																"type": "string",
																"x-auditable": true
															},
															"default_template_language": {
																"default": "en-US",
																"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
																"enum": [
																	"en-US",
																	"es-ES",
																	"de-DE",
																	"fr-FR",
																	"it-IT",
																	"ja-JP",
																	"ko-KR",
																	"pt-BR",
																	"zh-CN",
																	"zh-TW",
																	"nl-NL",
																	"pl-PL",
																	"id-ID",
																	"tr-TR",
																	"ar-EG",
																	"ru-RU",
																	"fa-IR",
																	"bg-BG",
																	"hr-HR",
																	"cs-CZ",
																	"da-DK",
																	"fi-FI",
																	"lt-LT",
																	"ms-MY",
																	"nb-NO",
																	"ro-RO",
																	"el-GR",
																	"he-IL",
																	"hi-IN",
																	"hu-HU",
																	"sr-BA",
																	"sk-SK",
																	"sl-SI",
																	"sv-SE",
																	"tl-PH",
																	"th-TH",
																	"uk-UA",
																	"vi-VN"
																],
																"example": "es-ES",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "A note that you can use to add more details about the waiting room.",
																"example": "Production - DO NOT MODIFY",
																"type": "string",
																"x-auditable": true
															},
															"disable_session_renewal": {
																"default": false,
																"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
																"example": false,
																"type": "boolean",
																"x-auditable": true
															},
															"enabled_origin_commands": {
																"default": [],
																"description": "A list of enabled origin commands.",
																"items": {
																	"enum": [
																		"revoke"
																	],
																	"type": "string",
																	"uniqueItems": true,
																	"x-auditable": true
																},
																"type": "array"
															},
															"host": {
																"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
																"example": "shop.example.com",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"example": "699d98642c564d2e855e9661899b7252",
																"type": "string",
																"x-auditable": true
															},
															"json_response_enabled": {
																"default": false,
																"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
																"example": false,
																"type": "boolean",
																"x-auditable": true
															},
															"modified_on": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
																"example": "production_webinar",
																"type": "string",
																"x-auditable": true
															},
															"new_users_per_minute": {
																"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
																"maximum": 2147483647,
																"minimum": 200,
																"type": "integer",
																"x-auditable": true
															},
															"next_event_prequeue_start_time": {
																"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
																"example": "2021-09-28T15:00:00.000Z",
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"next_event_start_time": {
																"description": "An ISO 8601 timestamp that marks when the next event will start.",
																"example": "2021-09-28T15:00:00.000Z",
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"path": {
																"default": "/",
																"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																"example": "/shop/checkout",
																"type": "string",
																"x-auditable": true
															},
															"queue_all": {
																"default": false,
																"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"queueing_method": {
																"default": "fifo",
																"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
																"enum": [
																	"fifo",
																	"random",
																	"passthrough",
																	"reject"
																],
																"example": "fifo",
																"type": "string",
																"x-auditable": true
															},
															"queueing_status_code": {
																"default": 200,
																"description": "HTTP status code returned to a user while in the queue.",
																"enum": [
																	200,
																	202,
																	429
																],
																"example": 202,
																"type": "integer",
																"x-auditable": true
															},
															"session_duration": {
																"default": 5,
																"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
																"maximum": 30,
																"minimum": 1,
																"type": "integer",
																"x-auditable": true
															},
															"suspended": {
																"default": false,
																"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
																"type": "boolean",
																"x-auditable": true
															},
															"total_active_users": {
																"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
																"maximum": 2147483647,
																"minimum": 200,
																"type": "integer",
																"x-auditable": true
															},
															"turnstile_action": {
																"default": "log",
																"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
																"enum": [
																	"log",
																	"infinite_queue"
																],
																"type": "string",
																"x-auditable": true
															},
															"turnstile_mode": {
																"default": "invisible",
																"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
																"enum": [
																	"off",
																	"invisible",
																	"visible_non_interactive",
																	"visible_managed"
																],
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List waiting rooms for zone response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List waiting rooms for zone",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms/{waiting_room_id}": {
		"description": "Fetches a single configured waiting room.",
		"operationId": "waiting-room-waiting-room-details",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"additional_routes": {
													"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
													"items": {
														"properties": {
															"host": {
																"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																"example": "shop2.example.com",
																"type": "string",
																"x-auditable": true
															},
															"path": {
																"default": "/",
																"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																"example": "/shop2/checkout",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"cookie_attributes": {
													"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
													"properties": {
														"samesite": {
															"default": "auto",
															"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
															"enum": [
																"auto",
																"lax",
																"none",
																"strict"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														},
														"secure": {
															"default": "auto",
															"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
															"enum": [
																"auto",
																"always",
																"never"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"cookie_suffix": {
													"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
													"example": "abcd",
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"default": "",
													"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
													"type": "string",
													"x-auditable": true
												},
												"default_template_language": {
													"default": "en-US",
													"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
													"enum": [
														"en-US",
														"es-ES",
														"de-DE",
														"fr-FR",
														"it-IT",
														"ja-JP",
														"ko-KR",
														"pt-BR",
														"zh-CN",
														"zh-TW",
														"nl-NL",
														"pl-PL",
														"id-ID",
														"tr-TR",
														"ar-EG",
														"ru-RU",
														"fa-IR",
														"bg-BG",
														"hr-HR",
														"cs-CZ",
														"da-DK",
														"fi-FI",
														"lt-LT",
														"ms-MY",
														"nb-NO",
														"ro-RO",
														"el-GR",
														"he-IL",
														"hi-IN",
														"hu-HU",
														"sr-BA",
														"sk-SK",
														"sl-SI",
														"sv-SE",
														"tl-PH",
														"th-TH",
														"uk-UA",
														"vi-VN"
													],
													"example": "es-ES",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the waiting room.",
													"example": "Production - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled_origin_commands": {
													"default": [],
													"description": "A list of enabled origin commands.",
													"items": {
														"enum": [
															"revoke"
														],
														"type": "string",
														"uniqueItems": true,
														"x-auditable": true
													},
													"type": "array"
												},
												"host": {
													"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
													"example": "shop.example.com",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string",
													"x-auditable": true
												},
												"json_response_enabled": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"next_event_prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"next_event_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will start.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"path": {
													"default": "/",
													"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
													"example": "/shop/checkout",
													"type": "string",
													"x-auditable": true
												},
												"queue_all": {
													"default": false,
													"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"queueing_method": {
													"default": "fifo",
													"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
													"enum": [
														"fifo",
														"random",
														"passthrough",
														"reject"
													],
													"example": "fifo",
													"type": "string",
													"x-auditable": true
												},
												"queueing_status_code": {
													"default": 200,
													"description": "HTTP status code returned to a user while in the queue.",
													"enum": [
														200,
														202,
														429
													],
													"example": 202,
													"type": "integer",
													"x-auditable": true
												},
												"session_duration": {
													"default": 5,
													"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
													"maximum": 30,
													"minimum": 1,
													"type": "integer",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"default": "log",
													"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
													"enum": [
														"log",
														"infinite_queue"
													],
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"default": "invisible",
													"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Waiting room details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"additional_routes": {
															"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
															"items": {
																"properties": {
																	"host": {
																		"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																		"example": "shop2.example.com",
																		"type": "string",
																		"x-auditable": true
																	},
																	"path": {
																		"default": "/",
																		"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																		"example": "/shop2/checkout",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"cookie_attributes": {
															"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
															"properties": {
																"samesite": {
																	"default": "auto",
																	"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																	"enum": [
																		"auto",
																		"lax",
																		"none",
																		"strict"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																},
																"secure": {
																	"default": "auto",
																	"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																	"enum": [
																		"auto",
																		"always",
																		"never"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"cookie_suffix": {
															"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
															"example": "abcd",
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"default": "",
															"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
															"type": "string",
															"x-auditable": true
														},
														"default_template_language": {
															"default": "en-US",
															"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
															"enum": [
																"en-US",
																"es-ES",
																"de-DE",
																"fr-FR",
																"it-IT",
																"ja-JP",
																"ko-KR",
																"pt-BR",
																"zh-CN",
																"zh-TW",
																"nl-NL",
																"pl-PL",
																"id-ID",
																"tr-TR",
																"ar-EG",
																"ru-RU",
																"fa-IR",
																"bg-BG",
																"hr-HR",
																"cs-CZ",
																"da-DK",
																"fi-FI",
																"lt-LT",
																"ms-MY",
																"nb-NO",
																"ro-RO",
																"el-GR",
																"he-IL",
																"hi-IN",
																"hu-HU",
																"sr-BA",
																"sk-SK",
																"sl-SI",
																"sv-SE",
																"tl-PH",
																"th-TH",
																"uk-UA",
																"vi-VN"
															],
															"example": "es-ES",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the waiting room.",
															"example": "Production - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled_origin_commands": {
															"default": [],
															"description": "A list of enabled origin commands.",
															"items": {
																"enum": [
																	"revoke"
																],
																"type": "string",
																"uniqueItems": true,
																"x-auditable": true
															},
															"type": "array"
														},
														"host": {
															"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
															"example": "shop.example.com",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string",
															"x-auditable": true
														},
														"json_response_enabled": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"next_event_prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"next_event_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will start.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"path": {
															"default": "/",
															"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
															"example": "/shop/checkout",
															"type": "string",
															"x-auditable": true
														},
														"queue_all": {
															"default": false,
															"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"queueing_method": {
															"default": "fifo",
															"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
															"enum": [
																"fifo",
																"random",
																"passthrough",
																"reject"
															],
															"example": "fifo",
															"type": "string",
															"x-auditable": true
														},
														"queueing_status_code": {
															"default": 200,
															"description": "HTTP status code returned to a user while in the queue.",
															"enum": [
																200,
																202,
																429
															],
															"example": 202,
															"type": "integer",
															"x-auditable": true
														},
														"session_duration": {
															"default": 5,
															"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
															"maximum": 30,
															"minimum": 1,
															"type": "integer",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"default": "log",
															"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
															"enum": [
																"log",
																"infinite_queue"
															],
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"default": "invisible",
															"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Waiting room details response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Waiting room details",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms/{waiting_room_id}/events": {
		"description": "Lists events for a waiting room.",
		"operationId": "waiting-room-list-events",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"description": "Page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"description": "Maximum number of results per page. Must be a multiple of 5.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 25,
					"maximum": 1000,
					"minimum": 5,
					"type": "number"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created_on": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"custom_page_html": {
														"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
														"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "A note that you can use to add more details about the event.",
														"example": "Production event - DO NOT MODIFY",
														"type": "string",
														"x-auditable": true
													},
													"disable_session_renewal": {
														"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
														"nullable": true,
														"type": "boolean",
														"x-auditable": true
													},
													"event_end_time": {
														"description": "An ISO 8601 timestamp that marks the end of the event.",
														"example": "2021-09-28T17:00:00.000Z",
														"type": "string",
														"x-auditable": true
													},
													"event_start_time": {
														"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
														"example": "2021-09-28T15:30:00.000Z",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"example": "25756b2dfe6e378a06b033b670413757",
														"type": "string",
														"x-auditable": true
													},
													"modified_on": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
														"example": "production_webinar_event",
														"type": "string",
														"x-auditable": true
													},
													"new_users_per_minute": {
														"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
														"maximum": 2147483647,
														"minimum": 200,
														"nullable": true,
														"type": "integer",
														"x-auditable": true
													},
													"prequeue_start_time": {
														"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
														"example": "2021-09-28T15:00:00.000Z",
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"queueing_method": {
														"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
														"example": "random",
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"session_duration": {
														"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
														"maximum": 30,
														"minimum": 1,
														"nullable": true,
														"type": "integer",
														"x-auditable": true
													},
													"shuffle_at_event_start": {
														"default": false,
														"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
														"type": "boolean",
														"x-auditable": true
													},
													"suspended": {
														"default": false,
														"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
														"type": "boolean",
														"x-auditable": true
													},
													"total_active_users": {
														"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
														"maximum": 2147483647,
														"minimum": 200,
														"nullable": true,
														"type": "integer",
														"x-auditable": true
													},
													"turnstile_action": {
														"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
														"enum": [
															"log",
															"infinite_queue"
														],
														"nullable": true,
														"type": "string",
														"x-auditable": true
													},
													"turnstile_mode": {
														"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
														"enum": [
															"off",
															"invisible",
															"visible_non_interactive",
															"visible_managed"
														],
														"nullable": true,
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List events response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"created_on": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"custom_page_html": {
																"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
																"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "A note that you can use to add more details about the event.",
																"example": "Production event - DO NOT MODIFY",
																"type": "string",
																"x-auditable": true
															},
															"disable_session_renewal": {
																"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
																"nullable": true,
																"type": "boolean",
																"x-auditable": true
															},
															"event_end_time": {
																"description": "An ISO 8601 timestamp that marks the end of the event.",
																"example": "2021-09-28T17:00:00.000Z",
																"type": "string",
																"x-auditable": true
															},
															"event_start_time": {
																"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
																"example": "2021-09-28T15:30:00.000Z",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"example": "25756b2dfe6e378a06b033b670413757",
																"type": "string",
																"x-auditable": true
															},
															"modified_on": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
																"example": "production_webinar_event",
																"type": "string",
																"x-auditable": true
															},
															"new_users_per_minute": {
																"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
																"maximum": 2147483647,
																"minimum": 200,
																"nullable": true,
																"type": "integer",
																"x-auditable": true
															},
															"prequeue_start_time": {
																"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
																"example": "2021-09-28T15:00:00.000Z",
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"queueing_method": {
																"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
																"example": "random",
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"session_duration": {
																"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
																"maximum": 30,
																"minimum": 1,
																"nullable": true,
																"type": "integer",
																"x-auditable": true
															},
															"shuffle_at_event_start": {
																"default": false,
																"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
																"type": "boolean",
																"x-auditable": true
															},
															"suspended": {
																"default": false,
																"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
																"type": "boolean",
																"x-auditable": true
															},
															"total_active_users": {
																"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
																"maximum": 2147483647,
																"minimum": 200,
																"nullable": true,
																"type": "integer",
																"x-auditable": true
															},
															"turnstile_action": {
																"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
																"enum": [
																	"log",
																	"infinite_queue"
																],
																"nullable": true,
																"type": "string",
																"x-auditable": true
															},
															"turnstile_mode": {
																"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
																"enum": [
																	"off",
																	"invisible",
																	"visible_non_interactive",
																	"visible_managed"
																],
																"nullable": true,
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List events response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List events",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms/{waiting_room_id}/events/{event_id}": {
		"description": "Fetches a single configured event for a waiting room.",
		"operationId": "waiting-room-event-details",
		"parameters": [
			{
				"in": "path",
				"name": "event_id",
				"required": true,
				"schema": {
					"example": "25756b2dfe6e378a06b033b670413757",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the event.",
													"example": "Production event - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
													"nullable": true,
													"type": "boolean",
													"x-auditable": true
												},
												"event_end_time": {
													"description": "An ISO 8601 timestamp that marks the end of the event.",
													"example": "2021-09-28T17:00:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"event_start_time": {
													"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
													"example": "2021-09-28T15:30:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "25756b2dfe6e378a06b033b670413757",
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar_event",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"queueing_method": {
													"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
													"example": "random",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"session_duration": {
													"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
													"maximum": 30,
													"minimum": 1,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"shuffle_at_event_start": {
													"default": false,
													"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
													"type": "boolean",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
													"enum": [
														"log",
														"infinite_queue"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Event details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the event.",
															"example": "Production event - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
															"nullable": true,
															"type": "boolean",
															"x-auditable": true
														},
														"event_end_time": {
															"description": "An ISO 8601 timestamp that marks the end of the event.",
															"example": "2021-09-28T17:00:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"event_start_time": {
															"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
															"example": "2021-09-28T15:30:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "25756b2dfe6e378a06b033b670413757",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar_event",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"queueing_method": {
															"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
															"example": "random",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"session_duration": {
															"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
															"maximum": 30,
															"minimum": 1,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"shuffle_at_event_start": {
															"default": false,
															"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
															"type": "boolean",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
															"enum": [
																"log",
																"infinite_queue"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Event details response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Event details",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms/{waiting_room_id}/events/{event_id}/details": {
		"description": "Previews an event's configuration as if it was active. Inherited fields from the waiting room will be displayed with their current values.",
		"operationId": "waiting-room-preview-active-event-details",
		"parameters": [
			{
				"in": "path",
				"name": "event_id",
				"required": true,
				"schema": {
					"example": "25756b2dfe6e378a06b033b670413757",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the event.",
													"example": "Production event - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"event_end_time": {
													"description": "An ISO 8601 timestamp that marks the end of the event.",
													"example": "2021-09-28T17:00:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"event_start_time": {
													"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
													"example": "2021-09-28T15:30:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "25756b2dfe6e378a06b033b670413757",
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar_event",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"type": "integer",
													"x-auditable": true
												},
												"prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"queueing_method": {
													"example": "random",
													"type": "string",
													"x-auditable": true
												},
												"session_duration": {
													"type": "integer",
													"x-auditable": true
												},
												"shuffle_at_event_start": {
													"default": false,
													"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
													"type": "boolean",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"type": "integer",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Preview active event details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the event.",
															"example": "Production event - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"event_end_time": {
															"description": "An ISO 8601 timestamp that marks the end of the event.",
															"example": "2021-09-28T17:00:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"event_start_time": {
															"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
															"example": "2021-09-28T15:30:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "25756b2dfe6e378a06b033b670413757",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar_event",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"type": "integer",
															"x-auditable": true
														},
														"prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"queueing_method": {
															"example": "random",
															"type": "string",
															"x-auditable": true
														},
														"session_duration": {
															"type": "integer",
															"x-auditable": true
														},
														"shuffle_at_event_start": {
															"default": false,
															"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
															"type": "boolean",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"type": "integer",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Preview active event details response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Preview active event details",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms/{waiting_room_id}/rules": {
		"description": "Lists rules for a waiting room.",
		"operationId": "waiting-room-list-waiting-room-rules",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"action": {
														"description": "The action to take when the expression matches.",
														"enum": [
															"bypass_waiting_room"
														],
														"example": "bypass_waiting_room",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "The description of the rule.",
														"example": "allow all traffic from 10.20.30.40",
														"type": "string",
														"x-auditable": true
													},
													"enabled": {
														"default": true,
														"description": "When set to true, the rule is enabled.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"expression": {
														"description": "Criteria defining when there is a match for the current rule.",
														"example": "ip.src in {10.20.30.40}",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "The ID of the rule.",
														"example": "25756b2dfe6e378a06b033b670413757",
														"type": "string",
														"x-auditable": true
													},
													"last_updated": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List Waiting Room Rules response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"action": {
																"description": "The action to take when the expression matches.",
																"enum": [
																	"bypass_waiting_room"
																],
																"example": "bypass_waiting_room",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "The description of the rule.",
																"example": "allow all traffic from 10.20.30.40",
																"type": "string",
																"x-auditable": true
															},
															"enabled": {
																"default": true,
																"description": "When set to true, the rule is enabled.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"expression": {
																"description": "Criteria defining when there is a match for the current rule.",
																"example": "ip.src in {10.20.30.40}",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "The ID of the rule.",
																"example": "25756b2dfe6e378a06b033b670413757",
																"type": "string",
																"x-auditable": true
															},
															"last_updated": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"version": {
																"description": "The version of the rule.",
																"example": "1",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List Waiting Room Rules response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Waiting Room Rules",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms/{waiting_room_id}/status": {
		"description": "Fetches the status of a configured waiting room. Response fields include:\n1. `status`: String indicating the status of the waiting room. The possible status are:\n\t- **not_queueing** indicates that the configured thresholds have not been met and all users are going through to the origin.\n\t- **queueing** indicates that the thresholds have been met and some users are held in the waiting room.\n\t- **event_prequeueing** indicates that an event is active and is currently prequeueing users before it starts.\n\t- **suspended** indicates that the room is suspended.\n2. `event_id`: String of the current event's `id` if an event is active, otherwise an empty string.\n3. `estimated_queued_users`: Integer of the estimated number of users currently waiting in the queue.\n4. `estimated_total_active_users`: Integer of the estimated number of users currently active on the origin.\n5. `max_estimated_time_minutes`: Integer of the maximum estimated time currently presented to the users.",
		"operationId": "waiting-room-get-waiting-room-status",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"estimated_queued_users": {
													"type": "integer",
													"x-auditable": true
												},
												"estimated_total_active_users": {
													"type": "integer",
													"x-auditable": true
												},
												"event_id": {
													"example": "25756b2dfe6e378a06b033b670413757",
													"type": "string",
													"x-auditable": true
												},
												"max_estimated_time_minutes": {
													"type": "integer",
													"x-auditable": true
												},
												"status": {
													"enum": [
														"event_prequeueing",
														"not_queueing",
														"queueing",
														"suspended"
													],
													"example": "queueing",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get waiting room status response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"estimated_queued_users": {
															"type": "integer",
															"x-auditable": true
														},
														"estimated_total_active_users": {
															"type": "integer",
															"x-auditable": true
														},
														"event_id": {
															"example": "25756b2dfe6e378a06b033b670413757",
															"type": "string",
															"x-auditable": true
														},
														"max_estimated_time_minutes": {
															"type": "integer",
															"x-auditable": true
														},
														"status": {
															"enum": [
																"event_prequeueing",
																"not_queueing",
																"queueing",
																"suspended"
															],
															"example": "queueing",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get waiting room status response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get waiting room status",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/waiting_rooms/settings": {
		"operationId": "waiting-room-get-zone-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"search_engine_crawler_bypass": {
													"default": false,
													"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"search_engine_crawler_bypass"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "The current zone-level Waiting Room settings"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"search_engine_crawler_bypass": {
															"default": false,
															"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"search_engine_crawler_bypass"
													],
													"type": "object"
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "The current zone-level Waiting Room settings response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get zone-level Waiting Room settings",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Read",
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_id}/waiting_rooms/{waiting_room_id}": {
		"description": "Patches a configured waiting room.",
		"operationId": "waiting-room-patch-waiting-room",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"additional_routes": {
								"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
								"items": {
									"properties": {
										"host": {
											"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
											"example": "shop2.example.com",
											"type": "string",
											"x-auditable": true
										},
										"path": {
											"default": "/",
											"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
											"example": "/shop2/checkout",
											"type": "string",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"cookie_attributes": {
								"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
								"properties": {
									"samesite": {
										"default": "auto",
										"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
										"enum": [
											"auto",
											"lax",
											"none",
											"strict"
										],
										"example": "auto",
										"type": "string",
										"x-auditable": true
									},
									"secure": {
										"default": "auto",
										"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
										"enum": [
											"auto",
											"always",
											"never"
										],
										"example": "auto",
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							"cookie_suffix": {
								"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
								"example": "abcd",
								"type": "string",
								"x-auditable": true
							},
							"custom_page_html": {
								"default": "",
								"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
								"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
								"type": "string",
								"x-auditable": true
							},
							"default_template_language": {
								"default": "en-US",
								"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
								"enum": [
									"en-US",
									"es-ES",
									"de-DE",
									"fr-FR",
									"it-IT",
									"ja-JP",
									"ko-KR",
									"pt-BR",
									"zh-CN",
									"zh-TW",
									"nl-NL",
									"pl-PL",
									"id-ID",
									"tr-TR",
									"ar-EG",
									"ru-RU",
									"fa-IR",
									"bg-BG",
									"hr-HR",
									"cs-CZ",
									"da-DK",
									"fi-FI",
									"lt-LT",
									"ms-MY",
									"nb-NO",
									"ro-RO",
									"el-GR",
									"he-IL",
									"hi-IN",
									"hu-HU",
									"sr-BA",
									"sk-SK",
									"sl-SI",
									"sv-SE",
									"tl-PH",
									"th-TH",
									"uk-UA",
									"vi-VN"
								],
								"example": "es-ES",
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "A note that you can use to add more details about the waiting room.",
								"example": "Production - DO NOT MODIFY",
								"type": "string",
								"x-auditable": true
							},
							"disable_session_renewal": {
								"default": false,
								"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							},
							"enabled_origin_commands": {
								"default": [],
								"description": "A list of enabled origin commands.",
								"items": {
									"enum": [
										"revoke"
									],
									"type": "string",
									"uniqueItems": true,
									"x-auditable": true
								},
								"type": "array"
							},
							"host": {
								"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
								"example": "shop.example.com",
								"type": "string",
								"x-auditable": true
							},
							"json_response_enabled": {
								"default": false,
								"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							},
							"name": {
								"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
								"example": "production_webinar",
								"type": "string",
								"x-auditable": true
							},
							"new_users_per_minute": {
								"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
								"maximum": 2147483647,
								"minimum": 200,
								"type": "integer",
								"x-auditable": true
							},
							"path": {
								"default": "/",
								"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
								"example": "/shop/checkout",
								"type": "string",
								"x-auditable": true
							},
							"queue_all": {
								"default": false,
								"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"queueing_method": {
								"default": "fifo",
								"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
								"enum": [
									"fifo",
									"random",
									"passthrough",
									"reject"
								],
								"example": "fifo",
								"type": "string",
								"x-auditable": true
							},
							"queueing_status_code": {
								"default": 200,
								"description": "HTTP status code returned to a user while in the queue.",
								"enum": [
									200,
									202,
									429
								],
								"example": 202,
								"type": "integer",
								"x-auditable": true
							},
							"session_duration": {
								"default": 5,
								"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
								"maximum": 30,
								"minimum": 1,
								"type": "integer",
								"x-auditable": true
							},
							"suspended": {
								"default": false,
								"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
								"type": "boolean",
								"x-auditable": true
							},
							"total_active_users": {
								"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
								"maximum": 2147483647,
								"minimum": 200,
								"type": "integer",
								"x-auditable": true
							},
							"turnstile_action": {
								"default": "log",
								"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
								"enum": [
									"log",
									"infinite_queue"
								],
								"type": "string",
								"x-auditable": true
							},
							"turnstile_mode": {
								"default": "invisible",
								"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
								"enum": [
									"off",
									"invisible",
									"visible_non_interactive",
									"visible_managed"
								],
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"host",
							"new_users_per_minute",
							"total_active_users"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"additional_routes": {
													"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
													"items": {
														"properties": {
															"host": {
																"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																"example": "shop2.example.com",
																"type": "string",
																"x-auditable": true
															},
															"path": {
																"default": "/",
																"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																"example": "/shop2/checkout",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"cookie_attributes": {
													"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
													"properties": {
														"samesite": {
															"default": "auto",
															"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
															"enum": [
																"auto",
																"lax",
																"none",
																"strict"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														},
														"secure": {
															"default": "auto",
															"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
															"enum": [
																"auto",
																"always",
																"never"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"cookie_suffix": {
													"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
													"example": "abcd",
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"default": "",
													"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
													"type": "string",
													"x-auditable": true
												},
												"default_template_language": {
													"default": "en-US",
													"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
													"enum": [
														"en-US",
														"es-ES",
														"de-DE",
														"fr-FR",
														"it-IT",
														"ja-JP",
														"ko-KR",
														"pt-BR",
														"zh-CN",
														"zh-TW",
														"nl-NL",
														"pl-PL",
														"id-ID",
														"tr-TR",
														"ar-EG",
														"ru-RU",
														"fa-IR",
														"bg-BG",
														"hr-HR",
														"cs-CZ",
														"da-DK",
														"fi-FI",
														"lt-LT",
														"ms-MY",
														"nb-NO",
														"ro-RO",
														"el-GR",
														"he-IL",
														"hi-IN",
														"hu-HU",
														"sr-BA",
														"sk-SK",
														"sl-SI",
														"sv-SE",
														"tl-PH",
														"th-TH",
														"uk-UA",
														"vi-VN"
													],
													"example": "es-ES",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the waiting room.",
													"example": "Production - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled_origin_commands": {
													"default": [],
													"description": "A list of enabled origin commands.",
													"items": {
														"enum": [
															"revoke"
														],
														"type": "string",
														"uniqueItems": true,
														"x-auditable": true
													},
													"type": "array"
												},
												"host": {
													"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
													"example": "shop.example.com",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string",
													"x-auditable": true
												},
												"json_response_enabled": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"next_event_prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"next_event_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will start.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"path": {
													"default": "/",
													"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
													"example": "/shop/checkout",
													"type": "string",
													"x-auditable": true
												},
												"queue_all": {
													"default": false,
													"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"queueing_method": {
													"default": "fifo",
													"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
													"enum": [
														"fifo",
														"random",
														"passthrough",
														"reject"
													],
													"example": "fifo",
													"type": "string",
													"x-auditable": true
												},
												"queueing_status_code": {
													"default": 200,
													"description": "HTTP status code returned to a user while in the queue.",
													"enum": [
														200,
														202,
														429
													],
													"example": 202,
													"type": "integer",
													"x-auditable": true
												},
												"session_duration": {
													"default": 5,
													"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
													"maximum": 30,
													"minimum": 1,
													"type": "integer",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"default": "log",
													"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
													"enum": [
														"log",
														"infinite_queue"
													],
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"default": "invisible",
													"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch waiting room response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"additional_routes": {
															"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
															"items": {
																"properties": {
																	"host": {
																		"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																		"example": "shop2.example.com",
																		"type": "string",
																		"x-auditable": true
																	},
																	"path": {
																		"default": "/",
																		"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																		"example": "/shop2/checkout",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"cookie_attributes": {
															"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
															"properties": {
																"samesite": {
																	"default": "auto",
																	"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																	"enum": [
																		"auto",
																		"lax",
																		"none",
																		"strict"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																},
																"secure": {
																	"default": "auto",
																	"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																	"enum": [
																		"auto",
																		"always",
																		"never"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"cookie_suffix": {
															"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
															"example": "abcd",
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"default": "",
															"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
															"type": "string",
															"x-auditable": true
														},
														"default_template_language": {
															"default": "en-US",
															"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
															"enum": [
																"en-US",
																"es-ES",
																"de-DE",
																"fr-FR",
																"it-IT",
																"ja-JP",
																"ko-KR",
																"pt-BR",
																"zh-CN",
																"zh-TW",
																"nl-NL",
																"pl-PL",
																"id-ID",
																"tr-TR",
																"ar-EG",
																"ru-RU",
																"fa-IR",
																"bg-BG",
																"hr-HR",
																"cs-CZ",
																"da-DK",
																"fi-FI",
																"lt-LT",
																"ms-MY",
																"nb-NO",
																"ro-RO",
																"el-GR",
																"he-IL",
																"hi-IN",
																"hu-HU",
																"sr-BA",
																"sk-SK",
																"sl-SI",
																"sv-SE",
																"tl-PH",
																"th-TH",
																"uk-UA",
																"vi-VN"
															],
															"example": "es-ES",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the waiting room.",
															"example": "Production - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled_origin_commands": {
															"default": [],
															"description": "A list of enabled origin commands.",
															"items": {
																"enum": [
																	"revoke"
																],
																"type": "string",
																"uniqueItems": true,
																"x-auditable": true
															},
															"type": "array"
														},
														"host": {
															"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
															"example": "shop.example.com",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string",
															"x-auditable": true
														},
														"json_response_enabled": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"next_event_prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"next_event_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will start.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"path": {
															"default": "/",
															"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
															"example": "/shop/checkout",
															"type": "string",
															"x-auditable": true
														},
														"queue_all": {
															"default": false,
															"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"queueing_method": {
															"default": "fifo",
															"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
															"enum": [
																"fifo",
																"random",
																"passthrough",
																"reject"
															],
															"example": "fifo",
															"type": "string",
															"x-auditable": true
														},
														"queueing_status_code": {
															"default": 200,
															"description": "HTTP status code returned to a user while in the queue.",
															"enum": [
																200,
																202,
																429
															],
															"example": 202,
															"type": "integer",
															"x-auditable": true
														},
														"session_duration": {
															"default": 5,
															"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
															"maximum": 30,
															"minimum": 1,
															"type": "integer",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"default": "log",
															"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
															"enum": [
																"log",
																"infinite_queue"
															],
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"default": "invisible",
															"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch waiting room response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch waiting room",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_id}/waiting_rooms/{waiting_room_id}/events/{event_id}": {
		"description": "Patches a configured event for a waiting room.",
		"operationId": "waiting-room-patch-event",
		"parameters": [
			{
				"in": "path",
				"name": "event_id",
				"required": true,
				"schema": {
					"example": "25756b2dfe6e378a06b033b670413757",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"custom_page_html": {
								"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
								"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "A note that you can use to add more details about the event.",
								"example": "Production event - DO NOT MODIFY",
								"type": "string",
								"x-auditable": true
							},
							"disable_session_renewal": {
								"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
								"nullable": true,
								"type": "boolean",
								"x-auditable": true
							},
							"event_end_time": {
								"description": "An ISO 8601 timestamp that marks the end of the event.",
								"example": "2021-09-28T17:00:00.000Z",
								"type": "string",
								"x-auditable": true
							},
							"event_start_time": {
								"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
								"example": "2021-09-28T15:30:00.000Z",
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
								"example": "production_webinar_event",
								"type": "string",
								"x-auditable": true
							},
							"new_users_per_minute": {
								"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
								"maximum": 2147483647,
								"minimum": 200,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"prequeue_start_time": {
								"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
								"example": "2021-09-28T15:00:00.000Z",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"queueing_method": {
								"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
								"example": "random",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"session_duration": {
								"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
								"maximum": 30,
								"minimum": 1,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"shuffle_at_event_start": {
								"default": false,
								"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
								"type": "boolean",
								"x-auditable": true
							},
							"suspended": {
								"default": false,
								"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
								"type": "boolean",
								"x-auditable": true
							},
							"total_active_users": {
								"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
								"maximum": 2147483647,
								"minimum": 200,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"turnstile_action": {
								"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
								"enum": [
									"log",
									"infinite_queue"
								],
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"turnstile_mode": {
								"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
								"enum": [
									"off",
									"invisible",
									"visible_non_interactive",
									"visible_managed"
								],
								"nullable": true,
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"event_start_time",
							"event_end_time"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the event.",
													"example": "Production event - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
													"nullable": true,
													"type": "boolean",
													"x-auditable": true
												},
												"event_end_time": {
													"description": "An ISO 8601 timestamp that marks the end of the event.",
													"example": "2021-09-28T17:00:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"event_start_time": {
													"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
													"example": "2021-09-28T15:30:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "25756b2dfe6e378a06b033b670413757",
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar_event",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"queueing_method": {
													"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
													"example": "random",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"session_duration": {
													"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
													"maximum": 30,
													"minimum": 1,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"shuffle_at_event_start": {
													"default": false,
													"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
													"type": "boolean",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
													"enum": [
														"log",
														"infinite_queue"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch event response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the event.",
															"example": "Production event - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
															"nullable": true,
															"type": "boolean",
															"x-auditable": true
														},
														"event_end_time": {
															"description": "An ISO 8601 timestamp that marks the end of the event.",
															"example": "2021-09-28T17:00:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"event_start_time": {
															"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
															"example": "2021-09-28T15:30:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "25756b2dfe6e378a06b033b670413757",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar_event",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"queueing_method": {
															"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
															"example": "random",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"session_duration": {
															"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
															"maximum": 30,
															"minimum": 1,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"shuffle_at_event_start": {
															"default": false,
															"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
															"type": "boolean",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
															"enum": [
																"log",
																"infinite_queue"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch event response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch event",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_id}/waiting_rooms/{waiting_room_id}/rules/{rule_id}": {
		"description": "Patches a rule for a waiting room.",
		"operationId": "waiting-room-patch-waiting-room-rule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_id",
				"required": true,
				"schema": {
					"description": "The ID of the rule.",
					"example": "25756b2dfe6e378a06b033b670413757",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"action": {
								"description": "The action to take when the expression matches.",
								"enum": [
									"bypass_waiting_room"
								],
								"example": "bypass_waiting_room",
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "The description of the rule.",
								"example": "allow all traffic from 10.20.30.40",
								"type": "string",
								"x-auditable": true
							},
							"enabled": {
								"default": true,
								"description": "When set to true, the rule is enabled.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"expression": {
								"description": "Criteria defining when there is a match for the current rule.",
								"example": "ip.src in {10.20.30.40}",
								"type": "string",
								"x-auditable": true
							},
							"position": {
								"description": "Reorder the position of a rule",
								"oneOf": [
									{
										"properties": {
											"index": {
												"description": "Places the rule in the exact position specified by the integer number <POSITION_NUMBER>. Position numbers start with 1. Existing rules in the ruleset from the specified position number onward are shifted one position (no rule is overwritten).",
												"type": "integer",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"before": {
												"description": "Places the rule before rule <RULE_ID>. Use this argument with an empty rule ID value (\"\") to set the rule as the first rule in the ruleset.",
												"example": "<RULE_ID>",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"after": {
												"description": "Places the rule after rule <RULE_ID>. Use this argument with an empty rule ID value (\"\") to set the rule as the last rule in the ruleset.",
												"example": "<RULE_ID>",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									}
								],
								"type": "object"
							}
						},
						"required": [
							"action",
							"expression"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"action": {
														"description": "The action to take when the expression matches.",
														"enum": [
															"bypass_waiting_room"
														],
														"example": "bypass_waiting_room",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "The description of the rule.",
														"example": "allow all traffic from 10.20.30.40",
														"type": "string",
														"x-auditable": true
													},
													"enabled": {
														"default": true,
														"description": "When set to true, the rule is enabled.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"expression": {
														"description": "Criteria defining when there is a match for the current rule.",
														"example": "ip.src in {10.20.30.40}",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "The ID of the rule.",
														"example": "25756b2dfe6e378a06b033b670413757",
														"type": "string",
														"x-auditable": true
													},
													"last_updated": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch Waiting Room Rule response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"action": {
																"description": "The action to take when the expression matches.",
																"enum": [
																	"bypass_waiting_room"
																],
																"example": "bypass_waiting_room",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "The description of the rule.",
																"example": "allow all traffic from 10.20.30.40",
																"type": "string",
																"x-auditable": true
															},
															"enabled": {
																"default": true,
																"description": "When set to true, the rule is enabled.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"expression": {
																"description": "Criteria defining when there is a match for the current rule.",
																"example": "ip.src in {10.20.30.40}",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "The ID of the rule.",
																"example": "25756b2dfe6e378a06b033b670413757",
																"type": "string",
																"x-auditable": true
															},
															"last_updated": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"version": {
																"description": "The version of the rule.",
																"example": "1",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch Waiting Room Rule response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch Waiting Room Rule",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_id}/waiting_rooms/settings": {
		"operationId": "waiting-room-patch-zone-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"search_engine_crawler_bypass": {
								"default": false,
								"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"search_engine_crawler_bypass": {
													"default": false,
													"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"search_engine_crawler_bypass"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "The updated zone-level Waiting Room settings"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"search_engine_crawler_bypass": {
															"default": false,
															"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"search_engine_crawler_bypass"
													],
													"type": "object"
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "The zone-level Waiting Room settings response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch zone-level Waiting Room settings",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /zones/{zone_id}/waiting_rooms": {
		"description": "Creates a new waiting room.",
		"operationId": "waiting-room-create-waiting-room",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"additional_routes": {
								"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
								"items": {
									"properties": {
										"host": {
											"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
											"example": "shop2.example.com",
											"type": "string",
											"x-auditable": true
										},
										"path": {
											"default": "/",
											"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
											"example": "/shop2/checkout",
											"type": "string",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"cookie_attributes": {
								"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
								"properties": {
									"samesite": {
										"default": "auto",
										"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
										"enum": [
											"auto",
											"lax",
											"none",
											"strict"
										],
										"example": "auto",
										"type": "string",
										"x-auditable": true
									},
									"secure": {
										"default": "auto",
										"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
										"enum": [
											"auto",
											"always",
											"never"
										],
										"example": "auto",
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							"cookie_suffix": {
								"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
								"example": "abcd",
								"type": "string",
								"x-auditable": true
							},
							"custom_page_html": {
								"default": "",
								"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
								"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
								"type": "string",
								"x-auditable": true
							},
							"default_template_language": {
								"default": "en-US",
								"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
								"enum": [
									"en-US",
									"es-ES",
									"de-DE",
									"fr-FR",
									"it-IT",
									"ja-JP",
									"ko-KR",
									"pt-BR",
									"zh-CN",
									"zh-TW",
									"nl-NL",
									"pl-PL",
									"id-ID",
									"tr-TR",
									"ar-EG",
									"ru-RU",
									"fa-IR",
									"bg-BG",
									"hr-HR",
									"cs-CZ",
									"da-DK",
									"fi-FI",
									"lt-LT",
									"ms-MY",
									"nb-NO",
									"ro-RO",
									"el-GR",
									"he-IL",
									"hi-IN",
									"hu-HU",
									"sr-BA",
									"sk-SK",
									"sl-SI",
									"sv-SE",
									"tl-PH",
									"th-TH",
									"uk-UA",
									"vi-VN"
								],
								"example": "es-ES",
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "A note that you can use to add more details about the waiting room.",
								"example": "Production - DO NOT MODIFY",
								"type": "string",
								"x-auditable": true
							},
							"disable_session_renewal": {
								"default": false,
								"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							},
							"enabled_origin_commands": {
								"default": [],
								"description": "A list of enabled origin commands.",
								"items": {
									"enum": [
										"revoke"
									],
									"type": "string",
									"uniqueItems": true,
									"x-auditable": true
								},
								"type": "array"
							},
							"host": {
								"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
								"example": "shop.example.com",
								"type": "string",
								"x-auditable": true
							},
							"json_response_enabled": {
								"default": false,
								"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							},
							"name": {
								"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
								"example": "production_webinar",
								"type": "string",
								"x-auditable": true
							},
							"new_users_per_minute": {
								"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
								"maximum": 2147483647,
								"minimum": 200,
								"type": "integer",
								"x-auditable": true
							},
							"path": {
								"default": "/",
								"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
								"example": "/shop/checkout",
								"type": "string",
								"x-auditable": true
							},
							"queue_all": {
								"default": false,
								"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"queueing_method": {
								"default": "fifo",
								"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
								"enum": [
									"fifo",
									"random",
									"passthrough",
									"reject"
								],
								"example": "fifo",
								"type": "string",
								"x-auditable": true
							},
							"queueing_status_code": {
								"default": 200,
								"description": "HTTP status code returned to a user while in the queue.",
								"enum": [
									200,
									202,
									429
								],
								"example": 202,
								"type": "integer",
								"x-auditable": true
							},
							"session_duration": {
								"default": 5,
								"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
								"maximum": 30,
								"minimum": 1,
								"type": "integer",
								"x-auditable": true
							},
							"suspended": {
								"default": false,
								"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
								"type": "boolean",
								"x-auditable": true
							},
							"total_active_users": {
								"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
								"maximum": 2147483647,
								"minimum": 200,
								"type": "integer",
								"x-auditable": true
							},
							"turnstile_action": {
								"default": "log",
								"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
								"enum": [
									"log",
									"infinite_queue"
								],
								"type": "string",
								"x-auditable": true
							},
							"turnstile_mode": {
								"default": "invisible",
								"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
								"enum": [
									"off",
									"invisible",
									"visible_non_interactive",
									"visible_managed"
								],
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"host",
							"new_users_per_minute",
							"total_active_users"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"additional_routes": {
													"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
													"items": {
														"properties": {
															"host": {
																"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																"example": "shop2.example.com",
																"type": "string",
																"x-auditable": true
															},
															"path": {
																"default": "/",
																"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																"example": "/shop2/checkout",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"cookie_attributes": {
													"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
													"properties": {
														"samesite": {
															"default": "auto",
															"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
															"enum": [
																"auto",
																"lax",
																"none",
																"strict"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														},
														"secure": {
															"default": "auto",
															"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
															"enum": [
																"auto",
																"always",
																"never"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"cookie_suffix": {
													"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
													"example": "abcd",
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"default": "",
													"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
													"type": "string",
													"x-auditable": true
												},
												"default_template_language": {
													"default": "en-US",
													"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
													"enum": [
														"en-US",
														"es-ES",
														"de-DE",
														"fr-FR",
														"it-IT",
														"ja-JP",
														"ko-KR",
														"pt-BR",
														"zh-CN",
														"zh-TW",
														"nl-NL",
														"pl-PL",
														"id-ID",
														"tr-TR",
														"ar-EG",
														"ru-RU",
														"fa-IR",
														"bg-BG",
														"hr-HR",
														"cs-CZ",
														"da-DK",
														"fi-FI",
														"lt-LT",
														"ms-MY",
														"nb-NO",
														"ro-RO",
														"el-GR",
														"he-IL",
														"hi-IN",
														"hu-HU",
														"sr-BA",
														"sk-SK",
														"sl-SI",
														"sv-SE",
														"tl-PH",
														"th-TH",
														"uk-UA",
														"vi-VN"
													],
													"example": "es-ES",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the waiting room.",
													"example": "Production - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled_origin_commands": {
													"default": [],
													"description": "A list of enabled origin commands.",
													"items": {
														"enum": [
															"revoke"
														],
														"type": "string",
														"uniqueItems": true,
														"x-auditable": true
													},
													"type": "array"
												},
												"host": {
													"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
													"example": "shop.example.com",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string",
													"x-auditable": true
												},
												"json_response_enabled": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"next_event_prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"next_event_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will start.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"path": {
													"default": "/",
													"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
													"example": "/shop/checkout",
													"type": "string",
													"x-auditable": true
												},
												"queue_all": {
													"default": false,
													"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"queueing_method": {
													"default": "fifo",
													"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
													"enum": [
														"fifo",
														"random",
														"passthrough",
														"reject"
													],
													"example": "fifo",
													"type": "string",
													"x-auditable": true
												},
												"queueing_status_code": {
													"default": 200,
													"description": "HTTP status code returned to a user while in the queue.",
													"enum": [
														200,
														202,
														429
													],
													"example": 202,
													"type": "integer",
													"x-auditable": true
												},
												"session_duration": {
													"default": 5,
													"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
													"maximum": 30,
													"minimum": 1,
													"type": "integer",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"default": "log",
													"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
													"enum": [
														"log",
														"infinite_queue"
													],
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"default": "invisible",
													"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create waiting room response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"additional_routes": {
															"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
															"items": {
																"properties": {
																	"host": {
																		"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																		"example": "shop2.example.com",
																		"type": "string",
																		"x-auditable": true
																	},
																	"path": {
																		"default": "/",
																		"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																		"example": "/shop2/checkout",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"cookie_attributes": {
															"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
															"properties": {
																"samesite": {
																	"default": "auto",
																	"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																	"enum": [
																		"auto",
																		"lax",
																		"none",
																		"strict"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																},
																"secure": {
																	"default": "auto",
																	"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																	"enum": [
																		"auto",
																		"always",
																		"never"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"cookie_suffix": {
															"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
															"example": "abcd",
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"default": "",
															"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
															"type": "string",
															"x-auditable": true
														},
														"default_template_language": {
															"default": "en-US",
															"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
															"enum": [
																"en-US",
																"es-ES",
																"de-DE",
																"fr-FR",
																"it-IT",
																"ja-JP",
																"ko-KR",
																"pt-BR",
																"zh-CN",
																"zh-TW",
																"nl-NL",
																"pl-PL",
																"id-ID",
																"tr-TR",
																"ar-EG",
																"ru-RU",
																"fa-IR",
																"bg-BG",
																"hr-HR",
																"cs-CZ",
																"da-DK",
																"fi-FI",
																"lt-LT",
																"ms-MY",
																"nb-NO",
																"ro-RO",
																"el-GR",
																"he-IL",
																"hi-IN",
																"hu-HU",
																"sr-BA",
																"sk-SK",
																"sl-SI",
																"sv-SE",
																"tl-PH",
																"th-TH",
																"uk-UA",
																"vi-VN"
															],
															"example": "es-ES",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the waiting room.",
															"example": "Production - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled_origin_commands": {
															"default": [],
															"description": "A list of enabled origin commands.",
															"items": {
																"enum": [
																	"revoke"
																],
																"type": "string",
																"uniqueItems": true,
																"x-auditable": true
															},
															"type": "array"
														},
														"host": {
															"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
															"example": "shop.example.com",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string",
															"x-auditable": true
														},
														"json_response_enabled": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"next_event_prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"next_event_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will start.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"path": {
															"default": "/",
															"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
															"example": "/shop/checkout",
															"type": "string",
															"x-auditable": true
														},
														"queue_all": {
															"default": false,
															"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"queueing_method": {
															"default": "fifo",
															"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
															"enum": [
																"fifo",
																"random",
																"passthrough",
																"reject"
															],
															"example": "fifo",
															"type": "string",
															"x-auditable": true
														},
														"queueing_status_code": {
															"default": 200,
															"description": "HTTP status code returned to a user while in the queue.",
															"enum": [
																200,
																202,
																429
															],
															"example": 202,
															"type": "integer",
															"x-auditable": true
														},
														"session_duration": {
															"default": 5,
															"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
															"maximum": 30,
															"minimum": 1,
															"type": "integer",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"default": "log",
															"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
															"enum": [
																"log",
																"infinite_queue"
															],
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"default": "invisible",
															"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create waiting room response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create waiting room",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /zones/{zone_id}/waiting_rooms/{waiting_room_id}/events": {
		"description": "Only available for the Waiting Room Advanced subscription. Creates an event for a waiting room. An event takes place during a specified period of time, temporarily changing the behavior of a waiting room. While the event is active, some of the properties in the event's configuration may either override or inherit from the waiting room's configuration. Note that events cannot overlap with each other, so only one event can be active at a time.",
		"operationId": "waiting-room-create-event",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"custom_page_html": {
								"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
								"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "A note that you can use to add more details about the event.",
								"example": "Production event - DO NOT MODIFY",
								"type": "string",
								"x-auditable": true
							},
							"disable_session_renewal": {
								"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
								"nullable": true,
								"type": "boolean",
								"x-auditable": true
							},
							"event_end_time": {
								"description": "An ISO 8601 timestamp that marks the end of the event.",
								"example": "2021-09-28T17:00:00.000Z",
								"type": "string",
								"x-auditable": true
							},
							"event_start_time": {
								"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
								"example": "2021-09-28T15:30:00.000Z",
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
								"example": "production_webinar_event",
								"type": "string",
								"x-auditable": true
							},
							"new_users_per_minute": {
								"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
								"maximum": 2147483647,
								"minimum": 200,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"prequeue_start_time": {
								"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
								"example": "2021-09-28T15:00:00.000Z",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"queueing_method": {
								"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
								"example": "random",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"session_duration": {
								"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
								"maximum": 30,
								"minimum": 1,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"shuffle_at_event_start": {
								"default": false,
								"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
								"type": "boolean",
								"x-auditable": true
							},
							"suspended": {
								"default": false,
								"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
								"type": "boolean",
								"x-auditable": true
							},
							"total_active_users": {
								"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
								"maximum": 2147483647,
								"minimum": 200,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"turnstile_action": {
								"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
								"enum": [
									"log",
									"infinite_queue"
								],
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"turnstile_mode": {
								"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
								"enum": [
									"off",
									"invisible",
									"visible_non_interactive",
									"visible_managed"
								],
								"nullable": true,
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"event_start_time",
							"event_end_time"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the event.",
													"example": "Production event - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
													"nullable": true,
													"type": "boolean",
													"x-auditable": true
												},
												"event_end_time": {
													"description": "An ISO 8601 timestamp that marks the end of the event.",
													"example": "2021-09-28T17:00:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"event_start_time": {
													"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
													"example": "2021-09-28T15:30:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "25756b2dfe6e378a06b033b670413757",
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar_event",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"queueing_method": {
													"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
													"example": "random",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"session_duration": {
													"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
													"maximum": 30,
													"minimum": 1,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"shuffle_at_event_start": {
													"default": false,
													"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
													"type": "boolean",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
													"enum": [
														"log",
														"infinite_queue"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create event response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the event.",
															"example": "Production event - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
															"nullable": true,
															"type": "boolean",
															"x-auditable": true
														},
														"event_end_time": {
															"description": "An ISO 8601 timestamp that marks the end of the event.",
															"example": "2021-09-28T17:00:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"event_start_time": {
															"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
															"example": "2021-09-28T15:30:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "25756b2dfe6e378a06b033b670413757",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar_event",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"queueing_method": {
															"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
															"example": "random",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"session_duration": {
															"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
															"maximum": 30,
															"minimum": 1,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"shuffle_at_event_start": {
															"default": false,
															"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
															"type": "boolean",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
															"enum": [
																"log",
																"infinite_queue"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create event response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create event",
		"tags": [
			"Waiting Room"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /zones/{zone_id}/waiting_rooms/{waiting_room_id}/rules": {
		"description": "Only available for the Waiting Room Advanced subscription. Creates a rule for a waiting room.",
		"operationId": "waiting-room-create-waiting-room-rule",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"action": {
								"description": "The action to take when the expression matches.",
								"enum": [
									"bypass_waiting_room"
								],
								"example": "bypass_waiting_room",
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "The description of the rule.",
								"example": "allow all traffic from 10.20.30.40",
								"type": "string",
								"x-auditable": true
							},
							"enabled": {
								"default": true,
								"description": "When set to true, the rule is enabled.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"expression": {
								"description": "Criteria defining when there is a match for the current rule.",
								"example": "ip.src in {10.20.30.40}",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"action",
							"expression"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"action": {
														"description": "The action to take when the expression matches.",
														"enum": [
															"bypass_waiting_room"
														],
														"example": "bypass_waiting_room",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "The description of the rule.",
														"example": "allow all traffic from 10.20.30.40",
														"type": "string",
														"x-auditable": true
													},
													"enabled": {
														"default": true,
														"description": "When set to true, the rule is enabled.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"expression": {
														"description": "Criteria defining when there is a match for the current rule.",
														"example": "ip.src in {10.20.30.40}",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "The ID of the rule.",
														"example": "25756b2dfe6e378a06b033b670413757",
														"type": "string",
														"x-auditable": true
													},
													"last_updated": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create Waiting Room Rule response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"action": {
																"description": "The action to take when the expression matches.",
																"enum": [
																	"bypass_waiting_room"
																],
																"example": "bypass_waiting_room",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "The description of the rule.",
																"example": "allow all traffic from 10.20.30.40",
																"type": "string",
																"x-auditable": true
															},
															"enabled": {
																"default": true,
																"description": "When set to true, the rule is enabled.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"expression": {
																"description": "Criteria defining when there is a match for the current rule.",
																"example": "ip.src in {10.20.30.40}",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "The ID of the rule.",
																"example": "25756b2dfe6e378a06b033b670413757",
																"type": "string",
																"x-auditable": true
															},
															"last_updated": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"version": {
																"description": "The version of the rule.",
																"example": "1",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create Waiting Room Rule response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Waiting Room Rule",
		"tags": [
			"Waiting Room"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /zones/{zone_id}/waiting_rooms/preview": {
		"description": "Creates a waiting room page preview. Upload a custom waiting room page for preview. You will receive a preview URL in the form `http://waitingrooms.dev/preview/<uuid>`. You can use the following query parameters to change the state of the preview:\n1. `force_queue`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website (also known as queueAll).\n2. `queue_is_full`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n3. `queueing_method`: The queueing method currently used by the waiting room.\n\t- **fifo** indicates a FIFO queue.\n\t- **random** indicates a Random queue.\n\t- **passthrough** indicates a Passthrough queue. Keep in mind that the waiting room page will only be displayed if `force_queue=true` or `event=prequeueing` — for other cases the request will pass through to the origin. For our preview, this will be a fake origin website returning \"Welcome\". \n\t- **reject** indicates a Reject queue.\n4. `event`: Used to preview a waiting room event.\n\t- **none** indicates no event is occurring.\n\t- **prequeueing** indicates that an event is prequeueing (between `prequeue_start_time` and `event_start_time`).\n\t- **started** indicates that an event has started (between `event_start_time` and `event_end_time`).\n5. `shuffle_at_event_start`: Boolean indicating if the event will shuffle users in the prequeue when it starts. This can only be set to **true** if an event is active (`event` is not **none**).\n\nFor example, you can make a request to `http://waitingrooms.dev/preview/<uuid>?force_queue=false&queue_is_full=false&queueing_method=random&event=started&shuffle_at_event_start=true`\n6. `waitTime`: Non-zero, positive integer indicating the estimated wait time in minutes. The default value is 10 minutes.\n\nFor example, you can make a request to `http://waitingrooms.dev/preview/<uuid>?waitTime=50` to configure the estimated wait time as 50 minutes.",
		"operationId": "waiting-room-create-a-custom-waiting-room-page-preview",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"custom_html": {
								"default": "",
								"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
								"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"custom_html"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"preview_url": {
													"description": "URL where the custom waiting room page can temporarily be previewed.",
													"example": "http://waitingrooms.dev/preview/35af8c12-6d68-4608-babb-b53435a5ddfb",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create a custom waiting room page preview response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"preview_url": {
															"description": "URL where the custom waiting room page can temporarily be previewed.",
															"example": "http://waitingrooms.dev/preview/35af8c12-6d68-4608-babb-b53435a5ddfb",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create a custom waiting room page preview response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a custom waiting room page preview",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /zones/{zone_id}/waiting_rooms/{waiting_room_id}": {
		"description": "Updates a configured waiting room.",
		"operationId": "waiting-room-update-waiting-room",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"additional_routes": {
								"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
								"items": {
									"properties": {
										"host": {
											"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
											"example": "shop2.example.com",
											"type": "string",
											"x-auditable": true
										},
										"path": {
											"default": "/",
											"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
											"example": "/shop2/checkout",
											"type": "string",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"cookie_attributes": {
								"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
								"properties": {
									"samesite": {
										"default": "auto",
										"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
										"enum": [
											"auto",
											"lax",
											"none",
											"strict"
										],
										"example": "auto",
										"type": "string",
										"x-auditable": true
									},
									"secure": {
										"default": "auto",
										"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
										"enum": [
											"auto",
											"always",
											"never"
										],
										"example": "auto",
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							"cookie_suffix": {
								"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
								"example": "abcd",
								"type": "string",
								"x-auditable": true
							},
							"custom_page_html": {
								"default": "",
								"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
								"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
								"type": "string",
								"x-auditable": true
							},
							"default_template_language": {
								"default": "en-US",
								"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
								"enum": [
									"en-US",
									"es-ES",
									"de-DE",
									"fr-FR",
									"it-IT",
									"ja-JP",
									"ko-KR",
									"pt-BR",
									"zh-CN",
									"zh-TW",
									"nl-NL",
									"pl-PL",
									"id-ID",
									"tr-TR",
									"ar-EG",
									"ru-RU",
									"fa-IR",
									"bg-BG",
									"hr-HR",
									"cs-CZ",
									"da-DK",
									"fi-FI",
									"lt-LT",
									"ms-MY",
									"nb-NO",
									"ro-RO",
									"el-GR",
									"he-IL",
									"hi-IN",
									"hu-HU",
									"sr-BA",
									"sk-SK",
									"sl-SI",
									"sv-SE",
									"tl-PH",
									"th-TH",
									"uk-UA",
									"vi-VN"
								],
								"example": "es-ES",
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "A note that you can use to add more details about the waiting room.",
								"example": "Production - DO NOT MODIFY",
								"type": "string",
								"x-auditable": true
							},
							"disable_session_renewal": {
								"default": false,
								"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							},
							"enabled_origin_commands": {
								"default": [],
								"description": "A list of enabled origin commands.",
								"items": {
									"enum": [
										"revoke"
									],
									"type": "string",
									"uniqueItems": true,
									"x-auditable": true
								},
								"type": "array"
							},
							"host": {
								"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
								"example": "shop.example.com",
								"type": "string",
								"x-auditable": true
							},
							"json_response_enabled": {
								"default": false,
								"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
								"example": false,
								"type": "boolean",
								"x-auditable": true
							},
							"name": {
								"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
								"example": "production_webinar",
								"type": "string",
								"x-auditable": true
							},
							"new_users_per_minute": {
								"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
								"maximum": 2147483647,
								"minimum": 200,
								"type": "integer",
								"x-auditable": true
							},
							"path": {
								"default": "/",
								"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
								"example": "/shop/checkout",
								"type": "string",
								"x-auditable": true
							},
							"queue_all": {
								"default": false,
								"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"queueing_method": {
								"default": "fifo",
								"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
								"enum": [
									"fifo",
									"random",
									"passthrough",
									"reject"
								],
								"example": "fifo",
								"type": "string",
								"x-auditable": true
							},
							"queueing_status_code": {
								"default": 200,
								"description": "HTTP status code returned to a user while in the queue.",
								"enum": [
									200,
									202,
									429
								],
								"example": 202,
								"type": "integer",
								"x-auditable": true
							},
							"session_duration": {
								"default": 5,
								"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
								"maximum": 30,
								"minimum": 1,
								"type": "integer",
								"x-auditable": true
							},
							"suspended": {
								"default": false,
								"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
								"type": "boolean",
								"x-auditable": true
							},
							"total_active_users": {
								"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
								"maximum": 2147483647,
								"minimum": 200,
								"type": "integer",
								"x-auditable": true
							},
							"turnstile_action": {
								"default": "log",
								"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
								"enum": [
									"log",
									"infinite_queue"
								],
								"type": "string",
								"x-auditable": true
							},
							"turnstile_mode": {
								"default": "invisible",
								"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
								"enum": [
									"off",
									"invisible",
									"visible_non_interactive",
									"visible_managed"
								],
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"host",
							"new_users_per_minute",
							"total_active_users"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"additional_routes": {
													"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
													"items": {
														"properties": {
															"host": {
																"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																"example": "shop2.example.com",
																"type": "string",
																"x-auditable": true
															},
															"path": {
																"default": "/",
																"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																"example": "/shop2/checkout",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"cookie_attributes": {
													"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
													"properties": {
														"samesite": {
															"default": "auto",
															"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
															"enum": [
																"auto",
																"lax",
																"none",
																"strict"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														},
														"secure": {
															"default": "auto",
															"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
															"enum": [
																"auto",
																"always",
																"never"
															],
															"example": "auto",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"cookie_suffix": {
													"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
													"example": "abcd",
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"default": "",
													"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
													"type": "string",
													"x-auditable": true
												},
												"default_template_language": {
													"default": "en-US",
													"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
													"enum": [
														"en-US",
														"es-ES",
														"de-DE",
														"fr-FR",
														"it-IT",
														"ja-JP",
														"ko-KR",
														"pt-BR",
														"zh-CN",
														"zh-TW",
														"nl-NL",
														"pl-PL",
														"id-ID",
														"tr-TR",
														"ar-EG",
														"ru-RU",
														"fa-IR",
														"bg-BG",
														"hr-HR",
														"cs-CZ",
														"da-DK",
														"fi-FI",
														"lt-LT",
														"ms-MY",
														"nb-NO",
														"ro-RO",
														"el-GR",
														"he-IL",
														"hi-IN",
														"hu-HU",
														"sr-BA",
														"sk-SK",
														"sl-SI",
														"sv-SE",
														"tl-PH",
														"th-TH",
														"uk-UA",
														"vi-VN"
													],
													"example": "es-ES",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the waiting room.",
													"example": "Production - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled_origin_commands": {
													"default": [],
													"description": "A list of enabled origin commands.",
													"items": {
														"enum": [
															"revoke"
														],
														"type": "string",
														"uniqueItems": true,
														"x-auditable": true
													},
													"type": "array"
												},
												"host": {
													"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
													"example": "shop.example.com",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string",
													"x-auditable": true
												},
												"json_response_enabled": {
													"default": false,
													"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
													"example": false,
													"type": "boolean",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"next_event_prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"next_event_start_time": {
													"description": "An ISO 8601 timestamp that marks when the next event will start.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"path": {
													"default": "/",
													"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
													"example": "/shop/checkout",
													"type": "string",
													"x-auditable": true
												},
												"queue_all": {
													"default": false,
													"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"queueing_method": {
													"default": "fifo",
													"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
													"enum": [
														"fifo",
														"random",
														"passthrough",
														"reject"
													],
													"example": "fifo",
													"type": "string",
													"x-auditable": true
												},
												"queueing_status_code": {
													"default": 200,
													"description": "HTTP status code returned to a user while in the queue.",
													"enum": [
														200,
														202,
														429
													],
													"example": 202,
													"type": "integer",
													"x-auditable": true
												},
												"session_duration": {
													"default": 5,
													"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
													"maximum": 30,
													"minimum": 1,
													"type": "integer",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
													"maximum": 2147483647,
													"minimum": 200,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"default": "log",
													"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
													"enum": [
														"log",
														"infinite_queue"
													],
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"default": "invisible",
													"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update waiting room response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"additional_routes": {
															"description": "Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms.",
															"items": {
																"properties": {
																	"host": {
																		"description": "The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).",
																		"example": "shop2.example.com",
																		"type": "string",
																		"x-auditable": true
																	},
																	"path": {
																		"default": "/",
																		"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
																		"example": "/shop2/checkout",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"cookie_attributes": {
															"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
															"properties": {
																"samesite": {
																	"default": "auto",
																	"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
																	"enum": [
																		"auto",
																		"lax",
																		"none",
																		"strict"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																},
																"secure": {
																	"default": "auto",
																	"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
																	"enum": [
																		"auto",
																		"always",
																		"never"
																	],
																	"example": "auto",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"cookie_suffix": {
															"description": "Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is \"abcd\", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.",
															"example": "abcd",
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"default": "",
															"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.\n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:\n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).\n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).\n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
															"type": "string",
															"x-auditable": true
														},
														"default_template_language": {
															"default": "en-US",
															"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
															"enum": [
																"en-US",
																"es-ES",
																"de-DE",
																"fr-FR",
																"it-IT",
																"ja-JP",
																"ko-KR",
																"pt-BR",
																"zh-CN",
																"zh-TW",
																"nl-NL",
																"pl-PL",
																"id-ID",
																"tr-TR",
																"ar-EG",
																"ru-RU",
																"fa-IR",
																"bg-BG",
																"hr-HR",
																"cs-CZ",
																"da-DK",
																"fi-FI",
																"lt-LT",
																"ms-MY",
																"nb-NO",
																"ro-RO",
																"el-GR",
																"he-IL",
																"hi-IN",
																"hu-HU",
																"sr-BA",
																"sk-SK",
																"sl-SI",
																"sv-SE",
																"tl-PH",
																"th-TH",
																"uk-UA",
																"vi-VN"
															],
															"example": "es-ES",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the waiting room.",
															"example": "Production - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled_origin_commands": {
															"default": [],
															"description": "A list of enabled origin commands.",
															"items": {
																"enum": [
																	"revoke"
																],
																"type": "string",
																"uniqueItems": true,
																"x-auditable": true
															},
															"type": "array"
														},
														"host": {
															"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
															"example": "shop.example.com",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string",
															"x-auditable": true
														},
														"json_response_enabled": {
															"default": false,
															"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}.",
															"example": false,
															"type": "boolean",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"next_event_prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"next_event_start_time": {
															"description": "An ISO 8601 timestamp that marks when the next event will start.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"path": {
															"default": "/",
															"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
															"example": "/shop/checkout",
															"type": "string",
															"x-auditable": true
														},
														"queue_all": {
															"default": false,
															"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"queueing_method": {
															"default": "fifo",
															"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
															"enum": [
																"fifo",
																"random",
																"passthrough",
																"reject"
															],
															"example": "fifo",
															"type": "string",
															"x-auditable": true
														},
														"queueing_status_code": {
															"default": 200,
															"description": "HTTP status code returned to a user while in the queue.",
															"enum": [
																200,
																202,
																429
															],
															"example": 202,
															"type": "integer",
															"x-auditable": true
														},
														"session_duration": {
															"default": 5,
															"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
															"maximum": 30,
															"minimum": 1,
															"type": "integer",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
															"maximum": 2147483647,
															"minimum": 200,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"default": "log",
															"description": "Which action to take when a bot is detected using Turnstile. `log` will\nhave no impact on queueing behavior, simply keeping track of how many\nbots are detected in Waiting Room Analytics. `infinite_queue` will send\nbots to a false queueing state, where they will never reach your\norigin. `infinite_queue` requires Advanced Waiting Room.\n",
															"enum": [
																"log",
																"infinite_queue"
															],
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"default": "invisible",
															"description": "Which Turnstile widget type to use for detecting bot traffic. See\n[the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)\nfor the definitions of these widget types. Set to `off` to disable the\nTurnstile integration entirely. Setting this to anything other than\n`off` or `invisible` requires Advanced Waiting Room.\n",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update waiting room response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update waiting room",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /zones/{zone_id}/waiting_rooms/{waiting_room_id}/events/{event_id}": {
		"description": "Updates a configured event for a waiting room.",
		"operationId": "waiting-room-update-event",
		"parameters": [
			{
				"in": "path",
				"name": "event_id",
				"required": true,
				"schema": {
					"example": "25756b2dfe6e378a06b033b670413757",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"custom_page_html": {
								"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
								"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"description": {
								"default": "",
								"description": "A note that you can use to add more details about the event.",
								"example": "Production event - DO NOT MODIFY",
								"type": "string",
								"x-auditable": true
							},
							"disable_session_renewal": {
								"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
								"nullable": true,
								"type": "boolean",
								"x-auditable": true
							},
							"event_end_time": {
								"description": "An ISO 8601 timestamp that marks the end of the event.",
								"example": "2021-09-28T17:00:00.000Z",
								"type": "string",
								"x-auditable": true
							},
							"event_start_time": {
								"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
								"example": "2021-09-28T15:30:00.000Z",
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
								"example": "production_webinar_event",
								"type": "string",
								"x-auditable": true
							},
							"new_users_per_minute": {
								"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
								"maximum": 2147483647,
								"minimum": 200,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"prequeue_start_time": {
								"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
								"example": "2021-09-28T15:00:00.000Z",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"queueing_method": {
								"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
								"example": "random",
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"session_duration": {
								"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
								"maximum": 30,
								"minimum": 1,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"shuffle_at_event_start": {
								"default": false,
								"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
								"type": "boolean",
								"x-auditable": true
							},
							"suspended": {
								"default": false,
								"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
								"type": "boolean",
								"x-auditable": true
							},
							"total_active_users": {
								"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
								"maximum": 2147483647,
								"minimum": 200,
								"nullable": true,
								"type": "integer",
								"x-auditable": true
							},
							"turnstile_action": {
								"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
								"enum": [
									"log",
									"infinite_queue"
								],
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"turnstile_mode": {
								"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
								"enum": [
									"off",
									"invisible",
									"visible_non_interactive",
									"visible_managed"
								],
								"nullable": true,
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"event_start_time",
							"event_end_time"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"custom_page_html": {
													"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
													"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"default": "",
													"description": "A note that you can use to add more details about the event.",
													"example": "Production event - DO NOT MODIFY",
													"type": "string",
													"x-auditable": true
												},
												"disable_session_renewal": {
													"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
													"nullable": true,
													"type": "boolean",
													"x-auditable": true
												},
												"event_end_time": {
													"description": "An ISO 8601 timestamp that marks the end of the event.",
													"example": "2021-09-28T17:00:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"event_start_time": {
													"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
													"example": "2021-09-28T15:30:00.000Z",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "25756b2dfe6e378a06b033b670413757",
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"example": "2014-01-01T05:20:00.12345Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
													"example": "production_webinar_event",
													"type": "string",
													"x-auditable": true
												},
												"new_users_per_minute": {
													"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"prequeue_start_time": {
													"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
													"example": "2021-09-28T15:00:00.000Z",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"queueing_method": {
													"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
													"example": "random",
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"session_duration": {
													"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
													"maximum": 30,
													"minimum": 1,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"shuffle_at_event_start": {
													"default": false,
													"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
													"type": "boolean",
													"x-auditable": true
												},
												"suspended": {
													"default": false,
													"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
													"type": "boolean",
													"x-auditable": true
												},
												"total_active_users": {
													"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
													"maximum": 2147483647,
													"minimum": 200,
													"nullable": true,
													"type": "integer",
													"x-auditable": true
												},
												"turnstile_action": {
													"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
													"enum": [
														"log",
														"infinite_queue"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"turnstile_mode": {
													"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
													"enum": [
														"off",
														"invisible",
														"visible_non_interactive",
														"visible_managed"
													],
													"nullable": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update event response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"custom_page_html": {
															"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"default": "",
															"description": "A note that you can use to add more details about the event.",
															"example": "Production event - DO NOT MODIFY",
															"type": "string",
															"x-auditable": true
														},
														"disable_session_renewal": {
															"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
															"nullable": true,
															"type": "boolean",
															"x-auditable": true
														},
														"event_end_time": {
															"description": "An ISO 8601 timestamp that marks the end of the event.",
															"example": "2021-09-28T17:00:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"event_start_time": {
															"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
															"example": "2021-09-28T15:30:00.000Z",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "25756b2dfe6e378a06b033b670413757",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar_event",
															"type": "string",
															"x-auditable": true
														},
														"new_users_per_minute": {
															"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"prequeue_start_time": {
															"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
															"example": "2021-09-28T15:00:00.000Z",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"queueing_method": {
															"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
															"example": "random",
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"session_duration": {
															"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
															"maximum": 30,
															"minimum": 1,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"shuffle_at_event_start": {
															"default": false,
															"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
															"type": "boolean",
															"x-auditable": true
														},
														"suspended": {
															"default": false,
															"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
															"type": "boolean",
															"x-auditable": true
														},
														"total_active_users": {
															"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
															"maximum": 2147483647,
															"minimum": 200,
															"nullable": true,
															"type": "integer",
															"x-auditable": true
														},
														"turnstile_action": {
															"description": "If set, the event will override the waiting room's `turnstile_action` property while it is active. If null, the event will inherit it.",
															"enum": [
																"log",
																"infinite_queue"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														},
														"turnstile_mode": {
															"description": "If set, the event will override the waiting room's `turnstile_mode` property while it is active. If null, the event will inherit it.",
															"enum": [
																"off",
																"invisible",
																"visible_non_interactive",
																"visible_managed"
															],
															"nullable": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update event response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update event",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /zones/{zone_id}/waiting_rooms/{waiting_room_id}/rules": {
		"description": "Only available for the Waiting Room Advanced subscription. Replaces all rules for a waiting room.",
		"operationId": "waiting-room-replace-waiting-room-rules",
		"parameters": [
			{
				"in": "path",
				"name": "waiting_room_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"action": {
									"description": "The action to take when the expression matches.",
									"enum": [
										"bypass_waiting_room"
									],
									"example": "bypass_waiting_room",
									"type": "string",
									"x-auditable": true
								},
								"description": {
									"default": "",
									"description": "The description of the rule.",
									"example": "allow all traffic from 10.20.30.40",
									"type": "string",
									"x-auditable": true
								},
								"enabled": {
									"default": true,
									"description": "When set to true, the rule is enabled.",
									"example": true,
									"type": "boolean",
									"x-auditable": true
								},
								"expression": {
									"description": "Criteria defining when there is a match for the current rule.",
									"example": "ip.src in {10.20.30.40}",
									"type": "string",
									"x-auditable": true
								}
							},
							"required": [
								"action",
								"expression"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"action": {
														"description": "The action to take when the expression matches.",
														"enum": [
															"bypass_waiting_room"
														],
														"example": "bypass_waiting_room",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"default": "",
														"description": "The description of the rule.",
														"example": "allow all traffic from 10.20.30.40",
														"type": "string",
														"x-auditable": true
													},
													"enabled": {
														"default": true,
														"description": "When set to true, the rule is enabled.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"expression": {
														"description": "Criteria defining when there is a match for the current rule.",
														"example": "ip.src in {10.20.30.40}",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "The ID of the rule.",
														"example": "25756b2dfe6e378a06b033b670413757",
														"type": "string",
														"x-auditable": true
													},
													"last_updated": {
														"example": "2014-01-01T05:20:00.12345Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Replace Waiting Room Rules response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"action": {
																"description": "The action to take when the expression matches.",
																"enum": [
																	"bypass_waiting_room"
																],
																"example": "bypass_waiting_room",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"default": "",
																"description": "The description of the rule.",
																"example": "allow all traffic from 10.20.30.40",
																"type": "string",
																"x-auditable": true
															},
															"enabled": {
																"default": true,
																"description": "When set to true, the rule is enabled.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"expression": {
																"description": "Criteria defining when there is a match for the current rule.",
																"example": "ip.src in {10.20.30.40}",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "The ID of the rule.",
																"example": "25756b2dfe6e378a06b033b670413757",
																"type": "string",
																"x-auditable": true
															},
															"last_updated": {
																"example": "2014-01-01T05:20:00.12345Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"version": {
																"description": "The version of the rule.",
																"example": "1",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Replace Waiting Room Rules response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Replace Waiting Room Rules",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /zones/{zone_id}/waiting_rooms/settings": {
		"operationId": "waiting-room-update-zone-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"search_engine_crawler_bypass": {
								"default": false,
								"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"search_engine_crawler_bypass": {
													"default": false,
													"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												}
											},
											"required": [
												"search_engine_crawler_bypass"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "The updated zone-level Waiting Room settings"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"oneOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"search_engine_crawler_bypass": {
															"default": false,
															"description": "Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.\nVerified search engine crawlers will not be tracked or counted by the waiting room system,\nand will not appear in waiting room analytics.\n",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														}
													},
													"required": [
														"search_engine_crawler_bypass"
													],
													"type": "object"
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "The zone-level Waiting Room settings response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update zone-level Waiting Room settings",
		"tags": [
			"Waiting Room"
		],
		"x-api-token-group": [
			"Waiting Rooms Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}