{
	"DELETE /accounts/{account_id}/event_subscriptions/subscriptions/{subscription_id}": {
		"description": "Delete an existing event subscription",
		"operationId": "subscriptions-delete",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "subscription_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_at": {
													"description": "When the subscription was created",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"destination": {
													"description": "Destination configuration for the subscription",
													"oneOf": [
														{
															"properties": {
																"queue_id": {
																	"description": "ID of the target queue",
																	"type": "string",
																	"x-auditable": true
																},
																"type": {
																	"description": "Type of destination",
																	"enum": [
																		"queues.queue"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"type",
																"queue_id"
															],
															"type": "object"
														}
													],
													"type": "object"
												},
												"enabled": {
													"description": "Whether the subscription is active",
													"type": "boolean",
													"x-auditable": true
												},
												"events": {
													"description": "List of event types this subscription handles",
													"items": {
														"type": "string"
													},
													"minItems": 1,
													"type": "array",
													"x-auditable": true
												},
												"id": {
													"description": "Unique identifier for the subscription",
													"type": "string",
													"x-auditable": true
												},
												"modified_at": {
													"description": "When the subscription was last modified",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Name of the subscription",
													"type": "string",
													"x-auditable": true
												},
												"source": {
													"description": "Source configuration for the subscription",
													"oneOf": [
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"images"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"kv"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"r2"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"superSlurper"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"vectorize"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"model_name": {
																	"description": "Name of the Workers AI model",
																	"type": "string",
																	"x-auditable": true
																},
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workersAi.model"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workersBuilds.worker"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"worker_name": {
																	"description": "Name of the worker",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workflows.workflow"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"workflow_name": {
																	"description": "Name of the workflow",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													],
													"type": "object"
												}
											},
											"required": [
												"id",
												"created_at",
												"modified_at",
												"name",
												"enabled",
												"source",
												"destination",
												"events"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Successfully created event subscription"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete Event Subscription",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		]
	},
	"DELETE /accounts/{account_id}/queues/{queue_id}": {
		"description": "Deletes a queue",
		"operationId": "queues-delete",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										true
									],
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Successful delete"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete Queue",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.delete"
			]
		}
	},
	"DELETE /accounts/{account_id}/queues/{queue_id}/consumers/{consumer_id}": {
		"description": "Deletes the consumer for a queue.",
		"operationId": "queues-delete-consumer",
		"parameters": [
			{
				"in": "path",
				"name": "consumer_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										true
									],
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Successful consumer delete"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete Queue Consumer",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.delete"
			]
		}
	},
	"GET /accounts/{account_id}/event_subscriptions/subscriptions": {
		"description": "Get a paginated list of event subscriptions with optional sorting and filtering",
		"operationId": "subscriptions-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"description": "Page number for pagination",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "Number of items per page",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"maximum": 100,
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "Field to sort by",
				"in": "query",
				"name": "order",
				"schema": {
					"default": "name",
					"enum": [
						"created_at",
						"name",
						"enabled",
						"source"
					],
					"type": "string"
				}
			},
			{
				"description": "Sort direction",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "asc",
					"enum": [
						"asc",
						"desc"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created_at": {
														"description": "When the subscription was created",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"destination": {
														"description": "Destination configuration for the subscription",
														"oneOf": [
															{
																"properties": {
																	"queue_id": {
																		"description": "ID of the target queue",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "Type of destination",
																		"enum": [
																			"queues.queue"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"type",
																	"queue_id"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"enabled": {
														"description": "Whether the subscription is active",
														"type": "boolean",
														"x-auditable": true
													},
													"events": {
														"description": "List of event types this subscription handles",
														"items": {
															"type": "string"
														},
														"minItems": 1,
														"type": "array",
														"x-auditable": true
													},
													"id": {
														"description": "Unique identifier for the subscription",
														"type": "string",
														"x-auditable": true
													},
													"modified_at": {
														"description": "When the subscription was last modified",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "Name of the subscription",
														"type": "string",
														"x-auditable": true
													},
													"source": {
														"description": "Source configuration for the subscription",
														"oneOf": [
															{
																"properties": {
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"images"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"kv"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"r2"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"superSlurper"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"vectorize"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"model_name": {
																		"description": "Name of the Workers AI model",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"workersAi.model"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"workersBuilds.worker"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"worker_name": {
																		"description": "Name of the worker",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"type": {
																		"description": "Type of source",
																		"enum": [
																			"workflows.workflow"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"workflow_name": {
																		"description": "Name of the workflow",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															}
														],
														"type": "object"
													}
												},
												"required": [
													"id",
													"created_at",
													"modified_at",
													"name",
													"enabled",
													"source",
													"destination",
													"events"
												],
												"type": "object"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Number of items in current page",
													"type": "integer"
												},
												"page": {
													"description": "Current page number",
													"type": "integer"
												},
												"per_page": {
													"description": "Items per page",
													"type": "integer"
												},
												"total_count": {
													"description": "Total number of items",
													"type": "integer"
												},
												"total_pages": {
													"description": "Total number of pages",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"total_count",
												"page",
												"per_page",
												"total_pages"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List of event subscriptions"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List Event Subscriptions",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Queues Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		]
	},
	"GET /accounts/{account_id}/queues": {
		"description": "Returns the queues owned by an account.",
		"operationId": "queues-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"consumers": {
														"items": {
															"oneOf": [
																{
																	"properties": {
																		"consumer_id": {
																			"description": "A Resource identifier.",
																			"example": "023e105f4ecef8ad9ca31a8372d0c353",
																			"maxLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"created_on": {
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"queue_id": {
																			"description": "A Resource identifier.",
																			"example": "023e105f4ecef8ad9ca31a8372d0c353",
																			"maxLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"script": {
																			"allOf": [
																				{
																					"description": "Name of a Worker",
																					"example": "my-consumer-worker",
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"readOnly": true,
																					"type": "string"
																				}
																			],
																			"type": "object"
																		},
																		"script_name": {
																			"allOf": [
																				{
																					"description": "Name of a Worker",
																					"example": "my-consumer-worker",
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"type": "string",
																					"writeOnly": true
																				}
																			],
																			"type": "object",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"batch_size": {
																					"description": "The maximum number of messages to include in a batch.",
																					"example": 50,
																					"type": "number",
																					"x-auditable": true
																				},
																				"max_concurrency": {
																					"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																					"example": 10,
																					"type": "number",
																					"x-auditable": true
																				},
																				"max_retries": {
																					"description": "The maximum number of retries",
																					"example": 3,
																					"type": "number",
																					"x-auditable": true
																				},
																				"max_wait_time_ms": {
																					"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																					"example": 5000,
																					"type": "number",
																					"x-auditable": true
																				},
																				"retry_delay": {
																					"description": "The number of seconds to delay before making the message available for another attempt.",
																					"example": 10,
																					"type": "number",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"type": {
																			"enum": [
																				"worker"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"consumer_id": {
																			"description": "A Resource identifier.",
																			"example": "023e105f4ecef8ad9ca31a8372d0c353",
																			"maxLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"created_on": {
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"queue_id": {
																			"description": "A Resource identifier.",
																			"example": "023e105f4ecef8ad9ca31a8372d0c353",
																			"maxLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"batch_size": {
																					"description": "The maximum number of messages to include in a batch.",
																					"example": 50,
																					"type": "number",
																					"x-auditable": true
																				},
																				"max_retries": {
																					"description": "The maximum number of retries",
																					"example": 3,
																					"type": "number",
																					"x-auditable": true
																				},
																				"retry_delay": {
																					"description": "The number of seconds to delay before making the message available for another attempt.",
																					"example": 10,
																					"type": "number",
																					"x-auditable": true
																				},
																				"visibility_timeout_ms": {
																					"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																					"example": 6000,
																					"type": "number",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"type": {
																			"enum": [
																				"http_pull"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"type": "object"
														},
														"readOnly": true,
														"type": "array"
													},
													"consumers_total_count": {
														"readOnly": true,
														"type": "number"
													},
													"created_on": {
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"modified_on": {
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"producers": {
														"items": {
															"oneOf": [
																{
																	"properties": {
																		"script": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"enum": [
																				"worker"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"bucket_name": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"enum": [
																				"r2_bucket"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"type": "object"
														},
														"readOnly": true,
														"type": "array"
													},
													"producers_total_count": {
														"readOnly": true,
														"type": "number",
														"x-auditable": true
													},
													"queue_id": {
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"queue_name": {
														"example": "example-queue",
														"type": "string",
														"x-auditable": true
													},
													"settings": {
														"properties": {
															"delivery_delay": {
																"description": "Number of seconds to delay delivery of all messages to consumers.",
																"example": 5,
																"type": "number",
																"x-auditable": true
															},
															"delivery_paused": {
																"description": "Indicates if message delivery to consumers is currently paused.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"message_retention_period": {
																"description": "Number of seconds after which an unconsumed message will be delayed.",
																"example": 345600,
																"type": "number",
																"x-auditable": true
															}
														},
														"type": "object"
													}
												},
												"type": "object"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of queues",
													"example": 1,
													"type": "number"
												},
												"page": {
													"description": "Current page within paginated list of queues",
													"example": 1,
													"type": "number"
												},
												"per_page": {
													"description": "Number of queues per page",
													"example": 20,
													"type": "number"
												},
												"total_count": {
													"description": "Total queues available without any search parameters",
													"example": 2000,
													"type": "number"
												},
												"total_pages": {
													"description": "Total pages available without any search parameters",
													"example": 100,
													"type": "number"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "List of all Queues that belong to this account"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List Queues",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Queues Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.list"
			]
		}
	},
	"GET /accounts/{account_id}/queues/{queue_id}": {
		"description": "Get details about a specific queue.",
		"operationId": "queues-get",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"consumers": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"consumer_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"queue_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"script": {
																		"allOf": [
																			{
																				"description": "Name of a Worker",
																				"example": "my-consumer-worker",
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"readOnly": true,
																				"type": "string"
																			}
																		],
																		"type": "object"
																	},
																	"script_name": {
																		"allOf": [
																			{
																				"description": "Name of a Worker",
																				"example": "my-consumer-worker",
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"type": "string",
																				"writeOnly": true
																			}
																		],
																		"type": "object",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"batch_size": {
																				"description": "The maximum number of messages to include in a batch.",
																				"example": 50,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_concurrency": {
																				"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																				"example": 10,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_retries": {
																				"description": "The maximum number of retries",
																				"example": 3,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_wait_time_ms": {
																				"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																				"example": 5000,
																				"type": "number",
																				"x-auditable": true
																			},
																			"retry_delay": {
																				"description": "The number of seconds to delay before making the message available for another attempt.",
																				"example": 10,
																				"type": "number",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"type": {
																		"enum": [
																			"worker"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"consumer_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"queue_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"batch_size": {
																				"description": "The maximum number of messages to include in a batch.",
																				"example": 50,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_retries": {
																				"description": "The maximum number of retries",
																				"example": 3,
																				"type": "number",
																				"x-auditable": true
																			},
																			"retry_delay": {
																				"description": "The number of seconds to delay before making the message available for another attempt.",
																				"example": 10,
																				"type": "number",
																				"x-auditable": true
																			},
																			"visibility_timeout_ms": {
																				"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																				"example": 6000,
																				"type": "number",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"type": {
																		"enum": [
																			"http_pull"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															}
														],
														"type": "object"
													},
													"readOnly": true,
													"type": "array"
												},
												"consumers_total_count": {
													"readOnly": true,
													"type": "number"
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"producers": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"script": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"enum": [
																			"worker"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"bucket_name": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"enum": [
																			"r2_bucket"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															}
														],
														"type": "object"
													},
													"readOnly": true,
													"type": "array"
												},
												"producers_total_count": {
													"readOnly": true,
													"type": "number",
													"x-auditable": true
												},
												"queue_id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"queue_name": {
													"example": "example-queue",
													"type": "string",
													"x-auditable": true
												},
												"settings": {
													"properties": {
														"delivery_delay": {
															"description": "Number of seconds to delay delivery of all messages to consumers.",
															"example": 5,
															"type": "number",
															"x-auditable": true
														},
														"delivery_paused": {
															"description": "Indicates if message delivery to consumers is currently paused.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"message_retention_period": {
															"description": "Number of seconds after which an unconsumed message will be delayed.",
															"example": 345600,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Details of the requested Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Queue",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Queues Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.read"
			]
		}
	},
	"GET /accounts/{account_id}/queues/{queue_id}/consumers": {
		"description": "Returns the consumers for a Queue",
		"operationId": "queues-list-consumers",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"consumer_id": {
																"description": "A Resource identifier.",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"created_on": {
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"queue_id": {
																"description": "A Resource identifier.",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"script": {
																"allOf": [
																	{
																		"description": "Name of a Worker",
																		"example": "my-consumer-worker",
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"readOnly": true,
																		"type": "string"
																	}
																],
																"type": "object"
															},
															"script_name": {
																"allOf": [
																	{
																		"description": "Name of a Worker",
																		"example": "my-consumer-worker",
																		"type": "string",
																		"x-auditable": true
																	},
																	{
																		"type": "string",
																		"writeOnly": true
																	}
																],
																"type": "object",
																"x-auditable": true
															},
															"settings": {
																"properties": {
																	"batch_size": {
																		"description": "The maximum number of messages to include in a batch.",
																		"example": 50,
																		"type": "number",
																		"x-auditable": true
																	},
																	"max_concurrency": {
																		"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																		"example": 10,
																		"type": "number",
																		"x-auditable": true
																	},
																	"max_retries": {
																		"description": "The maximum number of retries",
																		"example": 3,
																		"type": "number",
																		"x-auditable": true
																	},
																	"max_wait_time_ms": {
																		"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																		"example": 5000,
																		"type": "number",
																		"x-auditable": true
																	},
																	"retry_delay": {
																		"description": "The number of seconds to delay before making the message available for another attempt.",
																		"example": 10,
																		"type": "number",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": {
																"enum": [
																	"worker"
																],
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													{
														"properties": {
															"consumer_id": {
																"description": "A Resource identifier.",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"created_on": {
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"queue_id": {
																"description": "A Resource identifier.",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"settings": {
																"properties": {
																	"batch_size": {
																		"description": "The maximum number of messages to include in a batch.",
																		"example": 50,
																		"type": "number",
																		"x-auditable": true
																	},
																	"max_retries": {
																		"description": "The maximum number of retries",
																		"example": 3,
																		"type": "number",
																		"x-auditable": true
																	},
																	"retry_delay": {
																		"description": "The number of seconds to delay before making the message available for another attempt.",
																		"example": 10,
																		"type": "number",
																		"x-auditable": true
																	},
																	"visibility_timeout_ms": {
																		"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																		"example": 6000,
																		"type": "number",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"type": {
																"enum": [
																	"http_pull"
																],
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "All consumers attached to this Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List Queue Consumers",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Queues Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.list"
			]
		}
	},
	"GET /accounts/{account_id}/queues/{queue_id}/consumers/{consumer_id}": {
		"description": "Fetches the consumer for a queue by consumer id",
		"operationId": "queues-get-consumer",
		"parameters": [
			{
				"in": "path",
				"name": "consumer_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"properties": {
														"consumer_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"script": {
															"allOf": [
																{
																	"description": "Name of a Worker",
																	"example": "my-consumer-worker",
																	"type": "string",
																	"x-auditable": true
																},
																{
																	"readOnly": true,
																	"type": "string"
																}
															],
															"type": "object"
														},
														"script_name": {
															"allOf": [
																{
																	"description": "Name of a Worker",
																	"example": "my-consumer-worker",
																	"type": "string",
																	"x-auditable": true
																},
																{
																	"type": "string",
																	"writeOnly": true
																}
															],
															"type": "object",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"batch_size": {
																	"description": "The maximum number of messages to include in a batch.",
																	"example": 50,
																	"type": "number",
																	"x-auditable": true
																},
																"max_concurrency": {
																	"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																},
																"max_retries": {
																	"description": "The maximum number of retries",
																	"example": 3,
																	"type": "number",
																	"x-auditable": true
																},
																"max_wait_time_ms": {
																	"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																	"example": 5000,
																	"type": "number",
																	"x-auditable": true
																},
																"retry_delay": {
																	"description": "The number of seconds to delay before making the message available for another attempt.",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": {
															"enum": [
																"worker"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"consumer_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"batch_size": {
																	"description": "The maximum number of messages to include in a batch.",
																	"example": 50,
																	"type": "number",
																	"x-auditable": true
																},
																"max_retries": {
																	"description": "The maximum number of retries",
																	"example": 3,
																	"type": "number",
																	"x-auditable": true
																},
																"retry_delay": {
																	"description": "The number of seconds to delay before making the message available for another attempt.",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																},
																"visibility_timeout_ms": {
																	"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																	"example": 6000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": {
															"enum": [
																"http_pull"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get Queue Consumer response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Get Queue Consumer response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Queue Consumer",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Queues Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.read"
			]
		}
	},
	"GET /accounts/{account_id}/queues/{queue_id}/purge": {
		"description": "Get details about a Queue's purge status.",
		"operationId": "queues-purge-get",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"completed": {
													"description": "Indicates if the last purge operation completed successfully.",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"started_at": {
													"description": "Timestamp when the last purge operation started.",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Details of the requested Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Queue Purge Status",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Queues Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.read"
			]
		}
	},
	"PATCH /accounts/{account_id}/event_subscriptions/subscriptions/{subscription_id}": {
		"description": "Update an existing event subscription",
		"operationId": "subscriptions-patch",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "subscription_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"destination": {
								"description": "Destination configuration for the subscription",
								"oneOf": [
									{
										"properties": {
											"queue_id": {
												"description": "ID of the target queue",
												"type": "string",
												"x-auditable": true
											},
											"type": {
												"description": "Type of destination",
												"enum": [
													"queues.queue"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"type",
											"queue_id"
										],
										"type": "object"
									}
								],
								"type": "object"
							},
							"enabled": {
								"description": "Whether the subscription is active",
								"type": "boolean",
								"x-auditable": true
							},
							"events": {
								"description": "List of event types this subscription handles",
								"items": {
									"type": "string"
								},
								"minItems": 1,
								"type": "array",
								"x-auditable": true
							},
							"name": {
								"description": "Name of the subscription",
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_at": {
													"description": "When the subscription was created",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"destination": {
													"description": "Destination configuration for the subscription",
													"oneOf": [
														{
															"properties": {
																"queue_id": {
																	"description": "ID of the target queue",
																	"type": "string",
																	"x-auditable": true
																},
																"type": {
																	"description": "Type of destination",
																	"enum": [
																		"queues.queue"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"type",
																"queue_id"
															],
															"type": "object"
														}
													],
													"type": "object"
												},
												"enabled": {
													"description": "Whether the subscription is active",
													"type": "boolean",
													"x-auditable": true
												},
												"events": {
													"description": "List of event types this subscription handles",
													"items": {
														"type": "string"
													},
													"minItems": 1,
													"type": "array",
													"x-auditable": true
												},
												"id": {
													"description": "Unique identifier for the subscription",
													"type": "string",
													"x-auditable": true
												},
												"modified_at": {
													"description": "When the subscription was last modified",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Name of the subscription",
													"type": "string",
													"x-auditable": true
												},
												"source": {
													"description": "Source configuration for the subscription",
													"oneOf": [
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"images"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"kv"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"r2"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"superSlurper"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"vectorize"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"model_name": {
																	"description": "Name of the Workers AI model",
																	"type": "string",
																	"x-auditable": true
																},
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workersAi.model"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workersBuilds.worker"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"worker_name": {
																	"description": "Name of the worker",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workflows.workflow"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"workflow_name": {
																	"description": "Name of the workflow",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													],
													"type": "object"
												}
											},
											"required": [
												"id",
												"created_at",
												"modified_at",
												"name",
												"enabled",
												"source",
												"destination",
												"events"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Successfully created event subscription"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Invalid request body or validation errors"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Queue does not exist or resource not found on source"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Event Subscription",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		]
	},
	"PATCH /accounts/{account_id}/queues/{queue_id}": {
		"description": "Updates a Queue.",
		"operationId": "queues-update-partial",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"consumers": {
								"items": {
									"oneOf": [
										{
											"properties": {
												"consumer_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"queue_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"script": {
													"allOf": [
														{
															"description": "Name of a Worker",
															"example": "my-consumer-worker",
															"type": "string",
															"x-auditable": true
														},
														{
															"readOnly": true,
															"type": "string"
														}
													],
													"type": "object"
												},
												"script_name": {
													"allOf": [
														{
															"description": "Name of a Worker",
															"example": "my-consumer-worker",
															"type": "string",
															"x-auditable": true
														},
														{
															"type": "string",
															"writeOnly": true
														}
													],
													"type": "object",
													"x-auditable": true
												},
												"settings": {
													"properties": {
														"batch_size": {
															"description": "The maximum number of messages to include in a batch.",
															"example": 50,
															"type": "number",
															"x-auditable": true
														},
														"max_concurrency": {
															"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
															"example": 10,
															"type": "number",
															"x-auditable": true
														},
														"max_retries": {
															"description": "The maximum number of retries",
															"example": 3,
															"type": "number",
															"x-auditable": true
														},
														"max_wait_time_ms": {
															"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
															"example": 5000,
															"type": "number",
															"x-auditable": true
														},
														"retry_delay": {
															"description": "The number of seconds to delay before making the message available for another attempt.",
															"example": 10,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"type": {
													"enum": [
														"worker"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"consumer_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"queue_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"settings": {
													"properties": {
														"batch_size": {
															"description": "The maximum number of messages to include in a batch.",
															"example": 50,
															"type": "number",
															"x-auditable": true
														},
														"max_retries": {
															"description": "The maximum number of retries",
															"example": 3,
															"type": "number",
															"x-auditable": true
														},
														"retry_delay": {
															"description": "The number of seconds to delay before making the message available for another attempt.",
															"example": 10,
															"type": "number",
															"x-auditable": true
														},
														"visibility_timeout_ms": {
															"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
															"example": 6000,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"type": {
													"enum": [
														"http_pull"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								"readOnly": true,
								"type": "array"
							},
							"consumers_total_count": {
								"readOnly": true,
								"type": "number"
							},
							"created_on": {
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"modified_on": {
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"producers": {
								"items": {
									"oneOf": [
										{
											"properties": {
												"script": {
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"enum": [
														"worker"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"bucket_name": {
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"enum": [
														"r2_bucket"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								"readOnly": true,
								"type": "array"
							},
							"producers_total_count": {
								"readOnly": true,
								"type": "number",
								"x-auditable": true
							},
							"queue_id": {
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"queue_name": {
								"example": "example-queue",
								"type": "string",
								"x-auditable": true
							},
							"settings": {
								"properties": {
									"delivery_delay": {
										"description": "Number of seconds to delay delivery of all messages to consumers.",
										"example": 5,
										"type": "number",
										"x-auditable": true
									},
									"delivery_paused": {
										"description": "Indicates if message delivery to consumers is currently paused.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"message_retention_period": {
										"description": "Number of seconds after which an unconsumed message will be delayed.",
										"example": 345600,
										"type": "number",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"consumers": {
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"consumer_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"queue_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"script": {
																				"allOf": [
																					{
																						"description": "Name of a Worker",
																						"example": "my-consumer-worker",
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"readOnly": true,
																						"type": "string"
																					}
																				],
																				"type": "object"
																			},
																			"script_name": {
																				"allOf": [
																					{
																						"description": "Name of a Worker",
																						"example": "my-consumer-worker",
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"type": "string",
																						"writeOnly": true
																					}
																				],
																				"type": "object",
																				"x-auditable": true
																			},
																			"settings": {
																				"properties": {
																					"batch_size": {
																						"description": "The maximum number of messages to include in a batch.",
																						"example": 50,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_concurrency": {
																						"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_retries": {
																						"description": "The maximum number of retries",
																						"example": 3,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_wait_time_ms": {
																						"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																						"example": 5000,
																						"type": "number",
																						"x-auditable": true
																					},
																					"retry_delay": {
																						"description": "The number of seconds to delay before making the message available for another attempt.",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"consumer_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"queue_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"settings": {
																				"properties": {
																					"batch_size": {
																						"description": "The maximum number of messages to include in a batch.",
																						"example": 50,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_retries": {
																						"description": "The maximum number of retries",
																						"example": 3,
																						"type": "number",
																						"x-auditable": true
																					},
																					"retry_delay": {
																						"description": "The number of seconds to delay before making the message available for another attempt.",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					},
																					"visibility_timeout_ms": {
																						"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																						"example": 6000,
																						"type": "number",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": {
																				"enum": [
																					"http_pull"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"readOnly": true,
															"type": "array"
														},
														"consumers_total_count": {
															"readOnly": true,
															"type": "number"
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"producers": {
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"script": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"bucket_name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"r2_bucket"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"readOnly": true,
															"type": "array"
														},
														"producers_total_count": {
															"readOnly": true,
															"type": "number",
															"x-auditable": true
														},
														"queue_id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_name": {
															"example": "example-queue",
															"type": "string",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"delivery_delay": {
																	"description": "Number of seconds to delay delivery of all messages to consumers.",
																	"example": 5,
																	"type": "number",
																	"x-auditable": true
																},
																"delivery_paused": {
																	"description": "Indicates if message delivery to consumers is currently paused.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"message_retention_period": {
																	"description": "Number of seconds after which an unconsumed message will be delayed.",
																	"example": 345600,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Updated Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Queue",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.update"
			]
		}
	},
	"POST /accounts/{account_id}/event_subscriptions/subscriptions": {
		"description": "Create a new event subscription for a queue",
		"operationId": "subscriptions-create",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"destination": {
								"description": "Destination configuration for the subscription",
								"oneOf": [
									{
										"properties": {
											"queue_id": {
												"description": "ID of the target queue",
												"type": "string",
												"x-auditable": true
											},
											"type": {
												"description": "Type of destination",
												"enum": [
													"queues.queue"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"type",
											"queue_id"
										],
										"type": "object"
									}
								],
								"type": "object"
							},
							"enabled": {
								"description": "Whether the subscription is active",
								"type": "boolean",
								"x-auditable": true
							},
							"events": {
								"description": "List of event types this subscription handles",
								"items": {
									"type": "string"
								},
								"minItems": 1,
								"type": "array",
								"x-auditable": true
							},
							"name": {
								"description": "Name of the subscription",
								"type": "string",
								"x-auditable": true
							},
							"source": {
								"description": "Source configuration for the subscription",
								"oneOf": [
									{
										"properties": {
											"type": {
												"description": "Type of source",
												"enum": [
													"images"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"type": {
												"description": "Type of source",
												"enum": [
													"kv"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"type": {
												"description": "Type of source",
												"enum": [
													"r2"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"type": {
												"description": "Type of source",
												"enum": [
													"superSlurper"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"type": {
												"description": "Type of source",
												"enum": [
													"vectorize"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"model_name": {
												"description": "Name of the Workers AI model",
												"type": "string",
												"x-auditable": true
											},
											"type": {
												"description": "Type of source",
												"enum": [
													"workersAi.model"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"type": {
												"description": "Type of source",
												"enum": [
													"workersBuilds.worker"
												],
												"type": "string",
												"x-auditable": true
											},
											"worker_name": {
												"description": "Name of the worker",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"type": {
												"description": "Type of source",
												"enum": [
													"workflows.workflow"
												],
												"type": "string",
												"x-auditable": true
											},
											"workflow_name": {
												"description": "Name of the workflow",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									}
								],
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_at": {
													"description": "When the subscription was created",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"destination": {
													"description": "Destination configuration for the subscription",
													"oneOf": [
														{
															"properties": {
																"queue_id": {
																	"description": "ID of the target queue",
																	"type": "string",
																	"x-auditable": true
																},
																"type": {
																	"description": "Type of destination",
																	"enum": [
																		"queues.queue"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"type",
																"queue_id"
															],
															"type": "object"
														}
													],
													"type": "object"
												},
												"enabled": {
													"description": "Whether the subscription is active",
													"type": "boolean",
													"x-auditable": true
												},
												"events": {
													"description": "List of event types this subscription handles",
													"items": {
														"type": "string"
													},
													"minItems": 1,
													"type": "array",
													"x-auditable": true
												},
												"id": {
													"description": "Unique identifier for the subscription",
													"type": "string",
													"x-auditable": true
												},
												"modified_at": {
													"description": "When the subscription was last modified",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Name of the subscription",
													"type": "string",
													"x-auditable": true
												},
												"source": {
													"description": "Source configuration for the subscription",
													"oneOf": [
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"images"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"kv"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"r2"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"superSlurper"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"vectorize"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"model_name": {
																	"description": "Name of the Workers AI model",
																	"type": "string",
																	"x-auditable": true
																},
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workersAi.model"
																	],
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workersBuilds.worker"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"worker_name": {
																	"description": "Name of the worker",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"type": {
																	"description": "Type of source",
																	"enum": [
																		"workflows.workflow"
																	],
																	"type": "string",
																	"x-auditable": true
																},
																"workflow_name": {
																	"description": "Name of the workflow",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													],
													"type": "object"
												}
											},
											"required": [
												"id",
												"created_at",
												"modified_at",
												"name",
												"enabled",
												"source",
												"destination",
												"events"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Successfully created event subscription"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Invalid request body or validation errors"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Queue does not exist or resource not found on source"
			},
			"405": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Multiple subscriptions on same resource not supported"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create Event Subscription",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		]
	},
	"POST /accounts/{account_id}/queues": {
		"description": "Create a new queue",
		"operationId": "queues-create",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"queue_name": {
								"example": "example-queue",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"queue_name"
						],
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"consumers": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"consumer_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"queue_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"script": {
																		"allOf": [
																			{
																				"description": "Name of a Worker",
																				"example": "my-consumer-worker",
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"readOnly": true,
																				"type": "string"
																			}
																		],
																		"type": "object"
																	},
																	"script_name": {
																		"allOf": [
																			{
																				"description": "Name of a Worker",
																				"example": "my-consumer-worker",
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"type": "string",
																				"writeOnly": true
																			}
																		],
																		"type": "object",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"batch_size": {
																				"description": "The maximum number of messages to include in a batch.",
																				"example": 50,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_concurrency": {
																				"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																				"example": 10,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_retries": {
																				"description": "The maximum number of retries",
																				"example": 3,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_wait_time_ms": {
																				"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																				"example": 5000,
																				"type": "number",
																				"x-auditable": true
																			},
																			"retry_delay": {
																				"description": "The number of seconds to delay before making the message available for another attempt.",
																				"example": 10,
																				"type": "number",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"type": {
																		"enum": [
																			"worker"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"consumer_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"queue_id": {
																		"description": "A Resource identifier.",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"batch_size": {
																				"description": "The maximum number of messages to include in a batch.",
																				"example": 50,
																				"type": "number",
																				"x-auditable": true
																			},
																			"max_retries": {
																				"description": "The maximum number of retries",
																				"example": 3,
																				"type": "number",
																				"x-auditable": true
																			},
																			"retry_delay": {
																				"description": "The number of seconds to delay before making the message available for another attempt.",
																				"example": 10,
																				"type": "number",
																				"x-auditable": true
																			},
																			"visibility_timeout_ms": {
																				"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																				"example": 6000,
																				"type": "number",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"type": {
																		"enum": [
																			"http_pull"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															}
														],
														"type": "object"
													},
													"readOnly": true,
													"type": "array"
												},
												"consumers_total_count": {
													"readOnly": true,
													"type": "number"
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"producers": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"script": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"enum": [
																			"worker"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"bucket_name": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"enum": [
																			"r2_bucket"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															}
														],
														"type": "object"
													},
													"readOnly": true,
													"type": "array"
												},
												"producers_total_count": {
													"readOnly": true,
													"type": "number",
													"x-auditable": true
												},
												"queue_id": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"queue_name": {
													"example": "example-queue",
													"type": "string",
													"x-auditable": true
												},
												"settings": {
													"properties": {
														"delivery_delay": {
															"description": "Number of seconds to delay delivery of all messages to consumers.",
															"example": 5,
															"type": "number",
															"x-auditable": true
														},
														"delivery_paused": {
															"description": "Indicates if message delivery to consumers is currently paused.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"message_retention_period": {
															"description": "Number of seconds after which an unconsumed message will be delayed.",
															"example": 345600,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Created Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create Queue",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.create"
			]
		}
	},
	"POST /accounts/{account_id}/queues/{queue_id}/consumers": {
		"description": "Creates a new consumer for a Queue",
		"operationId": "queues-create-consumer",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"oneOf": [
									{
										"properties": {
											"consumer_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"created_on": {
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"queue_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"script": {
												"allOf": [
													{
														"description": "Name of a Worker",
														"example": "my-consumer-worker",
														"type": "string",
														"x-auditable": true
													},
													{
														"readOnly": true,
														"type": "string"
													}
												],
												"type": "object"
											},
											"script_name": {
												"allOf": [
													{
														"description": "Name of a Worker",
														"example": "my-consumer-worker",
														"type": "string",
														"x-auditable": true
													},
													{
														"type": "string",
														"writeOnly": true
													}
												],
												"type": "object",
												"x-auditable": true
											},
											"settings": {
												"properties": {
													"batch_size": {
														"description": "The maximum number of messages to include in a batch.",
														"example": 50,
														"type": "number",
														"x-auditable": true
													},
													"max_concurrency": {
														"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
														"example": 10,
														"type": "number",
														"x-auditable": true
													},
													"max_retries": {
														"description": "The maximum number of retries",
														"example": 3,
														"type": "number",
														"x-auditable": true
													},
													"max_wait_time_ms": {
														"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
														"example": 5000,
														"type": "number",
														"x-auditable": true
													},
													"retry_delay": {
														"description": "The number of seconds to delay before making the message available for another attempt.",
														"example": 10,
														"type": "number",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": {
												"enum": [
													"worker"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"consumer_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"created_on": {
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"queue_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"settings": {
												"properties": {
													"batch_size": {
														"description": "The maximum number of messages to include in a batch.",
														"example": 50,
														"type": "number",
														"x-auditable": true
													},
													"max_retries": {
														"description": "The maximum number of retries",
														"example": 3,
														"type": "number",
														"x-auditable": true
													},
													"retry_delay": {
														"description": "The number of seconds to delay before making the message available for another attempt.",
														"example": 10,
														"type": "number",
														"x-auditable": true
													},
													"visibility_timeout_ms": {
														"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
														"example": 6000,
														"type": "number",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": {
												"enum": [
													"http_pull"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									}
								],
								"type": "object"
							},
							{
								"properties": {
									"dead_letter_queue": {
										"example": "example-queue",
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						],
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"properties": {
														"consumer_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"script": {
															"allOf": [
																{
																	"description": "Name of a Worker",
																	"example": "my-consumer-worker",
																	"type": "string",
																	"x-auditable": true
																},
																{
																	"readOnly": true,
																	"type": "string"
																}
															],
															"type": "object"
														},
														"script_name": {
															"allOf": [
																{
																	"description": "Name of a Worker",
																	"example": "my-consumer-worker",
																	"type": "string",
																	"x-auditable": true
																},
																{
																	"type": "string",
																	"writeOnly": true
																}
															],
															"type": "object",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"batch_size": {
																	"description": "The maximum number of messages to include in a batch.",
																	"example": 50,
																	"type": "number",
																	"x-auditable": true
																},
																"max_concurrency": {
																	"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																},
																"max_retries": {
																	"description": "The maximum number of retries",
																	"example": 3,
																	"type": "number",
																	"x-auditable": true
																},
																"max_wait_time_ms": {
																	"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																	"example": 5000,
																	"type": "number",
																	"x-auditable": true
																},
																"retry_delay": {
																	"description": "The number of seconds to delay before making the message available for another attempt.",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": {
															"enum": [
																"worker"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"consumer_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"batch_size": {
																	"description": "The maximum number of messages to include in a batch.",
																	"example": 50,
																	"type": "number",
																	"x-auditable": true
																},
																"max_retries": {
																	"description": "The maximum number of retries",
																	"example": 3,
																	"type": "number",
																	"x-auditable": true
																},
																"retry_delay": {
																	"description": "The number of seconds to delay before making the message available for another attempt.",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																},
																"visibility_timeout_ms": {
																	"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																	"example": 6000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": {
															"enum": [
																"http_pull"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create Queue Consumer response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a Queue Consumer",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.create"
			]
		}
	},
	"POST /accounts/{account_id}/queues/{queue_id}/messages": {
		"description": "Push a message to a Queue",
		"operationId": "queues-push-message",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"delay_seconds": {
										"description": "The number of seconds to wait for attempting to deliver this message to consumers",
										"example": "text",
										"type": "number",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							{
								"oneOf": [
									{
										"properties": {
											"body": {
												"type": "string"
											},
											"content_type": {
												"enum": [
													"text"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"body": {
												"type": "object"
											},
											"content_type": {
												"enum": [
													"json"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									}
								]
							}
						]
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										true
									],
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Successful message ingestion"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Push Message",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.update"
			]
		}
	},
	"POST /accounts/{account_id}/queues/{queue_id}/messages/ack": {
		"description": "Acknowledge + Retry messages from a Queue",
		"operationId": "queues-ack-messages",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"acks": {
								"items": {
									"properties": {
										"lease_id": {
											"description": "An ID that represents an \"in-flight\" message that has been pulled from a Queue. You must hold on to this ID and use it to acknowledge this message.",
											"example": "eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIn0..Q8p21d7dceR6vUfwftONdQ.JVqZgAS-Zk7MqmqccYtTHeeMElNHaOMigeWdb8LyMOg.T2_HV99CYzGaQuhTyW8RsgbnpTRZHRM6N7UoSaAKeK0",
											"type": "string",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"retries": {
								"items": {
									"properties": {
										"delay_seconds": {
											"description": "The number of seconds to delay before making the message available for another attempt.",
											"example": 10,
											"type": "number",
											"x-auditable": true
										},
										"lease_id": {
											"description": "An ID that represents an \"in-flight\" message that has been pulled from a Queue. You must hold on to this ID and use it to acknowledge this message.",
											"example": "eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIn0..Q8p21d7dceR6vUfwftONdQ.JVqZgAS-Zk7MqmqccYtTHeeMElNHaOMigeWdb8LyMOg.T2_HV99CYzGaQuhTyW8RsgbnpTRZHRM6N7UoSaAKeK0",
											"type": "string",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"ackCount": {
													"description": "The number of messages that were succesfully acknowledged.",
													"example": 5,
													"type": "number"
												},
												"retryCount": {
													"description": "The number of messages that were succesfully retried.",
													"example": 5,
													"type": "number"
												},
												"warnings": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Details of ACKs and retries"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Acknowledge + Retry Queue Messages",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.update"
			]
		}
	},
	"POST /accounts/{account_id}/queues/{queue_id}/messages/batch": {
		"description": "Push a batch of message to a Queue",
		"operationId": "queues-push-messages",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"delay_seconds": {
								"description": "The number of seconds to wait for attempting to deliver this batch to consumers",
								"example": "text",
								"type": "number",
								"x-auditable": true
							},
							"messages": {
								"items": {
									"allOf": [
										{
											"properties": {
												"delay_seconds": {
													"description": "The number of seconds to wait for attempting to deliver this message to consumers",
													"example": "text",
													"type": "number",
													"x-auditable": true
												}
											},
											"type": "object"
										},
										{
											"oneOf": [
												{
													"properties": {
														"body": {
															"type": "string"
														},
														"content_type": {
															"enum": [
																"text"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"body": {
															"type": "object"
														},
														"content_type": {
															"enum": [
																"json"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											]
										}
									]
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										true
									],
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Successful batch ingestion"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Push Message Batch",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		]
	},
	"POST /accounts/{account_id}/queues/{queue_id}/messages/pull": {
		"description": "Pull a batch of messages from a Queue",
		"operationId": "queues-pull-messages",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"batch_size": {
								"description": "The maximum number of messages to include in a batch.",
								"example": 50,
								"type": "number",
								"x-auditable": true
							},
							"visibility_timeout_ms": {
								"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
								"example": 6000,
								"type": "number",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"message_backlog_count": {
													"description": "The number of unacknowledged messages in the queue",
													"example": 5,
													"type": "number"
												},
												"messages": {
													"items": {
														"properties": {
															"attempts": {
																"example": 1,
																"readOnly": true,
																"type": "number",
																"x-auditable": true
															},
															"body": {
																"example": "hello world",
																"readOnly": true,
																"type": "string"
															},
															"id": {
																"example": "b01b5594f784d0165c2985833f5660dd",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"lease_id": {
																"description": "An ID that represents an \"in-flight\" message that has been pulled from a Queue. You must hold on to this ID and use it to acknowledge this message.",
																"example": "eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIn0..Q8p21d7dceR6vUfwftONdQ.JVqZgAS-Zk7MqmqccYtTHeeMElNHaOMigeWdb8LyMOg.T2_HV99CYzGaQuhTyW8RsgbnpTRZHRM6N7UoSaAKeK0",
																"type": "string",
																"x-auditable": true
															},
															"metadata": {
																"example": {
																	"CF-Content-Type": "text",
																	"CF-sourceMessageSource": "dash"
																},
																"readOnly": true,
																"type": "object"
															},
															"timestamp_ms": {
																"example": 1710950954154,
																"readOnly": true,
																"type": "number",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "A batch of messages in the Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Pull Queue Messages",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.update"
			]
		}
	},
	"POST /accounts/{account_id}/queues/{queue_id}/purge": {
		"description": "Deletes all messages from the Queue.",
		"operationId": "queues-purge",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"delete_messages_permanently": {
								"description": "Confimation that all messages will be deleted permanently.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"consumers": {
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"consumer_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"queue_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"script": {
																				"allOf": [
																					{
																						"description": "Name of a Worker",
																						"example": "my-consumer-worker",
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"readOnly": true,
																						"type": "string"
																					}
																				],
																				"type": "object"
																			},
																			"script_name": {
																				"allOf": [
																					{
																						"description": "Name of a Worker",
																						"example": "my-consumer-worker",
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"type": "string",
																						"writeOnly": true
																					}
																				],
																				"type": "object",
																				"x-auditable": true
																			},
																			"settings": {
																				"properties": {
																					"batch_size": {
																						"description": "The maximum number of messages to include in a batch.",
																						"example": 50,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_concurrency": {
																						"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_retries": {
																						"description": "The maximum number of retries",
																						"example": 3,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_wait_time_ms": {
																						"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																						"example": 5000,
																						"type": "number",
																						"x-auditable": true
																					},
																					"retry_delay": {
																						"description": "The number of seconds to delay before making the message available for another attempt.",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"consumer_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"queue_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"settings": {
																				"properties": {
																					"batch_size": {
																						"description": "The maximum number of messages to include in a batch.",
																						"example": 50,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_retries": {
																						"description": "The maximum number of retries",
																						"example": 3,
																						"type": "number",
																						"x-auditable": true
																					},
																					"retry_delay": {
																						"description": "The number of seconds to delay before making the message available for another attempt.",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					},
																					"visibility_timeout_ms": {
																						"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																						"example": 6000,
																						"type": "number",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": {
																				"enum": [
																					"http_pull"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"readOnly": true,
															"type": "array"
														},
														"consumers_total_count": {
															"readOnly": true,
															"type": "number"
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"producers": {
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"script": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"bucket_name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"r2_bucket"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"readOnly": true,
															"type": "array"
														},
														"producers_total_count": {
															"readOnly": true,
															"type": "number",
															"x-auditable": true
														},
														"queue_id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_name": {
															"example": "example-queue",
															"type": "string",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"delivery_delay": {
																	"description": "Number of seconds to delay delivery of all messages to consumers.",
																	"example": 5,
																	"type": "number",
																	"x-auditable": true
																},
																"delivery_paused": {
																	"description": "Indicates if message delivery to consumers is currently paused.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"message_retention_period": {
																	"description": "Number of seconds after which an unconsumed message will be delayed.",
																	"example": 345600,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Updated Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Purge Queue",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.update"
			]
		}
	},
	"PUT /accounts/{account_id}/queues/{queue_id}": {
		"description": "Updates a Queue. Note that this endpoint does not support partial updates. If successful, the Queue's configuration is overwritten with the supplied configuration.",
		"operationId": "queues-update",
		"parameters": [
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"consumers": {
								"items": {
									"oneOf": [
										{
											"properties": {
												"consumer_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"queue_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"script": {
													"allOf": [
														{
															"description": "Name of a Worker",
															"example": "my-consumer-worker",
															"type": "string",
															"x-auditable": true
														},
														{
															"readOnly": true,
															"type": "string"
														}
													],
													"type": "object"
												},
												"script_name": {
													"allOf": [
														{
															"description": "Name of a Worker",
															"example": "my-consumer-worker",
															"type": "string",
															"x-auditable": true
														},
														{
															"type": "string",
															"writeOnly": true
														}
													],
													"type": "object",
													"x-auditable": true
												},
												"settings": {
													"properties": {
														"batch_size": {
															"description": "The maximum number of messages to include in a batch.",
															"example": 50,
															"type": "number",
															"x-auditable": true
														},
														"max_concurrency": {
															"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
															"example": 10,
															"type": "number",
															"x-auditable": true
														},
														"max_retries": {
															"description": "The maximum number of retries",
															"example": 3,
															"type": "number",
															"x-auditable": true
														},
														"max_wait_time_ms": {
															"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
															"example": 5000,
															"type": "number",
															"x-auditable": true
														},
														"retry_delay": {
															"description": "The number of seconds to delay before making the message available for another attempt.",
															"example": 10,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"type": {
													"enum": [
														"worker"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"consumer_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"created_on": {
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"queue_id": {
													"description": "A Resource identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"settings": {
													"properties": {
														"batch_size": {
															"description": "The maximum number of messages to include in a batch.",
															"example": 50,
															"type": "number",
															"x-auditable": true
														},
														"max_retries": {
															"description": "The maximum number of retries",
															"example": 3,
															"type": "number",
															"x-auditable": true
														},
														"retry_delay": {
															"description": "The number of seconds to delay before making the message available for another attempt.",
															"example": 10,
															"type": "number",
															"x-auditable": true
														},
														"visibility_timeout_ms": {
															"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
															"example": 6000,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"type": {
													"enum": [
														"http_pull"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								"readOnly": true,
								"type": "array"
							},
							"consumers_total_count": {
								"readOnly": true,
								"type": "number"
							},
							"created_on": {
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"modified_on": {
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"producers": {
								"items": {
									"oneOf": [
										{
											"properties": {
												"script": {
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"enum": [
														"worker"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"bucket_name": {
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"enum": [
														"r2_bucket"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								"readOnly": true,
								"type": "array"
							},
							"producers_total_count": {
								"readOnly": true,
								"type": "number",
								"x-auditable": true
							},
							"queue_id": {
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"queue_name": {
								"example": "example-queue",
								"type": "string",
								"x-auditable": true
							},
							"settings": {
								"properties": {
									"delivery_delay": {
										"description": "Number of seconds to delay delivery of all messages to consumers.",
										"example": 5,
										"type": "number",
										"x-auditable": true
									},
									"delivery_paused": {
										"description": "Indicates if message delivery to consumers is currently paused.",
										"example": true,
										"type": "boolean",
										"x-auditable": true
									},
									"message_retention_period": {
										"description": "Number of seconds after which an unconsumed message will be delayed.",
										"example": 345600,
										"type": "number",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"consumers": {
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"consumer_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"queue_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"script": {
																				"allOf": [
																					{
																						"description": "Name of a Worker",
																						"example": "my-consumer-worker",
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"readOnly": true,
																						"type": "string"
																					}
																				],
																				"type": "object"
																			},
																			"script_name": {
																				"allOf": [
																					{
																						"description": "Name of a Worker",
																						"example": "my-consumer-worker",
																						"type": "string",
																						"x-auditable": true
																					},
																					{
																						"type": "string",
																						"writeOnly": true
																					}
																				],
																				"type": "object",
																				"x-auditable": true
																			},
																			"settings": {
																				"properties": {
																					"batch_size": {
																						"description": "The maximum number of messages to include in a batch.",
																						"example": 50,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_concurrency": {
																						"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_retries": {
																						"description": "The maximum number of retries",
																						"example": 3,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_wait_time_ms": {
																						"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																						"example": 5000,
																						"type": "number",
																						"x-auditable": true
																					},
																					"retry_delay": {
																						"description": "The number of seconds to delay before making the message available for another attempt.",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"consumer_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"queue_id": {
																				"description": "A Resource identifier.",
																				"example": "023e105f4ecef8ad9ca31a8372d0c353",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"settings": {
																				"properties": {
																					"batch_size": {
																						"description": "The maximum number of messages to include in a batch.",
																						"example": 50,
																						"type": "number",
																						"x-auditable": true
																					},
																					"max_retries": {
																						"description": "The maximum number of retries",
																						"example": 3,
																						"type": "number",
																						"x-auditable": true
																					},
																					"retry_delay": {
																						"description": "The number of seconds to delay before making the message available for another attempt.",
																						"example": 10,
																						"type": "number",
																						"x-auditable": true
																					},
																					"visibility_timeout_ms": {
																						"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																						"example": 6000,
																						"type": "number",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": {
																				"enum": [
																					"http_pull"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"readOnly": true,
															"type": "array"
														},
														"consumers_total_count": {
															"readOnly": true,
															"type": "number"
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"producers": {
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"script": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"bucket_name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"r2_bucket"
																				],
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"readOnly": true,
															"type": "array"
														},
														"producers_total_count": {
															"readOnly": true,
															"type": "number",
															"x-auditable": true
														},
														"queue_id": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_name": {
															"example": "example-queue",
															"type": "string",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"delivery_delay": {
																	"description": "Number of seconds to delay delivery of all messages to consumers.",
																	"example": 5,
																	"type": "number",
																	"x-auditable": true
																},
																"delivery_paused": {
																	"description": "Indicates if message delivery to consumers is currently paused.",
																	"example": true,
																	"type": "boolean",
																	"x-auditable": true
																},
																"message_retention_period": {
																	"description": "Number of seconds after which an unconsumed message will be delayed.",
																	"example": 345600,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Updated Queue"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Failure response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Queue",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.update"
			]
		}
	},
	"PUT /accounts/{account_id}/queues/{queue_id}/consumers/{consumer_id}": {
		"description": "Updates the consumer for a queue, or creates one if it does not exist.",
		"operationId": "queues-update-consumer",
		"parameters": [
			{
				"in": "path",
				"name": "consumer_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "queue_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "A Resource identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"oneOf": [
									{
										"properties": {
											"consumer_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"created_on": {
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"queue_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"script": {
												"allOf": [
													{
														"description": "Name of a Worker",
														"example": "my-consumer-worker",
														"type": "string",
														"x-auditable": true
													},
													{
														"readOnly": true,
														"type": "string"
													}
												],
												"type": "object"
											},
											"script_name": {
												"allOf": [
													{
														"description": "Name of a Worker",
														"example": "my-consumer-worker",
														"type": "string",
														"x-auditable": true
													},
													{
														"type": "string",
														"writeOnly": true
													}
												],
												"type": "object",
												"x-auditable": true
											},
											"settings": {
												"properties": {
													"batch_size": {
														"description": "The maximum number of messages to include in a batch.",
														"example": 50,
														"type": "number",
														"x-auditable": true
													},
													"max_concurrency": {
														"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
														"example": 10,
														"type": "number",
														"x-auditable": true
													},
													"max_retries": {
														"description": "The maximum number of retries",
														"example": 3,
														"type": "number",
														"x-auditable": true
													},
													"max_wait_time_ms": {
														"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
														"example": 5000,
														"type": "number",
														"x-auditable": true
													},
													"retry_delay": {
														"description": "The number of seconds to delay before making the message available for another attempt.",
														"example": 10,
														"type": "number",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": {
												"enum": [
													"worker"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									{
										"properties": {
											"consumer_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"created_on": {
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"queue_id": {
												"description": "A Resource identifier.",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"settings": {
												"properties": {
													"batch_size": {
														"description": "The maximum number of messages to include in a batch.",
														"example": 50,
														"type": "number",
														"x-auditable": true
													},
													"max_retries": {
														"description": "The maximum number of retries",
														"example": 3,
														"type": "number",
														"x-auditable": true
													},
													"retry_delay": {
														"description": "The number of seconds to delay before making the message available for another attempt.",
														"example": 10,
														"type": "number",
														"x-auditable": true
													},
													"visibility_timeout_ms": {
														"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
														"example": 6000,
														"type": "number",
														"x-auditable": true
													}
												},
												"type": "object"
											},
											"type": {
												"enum": [
													"http_pull"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object"
									}
								],
								"type": "object"
							},
							{
								"properties": {
									"dead_letter_queue": {
										"example": "example-queue",
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer",
														"x-auditable": true
													},
													"message": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"minLength": 1,
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates if the API call was successful or not.",
											"enum": [
												true
											],
											"type": "boolean",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"properties": {
														"consumer_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"script": {
															"allOf": [
																{
																	"description": "Name of a Worker",
																	"example": "my-consumer-worker",
																	"type": "string",
																	"x-auditable": true
																},
																{
																	"readOnly": true,
																	"type": "string"
																}
															],
															"type": "object"
														},
														"script_name": {
															"allOf": [
																{
																	"description": "Name of a Worker",
																	"example": "my-consumer-worker",
																	"type": "string",
																	"x-auditable": true
																},
																{
																	"type": "string",
																	"writeOnly": true
																}
															],
															"type": "object",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"batch_size": {
																	"description": "The maximum number of messages to include in a batch.",
																	"example": 50,
																	"type": "number",
																	"x-auditable": true
																},
																"max_concurrency": {
																	"description": "Maximum number of concurrent consumers that may consume from this Queue. Set to `null` to automatically opt in to the platform's maximum (recommended).",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																},
																"max_retries": {
																	"description": "The maximum number of retries",
																	"example": 3,
																	"type": "number",
																	"x-auditable": true
																},
																"max_wait_time_ms": {
																	"description": "The number of milliseconds to wait for a batch to fill up before attempting to deliver it",
																	"example": 5000,
																	"type": "number",
																	"x-auditable": true
																},
																"retry_delay": {
																	"description": "The number of seconds to delay before making the message available for another attempt.",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": {
															"enum": [
																"worker"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"consumer_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"created_on": {
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"queue_id": {
															"description": "A Resource identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"settings": {
															"properties": {
																"batch_size": {
																	"description": "The maximum number of messages to include in a batch.",
																	"example": 50,
																	"type": "number",
																	"x-auditable": true
																},
																"max_retries": {
																	"description": "The maximum number of retries",
																	"example": 3,
																	"type": "number",
																	"x-auditable": true
																},
																"retry_delay": {
																	"description": "The number of seconds to delay before making the message available for another attempt.",
																	"example": 10,
																	"type": "number",
																	"x-auditable": true
																},
																"visibility_timeout_ms": {
																	"description": "The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.",
																	"example": 6000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": {
															"enum": [
																"http_pull"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update Queue Consumer response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer",
												"x-auditable": true
											},
											"message": {
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"success": {
									"description": "Indicates if the API call was successful or not.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean",
									"x-auditable": true
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Update Queue Consumer response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Queue Consumer",
		"tags": [
			"Queue"
		],
		"x-api-token-group": [
			"Queues Write",
			"Workers Scripts Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.queue.update"
			]
		}
	}
}