{
	"DELETE /accounts/{account_id}": {
		"description": "Delete a specific account (only available for tenant admins at this time). This is a permanent operation that will delete any zones or other resources under the account",
		"operationId": "account-deletion",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The account ID of the account to be deleted",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"minLength": 32,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Account Deletion Success Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Account Deletion Failure Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a specific account",
		"tags": [
			"Accounts"
		],
		"x-api-token-group": [
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": false,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts": {
		"description": "List all accounts you have ownership or verified access to.",
		"operationId": "accounts-list-accounts",
		"parameters": [
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Name of the account.",
					"example": "example.com",
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Maximum number of results per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "Direction to order results.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "desc",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created_on": {
														"description": "Timestamp for the creation of the account",
														"example": "2014-03-01T12:21:02.0000Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Identifier",
														"example": "023e105f4ecef8ad9ca31a8372d0c353",
														"maxLength": 32,
														"minLength": 32,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "Account name",
														"example": "Demo Account",
														"maxLength": 100,
														"type": "string",
														"x-auditable": true
													},
													"settings": {
														"description": "Account settings",
														"properties": {
															"abuse_contact_email": {
																"description": "Sets an abuse contact email to notify for abuse reports.",
																"type": "string",
																"x-auditable": true
															},
															"enforce_twofactor": {
																"default": false,
																"description": "Indicates whether membership in this account requires that\nTwo-Factor Authentication is enabled",
																"type": "boolean",
																"x-auditable": true
															}
														},
														"type": "object"
													}
												},
												"required": [
													"id",
													"name"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with a list of accounts"
						}
					}
				},
				"description": "List Accounts response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List Accounts response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Accounts",
		"tags": [
			"Accounts"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}": {
		"description": "Get information about a specific account that you are a member of.",
		"operationId": "accounts-account-details",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "Timestamp for the creation of the account",
													"example": "2014-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"minLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Account name",
													"example": "Demo Account",
													"maxLength": 100,
													"type": "string",
													"x-auditable": true
												},
												"settings": {
													"description": "Account settings",
													"properties": {
														"abuse_contact_email": {
															"description": "Sets an abuse contact email to notify for abuse reports.",
															"type": "string",
															"x-auditable": true
														},
														"enforce_twofactor": {
															"default": false,
															"description": "Indicates whether membership in this account requires that\nTwo-Factor Authentication is enabled",
															"type": "boolean",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with a single account"
						}
					}
				},
				"description": "Account Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Account Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Account Details",
		"tags": [
			"Accounts"
		],
		"x-api-token-group": [
			"Trust and Safety Write",
			"Trust and Safety Read",
			"DNS View Write",
			"DNS View Read",
			"SCIM Provisioning",
			"Load Balancers Account Write",
			"Load Balancers Account Read",
			"Zero Trust: PII Read",
			"DDoS Botnet Feed Write",
			"DDoS Botnet Feed Read",
			"Workers R2 Storage Write",
			"Workers R2 Storage Read",
			"DDoS Protection Write",
			"DDoS Protection Read",
			"Workers Tail Read",
			"Workers KV Storage Write",
			"Workers KV Storage Read",
			"Workers Scripts Write",
			"Workers Scripts Read",
			"Load Balancing: Monitors and Pools Write",
			"Load Balancing: Monitors and Pools Read",
			"Account Firewall Access Rules Write",
			"Account Firewall Access Rules Read",
			"DNS Firewall Write",
			"DNS Firewall Read",
			"Billing Write",
			"Billing Read",
			"Account Settings Write",
			"Account Settings Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts": {
		"description": "Create an account (only available for tenant admins at this time)",
		"operationId": "account-creation",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"name": {
								"description": "Account name",
								"type": "string"
							},
							"type": {
								"description": "the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.",
								"enum": [
									"standard",
									"enterprise"
								],
								"example": "standard",
								"x-auditable": true
							},
							"unit": {
								"description": "information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/",
								"properties": {
									"id": {
										"description": "Tenant unit ID",
										"example": "f267e341f3dd4697bd3b9f71dd96247f",
										"type": "string",
										"x-auditable": true
									}
								},
								"type": "object"
							}
						},
						"required": [
							"name",
							"type"
						],
						"title": "Create account",
						"type": "object"
					}
				}
			},
			"description": "Parameters for account creation",
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "Timestamp for the creation of the account",
													"example": "2014-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"minLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Account name",
													"example": "Demo Account",
													"maxLength": 100,
													"type": "string",
													"x-auditable": true
												},
												"settings": {
													"description": "Account settings",
													"properties": {
														"abuse_contact_email": {
															"description": "Sets an abuse contact email to notify for abuse reports.",
															"type": "string",
															"x-auditable": true
														},
														"enforce_twofactor": {
															"default": false,
															"description": "Indicates whether membership in this account requires that\nTwo-Factor Authentication is enabled",
															"type": "boolean",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with a single account"
						}
					}
				},
				"description": "Account Creation Success Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Account Creation Failure Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create an account",
		"tags": [
			"Accounts"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": false,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_id}": {
		"description": "Update an existing account.",
		"operationId": "accounts-update-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"created_on": {
										"description": "Timestamp for the creation of the account",
										"example": "2014-03-01T12:21:02.0000Z",
										"format": "date-time",
										"readOnly": true,
										"type": "string",
										"x-auditable": true
									},
									"id": {
										"description": "Identifier",
										"example": "023e105f4ecef8ad9ca31a8372d0c353",
										"maxLength": 32,
										"minLength": 32,
										"type": "string",
										"x-auditable": true
									},
									"name": {
										"description": "Account name",
										"example": "Demo Account",
										"maxLength": 100,
										"type": "string",
										"x-auditable": true
									},
									"settings": {
										"description": "Account settings",
										"properties": {
											"abuse_contact_email": {
												"description": "Sets an abuse contact email to notify for abuse reports.",
												"type": "string",
												"x-auditable": true
											},
											"enforce_twofactor": {
												"default": false,
												"description": "Indicates whether membership in this account requires that\nTwo-Factor Authentication is enabled",
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object"
									}
								},
								"required": [
									"id",
									"name"
								],
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "Timestamp for the creation of the account",
													"example": "2014-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"minLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Account name",
													"example": "Demo Account",
													"maxLength": 100,
													"type": "string",
													"x-auditable": true
												},
												"settings": {
													"description": "Account settings",
													"properties": {
														"abuse_contact_email": {
															"description": "Sets an abuse contact email to notify for abuse reports.",
															"type": "string",
															"x-auditable": true
														},
														"enforce_twofactor": {
															"default": false,
															"description": "Indicates whether membership in this account requires that\nTwo-Factor Authentication is enabled",
															"type": "boolean",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with a single account"
						}
					}
				},
				"description": "Update Account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update Account response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Account",
		"tags": [
			"Accounts"
		],
		"x-api-token-group": [
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}