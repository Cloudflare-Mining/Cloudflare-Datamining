{
	"DELETE /zones/{zone_id}/email/routing/rules/{rule_identifier}": {
		"description": "Delete a specific routing rule.",
		"operationId": "email-routing-routing-rules-delete-routing-rule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_identifier",
				"required": true,
				"schema": {
					"description": "Routing rule identifier.",
					"example": "a7e6fb77503c41d8a7f3113c6918f10c",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"actions": {
															"description": "List actions patterns.",
															"items": {
																"description": "Actions pattern.",
																"properties": {
																	"type": {
																		"description": "Type of supported action.",
																		"enum": [
																			"drop",
																			"forward",
																			"worker"
																		],
																		"example": "forward",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"items": {
																			"description": "Value for action.",
																			"example": "destinationaddress@example.net",
																			"maxLength": 90,
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"enabled": {
															"default": true,
															"description": "Routing rule status.",
															"enum": [
																true,
																false
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"id": {
															"description": "Routing rule identifier.",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"matchers": {
															"description": "Matching patterns to forward to your actions.",
															"items": {
																"description": "Matching pattern to forward your actions.",
																"properties": {
																	"field": {
																		"description": "Field for type matcher.",
																		"enum": [
																			"to"
																		],
																		"example": "to",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "Type of matcher.",
																		"enum": [
																			"all",
																			"literal"
																		],
																		"example": "literal",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"description": "Value for matcher.",
																		"example": "test@example.com",
																		"maxLength": 90,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"name": {
															"description": "Routing rule name.",
															"example": "Send to user@example.net rule.",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"priority": {
															"default": 0,
															"description": "Priority of the routing rule.",
															"minimum": 0,
															"type": "number",
															"x-auditable": true
														},
														"tag": {
															"deprecated": true,
															"description": "Routing rule tag. (Deprecated, replaced by routing rule identifier)",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete routing rule response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete routing rule",
		"tags": [
			"Email Routing routing rules"
		],
		"x-api-token-group": [
			"Email Routing Rules Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.zone.email.routing.rule.delete"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/email/routing/rules": {
		"description": "Lists existing routing rules.",
		"operationId": "email-routing-routing-rules-list-routing-rules",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Maximum number of results per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "enabled",
				"schema": {
					"description": "Filter by enabled routing rules.",
					"enum": [
						true,
						false
					],
					"example": true,
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"actions": {
																"description": "List actions patterns.",
																"items": {
																	"description": "Actions pattern.",
																	"properties": {
																		"type": {
																			"description": "Type of supported action.",
																			"enum": [
																				"drop",
																				"forward",
																				"worker"
																			],
																			"example": "forward",
																			"type": "string",
																			"x-auditable": true
																		},
																		"value": {
																			"items": {
																				"description": "Value for action.",
																				"example": "destinationaddress@example.net",
																				"maxLength": 90,
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"type"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"enabled": {
																"default": true,
																"description": "Routing rule status.",
																"enum": [
																	true,
																	false
																],
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"id": {
																"description": "Routing rule identifier.",
																"example": "a7e6fb77503c41d8a7f3113c6918f10c",
																"maxLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"matchers": {
																"description": "Matching patterns to forward to your actions.",
																"items": {
																	"description": "Matching pattern to forward your actions.",
																	"properties": {
																		"field": {
																			"description": "Field for type matcher.",
																			"enum": [
																				"to"
																			],
																			"example": "to",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "Type of matcher.",
																			"enum": [
																				"all",
																				"literal"
																			],
																			"example": "literal",
																			"type": "string",
																			"x-auditable": true
																		},
																		"value": {
																			"description": "Value for matcher.",
																			"example": "test@example.com",
																			"maxLength": 90,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"type"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"name": {
																"description": "Routing rule name.",
																"example": "Send to user@example.net rule.",
																"maxLength": 256,
																"type": "string",
																"x-auditable": true
															},
															"priority": {
																"default": 0,
																"description": "Priority of the routing rule.",
																"minimum": 0,
																"type": "number",
																"x-auditable": true
															},
															"tag": {
																"deprecated": true,
																"description": "Routing rule tag. (Deprecated, replaced by routing rule identifier)",
																"example": "a7e6fb77503c41d8a7f3113c6918f10c",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															}
														},
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"example": 1
												},
												"page": {
													"example": 1
												},
												"per_page": {
													"example": 20
												},
												"total_count": {
													"example": 1
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List routing rules response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List routing rules",
		"tags": [
			"Email Routing routing rules"
		],
		"x-api-token-group": [
			"Email Routing Rules Write",
			"Email Routing Rules Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.zone.email.routing.rule.list"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/email/routing/rules/{rule_identifier}": {
		"description": "Get information for a specific routing rule already created.",
		"operationId": "email-routing-routing-rules-get-routing-rule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_identifier",
				"required": true,
				"schema": {
					"description": "Routing rule identifier.",
					"example": "a7e6fb77503c41d8a7f3113c6918f10c",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"actions": {
															"description": "List actions patterns.",
															"items": {
																"description": "Actions pattern.",
																"properties": {
																	"type": {
																		"description": "Type of supported action.",
																		"enum": [
																			"drop",
																			"forward",
																			"worker"
																		],
																		"example": "forward",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"items": {
																			"description": "Value for action.",
																			"example": "destinationaddress@example.net",
																			"maxLength": 90,
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"enabled": {
															"default": true,
															"description": "Routing rule status.",
															"enum": [
																true,
																false
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"id": {
															"description": "Routing rule identifier.",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"matchers": {
															"description": "Matching patterns to forward to your actions.",
															"items": {
																"description": "Matching pattern to forward your actions.",
																"properties": {
																	"field": {
																		"description": "Field for type matcher.",
																		"enum": [
																			"to"
																		],
																		"example": "to",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "Type of matcher.",
																		"enum": [
																			"all",
																			"literal"
																		],
																		"example": "literal",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"description": "Value for matcher.",
																		"example": "test@example.com",
																		"maxLength": 90,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"name": {
															"description": "Routing rule name.",
															"example": "Send to user@example.net rule.",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"priority": {
															"default": 0,
															"description": "Priority of the routing rule.",
															"minimum": 0,
															"type": "number",
															"x-auditable": true
														},
														"tag": {
															"deprecated": true,
															"description": "Routing rule tag. (Deprecated, replaced by routing rule identifier)",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get routing rule response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get routing rule",
		"tags": [
			"Email Routing routing rules"
		],
		"x-api-token-group": [
			"Email Routing Rules Write",
			"Email Routing Rules Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.zone.email.routing.rule.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/email/routing/rules/catch_all": {
		"description": "Get information on the default catch-all routing rule.",
		"operationId": "email-routing-routing-rules-get-catch-all-rule",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"actions": {
													"description": "List actions for the catch-all routing rule.",
													"items": {
														"description": "Action for the catch-all routing rule.",
														"properties": {
															"type": {
																"description": "Type of action for catch-all rule.",
																"enum": [
																	"drop",
																	"forward",
																	"worker"
																],
																"example": "forward",
																"type": "string",
																"x-auditable": true
															},
															"value": {
																"items": {
																	"description": "Input value for action.",
																	"example": "destinationaddress@example.net",
																	"maxLength": 90,
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															}
														},
														"required": [
															"type"
														],
														"type": "object"
													},
													"type": "array"
												},
												"enabled": {
													"default": true,
													"description": "Routing rule status.",
													"enum": [
														true,
														false
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"id": {
													"description": "Routing rule identifier.",
													"example": "a7e6fb77503c41d8a7f3113c6918f10c",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"matchers": {
													"description": "List of matchers for the catch-all routing rule.",
													"items": {
														"description": "Matcher for catch-all routing rule.",
														"properties": {
															"type": {
																"description": "Type of matcher. Default is 'all'.",
																"enum": [
																	"all"
																],
																"example": "all",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"type"
														],
														"type": "object"
													},
													"type": "array"
												},
												"name": {
													"description": "Routing rule name.",
													"example": "Send to user@example.net rule.",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												},
												"tag": {
													"deprecated": true,
													"description": "Routing rule tag. (Deprecated, replaced by routing rule identifier)",
													"example": "a7e6fb77503c41d8a7f3113c6918f10c",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get catch-all rule response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get catch-all rule",
		"tags": [
			"Email Routing routing rules"
		],
		"x-api-token-group": [
			"Email Routing Rules Write",
			"Email Routing Rules Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.zone.email.routing.rule.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/email/routing/rules": {
		"description": "Rules consist of a set of criteria for matching emails (such as an email being sent to a specific custom email address) plus a set of actions to take on the email (like forwarding it to a specific destination address).",
		"operationId": "email-routing-routing-rules-create-routing-rule",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"actions": {
								"description": "List actions patterns.",
								"items": {
									"description": "Actions pattern.",
									"properties": {
										"type": {
											"description": "Type of supported action.",
											"enum": [
												"drop",
												"forward",
												"worker"
											],
											"example": "forward",
											"type": "string",
											"x-auditable": true
										},
										"value": {
											"items": {
												"description": "Value for action.",
												"example": "destinationaddress@example.net",
												"maxLength": 90,
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										}
									},
									"required": [
										"type"
									],
									"type": "object"
								},
								"type": "array"
							},
							"enabled": {
								"default": true,
								"description": "Routing rule status.",
								"enum": [
									true,
									false
								],
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"matchers": {
								"description": "Matching patterns to forward to your actions.",
								"items": {
									"description": "Matching pattern to forward your actions.",
									"properties": {
										"field": {
											"description": "Field for type matcher.",
											"enum": [
												"to"
											],
											"example": "to",
											"type": "string",
											"x-auditable": true
										},
										"type": {
											"description": "Type of matcher.",
											"enum": [
												"all",
												"literal"
											],
											"example": "literal",
											"type": "string",
											"x-auditable": true
										},
										"value": {
											"description": "Value for matcher.",
											"example": "test@example.com",
											"maxLength": 90,
											"type": "string",
											"x-auditable": true
										}
									},
									"required": [
										"type"
									],
									"type": "object"
								},
								"type": "array"
							},
							"name": {
								"description": "Routing rule name.",
								"example": "Send to user@example.net rule.",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							},
							"priority": {
								"default": 0,
								"description": "Priority of the routing rule.",
								"minimum": 0,
								"type": "number",
								"x-auditable": true
							}
						},
						"required": [
							"actions",
							"matchers"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"actions": {
															"description": "List actions patterns.",
															"items": {
																"description": "Actions pattern.",
																"properties": {
																	"type": {
																		"description": "Type of supported action.",
																		"enum": [
																			"drop",
																			"forward",
																			"worker"
																		],
																		"example": "forward",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"items": {
																			"description": "Value for action.",
																			"example": "destinationaddress@example.net",
																			"maxLength": 90,
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"enabled": {
															"default": true,
															"description": "Routing rule status.",
															"enum": [
																true,
																false
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"id": {
															"description": "Routing rule identifier.",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"matchers": {
															"description": "Matching patterns to forward to your actions.",
															"items": {
																"description": "Matching pattern to forward your actions.",
																"properties": {
																	"field": {
																		"description": "Field for type matcher.",
																		"enum": [
																			"to"
																		],
																		"example": "to",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "Type of matcher.",
																		"enum": [
																			"all",
																			"literal"
																		],
																		"example": "literal",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"description": "Value for matcher.",
																		"example": "test@example.com",
																		"maxLength": 90,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"name": {
															"description": "Routing rule name.",
															"example": "Send to user@example.net rule.",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"priority": {
															"default": 0,
															"description": "Priority of the routing rule.",
															"minimum": 0,
															"type": "number",
															"x-auditable": true
														},
														"tag": {
															"deprecated": true,
															"description": "Routing rule tag. (Deprecated, replaced by routing rule identifier)",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create routing rule response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create routing rule",
		"tags": [
			"Email Routing routing rules"
		],
		"x-api-token-group": [
			"Email Routing Rules Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.zone.email.routing.rule.create"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/email/routing/rules/{rule_identifier}": {
		"description": "Update actions and matches, or enable/disable specific routing rules.",
		"operationId": "email-routing-routing-rules-update-routing-rule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_identifier",
				"required": true,
				"schema": {
					"description": "Routing rule identifier.",
					"example": "a7e6fb77503c41d8a7f3113c6918f10c",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"actions": {
								"description": "List actions patterns.",
								"items": {
									"description": "Actions pattern.",
									"properties": {
										"type": {
											"description": "Type of supported action.",
											"enum": [
												"drop",
												"forward",
												"worker"
											],
											"example": "forward",
											"type": "string",
											"x-auditable": true
										},
										"value": {
											"items": {
												"description": "Value for action.",
												"example": "destinationaddress@example.net",
												"maxLength": 90,
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										}
									},
									"required": [
										"type"
									],
									"type": "object"
								},
								"type": "array"
							},
							"enabled": {
								"default": true,
								"description": "Routing rule status.",
								"enum": [
									true,
									false
								],
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"matchers": {
								"description": "Matching patterns to forward to your actions.",
								"items": {
									"description": "Matching pattern to forward your actions.",
									"properties": {
										"field": {
											"description": "Field for type matcher.",
											"enum": [
												"to"
											],
											"example": "to",
											"type": "string",
											"x-auditable": true
										},
										"type": {
											"description": "Type of matcher.",
											"enum": [
												"all",
												"literal"
											],
											"example": "literal",
											"type": "string",
											"x-auditable": true
										},
										"value": {
											"description": "Value for matcher.",
											"example": "test@example.com",
											"maxLength": 90,
											"type": "string",
											"x-auditable": true
										}
									},
									"required": [
										"type"
									],
									"type": "object"
								},
								"type": "array"
							},
							"name": {
								"description": "Routing rule name.",
								"example": "Send to user@example.net rule.",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							},
							"priority": {
								"default": 0,
								"description": "Priority of the routing rule.",
								"minimum": 0,
								"type": "number",
								"x-auditable": true
							}
						},
						"required": [
							"actions",
							"matchers"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"actions": {
															"description": "List actions patterns.",
															"items": {
																"description": "Actions pattern.",
																"properties": {
																	"type": {
																		"description": "Type of supported action.",
																		"enum": [
																			"drop",
																			"forward",
																			"worker"
																		],
																		"example": "forward",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"items": {
																			"description": "Value for action.",
																			"example": "destinationaddress@example.net",
																			"maxLength": 90,
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"enabled": {
															"default": true,
															"description": "Routing rule status.",
															"enum": [
																true,
																false
															],
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"id": {
															"description": "Routing rule identifier.",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"matchers": {
															"description": "Matching patterns to forward to your actions.",
															"items": {
																"description": "Matching pattern to forward your actions.",
																"properties": {
																	"field": {
																		"description": "Field for type matcher.",
																		"enum": [
																			"to"
																		],
																		"example": "to",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "Type of matcher.",
																		"enum": [
																			"all",
																			"literal"
																		],
																		"example": "literal",
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"description": "Value for matcher.",
																		"example": "test@example.com",
																		"maxLength": 90,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"type"
																],
																"type": "object"
															},
															"type": "array"
														},
														"name": {
															"description": "Routing rule name.",
															"example": "Send to user@example.net rule.",
															"maxLength": 256,
															"type": "string",
															"x-auditable": true
														},
														"priority": {
															"default": 0,
															"description": "Priority of the routing rule.",
															"minimum": 0,
															"type": "number",
															"x-auditable": true
														},
														"tag": {
															"deprecated": true,
															"description": "Routing rule tag. (Deprecated, replaced by routing rule identifier)",
															"example": "a7e6fb77503c41d8a7f3113c6918f10c",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update routing rule response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update routing rule",
		"tags": [
			"Email Routing routing rules"
		],
		"x-api-token-group": [
			"Email Routing Rules Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.zone.email.routing.rule.update"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/email/routing/rules/catch_all": {
		"description": "Enable or disable catch-all routing rule, or change action to forward to specific destination address.",
		"operationId": "email-routing-routing-rules-update-catch-all-rule",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"actions": {
								"description": "List actions for the catch-all routing rule.",
								"items": {
									"description": "Action for the catch-all routing rule.",
									"properties": {
										"type": {
											"description": "Type of action for catch-all rule.",
											"enum": [
												"drop",
												"forward",
												"worker"
											],
											"example": "forward",
											"type": "string",
											"x-auditable": true
										},
										"value": {
											"items": {
												"description": "Input value for action.",
												"example": "destinationaddress@example.net",
												"maxLength": 90,
												"type": "string",
												"x-auditable": true
											},
											"type": "array"
										}
									},
									"required": [
										"type"
									],
									"type": "object"
								},
								"type": "array"
							},
							"enabled": {
								"default": true,
								"description": "Routing rule status.",
								"enum": [
									true,
									false
								],
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"matchers": {
								"description": "List of matchers for the catch-all routing rule.",
								"items": {
									"description": "Matcher for catch-all routing rule.",
									"properties": {
										"type": {
											"description": "Type of matcher. Default is 'all'.",
											"enum": [
												"all"
											],
											"example": "all",
											"type": "string",
											"x-auditable": true
										}
									},
									"required": [
										"type"
									],
									"type": "object"
								},
								"type": "array"
							},
							"name": {
								"description": "Routing rule name.",
								"example": "Send to user@example.net rule.",
								"maxLength": 256,
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"actions",
							"matchers"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"actions": {
													"description": "List actions for the catch-all routing rule.",
													"items": {
														"description": "Action for the catch-all routing rule.",
														"properties": {
															"type": {
																"description": "Type of action for catch-all rule.",
																"enum": [
																	"drop",
																	"forward",
																	"worker"
																],
																"example": "forward",
																"type": "string",
																"x-auditable": true
															},
															"value": {
																"items": {
																	"description": "Input value for action.",
																	"example": "destinationaddress@example.net",
																	"maxLength": 90,
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															}
														},
														"required": [
															"type"
														],
														"type": "object"
													},
													"type": "array"
												},
												"enabled": {
													"default": true,
													"description": "Routing rule status.",
													"enum": [
														true,
														false
													],
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"id": {
													"description": "Routing rule identifier.",
													"example": "a7e6fb77503c41d8a7f3113c6918f10c",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"matchers": {
													"description": "List of matchers for the catch-all routing rule.",
													"items": {
														"description": "Matcher for catch-all routing rule.",
														"properties": {
															"type": {
																"description": "Type of matcher. Default is 'all'.",
																"enum": [
																	"all"
																],
																"example": "all",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"type"
														],
														"type": "object"
													},
													"type": "array"
												},
												"name": {
													"description": "Routing rule name.",
													"example": "Send to user@example.net rule.",
													"maxLength": 256,
													"type": "string",
													"x-auditable": true
												},
												"tag": {
													"deprecated": true,
													"description": "Routing rule tag. (Deprecated, replaced by routing rule identifier)",
													"example": "a7e6fb77503c41d8a7f3113c6918f10c",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update catch-all rule response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update catch-all rule",
		"tags": [
			"Email Routing routing rules"
		],
		"x-api-token-group": [
			"Email Routing Rules Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.zone.email.routing.rule.update"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}