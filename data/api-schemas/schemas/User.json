{
	"GET /user": {
		"operationId": "user-user-details",
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"betas": {
													"description": "Lists the betas that the user is participating in.",
													"items": {
														"description": "User feature flag",
														"example": "zone_level_access_beta",
														"type": "string"
													},
													"readOnly": true,
													"type": "array"
												},
												"country": {
													"description": "The country in which the user lives.",
													"example": "US",
													"maxLength": 30,
													"nullable": true,
													"type": "string"
												},
												"first_name": {
													"description": "User's first name",
													"example": "John",
													"maxLength": 60,
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"has_business_zones": {
													"default": false,
													"description": "Indicates whether user has any business zones",
													"readOnly": true,
													"type": "boolean"
												},
												"has_enterprise_zones": {
													"default": false,
													"description": "Indicates whether user has any enterprise zones",
													"readOnly": true,
													"type": "boolean"
												},
												"has_pro_zones": {
													"default": false,
													"description": "Indicates whether user has any pro zones",
													"readOnly": true,
													"type": "boolean"
												},
												"id": {
													"description": "Identifier of the user.",
													"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
													"readOnly": true,
													"type": "string"
												},
												"last_name": {
													"description": "User's last name",
													"example": "Appleseed",
													"maxLength": 60,
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"organizations": {
													"items": {
														"properties": {
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"minLength": 32,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "Organization name.",
																"example": "Cloudflare, Inc.",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"permissions": {
																"description": "Access permissions for this User.",
																"items": {
																	"example": "#zones:read",
																	"maxLength": 160,
																	"type": "string",
																	"x-auditable": true
																},
																"readOnly": true,
																"type": "array"
															},
															"roles": {
																"description": "List of roles that a user has within an organization.",
																"items": {
																	"example": "All Privileges - Super Administrator",
																	"maxLength": 120,
																	"type": "string",
																	"x-auditable": true
																},
																"readOnly": true,
																"type": "array"
															},
															"status": {
																"description": "Whether the user is a member of the organization or has an invitation pending.",
																"enum": [
																	"member",
																	"invited"
																],
																"example": "member",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"suspended": {
													"default": false,
													"description": "Indicates whether user has been suspended",
													"readOnly": true,
													"type": "boolean"
												},
												"telephone": {
													"description": "User's telephone number",
													"example": "+1 123-123-1234",
													"maxLength": 20,
													"nullable": true,
													"type": "string"
												},
												"two_factor_authentication_enabled": {
													"default": false,
													"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
													"readOnly": true,
													"type": "boolean"
												},
												"two_factor_authentication_locked": {
													"default": false,
													"description": "Indicates whether two-factor authentication is required by one of the accounts that the user is a member of.",
													"readOnly": true,
													"type": "boolean"
												},
												"zipcode": {
													"description": "The zipcode or postal code where the user lives.",
													"example": "12345",
													"maxLength": 20,
													"nullable": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "User Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "User Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "User Details",
		"tags": [
			"User"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /users/tenants": {
		"description": "Retrieves list of tenants the authenticated user / method has access to.",
		"operationId": "User_listUserTenants",
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"type": "object"
									},
									"maxItems": 0,
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"items": {
										"description": "References an Organization in the Cloudflare data model.",
										"properties": {
											"create_time": {
												"format": "date-time",
												"readOnly": true,
												"type": "string"
											},
											"id": {
												"allOf": [
													{
														"example": "a7b9c3d2e8f4g1h5i6j0k9l2m3n7o4p8",
														"pattern": "^[a-f0-9]{32}$",
														"title": "Organization ID",
														"type": "string"
													}
												],
												"readOnly": true
											},
											"meta": {
												"additionalProperties": {
													"type": "object"
												},
												"properties": {
													"flags": {
														"allOf": [
															{
																"description": "Enable features for Organizations.",
																"properties": {
																	"account_creation": {
																		"type": "string"
																	},
																	"account_deletion": {
																		"type": "string"
																	},
																	"account_migration": {
																		"type": "string"
																	},
																	"account_mobility": {
																		"type": "string"
																	},
																	"sub_org_creation": {
																		"type": "string"
																	}
																},
																"required": [
																	"account_creation",
																	"account_deletion",
																	"account_migration",
																	"account_mobility",
																	"sub_org_creation"
																],
																"type": "object"
															}
														]
													},
													"managed_by": {
														"type": "string"
													}
												},
												"readOnly": true,
												"type": "object"
											},
											"name": {
												"type": "string"
											},
											"parent": {
												"properties": {
													"id": {
														"example": "a7b9c3d2e8f4g1h5i6j0k9l2m3n7o4p8",
														"pattern": "^[a-f0-9]{32}$",
														"title": "Organization ID",
														"type": "string"
													},
													"name": {
														"readOnly": true,
														"type": "string"
													}
												},
												"required": [
													"id",
													"name"
												],
												"type": "object"
											},
											"profile": {
												"properties": {
													"business_address": {
														"type": "string"
													},
													"business_email": {
														"type": "string"
													},
													"business_name": {
														"type": "string"
													},
													"business_phone": {
														"type": "string"
													},
													"external_metadata": {
														"type": "string"
													}
												},
												"required": [
													"business_name",
													"business_email",
													"business_phone",
													"business_address",
													"external_metadata"
												],
												"type": "object"
											}
										},
										"required": [
											"id",
											"name",
											"create_time",
											"meta"
										],
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										true
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "The request has succeeded."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "An unexpected error response."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List user tenants",
		"tags": [
			"User"
		]
	},
	"PATCH /user": {
		"description": "Edit part of your user details.",
		"operationId": "user-edit-user",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"country": {
								"description": "The country in which the user lives.",
								"example": "US",
								"maxLength": 30,
								"nullable": true,
								"type": "string"
							},
							"first_name": {
								"description": "User's first name",
								"example": "John",
								"maxLength": 60,
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"last_name": {
								"description": "User's last name",
								"example": "Appleseed",
								"maxLength": 60,
								"nullable": true,
								"type": "string",
								"x-auditable": true
							},
							"telephone": {
								"description": "User's telephone number",
								"example": "+1 123-123-1234",
								"maxLength": 20,
								"nullable": true,
								"type": "string"
							},
							"zipcode": {
								"description": "The zipcode or postal code where the user lives.",
								"example": "12345",
								"maxLength": 20,
								"nullable": true,
								"type": "string"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"betas": {
													"description": "Lists the betas that the user is participating in.",
													"items": {
														"description": "User feature flag",
														"example": "zone_level_access_beta",
														"type": "string"
													},
													"readOnly": true,
													"type": "array"
												},
												"country": {
													"description": "The country in which the user lives.",
													"example": "US",
													"maxLength": 30,
													"nullable": true,
													"type": "string"
												},
												"first_name": {
													"description": "User's first name",
													"example": "John",
													"maxLength": 60,
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"has_business_zones": {
													"default": false,
													"description": "Indicates whether user has any business zones",
													"readOnly": true,
													"type": "boolean"
												},
												"has_enterprise_zones": {
													"default": false,
													"description": "Indicates whether user has any enterprise zones",
													"readOnly": true,
													"type": "boolean"
												},
												"has_pro_zones": {
													"default": false,
													"description": "Indicates whether user has any pro zones",
													"readOnly": true,
													"type": "boolean"
												},
												"id": {
													"description": "Identifier of the user.",
													"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
													"readOnly": true,
													"type": "string"
												},
												"last_name": {
													"description": "User's last name",
													"example": "Appleseed",
													"maxLength": 60,
													"nullable": true,
													"type": "string",
													"x-auditable": true
												},
												"organizations": {
													"items": {
														"properties": {
															"id": {
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"minLength": 32,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "Organization name.",
																"example": "Cloudflare, Inc.",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"permissions": {
																"description": "Access permissions for this User.",
																"items": {
																	"example": "#zones:read",
																	"maxLength": 160,
																	"type": "string",
																	"x-auditable": true
																},
																"readOnly": true,
																"type": "array"
															},
															"roles": {
																"description": "List of roles that a user has within an organization.",
																"items": {
																	"example": "All Privileges - Super Administrator",
																	"maxLength": 120,
																	"type": "string",
																	"x-auditable": true
																},
																"readOnly": true,
																"type": "array"
															},
															"status": {
																"description": "Whether the user is a member of the organization or has an invitation pending.",
																"enum": [
																	"member",
																	"invited"
																],
																"example": "member",
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"suspended": {
													"default": false,
													"description": "Indicates whether user has been suspended",
													"readOnly": true,
													"type": "boolean"
												},
												"telephone": {
													"description": "User's telephone number",
													"example": "+1 123-123-1234",
													"maxLength": 20,
													"nullable": true,
													"type": "string"
												},
												"two_factor_authentication_enabled": {
													"default": false,
													"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
													"readOnly": true,
													"type": "boolean"
												},
												"two_factor_authentication_locked": {
													"default": false,
													"description": "Indicates whether two-factor authentication is required by one of the accounts that the user is a member of.",
													"readOnly": true,
													"type": "boolean"
												},
												"zipcode": {
													"description": "The zipcode or postal code where the user lives.",
													"example": "12345",
													"maxLength": 20,
													"nullable": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Edit User response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Edit User response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Edit User",
		"tags": [
			"User"
		],
		"x-api-token-group": [
			"User Details Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.update"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}