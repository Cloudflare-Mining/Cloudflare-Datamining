{
	"POST /accounts/{account_id}/r2-catalog/{bucket_name}/credential": {
		"description": "Store authentication credentials for a catalog. These credentials are used\nto authenticate with R2 storage when performing catalog operations.\n",
		"operationId": "store-credentials",
		"parameters": [
			{
				"description": "Identifies the account.",
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Use this to identify the account.",
					"example": "0123456789abcdef0123456789abcdef",
					"pattern": "^[a-fA-F0-9]{32}$",
					"type": "string"
				}
			},
			{
				"description": "Specifies the R2 bucket name.",
				"in": "path",
				"name": "bucket_name",
				"required": true,
				"schema": {
					"description": "Specifies the R2 bucket name.",
					"example": "my-data-bucket",
					"maxLength": 63,
					"minLength": 3,
					"pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"example": {
						"token": "your-cloudflare-api-token-here"
					},
					"schema": {
						"description": "Contains request to store catalog credentials.",
						"properties": {
							"token": {
								"description": "Provides the Cloudflare API token for accessing R2.",
								"example": "your-cloudflare-api-token-here",
								"type": "string"
							}
						},
						"required": [
							"token"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"example": {
							"errors": [],
							"messages": [],
							"result": null,
							"success": true
						},
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"description": "Contains errors if the API call was unsuccessful.",
											"items": {
												"properties": {
													"code": {
														"description": "Specifies the error code.",
														"type": "integer"
													},
													"message": {
														"description": "Describes the error.",
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"description": "Contains informational messages.",
											"items": {
												"properties": {
													"code": {
														"description": "Specifies the message code.",
														"type": "integer"
													},
													"message": {
														"description": "Contains the message text.",
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"description": "Indicates whether the API call was successful.",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Credentials stored successfully."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"type": "object"
									},
									"minItems": 1,
									"type": "array"
								},
								"messages": {
									"items": {
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			},
			"401": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"type": "object"
									},
									"minItems": 1,
									"type": "array"
								},
								"messages": {
									"items": {
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Authentication failed."
			},
			"403": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"type": "object"
									},
									"minItems": 1,
									"type": "array"
								},
								"messages": {
									"items": {
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Forbidden."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"type": "object"
									},
									"minItems": 1,
									"type": "array"
								},
								"messages": {
									"items": {
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Catalog not found."
			},
			"500": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"code": {
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"type": "object"
									},
									"minItems": 1,
									"type": "array"
								},
								"messages": {
									"items": {
										"type": "object"
									},
									"type": "array"
								},
								"success": {
									"enum": [
										false
									],
									"type": "boolean"
								}
							},
							"type": "object"
						}
					}
				},
				"description": "Internal server error."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Store catalog credentials",
		"tags": [
			"Credential Management"
		],
		"x-api-token-group": [
			"Workers R2 Data Catalog Write"
		]
	}
}