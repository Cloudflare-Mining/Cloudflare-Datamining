{
	"DELETE /accounts/{account_id}/iam/user_groups/{user_group_id}": {
		"description": "Remove a user group from an account.",
		"operationId": "account-user-group-delete",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "path",
				"name": "user_group_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"minLength": 32,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Remove User Group response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Remove User Group response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Remove User Group",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.delete"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /accounts/{account_id}/iam/user_groups/{user_group_id}/members/{member_id}": {
		"description": "Remove a member from User Group",
		"operationId": "account-user-group-member-delete",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "path",
				"name": "user_group_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			},
			{
				"in": "path",
				"name": "member_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "The identifier of an existing account Member.",
					"title": "User Group Member Identifier"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Member attached to a User Group.",
											"properties": {
												"email": {
													"description": "The contact email address of the user.",
													"example": "user@example.com",
													"maxLength": 90,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Account member identifier.",
													"example": "4f5f0c14a2a41d5063dd301b2f829f04",
													"readOnly": true,
													"type": "string"
												},
												"status": {
													"description": "The member's status in the account.",
													"enum": [
														"accepted",
														"pending"
													],
													"example": "accepted",
													"readOnly": true
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete User Group Member response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete User Group response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Remove User Group Member",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.delete"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/iam/user_groups": {
		"description": "List all the user groups for an account.",
		"operationId": "account-user-group-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"description": "ID of the user group to be fetched.",
				"in": "query",
				"name": "id",
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Name of the user group to be fetched.",
					"example": "NameOfTheUserGroup",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "fuzzyName",
				"schema": {
					"description": "A string used for searching for user groups containing that substring.",
					"example": "Foo",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Maximum number of results per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "The sort order of returned user groups by name. Default sort order is ascending. To switch to descending, set this parameter to \"desc\"",
					"example": "desc",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "A list of user groups for the account.",
											"items": {
												"description": "A group of policies resources.",
												"properties": {
													"created_on": {
														"description": "Timestamp for the creation of the user group",
														"example": "2024-03-01T12:21:02.0000Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"allOf": [
															{
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"minLength": 32,
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "User Group identifier tag.",
														"title": "User Group Identifier"
													},
													"modified_on": {
														"description": "Last time the user group was modified.",
														"example": "2024-03-01T12:21:02.0000Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "Name of the user group.",
														"example": "My New User Group",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"policies": {
														"description": "Policies attached to the User group",
														"items": {
															"description": "Policy",
															"properties": {
																"access": {
																	"description": "Allow or deny operations against the resources.",
																	"enum": [
																		"allow",
																		"deny"
																	],
																	"example": "allow",
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "Policy identifier.",
																	"example": "f267e341f3dd4697bd3b9f71dd96247f",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"permission_groups": {
																	"description": "A set of permission groups that are specified to the policy.",
																	"example": [
																		{
																			"id": "c8fed203ed3043cba015a93ad1616f1f",
																			"meta": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"name": "Zone Read"
																		},
																		{
																			"id": "82e64a83756745bbbb1c9c2701bf816b",
																			"meta": {
																				"label": "fbm_user",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"name": "Magic Network Monitoring"
																		}
																	],
																	"items": {
																		"description": "A named group of permissions that map to a group of operations against resources.",
																		"properties": {
																			"id": {
																				"description": "Identifier of the permission group.",
																				"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																				"type": "string",
																				"x-auditable": true
																			},
																			"meta": {
																				"description": "Attributes associated to the permission group.",
																				"example": {
																					"label": "load_balancer_admin",
																					"scopes": "com.cloudflare.api.account"
																				},
																				"properties": {
																					"key": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"value": {
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"name": {
																				"description": "Name of the permission group.",
																				"example": "Load Balancer",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"id"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"resource_groups": {
																	"description": "A list of resource groups that the policy applies to.",
																	"items": {
																		"description": "A group of scoped resources.",
																		"properties": {
																			"id": {
																				"description": "Identifier of the resource group.",
																				"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"meta": {
																				"description": "Attributes associated to the resource group.",
																				"example": {
																					"editable": "false"
																				},
																				"properties": {
																					"key": {
																						"type": "string"
																					},
																					"value": {
																						"type": "string"
																					}
																				},
																				"type": "object"
																			},
																			"name": {
																				"description": "Name of the resource group.",
																				"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"scope": {
																				"description": "The scope associated to the resource group",
																				"items": {
																					"description": "A scope is a combination of scope objects which provides additional context.",
																					"properties": {
																						"key": {
																							"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																							"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																							"readOnly": true,
																							"x-auditable": true
																						},
																						"objects": {
																							"description": "A list of scope objects for additional context.",
																							"items": {
																								"description": "A scope object represents any resource that can have actions applied against invite.",
																								"properties": {
																									"key": {
																										"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																										"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																										"readOnly": true,
																										"x-auditable": true
																									}
																								},
																								"required": [
																									"key"
																								],
																								"type": "object"
																							},
																							"type": "array"
																						}
																					},
																					"required": [
																						"key",
																						"objects"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			}
																		},
																		"required": [
																			"id",
																			"scope"
																		],
																		"type": "object"
																	},
																	"type": "array"
																}
															},
															"title": "Authorization Policy"
														},
														"title": "User Group Policies",
														"type": "array"
													}
												},
												"required": [
													"id",
													"name",
													"created_on",
													"modified_on"
												],
												"type": "object"
											},
											"title": "User Groups",
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List User Group response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List User Group response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List User Groups",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write",
			"Account Settings Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.list"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/iam/user_groups/{user_group_id}": {
		"description": "Get information about a specific user group in an account.",
		"operationId": "account-user-group-details",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "path",
				"name": "user_group_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "A group of policies resources.",
											"properties": {
												"created_on": {
													"description": "Timestamp for the creation of the user group",
													"example": "2024-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"allOf": [
														{
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"minLength": 32,
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "User Group identifier tag.",
													"title": "User Group Identifier"
												},
												"modified_on": {
													"description": "Last time the user group was modified.",
													"example": "2024-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Name of the user group.",
													"example": "My New User Group",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "Policies attached to the User group",
													"items": {
														"description": "Policy",
														"properties": {
															"access": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resource_groups": {
																"description": "A list of resource groups that the policy applies to.",
																"items": {
																	"description": "A group of scoped resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the resource group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the resource group.",
																			"example": {
																				"editable": "false"
																			},
																			"properties": {
																				"key": {
																					"type": "string"
																				},
																				"value": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the resource group.",
																			"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"scope": {
																			"description": "The scope associated to the resource group",
																			"items": {
																				"description": "A scope is a combination of scope objects which provides additional context.",
																				"properties": {
																					"key": {
																						"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																						"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																						"readOnly": true,
																						"x-auditable": true
																					},
																					"objects": {
																						"description": "A list of scope objects for additional context.",
																						"items": {
																							"description": "A scope object represents any resource that can have actions applied against invite.",
																							"properties": {
																								"key": {
																									"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																									"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																									"readOnly": true,
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"key"
																							],
																							"type": "object"
																						},
																						"type": "array"
																					}
																				},
																				"required": [
																					"key",
																					"objects"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"id",
																		"scope"
																	],
																	"type": "object"
																},
																"type": "array"
															}
														},
														"title": "Authorization Policy"
													},
													"title": "User Group Policies",
													"type": "array"
												}
											},
											"required": [
												"id",
												"name",
												"created_on",
												"modified_on"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "User Group Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "User Group Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "User Group Details",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write",
			"Account Settings Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/iam/user_groups/{user_group_id}/members": {
		"description": "List all the members attached to a user group.",
		"operationId": "account-user-group-member-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "path",
				"name": "user_group_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 100,
					"description": "Maximum number of results per page.",
					"maximum": 500,
					"minimum": 1,
					"type": "number"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"description": "Member attached to a User Group.",
												"properties": {
													"email": {
														"description": "The contact email address of the user.",
														"example": "user@example.com",
														"maxLength": 90,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Account member identifier.",
														"example": "4f5f0c14a2a41d5063dd301b2f829f04",
														"readOnly": true,
														"type": "string"
													},
													"status": {
														"description": "The member's status in the account.",
														"enum": [
															"accepted",
															"pending"
														],
														"example": "accepted",
														"readOnly": true
													}
												},
												"required": [
													"id"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"title": "List of members attached to a user group"
						}
					}
				},
				"description": "List User Group Members"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "User Group Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List User Group Members",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write",
			"Account Settings Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_id}/iam/user_groups": {
		"description": "Create a new user group under the specified account.",
		"operationId": "account-user-group-create",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"name": {
								"description": "Name of the User group.",
								"example": "My New User Group",
								"type": "string",
								"x-auditable": true
							},
							"policies": {
								"description": "Policies attached to the User group",
								"items": {
									"properties": {
										"access": {
											"description": "Allow or deny operations against the resources.",
											"enum": [
												"allow",
												"deny"
											],
											"example": "allow",
											"type": "string",
											"x-auditable": true
										},
										"permission_groups": {
											"description": "A set of permission groups that are specified to the policy.",
											"example": [
												{
													"id": "c8fed203ed3043cba015a93ad1616f1f"
												},
												{
													"id": "82e64a83756745bbbb1c9c2701bf816b"
												}
											],
											"items": {
												"description": "A named group of permissions that map to a group of operations against resources.",
												"properties": {
													"id": {
														"allOf": [
															{
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"minLength": 32,
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Permission Group identifier tag.",
														"title": "Permission Group Identifier"
													}
												},
												"required": [
													"id"
												],
												"type": "object"
											},
											"title": "Permission Group IDs",
											"type": "array"
										},
										"resource_groups": {
											"description": "A set of resource groups that are specified to the policy.",
											"example": [
												{
													"id": "6d7f2f5f5b1d4a0e9081fdc98d432fd1"
												}
											],
											"items": {
												"description": "A group of scoped resources.",
												"properties": {
													"id": {
														"allOf": [
															{
																"description": "Identifier",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"minLength": 32,
																"type": "string",
																"x-auditable": true
															}
														],
														"description": "Resource Group identifier tag.",
														"title": "Resource Group Identifier"
													}
												},
												"required": [
													"id"
												],
												"type": "object"
											},
											"title": "Resource Group IDs",
											"type": "array"
										}
									},
									"required": [
										"access",
										"permission_groups",
										"resource_groups"
									]
								},
								"title": "User Group Policies",
								"type": "array"
							}
						},
						"required": [
							"name",
							"policies"
						],
						"title": "Create User group with a set of policies",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "A group of policies resources.",
											"properties": {
												"created_on": {
													"description": "Timestamp for the creation of the user group",
													"example": "2024-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"allOf": [
														{
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"minLength": 32,
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "User Group identifier tag.",
													"title": "User Group Identifier"
												},
												"modified_on": {
													"description": "Last time the user group was modified.",
													"example": "2024-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Name of the user group.",
													"example": "My New User Group",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "Policies attached to the User group",
													"items": {
														"description": "Policy",
														"properties": {
															"access": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resource_groups": {
																"description": "A list of resource groups that the policy applies to.",
																"items": {
																	"description": "A group of scoped resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the resource group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the resource group.",
																			"example": {
																				"editable": "false"
																			},
																			"properties": {
																				"key": {
																					"type": "string"
																				},
																				"value": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the resource group.",
																			"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"scope": {
																			"description": "The scope associated to the resource group",
																			"items": {
																				"description": "A scope is a combination of scope objects which provides additional context.",
																				"properties": {
																					"key": {
																						"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																						"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																						"readOnly": true,
																						"x-auditable": true
																					},
																					"objects": {
																						"description": "A list of scope objects for additional context.",
																						"items": {
																							"description": "A scope object represents any resource that can have actions applied against invite.",
																							"properties": {
																								"key": {
																									"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																									"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																									"readOnly": true,
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"key"
																							],
																							"type": "object"
																						},
																						"type": "array"
																					}
																				},
																				"required": [
																					"key",
																					"objects"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"id",
																		"scope"
																	],
																	"type": "object"
																},
																"type": "array"
															}
														},
														"title": "Authorization Policy"
													},
													"title": "User Group Policies",
													"type": "array"
												}
											},
											"required": [
												"id",
												"name",
												"created_on",
												"modified_on"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add User Group response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Add User Group response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create User Group",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.create"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_id}/iam/user_groups/{user_group_id}/members": {
		"description": "Add members to a User Group.",
		"operationId": "account-user-group-member-create",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "path",
				"name": "user_group_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"id": {
									"allOf": [
										{
											"description": "Identifier",
											"example": "023e105f4ecef8ad9ca31a8372d0c353",
											"maxLength": 32,
											"minLength": 32,
											"type": "string",
											"x-auditable": true
										}
									],
									"description": "The identifier of an existing account Member.",
									"title": "User Group Member Identifier"
								}
							},
							"required": [
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Member attached to a User Group.",
											"properties": {
												"email": {
													"description": "The contact email address of the user.",
													"example": "user@example.com",
													"maxLength": 90,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Account member identifier.",
													"example": "4f5f0c14a2a41d5063dd301b2f829f04",
													"readOnly": true,
													"type": "string"
												},
												"status": {
													"description": "The member's status in the account.",
													"enum": [
														"accepted",
														"pending"
													],
													"example": "accepted",
													"readOnly": true
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add User Group Member response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Add User Group Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Add User Group Members",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.create"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_id}/iam/user_groups/{user_group_id}": {
		"description": "Modify an existing user group.",
		"operationId": "account-user-group-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "path",
				"name": "user_group_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"name": {
								"description": "Name of the User group.",
								"example": "My New User Group",
								"type": "string"
							},
							"policies": {
								"description": "Policies attached to the User group",
								"items": {
									"allOf": [
										{
											"properties": {
												"id": {
													"description": "Policy identifier.",
													"example": "f267e341f3dd4697bd3b9f71dd96247f",
													"type": "string"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										},
										{
											"properties": {
												"access": {
													"description": "Allow or deny operations against the resources.",
													"enum": [
														"allow",
														"deny"
													],
													"example": "allow",
													"type": "string",
													"x-auditable": true
												},
												"permission_groups": {
													"description": "A set of permission groups that are specified to the policy.",
													"example": [
														{
															"id": "c8fed203ed3043cba015a93ad1616f1f"
														},
														{
															"id": "82e64a83756745bbbb1c9c2701bf816b"
														}
													],
													"items": {
														"description": "A named group of permissions that map to a group of operations against resources.",
														"properties": {
															"id": {
																"allOf": [
																	{
																		"description": "Identifier",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"minLength": 32,
																		"type": "string",
																		"x-auditable": true
																	}
																],
																"description": "Permission Group identifier tag.",
																"title": "Permission Group Identifier"
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"title": "Permission Group IDs",
													"type": "array"
												},
												"resource_groups": {
													"description": "A set of resource groups that are specified to the policy.",
													"example": [
														{
															"id": "6d7f2f5f5b1d4a0e9081fdc98d432fd1"
														}
													],
													"items": {
														"description": "A group of scoped resources.",
														"properties": {
															"id": {
																"allOf": [
																	{
																		"description": "Identifier",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353",
																		"maxLength": 32,
																		"minLength": 32,
																		"type": "string",
																		"x-auditable": true
																	}
																],
																"description": "Resource Group identifier tag.",
																"title": "Resource Group Identifier"
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"title": "Resource Group IDs",
													"type": "array"
												}
											},
											"required": [
												"access",
												"permission_groups",
												"resource_groups"
											]
										}
									]
								},
								"title": "User Group Policies",
								"type": "array"
							}
						},
						"title": "Create User group with a set of policies",
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "A group of policies resources.",
											"properties": {
												"created_on": {
													"description": "Timestamp for the creation of the user group",
													"example": "2024-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"allOf": [
														{
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"minLength": 32,
															"type": "string",
															"x-auditable": true
														}
													],
													"description": "User Group identifier tag.",
													"title": "User Group Identifier"
												},
												"modified_on": {
													"description": "Last time the user group was modified.",
													"example": "2024-03-01T12:21:02.0000Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Name of the user group.",
													"example": "My New User Group",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "Policies attached to the User group",
													"items": {
														"description": "Policy",
														"properties": {
															"access": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resource_groups": {
																"description": "A list of resource groups that the policy applies to.",
																"items": {
																	"description": "A group of scoped resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the resource group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the resource group.",
																			"example": {
																				"editable": "false"
																			},
																			"properties": {
																				"key": {
																					"type": "string"
																				},
																				"value": {
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the resource group.",
																			"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"scope": {
																			"description": "The scope associated to the resource group",
																			"items": {
																				"description": "A scope is a combination of scope objects which provides additional context.",
																				"properties": {
																					"key": {
																						"description": "This is a combination of pre-defined resource name and identifier (like Account ID etc.)",
																						"example": "com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4",
																						"readOnly": true,
																						"x-auditable": true
																					},
																					"objects": {
																						"description": "A list of scope objects for additional context.",
																						"items": {
																							"description": "A scope object represents any resource that can have actions applied against invite.",
																							"properties": {
																								"key": {
																									"description": "This is a combination of pre-defined resource name and identifier (like Zone ID etc.)",
																									"example": "com.cloudflare.api.account.zone.23f8d65290b24279ba6f44721b3eaad5",
																									"readOnly": true,
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"key"
																							],
																							"type": "object"
																						},
																						"type": "array"
																					}
																				},
																				"required": [
																					"key",
																					"objects"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		}
																	},
																	"required": [
																		"id",
																		"scope"
																	],
																	"type": "object"
																},
																"type": "array"
															}
														},
														"title": "Authorization Policy"
													},
													"title": "User Group Policies",
													"type": "array"
												}
											},
											"required": [
												"id",
												"name",
												"created_on",
												"modified_on"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update User Group response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update User Group response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update User Group",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.account.member.update"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_id}/iam/user_groups/{user_group_id}/members": {
		"description": "Replace the set of members attached to a User Group.",
		"operationId": "account-user-group-members-update",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "Account identifier tag.",
					"title": "Account Identifier"
				}
			},
			{
				"in": "path",
				"name": "user_group_id",
				"required": true,
				"schema": {
					"allOf": [
						{
							"description": "Identifier",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"minLength": 32,
							"type": "string",
							"x-auditable": true
						}
					],
					"description": "User Group identifier tag.",
					"title": "User Group Identifier"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Set/Replace members to a user group.",
						"items": {
							"properties": {
								"id": {
									"allOf": [
										{
											"description": "Identifier",
											"example": "023e105f4ecef8ad9ca31a8372d0c353",
											"maxLength": 32,
											"minLength": 32,
											"type": "string",
											"x-auditable": true
										}
									],
									"description": "The identifier of an existing account Member.",
									"title": "User Group Member Identifier"
								}
							},
							"required": [
								"id"
							],
							"type": "object"
						},
						"title": "Update User Group Members",
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"description": "Member attached to a User Group.",
												"properties": {
													"email": {
														"description": "The contact email address of the user.",
														"example": "user@example.com",
														"maxLength": 90,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Account member identifier.",
														"example": "4f5f0c14a2a41d5063dd301b2f829f04",
														"readOnly": true,
														"type": "string"
													},
													"status": {
														"description": "The member's status in the account.",
														"enum": [
															"accepted",
															"pending"
														],
														"example": "accepted",
														"readOnly": true
													}
												},
												"required": [
													"id"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update User Group Members response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update User Group response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update User Group Members",
		"tags": [
			"Account User Groups"
		],
		"x-api-token-group": [
			"SCIM Provisioning",
			"Account Settings Write"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}