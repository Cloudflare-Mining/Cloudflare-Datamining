{
	"DELETE /zones/{zone_id}/secondary_dns/incoming": {
		"description": "Delete secondary zone configuration for incoming zone transfers.",
		"operationId": "secondary-dns-(-secondary-zone)-delete-secondary-zone-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "269d8f4853475ca241c4e730be286b20",
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": "269d8f4853475ca241c4e730be286b20",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Secondary Zone Configuration response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"example": "269d8f4853475ca241c4e730be286b20",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Secondary Zone Configuration response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Secondary Zone Configuration",
		"tags": [
			"Secondary DNS (Secondary Zone)"
		],
		"x-api-token-group": [
			"Zone Settings Write",
			"Zone Write",
			"DNS Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/secondary_dns/incoming": {
		"description": "Get secondary zone configuration for incoming zone transfers.",
		"operationId": "secondary-dns-(-secondary-zone)-secondary-zone-configuration-details",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "269d8f4853475ca241c4e730be286b20",
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"auto_refresh_seconds": {
													"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
													"example": 86400,
													"type": "number",
													"x-auditable": true
												},
												"checked_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"created_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "269d8f4853475ca241c4e730be286b20",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"modified_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Zone name.",
													"example": "www.example.com.",
													"type": "string",
													"x-auditable": true
												},
												"peers": {
													"description": "A list of peer tags.",
													"example": [
														"23ff594956f20c2a721606e94745a8aa",
														"00920f38ce07c2e2f4df50b1f61d4194"
													],
													"items": {
														"example": "269d8f4853475ca241c4e730be286b20",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"soa_serial": {
													"description": "The serial number of the SOA for the given zone.",
													"example": 2019102400,
													"type": "number",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Secondary Zone Configuration Details response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"auto_refresh_seconds": {
															"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
															"example": 86400,
															"type": "number",
															"x-auditable": true
														},
														"checked_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"created_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "269d8f4853475ca241c4e730be286b20",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"modified_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "Zone name.",
															"example": "www.example.com.",
															"type": "string",
															"x-auditable": true
														},
														"peers": {
															"description": "A list of peer tags.",
															"example": [
																"23ff594956f20c2a721606e94745a8aa",
																"00920f38ce07c2e2f4df50b1f61d4194"
															],
															"items": {
																"example": "269d8f4853475ca241c4e730be286b20",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"type": "array",
															"x-stainless-collection-type": "set"
														},
														"soa_serial": {
															"description": "The serial number of the SOA for the given zone.",
															"example": 2019102400,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Secondary Zone Configuration Details response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Secondary Zone Configuration Details",
		"tags": [
			"Secondary DNS (Secondary Zone)"
		],
		"x-api-token-group": [
			"Zone Settings Write",
			"Zone Settings Read",
			"DNS Read",
			"Zone Write",
			"DNS Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /zones/{zone_id}/secondary_dns/force_axfr": {
		"description": "Sends AXFR zone transfer request to primary nameserver(s).",
		"operationId": "secondary-dns-(-secondary-zone)-force-axfr",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "269d8f4853475ca241c4e730be286b20",
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "When force_axfr query parameter is set to true, the response is a simple string.",
											"example": "OK",
											"type": "string",
											"x-auditable": true
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Force AXFR response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"description": "When force_axfr query parameter is set to true, the response is a simple string.",
													"example": "OK",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Force AXFR response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Force AXFR",
		"tags": [
			"Secondary DNS (Secondary Zone)"
		],
		"x-api-token-group": [
			"Zone Settings Write",
			"Zone Write",
			"DNS Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /zones/{zone_id}/secondary_dns/incoming": {
		"description": "Create secondary zone configuration for incoming zone transfers.",
		"operationId": "secondary-dns-(-secondary-zone)-create-secondary-zone-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "269d8f4853475ca241c4e730be286b20",
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"auto_refresh_seconds": {
								"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
								"example": 86400,
								"type": "number",
								"x-auditable": true
							},
							"id": {
								"example": "269d8f4853475ca241c4e730be286b20",
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "Zone name.",
								"example": "www.example.com.",
								"type": "string",
								"x-auditable": true
							},
							"peers": {
								"description": "A list of peer tags.",
								"example": [
									"23ff594956f20c2a721606e94745a8aa",
									"00920f38ce07c2e2f4df50b1f61d4194"
								],
								"items": {
									"example": "269d8f4853475ca241c4e730be286b20",
									"readOnly": true,
									"type": "string",
									"x-auditable": true
								},
								"type": "array",
								"x-stainless-collection-type": "set"
							}
						},
						"required": [
							"id",
							"name",
							"peers",
							"auto_refresh_seconds"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"auto_refresh_seconds": {
													"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
													"example": 86400,
													"type": "number",
													"x-auditable": true
												},
												"checked_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"created_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "269d8f4853475ca241c4e730be286b20",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"modified_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Zone name.",
													"example": "www.example.com.",
													"type": "string",
													"x-auditable": true
												},
												"peers": {
													"description": "A list of peer tags.",
													"example": [
														"23ff594956f20c2a721606e94745a8aa",
														"00920f38ce07c2e2f4df50b1f61d4194"
													],
													"items": {
														"example": "269d8f4853475ca241c4e730be286b20",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"soa_serial": {
													"description": "The serial number of the SOA for the given zone.",
													"example": 2019102400,
													"type": "number",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create Secondary Zone Configuration response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"auto_refresh_seconds": {
															"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
															"example": 86400,
															"type": "number",
															"x-auditable": true
														},
														"checked_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"created_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "269d8f4853475ca241c4e730be286b20",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"modified_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "Zone name.",
															"example": "www.example.com.",
															"type": "string",
															"x-auditable": true
														},
														"peers": {
															"description": "A list of peer tags.",
															"example": [
																"23ff594956f20c2a721606e94745a8aa",
																"00920f38ce07c2e2f4df50b1f61d4194"
															],
															"items": {
																"example": "269d8f4853475ca241c4e730be286b20",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"type": "array",
															"x-stainless-collection-type": "set"
														},
														"soa_serial": {
															"description": "The serial number of the SOA for the given zone.",
															"example": 2019102400,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Secondary Zone Configuration response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Secondary Zone Configuration",
		"tags": [
			"Secondary DNS (Secondary Zone)"
		],
		"x-api-token-group": [
			"Zone Settings Write",
			"Zone Write",
			"DNS Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /zones/{zone_id}/secondary_dns/incoming": {
		"description": "Update secondary zone configuration for incoming zone transfers.",
		"operationId": "secondary-dns-(-secondary-zone)-update-secondary-zone-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "269d8f4853475ca241c4e730be286b20",
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"auto_refresh_seconds": {
								"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
								"example": 86400,
								"type": "number",
								"x-auditable": true
							},
							"id": {
								"example": "269d8f4853475ca241c4e730be286b20",
								"readOnly": true,
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "Zone name.",
								"example": "www.example.com.",
								"type": "string",
								"x-auditable": true
							},
							"peers": {
								"description": "A list of peer tags.",
								"example": [
									"23ff594956f20c2a721606e94745a8aa",
									"00920f38ce07c2e2f4df50b1f61d4194"
								],
								"items": {
									"example": "269d8f4853475ca241c4e730be286b20",
									"readOnly": true,
									"type": "string",
									"x-auditable": true
								},
								"type": "array",
								"x-stainless-collection-type": "set"
							}
						},
						"required": [
							"id",
							"name",
							"peers",
							"auto_refresh_seconds"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"auto_refresh_seconds": {
													"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
													"example": 86400,
													"type": "number",
													"x-auditable": true
												},
												"checked_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"created_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"example": "269d8f4853475ca241c4e730be286b20",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"modified_time": {
													"description": "The time for a specific event.",
													"example": "2019-10-24T17:09:42.883908+01:00",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Zone name.",
													"example": "www.example.com.",
													"type": "string",
													"x-auditable": true
												},
												"peers": {
													"description": "A list of peer tags.",
													"example": [
														"23ff594956f20c2a721606e94745a8aa",
														"00920f38ce07c2e2f4df50b1f61d4194"
													],
													"items": {
														"example": "269d8f4853475ca241c4e730be286b20",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"soa_serial": {
													"description": "The serial number of the SOA for the given zone.",
													"example": 2019102400,
													"type": "number",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update Secondary Zone Configuration response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"auto_refresh_seconds": {
															"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
															"example": 86400,
															"type": "number",
															"x-auditable": true
														},
														"checked_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"created_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"example": "269d8f4853475ca241c4e730be286b20",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"modified_time": {
															"description": "The time for a specific event.",
															"example": "2019-10-24T17:09:42.883908+01:00",
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "Zone name.",
															"example": "www.example.com.",
															"type": "string",
															"x-auditable": true
														},
														"peers": {
															"description": "A list of peer tags.",
															"example": [
																"23ff594956f20c2a721606e94745a8aa",
																"00920f38ce07c2e2f4df50b1f61d4194"
															],
															"items": {
																"example": "269d8f4853475ca241c4e730be286b20",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"type": "array",
															"x-stainless-collection-type": "set"
														},
														"soa_serial": {
															"description": "The serial number of the SOA for the given zone.",
															"example": 2019102400,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Secondary Zone Configuration response failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Secondary Zone Configuration",
		"tags": [
			"Secondary DNS (Secondary Zone)"
		],
		"x-api-token-group": [
			"Zone Settings Write",
			"Zone Write",
			"DNS Write"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}