{
	"GET /zones/{zone_id}/argo/tiered_caching": {
		"description": "Tiered Cache works by dividing Cloudflare's data centers into a hierarchy of lower-tiers and upper-tiers. If content is not cached in lower-tier data centers (generally the ones closest to a visitor), the lower-tier must ask an upper-tier to see if it has the content. If the upper-tier does not have the content, only the upper-tier can ask the origin for content. This practice improves bandwidth efficiency by limiting the number of data centers that can ask the origin for content, which reduces origin load and makes websites more cost-effective to operate. Additionally, Tiered Cache concentrates connections to origin servers so they come from a small number of data centers rather than the full set of network locations. This results in fewer open connections using server resources.",
		"operationId": "tiered-caching-get-tiered-caching-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"editable": {
															"description": "Whether the setting is editable",
															"type": "boolean",
															"x-auditable": true
														},
														"id": {
															"description": "The identifier of the caching setting",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "The time when the setting was last modified",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														},
														"value": {
															"description": "The value of the feature",
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"value",
														"editable"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"allOf": [
														{
															"properties": {
																"id": {
																	"description": "Identifier of the zone setting.",
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "Last time this setting was modified.",
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"nullable": true,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id"
															],
															"type": "object"
														},
														{
															"properties": {
																"id": {
																	"description": "ID of the zone setting.",
																	"enum": [
																		"tiered_caching"
																	],
																	"example": "tiered_caching",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													],
													"title": "Tiered Cache",
													"type": "object"
												},
												{
													"properties": {
														"value": {
															"default": "off",
															"description": "Value of the Tiered Cache zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"value"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get Tiered Caching setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"type": "object"
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [],
									"items": {
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Tiered Caching setting response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Tiered Caching setting",
		"tags": [
			"Tiered Caching"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_id}/argo/tiered_caching": {
		"description": "Tiered Cache works by dividing Cloudflare's data centers into a hierarchy of lower-tiers and upper-tiers. If content is not cached in lower-tier data centers (generally the ones closest to a visitor), the lower-tier must ask an upper-tier to see if it has the content. If the upper-tier does not have the content, only the upper-tier can ask the origin for content. This practice improves bandwidth efficiency by limiting the number of data centers that can ask the origin for content, which reduces origin load and makes websites more cost-effective to operate. Additionally, Tiered Cache concentrates connections to origin servers so they come from a small number of data centers rather than the full set of network locations. This results in fewer open connections using server resources.",
		"operationId": "tiered-caching-patch-tiered-caching-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Update enablement of Tiered Caching",
						"properties": {
							"value": {
								"description": "Enables Tiered Caching.",
								"enum": [
									"on",
									"off"
								],
								"example": "on",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"value"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"editable": {
															"description": "Whether the setting is editable",
															"type": "boolean",
															"x-auditable": true
														},
														"id": {
															"description": "The identifier of the caching setting",
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "The time when the setting was last modified",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														},
														"value": {
															"description": "The value of the feature",
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"value",
														"editable"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"allOf": [
														{
															"properties": {
																"id": {
																	"description": "Identifier of the zone setting.",
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "Last time this setting was modified.",
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"nullable": true,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id"
															],
															"type": "object"
														},
														{
															"properties": {
																"id": {
																	"description": "ID of the zone setting.",
																	"enum": [
																		"tiered_caching"
																	],
																	"example": "tiered_caching",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													],
													"title": "Tiered Cache",
													"type": "object"
												},
												{
													"properties": {
														"value": {
															"default": "off",
															"description": "Value of the Tiered Cache zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"value"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch Tiered Caching setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"type": "object"
									},
									"minLength": 1,
									"type": "array"
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [],
									"items": {
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Patch Tiered Caching setting response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch Tiered Caching setting",
		"tags": [
			"Tiered Caching"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}