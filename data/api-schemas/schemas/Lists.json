{
	"DELETE /accounts/{account_id}/rules/lists/{list_id}": {
		"description": "Deletes a specific list and all its items.",
		"operationId": "lists-delete-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "The unique ID of the list.",
													"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
													"maxLength": 32,
													"minLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {
														"type": "object"
													},
													"type": "array"
												}
											]
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete a list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "The unique ID of the list.",
															"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
															"maxLength": 32,
															"minLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete a list",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /accounts/{account_id}/rules/lists/{list_id}/items": {
		"description": "Removes one or more items from a list.\n\nThis operation is asynchronous. To get current the operation status, invoke the `Get bulk operation status` endpoint with the returned `operation_id`.",
		"operationId": "lists-delete-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"items": {
								"items": {
									"properties": {
										"id": {
											"description": "Defines the unique ID of the item in the List.",
											"example": "34b12448945f11eaa1b71c4d701ab86e",
											"maxLength": 32,
											"minLength": 32,
											"readOnly": true,
											"type": "string",
											"x-auditable": true
										}
									},
									"type": "object"
								},
								"minItems": 1,
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"properties": {
												"operation_id": {
													"description": "The unique operation ID of the asynchronous action.",
													"example": "4da8780eeb215e6cb7f48dd981c4ea02",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"operation_id"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete list items response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"properties": {
														"operation_id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"operation_id"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"allOf": [
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete list items response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete list items",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/rules/lists": {
		"description": "Fetches all lists in the account.",
		"operationId": "lists-get-lists",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created_on": {
														"description": "The RFC 3339 timestamp of when the list was created.",
														"example": "2020-01-01T08:00:00Z",
														"type": "string",
														"x-auditable": true
													},
													"description": {
														"description": "An informative summary of the list.",
														"example": "This is a note",
														"maxLength": 500,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "The unique ID of the list.",
														"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
														"maxLength": 32,
														"minLength": 32,
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"kind": {
														"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
														"enum": [
															"ip",
															"redirect",
															"hostname",
															"asn"
														],
														"example": "ip"
													},
													"modified_on": {
														"description": "The RFC 3339 timestamp of when the list was last modified.",
														"example": "2020-01-10T14:00:00Z",
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "An informative name for the list. Use this name in filter and rule expressions.",
														"example": "list1",
														"maxLength": 50,
														"pattern": "^[a-zA-Z0-9_]+$",
														"type": "string",
														"x-auditable": true
													},
													"num_items": {
														"description": "The number of items in the list.",
														"example": 10,
														"type": "number",
														"x-auditable": true
													},
													"num_referencing_filters": {
														"description": "The number of [filters](/api/resources/filters/) referencing the list.",
														"example": 2,
														"type": "number",
														"x-auditable": true
													}
												},
												"required": [
													"id",
													"name",
													"kind",
													"num_items",
													"num_referencing_filters",
													"created_on",
													"modified_on"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								},
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get lists response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"created_on": {
																"description": "The RFC 3339 timestamp of when the list was created.",
																"example": "2020-01-01T08:00:00Z",
																"type": "string",
																"x-auditable": true
															},
															"description": {
																"description": "An informative summary of the list.",
																"example": "This is a note",
																"maxLength": 500,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "The unique ID of the list.",
																"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																"maxLength": 32,
																"minLength": 32,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"kind": {
																"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
																"enum": [
																	"ip",
																	"redirect",
																	"hostname",
																	"asn"
																],
																"example": "ip"
															},
															"modified_on": {
																"description": "The RFC 3339 timestamp of when the list was last modified.",
																"example": "2020-01-10T14:00:00Z",
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "An informative name for the list. Use this name in filter and rule expressions.",
																"example": "list1",
																"maxLength": 50,
																"pattern": "^[a-zA-Z0-9_]+$",
																"type": "string",
																"x-auditable": true
															},
															"num_items": {
																"description": "The number of items in the list.",
																"example": 10,
																"type": "number",
																"x-auditable": true
															},
															"num_referencing_filters": {
																"description": "The number of [filters](/api/resources/filters/) referencing the list.",
																"example": 2,
																"type": "number",
																"x-auditable": true
															}
														},
														"required": [
															"id",
															"name",
															"kind",
															"num_items",
															"num_referencing_filters",
															"created_on",
															"modified_on"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"allOf": [
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get lists response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get lists",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Read",
			"Account Filter Lists Edit"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/rules/lists/{list_id}": {
		"description": "Fetches the details of a list.",
		"operationId": "lists-get-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "The RFC 3339 timestamp of when the list was created.",
													"example": "2020-01-01T08:00:00Z",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"description": "An informative summary of the list.",
													"example": "This is a note",
													"maxLength": 500,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "The unique ID of the list.",
													"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
													"maxLength": 32,
													"minLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"kind": {
													"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
													"enum": [
														"ip",
														"redirect",
														"hostname",
														"asn"
													],
													"example": "ip"
												},
												"modified_on": {
													"description": "The RFC 3339 timestamp of when the list was last modified.",
													"example": "2020-01-10T14:00:00Z",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "An informative name for the list. Use this name in filter and rule expressions.",
													"example": "list1",
													"maxLength": 50,
													"pattern": "^[a-zA-Z0-9_]+$",
													"type": "string",
													"x-auditable": true
												},
												"num_items": {
													"description": "The number of items in the list.",
													"example": 10,
													"type": "number",
													"x-auditable": true
												},
												"num_referencing_filters": {
													"description": "The number of [filters](/api/resources/filters/) referencing the list.",
													"example": 2,
													"type": "number",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"kind",
												"num_items",
												"num_referencing_filters",
												"created_on",
												"modified_on"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {
														"type": "object"
													},
													"type": "array"
												}
											]
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get a list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"description": "The RFC 3339 timestamp of when the list was created.",
															"example": "2020-01-01T08:00:00Z",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An informative summary of the list.",
															"example": "This is a note",
															"maxLength": 500,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "The unique ID of the list.",
															"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
															"maxLength": 32,
															"minLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"kind": {
															"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
															"enum": [
																"ip",
																"redirect",
																"hostname",
																"asn"
															],
															"example": "ip"
														},
														"modified_on": {
															"description": "The RFC 3339 timestamp of when the list was last modified.",
															"example": "2020-01-10T14:00:00Z",
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "An informative name for the list. Use this name in filter and rule expressions.",
															"example": "list1",
															"maxLength": 50,
															"pattern": "^[a-zA-Z0-9_]+$",
															"type": "string",
															"x-auditable": true
														},
														"num_items": {
															"description": "The number of items in the list.",
															"example": 10,
															"type": "number",
															"x-auditable": true
														},
														"num_referencing_filters": {
															"description": "The number of [filters](/api/resources/filters/) referencing the list.",
															"example": 2,
															"type": "number",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"kind",
														"num_items",
														"num_referencing_filters",
														"created_on",
														"modified_on"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get a list",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/rules/lists/{list_id}/items": {
		"description": "Fetches all the items in the list.",
		"operationId": "lists-get-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "cursor",
				"schema": {
					"description": "The pagination cursor. An opaque string token indicating the position from which to continue when requesting the next/previous set of records. Cursor values are provided under `result_info.cursors` in the response. You should make no assumptions about a cursor's content or length.",
					"example": "zzz",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"description": "Amount of results to include in each paginated response. A non-negative 32 bit integer.",
					"maximum": 500,
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "search",
				"schema": {
					"description": "A search query to filter returned items. Its meaning depends on the list type: IP addresses must start with the provided string, hostnames and bulk redirects must contain the string, and ASNs must match the string exactly.",
					"example": "1.1.1.",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"allOf": [
															{
																"properties": {
																	"ip": {
																		"description": "An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.",
																		"example": "10.0.0.1",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"ip"
																],
																"type": "object"
															},
															{
																"example": {
																	"comment": "Private IP address",
																	"created_on": "2020-01-01T08:00:00Z",
																	"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"modified_on": "2020-01-10T14:00:00Z"
																},
																"properties": {
																	"comment": {
																		"description": "Defines an informative summary of the list item.",
																		"example": "Private IP address",
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"description": "The RFC 3339 timestamp of when the item was created.",
																		"example": "2020-01-01T08:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "The unique ID of the list.",
																		"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"maxLength": 32,
																		"minLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The RFC 3339 timestamp of when the item was last modified.",
																		"example": "2020-01-10T14:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"created_on",
																	"modified_on"
																],
																"type": "object"
															}
														]
													},
													{
														"allOf": [
															{
																"properties": {
																	"hostname": {
																		"description": "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
																		"properties": {
																			"exclude_exact_hostname": {
																				"description": "Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.",
																				"example": true,
																				"type": "boolean"
																			},
																			"url_hostname": {
																				"example": "example.com",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"url_hostname"
																		]
																	}
																},
																"required": [
																	"hostname"
																],
																"type": "object"
															},
															{
																"example": {
																	"comment": "Private IP address",
																	"created_on": "2020-01-01T08:00:00Z",
																	"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"modified_on": "2020-01-10T14:00:00Z"
																},
																"properties": {
																	"comment": {
																		"description": "Defines an informative summary of the list item.",
																		"example": "Private IP address",
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"description": "The RFC 3339 timestamp of when the item was created.",
																		"example": "2020-01-01T08:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "The unique ID of the list.",
																		"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"maxLength": 32,
																		"minLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The RFC 3339 timestamp of when the item was last modified.",
																		"example": "2020-01-10T14:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"created_on",
																	"modified_on"
																],
																"type": "object"
															}
														]
													},
													{
														"allOf": [
															{
																"properties": {
																	"redirect": {
																		"description": "The definition of the redirect.",
																		"properties": {
																			"include_subdomains": {
																				"default": false,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"preserve_path_suffix": {
																				"default": false,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"preserve_query_string": {
																				"default": false,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"source_url": {
																				"example": "example.com/arch",
																				"type": "string",
																				"x-auditable": true
																			},
																			"status_code": {
																				"default": 301,
																				"enum": [
																					301,
																					302,
																					307,
																					308
																				],
																				"type": "integer",
																				"x-auditable": true
																			},
																			"subpath_matching": {
																				"default": false,
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"target_url": {
																				"example": "https://archlinux.org/",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"source_url",
																			"target_url"
																		]
																	}
																},
																"required": [
																	"redirect"
																],
																"type": "object"
															},
															{
																"example": {
																	"comment": "Private IP address",
																	"created_on": "2020-01-01T08:00:00Z",
																	"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"modified_on": "2020-01-10T14:00:00Z"
																},
																"properties": {
																	"comment": {
																		"description": "Defines an informative summary of the list item.",
																		"example": "Private IP address",
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"description": "The RFC 3339 timestamp of when the item was created.",
																		"example": "2020-01-01T08:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "The unique ID of the list.",
																		"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"maxLength": 32,
																		"minLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The RFC 3339 timestamp of when the item was last modified.",
																		"example": "2020-01-10T14:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"created_on",
																	"modified_on"
																],
																"type": "object"
															}
														]
													},
													{
														"allOf": [
															{
																"properties": {
																	"asn": {
																		"description": "Defines a non-negative 32 bit integer.",
																		"example": 5567,
																		"type": "integer",
																		"x-auditable": true
																	}
																},
																"required": [
																	"asn"
																],
																"type": "object"
															},
															{
																"example": {
																	"comment": "Private IP address",
																	"created_on": "2020-01-01T08:00:00Z",
																	"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"modified_on": "2020-01-10T14:00:00Z"
																},
																"properties": {
																	"comment": {
																		"description": "Defines an informative summary of the list item.",
																		"example": "Private IP address",
																		"type": "string",
																		"x-auditable": true
																	},
																	"created_on": {
																		"description": "The RFC 3339 timestamp of when the item was created.",
																		"example": "2020-01-01T08:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "The unique ID of the list.",
																		"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"maxLength": 32,
																		"minLength": 32,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"modified_on": {
																		"description": "The RFC 3339 timestamp of when the item was last modified.",
																		"example": "2020-01-10T14:00:00Z",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"created_on",
																	"modified_on"
																],
																"type": "object"
															}
														]
													}
												]
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"cursors": {
													"properties": {
														"after": {
															"example": "yyy",
															"type": "string",
															"x-auditable": true
														},
														"before": {
															"example": "xxx",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get list items response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"allOf": [
																	{
																		"properties": {
																			"ip": {
																				"description": "An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.",
																				"example": "10.0.0.1",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"ip"
																		],
																		"type": "object"
																	},
																	{
																		"example": {
																			"comment": "Private IP address",
																			"created_on": "2020-01-01T08:00:00Z",
																			"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"modified_on": "2020-01-10T14:00:00Z"
																		},
																		"properties": {
																			"comment": {
																				"description": "Defines an informative summary of the list item.",
																				"example": "Private IP address",
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"description": "The RFC 3339 timestamp of when the item was created.",
																				"example": "2020-01-01T08:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"id": {
																				"description": "The unique ID of the list.",
																				"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																				"maxLength": 32,
																				"minLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"modified_on": {
																				"description": "The RFC 3339 timestamp of when the item was last modified.",
																				"example": "2020-01-10T14:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"id",
																			"created_on",
																			"modified_on"
																		],
																		"type": "object"
																	}
																]
															},
															{
																"allOf": [
																	{
																		"properties": {
																			"hostname": {
																				"description": "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
																				"properties": {
																					"exclude_exact_hostname": {
																						"description": "Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.",
																						"example": true,
																						"type": "boolean"
																					},
																					"url_hostname": {
																						"example": "example.com",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"required": [
																					"url_hostname"
																				]
																			}
																		},
																		"required": [
																			"hostname"
																		],
																		"type": "object"
																	},
																	{
																		"example": {
																			"comment": "Private IP address",
																			"created_on": "2020-01-01T08:00:00Z",
																			"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"modified_on": "2020-01-10T14:00:00Z"
																		},
																		"properties": {
																			"comment": {
																				"description": "Defines an informative summary of the list item.",
																				"example": "Private IP address",
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"description": "The RFC 3339 timestamp of when the item was created.",
																				"example": "2020-01-01T08:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"id": {
																				"description": "The unique ID of the list.",
																				"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																				"maxLength": 32,
																				"minLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"modified_on": {
																				"description": "The RFC 3339 timestamp of when the item was last modified.",
																				"example": "2020-01-10T14:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"id",
																			"created_on",
																			"modified_on"
																		],
																		"type": "object"
																	}
																]
															},
															{
																"allOf": [
																	{
																		"properties": {
																			"redirect": {
																				"description": "The definition of the redirect.",
																				"properties": {
																					"include_subdomains": {
																						"default": false,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"preserve_path_suffix": {
																						"default": false,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"preserve_query_string": {
																						"default": false,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"source_url": {
																						"example": "example.com/arch",
																						"type": "string",
																						"x-auditable": true
																					},
																					"status_code": {
																						"default": 301,
																						"enum": [
																							301,
																							302,
																							307,
																							308
																						],
																						"type": "integer",
																						"x-auditable": true
																					},
																					"subpath_matching": {
																						"default": false,
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"target_url": {
																						"example": "https://archlinux.org/",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"required": [
																					"source_url",
																					"target_url"
																				]
																			}
																		},
																		"required": [
																			"redirect"
																		],
																		"type": "object"
																	},
																	{
																		"example": {
																			"comment": "Private IP address",
																			"created_on": "2020-01-01T08:00:00Z",
																			"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"modified_on": "2020-01-10T14:00:00Z"
																		},
																		"properties": {
																			"comment": {
																				"description": "Defines an informative summary of the list item.",
																				"example": "Private IP address",
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"description": "The RFC 3339 timestamp of when the item was created.",
																				"example": "2020-01-01T08:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"id": {
																				"description": "The unique ID of the list.",
																				"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																				"maxLength": 32,
																				"minLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"modified_on": {
																				"description": "The RFC 3339 timestamp of when the item was last modified.",
																				"example": "2020-01-10T14:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"id",
																			"created_on",
																			"modified_on"
																		],
																		"type": "object"
																	}
																]
															},
															{
																"allOf": [
																	{
																		"properties": {
																			"asn": {
																				"description": "Defines a non-negative 32 bit integer.",
																				"example": 5567,
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"asn"
																		],
																		"type": "object"
																	},
																	{
																		"example": {
																			"comment": "Private IP address",
																			"created_on": "2020-01-01T08:00:00Z",
																			"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"modified_on": "2020-01-10T14:00:00Z"
																		},
																		"properties": {
																			"comment": {
																				"description": "Defines an informative summary of the list item.",
																				"example": "Private IP address",
																				"type": "string",
																				"x-auditable": true
																			},
																			"created_on": {
																				"description": "The RFC 3339 timestamp of when the item was created.",
																				"example": "2020-01-01T08:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"id": {
																				"description": "The unique ID of the list.",
																				"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																				"maxLength": 32,
																				"minLength": 32,
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			},
																			"modified_on": {
																				"description": "The RFC 3339 timestamp of when the item was last modified.",
																				"example": "2020-01-10T14:00:00Z",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"id",
																			"created_on",
																			"modified_on"
																		],
																		"type": "object"
																	}
																]
															}
														]
													},
													"type": "array"
												},
												"result_info": {
													"properties": {
														"cursors": {
															"properties": {
																"after": {
																	"example": "yyy",
																	"type": "string",
																	"x-auditable": true
																},
																"before": {
																	"example": "xxx",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"allOf": [
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get list items response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get list items",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit",
			"Account Filter Lists Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/rules/lists/{list_id}/items/{item_id}": {
		"description": "Fetches a list item in the list.",
		"operationId": "lists-get-a-list-item",
		"parameters": [
			{
				"in": "path",
				"name": "item_id",
				"required": true,
				"schema": {
					"description": "Defines the unique ID of the item in the List.",
					"example": "34b12448945f11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"allOf": [
														{
															"properties": {
																"ip": {
																	"description": "An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.",
																	"example": "10.0.0.1",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"ip"
															],
															"type": "object"
														},
														{
															"example": {
																"comment": "Private IP address",
																"created_on": "2020-01-01T08:00:00Z",
																"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																"modified_on": "2020-01-10T14:00:00Z"
															},
															"properties": {
																"comment": {
																	"description": "Defines an informative summary of the list item.",
																	"example": "Private IP address",
																	"type": "string",
																	"x-auditable": true
																},
																"created_on": {
																	"description": "The RFC 3339 timestamp of when the item was created.",
																	"example": "2020-01-01T08:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "The unique ID of the list.",
																	"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"maxLength": 32,
																	"minLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The RFC 3339 timestamp of when the item was last modified.",
																	"example": "2020-01-10T14:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"created_on",
																"modified_on"
															],
															"type": "object"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"hostname": {
																	"description": "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
																	"properties": {
																		"exclude_exact_hostname": {
																			"description": "Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.",
																			"example": true,
																			"type": "boolean"
																		},
																		"url_hostname": {
																			"example": "example.com",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"url_hostname"
																	]
																}
															},
															"required": [
																"hostname"
															],
															"type": "object"
														},
														{
															"example": {
																"comment": "Private IP address",
																"created_on": "2020-01-01T08:00:00Z",
																"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																"modified_on": "2020-01-10T14:00:00Z"
															},
															"properties": {
																"comment": {
																	"description": "Defines an informative summary of the list item.",
																	"example": "Private IP address",
																	"type": "string",
																	"x-auditable": true
																},
																"created_on": {
																	"description": "The RFC 3339 timestamp of when the item was created.",
																	"example": "2020-01-01T08:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "The unique ID of the list.",
																	"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"maxLength": 32,
																	"minLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The RFC 3339 timestamp of when the item was last modified.",
																	"example": "2020-01-10T14:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"created_on",
																"modified_on"
															],
															"type": "object"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"redirect": {
																	"description": "The definition of the redirect.",
																	"properties": {
																		"include_subdomains": {
																			"default": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"preserve_path_suffix": {
																			"default": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"preserve_query_string": {
																			"default": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"source_url": {
																			"example": "example.com/arch",
																			"type": "string",
																			"x-auditable": true
																		},
																		"status_code": {
																			"default": 301,
																			"enum": [
																				301,
																				302,
																				307,
																				308
																			],
																			"type": "integer",
																			"x-auditable": true
																		},
																		"subpath_matching": {
																			"default": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"target_url": {
																			"example": "https://archlinux.org/",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"source_url",
																		"target_url"
																	]
																}
															},
															"required": [
																"redirect"
															],
															"type": "object"
														},
														{
															"example": {
																"comment": "Private IP address",
																"created_on": "2020-01-01T08:00:00Z",
																"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																"modified_on": "2020-01-10T14:00:00Z"
															},
															"properties": {
																"comment": {
																	"description": "Defines an informative summary of the list item.",
																	"example": "Private IP address",
																	"type": "string",
																	"x-auditable": true
																},
																"created_on": {
																	"description": "The RFC 3339 timestamp of when the item was created.",
																	"example": "2020-01-01T08:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "The unique ID of the list.",
																	"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"maxLength": 32,
																	"minLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The RFC 3339 timestamp of when the item was last modified.",
																	"example": "2020-01-10T14:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"created_on",
																"modified_on"
															],
															"type": "object"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"asn": {
																	"description": "Defines a non-negative 32 bit integer.",
																	"example": 5567,
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"required": [
																"asn"
															],
															"type": "object"
														},
														{
															"example": {
																"comment": "Private IP address",
																"created_on": "2020-01-01T08:00:00Z",
																"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																"modified_on": "2020-01-10T14:00:00Z"
															},
															"properties": {
																"comment": {
																	"description": "Defines an informative summary of the list item.",
																	"example": "Private IP address",
																	"type": "string",
																	"x-auditable": true
																},
																"created_on": {
																	"description": "The RFC 3339 timestamp of when the item was created.",
																	"example": "2020-01-01T08:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "The unique ID of the list.",
																	"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																	"maxLength": 32,
																	"minLength": 32,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"modified_on": {
																	"description": "The RFC 3339 timestamp of when the item was last modified.",
																	"example": "2020-01-10T14:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"created_on",
																"modified_on"
															],
															"type": "object"
														}
													]
												}
											]
										}
									},
									"type": "object"
								},
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a list item response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"allOf": [
																{
																	"properties": {
																		"ip": {
																			"description": "An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.",
																			"example": "10.0.0.1",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"ip"
																	],
																	"type": "object"
																},
																{
																	"example": {
																		"comment": "Private IP address",
																		"created_on": "2020-01-01T08:00:00Z",
																		"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"modified_on": "2020-01-10T14:00:00Z"
																	},
																	"properties": {
																		"comment": {
																			"description": "Defines an informative summary of the list item.",
																			"example": "Private IP address",
																			"type": "string",
																			"x-auditable": true
																		},
																		"created_on": {
																			"description": "The RFC 3339 timestamp of when the item was created.",
																			"example": "2020-01-01T08:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"description": "The unique ID of the list.",
																			"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"maxLength": 32,
																			"minLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"modified_on": {
																			"description": "The RFC 3339 timestamp of when the item was last modified.",
																			"example": "2020-01-10T14:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id",
																		"created_on",
																		"modified_on"
																	],
																	"type": "object"
																}
															]
														},
														{
															"allOf": [
																{
																	"properties": {
																		"hostname": {
																			"description": "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
																			"properties": {
																				"exclude_exact_hostname": {
																					"description": "Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.",
																					"example": true,
																					"type": "boolean"
																				},
																				"url_hostname": {
																					"example": "example.com",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"url_hostname"
																			]
																		}
																	},
																	"required": [
																		"hostname"
																	],
																	"type": "object"
																},
																{
																	"example": {
																		"comment": "Private IP address",
																		"created_on": "2020-01-01T08:00:00Z",
																		"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"modified_on": "2020-01-10T14:00:00Z"
																	},
																	"properties": {
																		"comment": {
																			"description": "Defines an informative summary of the list item.",
																			"example": "Private IP address",
																			"type": "string",
																			"x-auditable": true
																		},
																		"created_on": {
																			"description": "The RFC 3339 timestamp of when the item was created.",
																			"example": "2020-01-01T08:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"description": "The unique ID of the list.",
																			"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"maxLength": 32,
																			"minLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"modified_on": {
																			"description": "The RFC 3339 timestamp of when the item was last modified.",
																			"example": "2020-01-10T14:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id",
																		"created_on",
																		"modified_on"
																	],
																	"type": "object"
																}
															]
														},
														{
															"allOf": [
																{
																	"properties": {
																		"redirect": {
																			"description": "The definition of the redirect.",
																			"properties": {
																				"include_subdomains": {
																					"default": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"preserve_path_suffix": {
																					"default": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"preserve_query_string": {
																					"default": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"source_url": {
																					"example": "example.com/arch",
																					"type": "string",
																					"x-auditable": true
																				},
																				"status_code": {
																					"default": 301,
																					"enum": [
																						301,
																						302,
																						307,
																						308
																					],
																					"type": "integer",
																					"x-auditable": true
																				},
																				"subpath_matching": {
																					"default": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"target_url": {
																					"example": "https://archlinux.org/",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"source_url",
																				"target_url"
																			]
																		}
																	},
																	"required": [
																		"redirect"
																	],
																	"type": "object"
																},
																{
																	"example": {
																		"comment": "Private IP address",
																		"created_on": "2020-01-01T08:00:00Z",
																		"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"modified_on": "2020-01-10T14:00:00Z"
																	},
																	"properties": {
																		"comment": {
																			"description": "Defines an informative summary of the list item.",
																			"example": "Private IP address",
																			"type": "string",
																			"x-auditable": true
																		},
																		"created_on": {
																			"description": "The RFC 3339 timestamp of when the item was created.",
																			"example": "2020-01-01T08:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"description": "The unique ID of the list.",
																			"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"maxLength": 32,
																			"minLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"modified_on": {
																			"description": "The RFC 3339 timestamp of when the item was last modified.",
																			"example": "2020-01-10T14:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id",
																		"created_on",
																		"modified_on"
																	],
																	"type": "object"
																}
															]
														},
														{
															"allOf": [
																{
																	"properties": {
																		"asn": {
																			"description": "Defines a non-negative 32 bit integer.",
																			"example": 5567,
																			"type": "integer",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"asn"
																	],
																	"type": "object"
																},
																{
																	"example": {
																		"comment": "Private IP address",
																		"created_on": "2020-01-01T08:00:00Z",
																		"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																		"modified_on": "2020-01-10T14:00:00Z"
																	},
																	"properties": {
																		"comment": {
																			"description": "Defines an informative summary of the list item.",
																			"example": "Private IP address",
																			"type": "string",
																			"x-auditable": true
																		},
																		"created_on": {
																			"description": "The RFC 3339 timestamp of when the item was created.",
																			"example": "2020-01-01T08:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"description": "The unique ID of the list.",
																			"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
																			"maxLength": 32,
																			"minLength": 32,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"modified_on": {
																			"description": "The RFC 3339 timestamp of when the item was last modified.",
																			"example": "2020-01-10T14:00:00Z",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id",
																		"created_on",
																		"modified_on"
																	],
																	"type": "object"
																}
															]
														}
													]
												}
											},
											"type": "object"
										},
										{
											"allOf": [
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a list item response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get a list item",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit",
			"Account Filter Lists Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_id}/rules/lists/bulk_operations/{operation_id}": {
		"description": "Gets the current status of an asynchronous operation on a list.\n\nThe `status` property can have one of the following values: `pending`, `running`, `completed`, or `failed`. If the status is `failed`, the `error` property will contain a message describing the error.",
		"operationId": "lists-get-bulk-operation-status",
		"parameters": [
			{
				"in": "path",
				"name": "operation_id",
				"required": true,
				"schema": {
					"description": "The unique operation ID of the asynchronous action.",
					"example": "4da8780eeb215e6cb7f48dd981c4ea02",
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"properties": {
														"id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"description": "The current status of the asynchronous operation.",
															"enum": [
																"pending",
																"running"
															],
															"example": "pending",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"status"
													],
													"type": "object"
												},
												{
													"properties": {
														"completed": {
															"description": "The RFC 3339 timestamp of when the operation was completed.",
															"example": "2020-01-01T08:00:00Z",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"description": "The current status of the asynchronous operation.",
															"enum": [
																"completed"
															],
															"example": "completed",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"status",
														"completed"
													],
													"type": "object"
												},
												{
													"properties": {
														"completed": {
															"description": "The RFC 3339 timestamp of when the operation was completed.",
															"example": "2020-01-01T08:00:00Z",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"error": {
															"description": "A message describing the error when the status is `failed`.",
															"example": "This list is at the maximum number of items",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"description": "The current status of the asynchronous operation.",
															"enum": [
																"failed"
															],
															"example": "failed",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"status",
														"error",
														"completed"
													],
													"type": "object"
												}
											]
										}
									},
									"type": "object"
								},
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get bulk operation status response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"properties": {
																"id": {
																	"description": "The unique operation ID of the asynchronous action.",
																	"example": "4da8780eeb215e6cb7f48dd981c4ea02",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"description": "The current status of the asynchronous operation.",
																	"enum": [
																		"pending",
																		"running"
																	],
																	"example": "pending",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"status"
															],
															"type": "object"
														},
														{
															"properties": {
																"completed": {
																	"description": "The RFC 3339 timestamp of when the operation was completed.",
																	"example": "2020-01-01T08:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "The unique operation ID of the asynchronous action.",
																	"example": "4da8780eeb215e6cb7f48dd981c4ea02",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"description": "The current status of the asynchronous operation.",
																	"enum": [
																		"completed"
																	],
																	"example": "completed",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"status",
																"completed"
															],
															"type": "object"
														},
														{
															"properties": {
																"completed": {
																	"description": "The RFC 3339 timestamp of when the operation was completed.",
																	"example": "2020-01-01T08:00:00Z",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"error": {
																	"description": "A message describing the error when the status is `failed`.",
																	"example": "This list is at the maximum number of items",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "The unique operation ID of the asynchronous action.",
																	"example": "4da8780eeb215e6cb7f48dd981c4ea02",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"status": {
																	"description": "The current status of the asynchronous operation.",
																	"enum": [
																		"failed"
																	],
																	"example": "failed",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"id",
																"status",
																"error",
																"completed"
															],
															"type": "object"
														}
													]
												}
											},
											"type": "object"
										},
										{
											"allOf": [
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get bulk operation status response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get bulk operation status",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit",
			"Account Filter Lists Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_id}/rules/lists": {
		"description": "Creates a new list of the specified kind.",
		"operationId": "lists-create-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"description": {
								"description": "An informative summary of the list.",
								"example": "This is a note",
								"maxLength": 500,
								"type": "string",
								"x-auditable": true
							},
							"kind": {
								"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
								"enum": [
									"ip",
									"redirect",
									"hostname",
									"asn"
								],
								"example": "ip"
							},
							"name": {
								"description": "An informative name for the list. Use this name in filter and rule expressions.",
								"example": "list1",
								"maxLength": 50,
								"pattern": "^[a-zA-Z0-9_]+$",
								"type": "string",
								"x-auditable": true
							}
						},
						"required": [
							"name",
							"kind"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "The RFC 3339 timestamp of when the list was created.",
													"example": "2020-01-01T08:00:00Z",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"description": "An informative summary of the list.",
													"example": "This is a note",
													"maxLength": 500,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "The unique ID of the list.",
													"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
													"maxLength": 32,
													"minLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"kind": {
													"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
													"enum": [
														"ip",
														"redirect",
														"hostname",
														"asn"
													],
													"example": "ip"
												},
												"modified_on": {
													"description": "The RFC 3339 timestamp of when the list was last modified.",
													"example": "2020-01-10T14:00:00Z",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "An informative name for the list. Use this name in filter and rule expressions.",
													"example": "list1",
													"maxLength": 50,
													"pattern": "^[a-zA-Z0-9_]+$",
													"type": "string",
													"x-auditable": true
												},
												"num_items": {
													"description": "The number of items in the list.",
													"example": 10,
													"type": "number",
													"x-auditable": true
												},
												"num_referencing_filters": {
													"description": "The number of [filters](/api/resources/filters/) referencing the list.",
													"example": 2,
													"type": "number",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"kind",
												"num_items",
												"num_referencing_filters",
												"created_on",
												"modified_on"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {
														"type": "object"
													},
													"type": "array"
												}
											]
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create a list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"description": "The RFC 3339 timestamp of when the list was created.",
															"example": "2020-01-01T08:00:00Z",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An informative summary of the list.",
															"example": "This is a note",
															"maxLength": 500,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "The unique ID of the list.",
															"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
															"maxLength": 32,
															"minLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"kind": {
															"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
															"enum": [
																"ip",
																"redirect",
																"hostname",
																"asn"
															],
															"example": "ip"
														},
														"modified_on": {
															"description": "The RFC 3339 timestamp of when the list was last modified.",
															"example": "2020-01-10T14:00:00Z",
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "An informative name for the list. Use this name in filter and rule expressions.",
															"example": "list1",
															"maxLength": 50,
															"pattern": "^[a-zA-Z0-9_]+$",
															"type": "string",
															"x-auditable": true
														},
														"num_items": {
															"description": "The number of items in the list.",
															"example": 10,
															"type": "number",
															"x-auditable": true
														},
														"num_referencing_filters": {
															"description": "The number of [filters](/api/resources/filters/) referencing the list.",
															"example": 2,
															"type": "number",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"kind",
														"num_items",
														"num_referencing_filters",
														"created_on",
														"modified_on"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a list",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_id}/rules/lists/{list_id}/items": {
		"description": "Appends new items to the list.\n\nThis operation is asynchronous. To get current the operation status, invoke the `Get bulk operation status` endpoint with the returned `operation_id`.",
		"operationId": "lists-create-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"oneOf": [
								{
									"allOf": [
										{
											"properties": {
												"ip": {
													"description": "An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.",
													"example": "10.0.0.1",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"ip"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								},
								{
									"allOf": [
										{
											"properties": {
												"redirect": {
													"description": "The definition of the redirect.",
													"properties": {
														"include_subdomains": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"preserve_path_suffix": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"preserve_query_string": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"source_url": {
															"example": "example.com/arch",
															"type": "string",
															"x-auditable": true
														},
														"status_code": {
															"default": 301,
															"enum": [
																301,
																302,
																307,
																308
															],
															"type": "integer",
															"x-auditable": true
														},
														"subpath_matching": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"target_url": {
															"example": "https://archlinux.org/",
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"source_url",
														"target_url"
													]
												}
											},
											"required": [
												"redirect"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								},
								{
									"allOf": [
										{
											"properties": {
												"hostname": {
													"description": "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
													"properties": {
														"exclude_exact_hostname": {
															"description": "Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.",
															"example": true,
															"type": "boolean"
														},
														"url_hostname": {
															"example": "example.com",
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"url_hostname"
													]
												}
											},
											"required": [
												"hostname"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								},
								{
									"allOf": [
										{
											"properties": {
												"asn": {
													"description": "Defines a non-negative 32 bit integer.",
													"example": 5567,
													"type": "integer",
													"x-auditable": true
												}
											},
											"required": [
												"asn"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								}
							]
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"properties": {
												"operation_id": {
													"description": "The unique operation ID of the asynchronous action.",
													"example": "4da8780eeb215e6cb7f48dd981c4ea02",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"operation_id"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create list items response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"properties": {
														"operation_id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"operation_id"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"allOf": [
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create list items response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create list items",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_id}/rules/lists/{list_id}": {
		"description": "Updates the description of a list.",
		"operationId": "lists-update-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"description": {
								"description": "An informative summary of the list.",
								"example": "This is a note",
								"maxLength": 500,
								"type": "string",
								"x-auditable": true
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "The RFC 3339 timestamp of when the list was created.",
													"example": "2020-01-01T08:00:00Z",
													"type": "string",
													"x-auditable": true
												},
												"description": {
													"description": "An informative summary of the list.",
													"example": "This is a note",
													"maxLength": 500,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "The unique ID of the list.",
													"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
													"maxLength": 32,
													"minLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"kind": {
													"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
													"enum": [
														"ip",
														"redirect",
														"hostname",
														"asn"
													],
													"example": "ip"
												},
												"modified_on": {
													"description": "The RFC 3339 timestamp of when the list was last modified.",
													"example": "2020-01-10T14:00:00Z",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "An informative name for the list. Use this name in filter and rule expressions.",
													"example": "list1",
													"maxLength": 50,
													"pattern": "^[a-zA-Z0-9_]+$",
													"type": "string",
													"x-auditable": true
												},
												"num_items": {
													"description": "The number of items in the list.",
													"example": 10,
													"type": "number",
													"x-auditable": true
												},
												"num_referencing_filters": {
													"description": "The number of [filters](/api/resources/filters/) referencing the list.",
													"example": 2,
													"type": "number",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"name",
												"kind",
												"num_items",
												"num_referencing_filters",
												"created_on",
												"modified_on"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {
														"type": "object"
													},
													"type": "array"
												}
											]
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update a list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"description": "The RFC 3339 timestamp of when the list was created.",
															"example": "2020-01-01T08:00:00Z",
															"type": "string",
															"x-auditable": true
														},
														"description": {
															"description": "An informative summary of the list.",
															"example": "This is a note",
															"maxLength": 500,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "The unique ID of the list.",
															"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
															"maxLength": 32,
															"minLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"kind": {
															"description": "The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).",
															"enum": [
																"ip",
																"redirect",
																"hostname",
																"asn"
															],
															"example": "ip"
														},
														"modified_on": {
															"description": "The RFC 3339 timestamp of when the list was last modified.",
															"example": "2020-01-10T14:00:00Z",
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "An informative name for the list. Use this name in filter and rule expressions.",
															"example": "list1",
															"maxLength": 50,
															"pattern": "^[a-zA-Z0-9_]+$",
															"type": "string",
															"x-auditable": true
														},
														"num_items": {
															"description": "The number of items in the list.",
															"example": 10,
															"type": "number",
															"x-auditable": true
														},
														"num_referencing_filters": {
															"description": "The number of [filters](/api/resources/filters/) referencing the list.",
															"example": 2,
															"type": "number",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"name",
														"kind",
														"num_items",
														"num_referencing_filters",
														"created_on",
														"modified_on"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update a list",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_id}/rules/lists/{list_id}/items": {
		"description": "Removes all existing items from the list and adds the provided items to the list.\n\nThis operation is asynchronous. To get current the operation status, invoke the `Get bulk operation status` endpoint with the returned `operation_id`.",
		"operationId": "lists-update-all-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "The Account ID for this resource.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"oneOf": [
								{
									"allOf": [
										{
											"properties": {
												"ip": {
													"description": "An IPv4 address, an IPv4 CIDR, an IPv6 address, or an IPv6 CIDR.",
													"example": "10.0.0.1",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"ip"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								},
								{
									"allOf": [
										{
											"properties": {
												"redirect": {
													"description": "The definition of the redirect.",
													"properties": {
														"include_subdomains": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"preserve_path_suffix": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"preserve_query_string": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"source_url": {
															"example": "example.com/arch",
															"type": "string",
															"x-auditable": true
														},
														"status_code": {
															"default": 301,
															"enum": [
																301,
																302,
																307,
																308
															],
															"type": "integer",
															"x-auditable": true
														},
														"subpath_matching": {
															"default": false,
															"type": "boolean",
															"x-auditable": true
														},
														"target_url": {
															"example": "https://archlinux.org/",
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"source_url",
														"target_url"
													]
												}
											},
											"required": [
												"redirect"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								},
								{
									"allOf": [
										{
											"properties": {
												"hostname": {
													"description": "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
													"properties": {
														"exclude_exact_hostname": {
															"description": "Only applies to wildcard hostnames (e.g., *.example.com). When true (default), only subdomains are blocked. When false, both the root domain and subdomains are blocked.",
															"example": true,
															"type": "boolean"
														},
														"url_hostname": {
															"example": "example.com",
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"url_hostname"
													]
												}
											},
											"required": [
												"hostname"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								},
								{
									"allOf": [
										{
											"properties": {
												"asn": {
													"description": "Defines a non-negative 32 bit integer.",
													"example": 5567,
													"type": "integer",
													"x-auditable": true
												}
											},
											"required": [
												"asn"
											],
											"type": "object"
										},
										{
											"properties": {
												"comment": {
													"description": "Defines an informative summary of the list item.",
													"example": "Private IP address",
													"type": "string",
													"x-auditable": true
												}
											},
											"type": "object"
										}
									]
								}
							]
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"result": {
											"properties": {
												"operation_id": {
													"description": "The unique operation ID of the asynchronous action.",
													"example": "4da8780eeb215e6cb7f48dd981c4ea02",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"operation_id"
											],
											"type": "object"
										}
									},
									"type": "object"
								},
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											},
											"type": "object"
										},
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														}
													]
												},
												"success": {
													"description": "Defines whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										}
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update all list items response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"result": {
													"properties": {
														"operation_id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"operation_id"
													],
													"type": "object"
												}
											},
											"type": "object"
										},
										{
											"allOf": [
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																}
															]
														},
														"success": {
															"description": "Defines whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												}
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Defines whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update all list items response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update all list items",
		"tags": [
			"Lists"
		],
		"x-api-token-group": [
			"Account Filter Lists Edit"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}