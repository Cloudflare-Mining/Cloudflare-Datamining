{
	"GET /radar/email/security/summary/arc": {
		"description": "Retrieves the distribution of emails by ARC (Authenticated Received Chain) validation.",
		"operationId": "radar-get-email-security-summary-by-arc",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email ARC validation summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/dkim": {
		"description": "Retrieves the distribution of emails by DKIM (DomainKeys Identified Mail) validation.",
		"operationId": "radar-get-email-security-summary-by-dkim",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email DKIM validation summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/dmarc": {
		"description": "Retrieves the distribution of emails by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation.",
		"operationId": "radar-get-email-security-summary-by-dmarc",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email DMARC validation summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/malicious": {
		"description": "Retrieves the distribution of emails by malicious classification.",
		"operationId": "radar-get-email-security-summary-by-malicious",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"MALICIOUS": {
													"example": "65",
													"type": "string"
												},
												"NOT_MALICIOUS": {
													"example": "35",
													"type": "string"
												}
											},
											"required": [
												"MALICIOUS",
												"NOT_MALICIOUS"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email malicious classification summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/spam": {
		"description": "Retrieves the proportion of emails by spam classification (spam vs. non-spam).",
		"operationId": "radar-get-email-security-summary-by-spam",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NOT_SPAM": {
													"example": "35",
													"type": "string"
												},
												"SPAM": {
													"example": "65",
													"type": "string"
												}
											},
											"required": [
												"SPAM",
												"NOT_SPAM"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email spam classification summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/spf": {
		"description": "Retrieves the distribution of emails by SPF (Sender Policy Framework) validation.",
		"operationId": "radar-get-email-security-summary-by-spf",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email SPF validation summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/spoof": {
		"description": "Retrieves the proportion of emails by spoof classification (spoof vs. non-spoof).",
		"operationId": "radar-get-email-security-summary-by-spoof",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"NOT_SPOOF": {
													"example": "35",
													"type": "string"
												},
												"SPOOF": {
													"example": "65",
													"type": "string"
												}
											},
											"required": [
												"SPOOF",
												"NOT_SPOOF"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email spoof classification summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/threat_category": {
		"description": "Retrieves the distribution of emails by threat categories.",
		"operationId": "radar-get-email-security-summary-by-threat-category",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"BrandImpersonation": {
													"example": "35",
													"type": "string"
												},
												"CredentialHarvester": {
													"example": "32",
													"type": "string"
												},
												"IdentityDeception": {
													"example": "47",
													"type": "string"
												},
												"Link": {
													"example": "43",
													"type": "string"
												}
											},
											"required": [
												"IdentityDeception",
												"Link",
												"BrandImpersonation",
												"CredentialHarvester"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email threat category summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/summary/tls_version": {
		"description": "Retrieves the distribution of emails by TLS version.",
		"operationId": "radar-get-email-security-summary-by-tls-version",
		"parameters": [
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"TLS 1.0": {
													"example": "3",
													"type": "string"
												},
												"TLS 1.1": {
													"example": "12",
													"type": "string"
												},
												"TLS 1.2": {
													"example": "41",
													"type": "string"
												},
												"TLS 1.3": {
													"example": "44",
													"type": "string"
												}
											},
											"required": [
												"TLS 1.0",
												"TLS 1.1",
												"TLS 1.2",
												"TLS 1.3"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email TLS version summary",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/arc": {
		"description": "Retrieves the distribution of emails by ARC (Authenticated Received Chain) validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-arc",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email ARC validation time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/dkim": {
		"description": "Retrieves the distribution of emails by DKIM (DomainKeys Identified Mail) validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-dkim",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email DKIM validation time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/dmarc": {
		"description": "Retrieves the distribution of emails by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-dmarc",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email DMARC validation time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/malicious": {
		"description": "Retrieves the distribution of emails by malicious classification over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-malicious",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"MALICIOUS": {
													"items": {
														"example": "65",
														"type": "string"
													},
													"type": "array"
												},
												"NOT_MALICIOUS": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"MALICIOUS",
												"NOT_MALICIOUS"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email malicious classification time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/spam": {
		"description": "Retrieves the distribution of emails by spam classification (spam vs. non-spam) over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-spam",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SPAM": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												},
												"SPAM": {
													"items": {
														"example": "65",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"SPAM",
												"NOT_SPAM"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email spam classification time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/spf": {
		"description": "Retrieves the distribution of emails by SPF (Sender Policy Framework) validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-spf",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email SPF validation time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/spoof": {
		"description": "Retrieves the distribution of emails by spoof classification (spoof vs. non-spoof) over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-spoof",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SPOOF": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												},
												"SPOOF": {
													"items": {
														"example": "65",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"SPOOF",
												"NOT_SPOOF"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email spoof classification time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/threat_category": {
		"description": "Retrieves the distribution of emails by threat category over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-threat-category",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"BrandImpersonation": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												},
												"CredentialHarvester": {
													"items": {
														"example": "32",
														"type": "string"
													},
													"type": "array"
												},
												"IdentityDeception": {
													"items": {
														"example": "47",
														"type": "string"
													},
													"type": "array"
												},
												"Link": {
													"items": {
														"example": "43",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"IdentityDeception",
												"Link",
												"BrandImpersonation",
												"CredentialHarvester"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email threat category time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries_groups/tls_version": {
		"description": "Retrieves the distribution of emails by TLS version over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-tls-version",
		"parameters": [
			{
				"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"TLS 1.0": {
													"items": {
														"example": "3",
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.1": {
													"items": {
														"example": "12",
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.2": {
													"items": {
														"example": "41",
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.3": {
													"items": {
														"example": "44",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"TLS 1.0",
												"TLS 1.1",
												"TLS 1.2",
												"TLS 1.3"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad request."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get email TLS version time series",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/top/tlds": {
		"description": "Retrieves the top TLDs by number of email messages.",
		"operationId": "radar-get-email-security-top-tlds-by-messages",
		"parameters": [
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLD category.",
				"in": "query",
				"name": "tldCategory",
				"schema": {
					"description": "Filters results by TLD category.",
					"enum": [
						"CLASSIC",
						"COUNTRY"
					],
					"example": "CLASSIC",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "com.",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top TLDs by email message volume",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/top/tlds/malicious/{malicious}": {
		"description": "Retrieves the top TLDs by emails classified as malicious or not.",
		"operationId": "radar-get-email-security-top-tlds-by-malicious",
		"parameters": [
			{
				"description": "Malicious classification.",
				"in": "path",
				"name": "malicious",
				"required": true,
				"schema": {
					"description": "Malicious classification.",
					"enum": [
						"MALICIOUS",
						"NOT_MALICIOUS"
					],
					"example": "MALICIOUS",
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLD category.",
				"in": "query",
				"name": "tldCategory",
				"schema": {
					"description": "Filters results by TLD category.",
					"enum": [
						"CLASSIC",
						"COUNTRY"
					],
					"example": "CLASSIC",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "com.",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top TLDs by email malicious classification",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/top/tlds/spam/{spam}": {
		"description": "Retrieves the top TLDs by emails classified as spam or not.",
		"operationId": "radar-get-email-security-top-tlds-by-spam",
		"parameters": [
			{
				"description": "Spam classification.",
				"in": "path",
				"name": "spam",
				"required": true,
				"schema": {
					"description": "Spam classification.",
					"enum": [
						"SPAM",
						"NOT_SPAM"
					],
					"example": "SPAM",
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLD category.",
				"in": "query",
				"name": "tldCategory",
				"schema": {
					"description": "Filters results by TLD category.",
					"enum": [
						"CLASSIC",
						"COUNTRY"
					],
					"example": "CLASSIC",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "com.",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top TLDs by email spam classification",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/top/tlds/spoof/{spoof}": {
		"description": "Retrieves the top TLDs by emails classified as spoof or not.",
		"operationId": "radar-get-email-security-top-tlds-by-spoof",
		"parameters": [
			{
				"description": "Spoof classification.",
				"in": "path",
				"name": "spoof",
				"required": true,
				"schema": {
					"description": "Spoof classification.",
					"enum": [
						"SPOOF",
						"NOT_SPOOF"
					],
					"example": "SPOOF",
					"type": "string"
				}
			},
			{
				"description": "Limits the number of objects returned in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limits the number of objects returned in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names used to label the series in the response.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names used to label the series in the response.",
					"items": {
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Filters results by date range. For example, use `7d` and `7dcontrol` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Start of the date range.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by ARC (Authenticated Received Chain) validation.",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filters results by ARC (Authenticated Received Chain) validation.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filters results by DKIM (DomainKeys Identified Mail) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filters results by DMARC (Domain-based Message Authentication, Reporting and Conformance) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by SPF (Sender Policy Framework) validation status.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filters results by SPF (Sender Policy Framework) validation status.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLS version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filters results by TLS version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filters results by TLD category.",
				"in": "query",
				"name": "tldCategory",
				"schema": {
					"description": "Filters results by TLD category.",
					"enum": [
						"CLASSIC",
						"COUNTRY"
					],
					"example": "CLASSIC",
					"type": "string"
				}
			},
			{
				"description": "Format in which results will be returned.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format in which results will be returned.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "com.",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful response."
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found.",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top TLDs by email spoof classification",
		"tags": [
			"Radar Email Security"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}