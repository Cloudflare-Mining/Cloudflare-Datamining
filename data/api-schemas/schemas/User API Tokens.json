{
	"DELETE /user/tokens/{token_id}": {
		"description": "Destroy a token.",
		"operationId": "user-api-tokens-delete-token",
		"parameters": [
			{
				"in": "path",
				"name": "token_id",
				"required": true,
				"schema": {
					"description": "Token identifier tag.",
					"example": "ed17574386854bf78a67040be0a770b0",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"minLength": 32,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Token response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Delete Token",
		"tags": [
			"User API Tokens"
		],
		"x-api-token-group": [
			"API Tokens Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.token.delete"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /user/tokens": {
		"description": "List all access tokens you created.",
		"operationId": "user-api-tokens-list-tokens",
		"parameters": [
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Maximum number of results per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "Direction to order results.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "desc",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"condition": {
														"properties": {
															"request_ip": {
																"description": "Client IP restrictions.",
																"example": {
																	"in": [
																		"123.123.123.0/24",
																		"2606:4700::/32"
																	],
																	"not_in": [
																		"123.123.123.100/24",
																		"2606:4700:4700::/48"
																	]
																},
																"properties": {
																	"in": {
																		"description": "List of IPv4/IPv6 CIDR addresses.",
																		"example": [
																			"199.27.128.0/21",
																			"2400:cb00::/32"
																		],
																		"items": {
																			"description": "IPv4/IPv6 CIDR.",
																			"example": "199.27.128.0/21",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"not_in": {
																		"description": "List of IPv4/IPv6 CIDR addresses.",
																		"example": [
																			"199.27.128.0/21",
																			"2400:cb00::/32"
																		],
																		"items": {
																			"description": "IPv4/IPv6 CIDR.",
																			"example": "199.27.128.0/21",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	}
																},
																"type": "object"
															}
														},
														"type": "object"
													},
													"expires_on": {
														"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing.",
														"example": "2020-01-01T00:00:00Z",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Token identifier tag.",
														"example": "ed17574386854bf78a67040be0a770b0",
														"maxLength": 32,
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"issued_on": {
														"description": "The time on which the token was created.",
														"example": "2018-07-01T05:20:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"last_used_on": {
														"description": "Last time the token was used.",
														"example": "2020-01-02T12:34:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"modified_on": {
														"description": "Last time the token was modified.",
														"example": "2018-07-02T05:20:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "Token name.",
														"example": "readonly token",
														"maxLength": 120,
														"type": "string",
														"x-auditable": true
													},
													"not_before": {
														"description": "The time before which the token MUST NOT be accepted for processing.",
														"example": "2018-07-01T05:20:00Z",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"policies": {
														"description": "List of access policies assigned to the token.",
														"items": {
															"properties": {
																"effect": {
																	"description": "Allow or deny operations against the resources.",
																	"enum": [
																		"allow",
																		"deny"
																	],
																	"example": "allow",
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "Policy identifier.",
																	"example": "f267e341f3dd4697bd3b9f71dd96247f",
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"permission_groups": {
																	"description": "A set of permission groups that are specified to the policy.",
																	"example": [
																		{
																			"id": "c8fed203ed3043cba015a93ad1616f1f",
																			"meta": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"name": "Zone Read"
																		},
																		{
																			"id": "82e64a83756745bbbb1c9c2701bf816b",
																			"meta": {
																				"label": "fbm_user",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"name": "Magic Network Monitoring"
																		}
																	],
																	"items": {
																		"description": "A named group of permissions that map to a group of operations against resources.",
																		"properties": {
																			"id": {
																				"description": "Identifier of the permission group.",
																				"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																				"type": "string",
																				"x-auditable": true
																			},
																			"meta": {
																				"description": "Attributes associated to the permission group.",
																				"example": {
																					"label": "load_balancer_admin",
																					"scopes": "com.cloudflare.api.account"
																				},
																				"properties": {
																					"key": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"value": {
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"name": {
																				"description": "Name of the permission group.",
																				"example": "Load Balancer",
																				"readOnly": true,
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"id"
																		],
																		"type": "object"
																	},
																	"type": "array"
																},
																"resources": {
																	"additionalProperties": {
																		"oneOf": [
																			{
																				"description": "A simple string permission.",
																				"type": "string"
																			},
																			{
																				"additionalProperties": {
																					"type": "string"
																				},
																				"description": "A nested permission grant for further scoping.",
																				"type": "object"
																			}
																		],
																		"x-auditable": true
																	},
																	"description": "A list of resource names that the policy applies to.",
																	"example": {
																		"object": {
																			"summary": "Nested object value",
																			"value": {
																				"com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4": {
																					"com.cloudflare.api.account.zone.*": "*"
																				}
																			}
																		},
																		"string": {
																			"summary": "Single string value",
																			"value": {
																				"com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*"
																			}
																		}
																	},
																	"type": "object"
																}
															},
															"required": [
																"id",
																"effect",
																"permission_groups",
																"resources"
															],
															"title": "Policy with Permission Groups and Resources",
															"type": "object"
														},
														"type": "array"
													},
													"status": {
														"description": "Status of the token.",
														"enum": [
															"active",
															"disabled",
															"expired"
														],
														"example": "active",
														"type": "string",
														"x-auditable": true,
														"x-stainless-terraform-configurability": "computed_optional"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with a list of tokens"
						}
					}
				},
				"description": "List Tokens response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List Tokens response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "List Tokens",
		"tags": [
			"User API Tokens"
		],
		"x-api-token-group": [
			"API Tokens Write",
			"API Tokens Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.token.list"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /user/tokens/{token_id}": {
		"description": "Get information about a specific token.",
		"operationId": "user-api-tokens-token-details",
		"parameters": [
			{
				"in": "path",
				"name": "token_id",
				"required": true,
				"schema": {
					"description": "Token identifier tag.",
					"example": "ed17574386854bf78a67040be0a770b0",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"condition": {
													"properties": {
														"request_ip": {
															"description": "Client IP restrictions.",
															"example": {
																"in": [
																	"123.123.123.0/24",
																	"2606:4700::/32"
																],
																"not_in": [
																	"123.123.123.100/24",
																	"2606:4700:4700::/48"
																]
															},
															"properties": {
																"in": {
																	"description": "List of IPv4/IPv6 CIDR addresses.",
																	"example": [
																		"199.27.128.0/21",
																		"2400:cb00::/32"
																	],
																	"items": {
																		"description": "IPv4/IPv6 CIDR.",
																		"example": "199.27.128.0/21",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array"
																},
																"not_in": {
																	"description": "List of IPv4/IPv6 CIDR addresses.",
																	"example": [
																		"199.27.128.0/21",
																		"2400:cb00::/32"
																	],
																	"items": {
																		"description": "IPv4/IPv6 CIDR.",
																		"example": "199.27.128.0/21",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												},
												"expires_on": {
													"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing.",
													"example": "2020-01-01T00:00:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Token identifier tag.",
													"example": "ed17574386854bf78a67040be0a770b0",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"issued_on": {
													"description": "The time on which the token was created.",
													"example": "2018-07-01T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"last_used_on": {
													"description": "Last time the token was used.",
													"example": "2020-01-02T12:34:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"description": "Last time the token was modified.",
													"example": "2018-07-02T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Token name.",
													"example": "readonly token",
													"maxLength": 120,
													"type": "string",
													"x-auditable": true
												},
												"not_before": {
													"description": "The time before which the token MUST NOT be accepted for processing.",
													"example": "2018-07-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "List of access policies assigned to the token.",
													"items": {
														"properties": {
															"effect": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resources": {
																"additionalProperties": {
																	"oneOf": [
																		{
																			"description": "A simple string permission.",
																			"type": "string"
																		},
																		{
																			"additionalProperties": {
																				"type": "string"
																			},
																			"description": "A nested permission grant for further scoping.",
																			"type": "object"
																		}
																	],
																	"x-auditable": true
																},
																"description": "A list of resource names that the policy applies to.",
																"example": {
																	"object": {
																		"summary": "Nested object value",
																		"value": {
																			"com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4": {
																				"com.cloudflare.api.account.zone.*": "*"
																			}
																		}
																	},
																	"string": {
																		"summary": "Single string value",
																		"value": {
																			"com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*"
																		}
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"id",
															"effect",
															"permission_groups",
															"resources"
														],
														"title": "Policy with Permission Groups and Resources",
														"type": "object"
													},
													"type": "array"
												},
												"status": {
													"description": "Status of the token.",
													"enum": [
														"active",
														"disabled",
														"expired"
													],
													"example": "active",
													"type": "string",
													"x-auditable": true,
													"x-stainless-terraform-configurability": "computed_optional"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with a single token"
						}
					}
				},
				"description": "Token Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Token Details response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Token Details",
		"tags": [
			"User API Tokens"
		],
		"x-api-token-group": [
			"API Tokens Write",
			"API Tokens Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.token.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /user/tokens/permission_groups": {
		"description": "Find all available permission groups for API Tokens",
		"operationId": "permission-groups-list-permission-groups",
		"parameters": [
			{
				"description": "Filter by the name of the permission group.\nThe value must be URL-encoded.",
				"in": "query",
				"name": "name",
				"schema": {
					"example": "Account%20Settings%20Write",
					"type": "string"
				}
			},
			{
				"description": "Filter by the scope of the permission group.\nThe value must be URL-encoded.",
				"in": "query",
				"name": "scope",
				"schema": {
					"example": "com.cloudflare.api.account.zone",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": [
												{
													"id": "7cf72faf220841aabcfdfab81c43c4f6",
													"name": "Billing Read",
													"scopes": [
														"com.cloudflare.api.account"
													]
												},
												{
													"id": "9d24387c6e8544e2bc4024a03991339f",
													"name": "Load Balancing: Monitors and Pools Read",
													"scopes": [
														"com.cloudflare.api.account"
													]
												},
												{
													"id": "d2a1802cc9a34e30852f8b33869b2f3c",
													"name": "Load Balancing: Monitors and Pools Write",
													"scopes": [
														"com.cloudflare.api.account"
													]
												},
												{
													"id": "8b47d2786a534c08a1f94ee8f9f599ef",
													"name": "Workers KV Storage Read",
													"scopes": [
														"com.cloudflare.api.account"
													]
												},
												{
													"id": "f7f0eda5697f475c90846e879bab8666",
													"name": "Workers KV Storage Write",
													"scopes": [
														"com.cloudflare.api.account"
													]
												},
												{
													"id": "1a71c399035b4950a1bd1466bbe4f420",
													"name": "Workers Scripts Read",
													"scopes": [
														"com.cloudflare.api.account"
													]
												},
												{
													"id": "e086da7e2179491d91ee5f35b3ca210a",
													"name": "Workers Scripts Write",
													"scopes": [
														"com.cloudflare.api.account"
													]
												}
											],
											"items": {
												"properties": {
													"id": {
														"description": "Public ID.",
														"type": "string",
														"x-auditable": true
													},
													"name": {
														"description": "Permission Group Name",
														"type": "string",
														"x-auditable": true
													},
													"scopes": {
														"description": "Resources to which the Permission Group is scoped",
														"items": {
															"enum": [
																"com.cloudflare.api.account",
																"com.cloudflare.api.account.zone",
																"com.cloudflare.api.user",
																"com.cloudflare.edge.r2.bucket"
															],
															"type": "string",
															"x-auditable": true
														},
														"type": "array"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Token Permission Groups response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List Token Permission Groups response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "List Token Permission Groups",
		"tags": [
			"User API Tokens"
		],
		"x-api-token-group": [
			"API Tokens Write",
			"API Tokens Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.token.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /user/tokens/verify": {
		"description": "Test whether a token works.",
		"operationId": "user-api-tokens-verify-token",
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"expires_on": {
													"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing.",
													"example": "2020-01-01T00:00:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Token identifier tag.",
													"example": "ed17574386854bf78a67040be0a770b0",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"not_before": {
													"description": "The time before which the token MUST NOT be accepted for processing.",
													"example": "2018-07-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Status of the token.",
													"enum": [
														"active",
														"disabled",
														"expired"
													],
													"example": "active",
													"type": "string",
													"x-auditable": true,
													"x-stainless-terraform-configurability": "computed_optional"
												}
											},
											"required": [
												"id",
												"status"
											]
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Verify Token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Verify Token response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Verify Token",
		"tags": [
			"User API Tokens"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /user/tokens": {
		"description": "Create a new access token.",
		"operationId": "user-api-tokens-create-token",
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"condition": {
								"properties": {
									"request_ip": {
										"description": "Client IP restrictions.",
										"example": {
											"in": [
												"123.123.123.0/24",
												"2606:4700::/32"
											],
											"not_in": [
												"123.123.123.100/24",
												"2606:4700:4700::/48"
											]
										},
										"properties": {
											"in": {
												"description": "List of IPv4/IPv6 CIDR addresses.",
												"example": [
													"199.27.128.0/21",
													"2400:cb00::/32"
												],
												"items": {
													"description": "IPv4/IPv6 CIDR.",
													"example": "199.27.128.0/21",
													"type": "string",
													"x-auditable": true
												},
												"type": "array"
											},
											"not_in": {
												"description": "List of IPv4/IPv6 CIDR addresses.",
												"example": [
													"199.27.128.0/21",
													"2400:cb00::/32"
												],
												"items": {
													"description": "IPv4/IPv6 CIDR.",
													"example": "199.27.128.0/21",
													"type": "string",
													"x-auditable": true
												},
												"type": "array"
											}
										},
										"type": "object"
									}
								},
								"type": "object"
							},
							"expires_on": {
								"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing.",
								"example": "2020-01-01T00:00:00Z",
								"format": "date-time",
								"type": "string",
								"x-auditable": true
							},
							"name": {
								"description": "Token name.",
								"example": "readonly token",
								"maxLength": 120,
								"type": "string",
								"x-auditable": true
							},
							"not_before": {
								"description": "The time before which the token MUST NOT be accepted for processing.",
								"example": "2018-07-01T05:20:00Z",
								"format": "date-time",
								"type": "string",
								"x-auditable": true
							},
							"policies": {
								"description": "List of access policies assigned to the token.",
								"items": {
									"properties": {
										"effect": {
											"description": "Allow or deny operations against the resources.",
											"enum": [
												"allow",
												"deny"
											],
											"example": "allow",
											"type": "string",
											"x-auditable": true
										},
										"id": {
											"description": "Policy identifier.",
											"example": "f267e341f3dd4697bd3b9f71dd96247f",
											"readOnly": true,
											"type": "string",
											"x-auditable": true
										},
										"permission_groups": {
											"description": "A set of permission groups that are specified to the policy.",
											"example": [
												{
													"id": "c8fed203ed3043cba015a93ad1616f1f",
													"meta": {
														"label": "load_balancer_admin",
														"scopes": "com.cloudflare.api.account"
													},
													"name": "Zone Read"
												},
												{
													"id": "82e64a83756745bbbb1c9c2701bf816b",
													"meta": {
														"label": "fbm_user",
														"scopes": "com.cloudflare.api.account"
													},
													"name": "Magic Network Monitoring"
												}
											],
											"items": {
												"description": "A named group of permissions that map to a group of operations against resources.",
												"properties": {
													"id": {
														"description": "Identifier of the permission group.",
														"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
														"type": "string",
														"x-auditable": true
													},
													"meta": {
														"description": "Attributes associated to the permission group.",
														"example": {
															"label": "load_balancer_admin",
															"scopes": "com.cloudflare.api.account"
														},
														"properties": {
															"key": {
																"type": "string",
																"x-auditable": true
															},
															"value": {
																"type": "string",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"name": {
														"description": "Name of the permission group.",
														"example": "Load Balancer",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"resources": {
											"additionalProperties": {
												"oneOf": [
													{
														"description": "A simple string permission.",
														"type": "string"
													},
													{
														"additionalProperties": {
															"type": "string"
														},
														"description": "A nested permission grant for further scoping.",
														"type": "object"
													}
												],
												"x-auditable": true
											},
											"description": "A list of resource names that the policy applies to.",
											"example": {
												"object": {
													"summary": "Nested object value",
													"value": {
														"com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4": {
															"com.cloudflare.api.account.zone.*": "*"
														}
													}
												},
												"string": {
													"summary": "Single string value",
													"value": {
														"com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*"
													}
												}
											},
											"type": "object"
										}
									},
									"required": [
										"id",
										"effect",
										"permission_groups",
										"resources"
									],
									"title": "Policy with Permission Groups and Resources",
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"name",
							"policies"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"condition": {
															"properties": {
																"request_ip": {
																	"description": "Client IP restrictions.",
																	"example": {
																		"in": [
																			"123.123.123.0/24",
																			"2606:4700::/32"
																		],
																		"not_in": [
																			"123.123.123.100/24",
																			"2606:4700:4700::/48"
																		]
																	},
																	"properties": {
																		"in": {
																			"description": "List of IPv4/IPv6 CIDR addresses.",
																			"example": [
																				"199.27.128.0/21",
																				"2400:cb00::/32"
																			],
																			"items": {
																				"description": "IPv4/IPv6 CIDR.",
																				"example": "199.27.128.0/21",
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		},
																		"not_in": {
																			"description": "List of IPv4/IPv6 CIDR addresses.",
																			"example": [
																				"199.27.128.0/21",
																				"2400:cb00::/32"
																			],
																			"items": {
																				"description": "IPv4/IPv6 CIDR.",
																				"example": "199.27.128.0/21",
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														},
														"expires_on": {
															"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing.",
															"example": "2020-01-01T00:00:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Token identifier tag.",
															"example": "ed17574386854bf78a67040be0a770b0",
															"maxLength": 32,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"issued_on": {
															"description": "The time on which the token was created.",
															"example": "2018-07-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"last_used_on": {
															"description": "Last time the token was used.",
															"example": "2020-01-02T12:34:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"modified_on": {
															"description": "Last time the token was modified.",
															"example": "2018-07-02T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "Token name.",
															"example": "readonly token",
															"maxLength": 120,
															"type": "string",
															"x-auditable": true
														},
														"not_before": {
															"description": "The time before which the token MUST NOT be accepted for processing.",
															"example": "2018-07-01T05:20:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														},
														"policies": {
															"description": "List of access policies assigned to the token.",
															"items": {
																"properties": {
																	"effect": {
																		"description": "Allow or deny operations against the resources.",
																		"enum": [
																			"allow",
																			"deny"
																		],
																		"example": "allow",
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "Policy identifier.",
																		"example": "f267e341f3dd4697bd3b9f71dd96247f",
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"permission_groups": {
																		"description": "A set of permission groups that are specified to the policy.",
																		"example": [
																			{
																				"id": "c8fed203ed3043cba015a93ad1616f1f",
																				"meta": {
																					"label": "load_balancer_admin",
																					"scopes": "com.cloudflare.api.account"
																				},
																				"name": "Zone Read"
																			},
																			{
																				"id": "82e64a83756745bbbb1c9c2701bf816b",
																				"meta": {
																					"label": "fbm_user",
																					"scopes": "com.cloudflare.api.account"
																				},
																				"name": "Magic Network Monitoring"
																			}
																		],
																		"items": {
																			"description": "A named group of permissions that map to a group of operations against resources.",
																			"properties": {
																				"id": {
																					"description": "Identifier of the permission group.",
																					"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																					"type": "string",
																					"x-auditable": true
																				},
																				"meta": {
																					"description": "Attributes associated to the permission group.",
																					"example": {
																						"label": "load_balancer_admin",
																						"scopes": "com.cloudflare.api.account"
																					},
																					"properties": {
																						"key": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"name": {
																					"description": "Name of the permission group.",
																					"example": "Load Balancer",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"id"
																			],
																			"type": "object"
																		},
																		"type": "array"
																	},
																	"resources": {
																		"additionalProperties": {
																			"oneOf": [
																				{
																					"description": "A simple string permission.",
																					"type": "string"
																				},
																				{
																					"additionalProperties": {
																						"type": "string"
																					},
																					"description": "A nested permission grant for further scoping.",
																					"type": "object"
																				}
																			],
																			"x-auditable": true
																		},
																		"description": "A list of resource names that the policy applies to.",
																		"example": {
																			"object": {
																				"summary": "Nested object value",
																				"value": {
																					"com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4": {
																						"com.cloudflare.api.account.zone.*": "*"
																					}
																				}
																			},
																			"string": {
																				"summary": "Single string value",
																				"value": {
																					"com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*"
																				}
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"effect",
																	"permission_groups",
																	"resources"
																],
																"title": "Policy with Permission Groups and Resources",
																"type": "object"
															},
															"type": "array"
														},
														"status": {
															"description": "Status of the token.",
															"enum": [
																"active",
																"disabled",
																"expired"
															],
															"example": "active",
															"type": "string",
															"x-auditable": true,
															"x-stainless-terraform-configurability": "computed_optional"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"value": {
															"description": "The token value.",
															"example": "8M7wS6hCpXVc-DoRnPPY_UCWPgy8aea4Wy6kCe5T",
															"maxLength": 80,
															"minLength": 40,
															"readOnly": true,
															"type": "string",
															"x-sensitive": true
														}
													}
												}
											],
											"title": "Create token response, with the token value"
										}
									},
									"type": "object"
								}
							],
							"title": "Response of a create request with a single token"
						}
					}
				},
				"description": "Create Token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create Token response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Create Token",
		"tags": [
			"User API Tokens"
		],
		"x-api-token-group": [
			"API Tokens Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.token.create"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /user/tokens/{token_id}": {
		"description": "Update an existing token.",
		"operationId": "user-api-tokens-update-token",
		"parameters": [
			{
				"in": "path",
				"name": "token_id",
				"required": true,
				"schema": {
					"description": "Token identifier tag.",
					"example": "ed17574386854bf78a67040be0a770b0",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"condition": {
										"properties": {
											"request_ip": {
												"description": "Client IP restrictions.",
												"example": {
													"in": [
														"123.123.123.0/24",
														"2606:4700::/32"
													],
													"not_in": [
														"123.123.123.100/24",
														"2606:4700:4700::/48"
													]
												},
												"properties": {
													"in": {
														"description": "List of IPv4/IPv6 CIDR addresses.",
														"example": [
															"199.27.128.0/21",
															"2400:cb00::/32"
														],
														"items": {
															"description": "IPv4/IPv6 CIDR.",
															"example": "199.27.128.0/21",
															"type": "string",
															"x-auditable": true
														},
														"type": "array"
													},
													"not_in": {
														"description": "List of IPv4/IPv6 CIDR addresses.",
														"example": [
															"199.27.128.0/21",
															"2400:cb00::/32"
														],
														"items": {
															"description": "IPv4/IPv6 CIDR.",
															"example": "199.27.128.0/21",
															"type": "string",
															"x-auditable": true
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"expires_on": {
										"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing.",
										"example": "2020-01-01T00:00:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									},
									"id": {
										"description": "Token identifier tag.",
										"example": "ed17574386854bf78a67040be0a770b0",
										"maxLength": 32,
										"readOnly": true,
										"type": "string",
										"x-auditable": true
									},
									"issued_on": {
										"description": "The time on which the token was created.",
										"example": "2018-07-01T05:20:00Z",
										"format": "date-time",
										"readOnly": true,
										"type": "string",
										"x-auditable": true
									},
									"last_used_on": {
										"description": "Last time the token was used.",
										"example": "2020-01-02T12:34:00Z",
										"format": "date-time",
										"readOnly": true,
										"type": "string",
										"x-auditable": true
									},
									"modified_on": {
										"description": "Last time the token was modified.",
										"example": "2018-07-02T05:20:00Z",
										"format": "date-time",
										"readOnly": true,
										"type": "string",
										"x-auditable": true
									},
									"name": {
										"description": "Token name.",
										"example": "readonly token",
										"maxLength": 120,
										"type": "string",
										"x-auditable": true
									},
									"not_before": {
										"description": "The time before which the token MUST NOT be accepted for processing.",
										"example": "2018-07-01T05:20:00Z",
										"format": "date-time",
										"type": "string",
										"x-auditable": true
									},
									"policies": {
										"description": "List of access policies assigned to the token.",
										"items": {
											"properties": {
												"effect": {
													"description": "Allow or deny operations against the resources.",
													"enum": [
														"allow",
														"deny"
													],
													"example": "allow",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Policy identifier.",
													"example": "f267e341f3dd4697bd3b9f71dd96247f",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"permission_groups": {
													"description": "A set of permission groups that are specified to the policy.",
													"example": [
														{
															"id": "c8fed203ed3043cba015a93ad1616f1f",
															"meta": {
																"label": "load_balancer_admin",
																"scopes": "com.cloudflare.api.account"
															},
															"name": "Zone Read"
														},
														{
															"id": "82e64a83756745bbbb1c9c2701bf816b",
															"meta": {
																"label": "fbm_user",
																"scopes": "com.cloudflare.api.account"
															},
															"name": "Magic Network Monitoring"
														}
													],
													"items": {
														"description": "A named group of permissions that map to a group of operations against resources.",
														"properties": {
															"id": {
																"description": "Identifier of the permission group.",
																"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																"type": "string",
																"x-auditable": true
															},
															"meta": {
																"description": "Attributes associated to the permission group.",
																"example": {
																	"label": "load_balancer_admin",
																	"scopes": "com.cloudflare.api.account"
																},
																"properties": {
																	"key": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"name": {
																"description": "Name of the permission group.",
																"example": "Load Balancer",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id"
														],
														"type": "object"
													},
													"type": "array"
												},
												"resources": {
													"additionalProperties": {
														"oneOf": [
															{
																"description": "A simple string permission.",
																"type": "string"
															},
															{
																"additionalProperties": {
																	"type": "string"
																},
																"description": "A nested permission grant for further scoping.",
																"type": "object"
															}
														],
														"x-auditable": true
													},
													"description": "A list of resource names that the policy applies to.",
													"example": {
														"object": {
															"summary": "Nested object value",
															"value": {
																"com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4": {
																	"com.cloudflare.api.account.zone.*": "*"
																}
															}
														},
														"string": {
															"summary": "Single string value",
															"value": {
																"com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*"
															}
														}
													},
													"type": "object"
												}
											},
											"required": [
												"id",
												"effect",
												"permission_groups",
												"resources"
											],
											"title": "Policy with Permission Groups and Resources",
											"type": "object"
										},
										"type": "array"
									},
									"status": {
										"description": "Status of the token.",
										"enum": [
											"active",
											"disabled",
											"expired"
										],
										"example": "active",
										"type": "string",
										"x-auditable": true,
										"x-stainless-terraform-configurability": "computed_optional"
									}
								},
								"type": "object"
							},
							{
								"type": "object"
							},
							{
								"required": [
									"name",
									"policies"
								]
							}
						],
						"title": "Token defined in a request body"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"condition": {
													"properties": {
														"request_ip": {
															"description": "Client IP restrictions.",
															"example": {
																"in": [
																	"123.123.123.0/24",
																	"2606:4700::/32"
																],
																"not_in": [
																	"123.123.123.100/24",
																	"2606:4700:4700::/48"
																]
															},
															"properties": {
																"in": {
																	"description": "List of IPv4/IPv6 CIDR addresses.",
																	"example": [
																		"199.27.128.0/21",
																		"2400:cb00::/32"
																	],
																	"items": {
																		"description": "IPv4/IPv6 CIDR.",
																		"example": "199.27.128.0/21",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array"
																},
																"not_in": {
																	"description": "List of IPv4/IPv6 CIDR addresses.",
																	"example": [
																		"199.27.128.0/21",
																		"2400:cb00::/32"
																	],
																	"items": {
																		"description": "IPv4/IPv6 CIDR.",
																		"example": "199.27.128.0/21",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												},
												"expires_on": {
													"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing.",
													"example": "2020-01-01T00:00:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Token identifier tag.",
													"example": "ed17574386854bf78a67040be0a770b0",
													"maxLength": 32,
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"issued_on": {
													"description": "The time on which the token was created.",
													"example": "2018-07-01T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"last_used_on": {
													"description": "Last time the token was used.",
													"example": "2020-01-02T12:34:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"modified_on": {
													"description": "Last time the token was modified.",
													"example": "2018-07-02T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "Token name.",
													"example": "readonly token",
													"maxLength": 120,
													"type": "string",
													"x-auditable": true
												},
												"not_before": {
													"description": "The time before which the token MUST NOT be accepted for processing.",
													"example": "2018-07-01T05:20:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"policies": {
													"description": "List of access policies assigned to the token.",
													"items": {
														"properties": {
															"effect": {
																"description": "Allow or deny operations against the resources.",
																"enum": [
																	"allow",
																	"deny"
																],
																"example": "allow",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Policy identifier.",
																"example": "f267e341f3dd4697bd3b9f71dd96247f",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"permission_groups": {
																"description": "A set of permission groups that are specified to the policy.",
																"example": [
																	{
																		"id": "c8fed203ed3043cba015a93ad1616f1f",
																		"meta": {
																			"label": "load_balancer_admin",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Zone Read"
																	},
																	{
																		"id": "82e64a83756745bbbb1c9c2701bf816b",
																		"meta": {
																			"label": "fbm_user",
																			"scopes": "com.cloudflare.api.account"
																		},
																		"name": "Magic Network Monitoring"
																	}
																],
																"items": {
																	"description": "A named group of permissions that map to a group of operations against resources.",
																	"properties": {
																		"id": {
																			"description": "Identifier of the permission group.",
																			"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"meta": {
																			"description": "Attributes associated to the permission group.",
																			"example": {
																				"label": "load_balancer_admin",
																				"scopes": "com.cloudflare.api.account"
																			},
																			"properties": {
																				"key": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"value": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		},
																		"name": {
																			"description": "Name of the permission group.",
																			"example": "Load Balancer",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"resources": {
																"additionalProperties": {
																	"oneOf": [
																		{
																			"description": "A simple string permission.",
																			"type": "string"
																		},
																		{
																			"additionalProperties": {
																				"type": "string"
																			},
																			"description": "A nested permission grant for further scoping.",
																			"type": "object"
																		}
																	],
																	"x-auditable": true
																},
																"description": "A list of resource names that the policy applies to.",
																"example": {
																	"object": {
																		"summary": "Nested object value",
																		"value": {
																			"com.cloudflare.api.account.eb78d65290b24279ba6f44721b3ea3c4": {
																				"com.cloudflare.api.account.zone.*": "*"
																			}
																		}
																	},
																	"string": {
																		"summary": "Single string value",
																		"value": {
																			"com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*"
																		}
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"id",
															"effect",
															"permission_groups",
															"resources"
														],
														"title": "Policy with Permission Groups and Resources",
														"type": "object"
													},
													"type": "array"
												},
												"status": {
													"description": "Status of the token.",
													"enum": [
														"active",
														"disabled",
														"expired"
													],
													"example": "active",
													"type": "string",
													"x-auditable": true,
													"x-stainless-terraform-configurability": "computed_optional"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"title": "Response with a single token"
						}
					}
				},
				"description": "Update Token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update Token response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Update Token",
		"tags": [
			"User API Tokens"
		],
		"x-api-token-group": [
			"API Tokens Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.token.update"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /user/tokens/{token_id}/value": {
		"description": "Roll the token secret.",
		"operationId": "user-api-tokens-roll-token",
		"parameters": [
			{
				"in": "path",
				"name": "token_id",
				"required": true,
				"schema": {
					"description": "Token identifier tag.",
					"example": "ed17574386854bf78a67040be0a770b0",
					"maxLength": 32,
					"readOnly": true,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "The token value.",
											"example": "8M7wS6hCpXVc-DoRnPPY_UCWPgy8aea4Wy6kCe5T",
											"maxLength": 80,
											"minLength": 40,
											"readOnly": true,
											"type": "string",
											"x-sensitive": true
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Roll Token response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Roll Token response failure"
			}
		},
		"security": [
			{
				"api_token": []
			}
		],
		"summary": "Roll Token",
		"tags": [
			"User API Tokens"
		],
		"x-api-token-group": [
			"API Tokens Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.token.update"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}