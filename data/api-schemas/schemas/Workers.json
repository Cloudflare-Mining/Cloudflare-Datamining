{
	"DELETE /accounts/{account_id}/workers/workers/{worker_id}": {
		"description": "Delete a Worker and all its associated resources (versions, deployments, etc.).",
		"operationId": "deleteWorker",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										true
									],
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Worker success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete Worker failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Worker",
		"tags": [
			"Workers"
		],
		"x-api-token-group": [
			"Workers Scripts Write"
		]
	},
	"GET /accounts/{account_id}/workers/workers": {
		"description": "List all Workers for an account.",
		"operationId": "listWorkers",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"description": "Current page.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "Items per-page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 10,
					"maximum": 100,
					"minimum": 1,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created_on": {
														"description": "When the Worker was created.",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													},
													"id": {
														"description": "Immutable ID of the Worker.",
														"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
														"readOnly": true,
														"type": "string"
													},
													"logpush": {
														"default": false,
														"description": "Whether logpush is enabled for the Worker.",
														"type": "boolean"
													},
													"name": {
														"description": "Name of the Worker.",
														"example": "my-worker",
														"pattern": "^[a-z0-9_][a-z0-9-_]*$",
														"type": "string"
													},
													"observability": {
														"description": "Observability settings for the Worker.",
														"properties": {
															"enabled": {
																"default": false,
																"description": "Whether observability is enabled for the Worker.",
																"type": "boolean"
															},
															"head_sampling_rate": {
																"default": 1,
																"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
																"example": 1,
																"type": "number"
															},
															"logs": {
																"description": "Log settings for the Worker.",
																"properties": {
																	"enabled": {
																		"default": false,
																		"description": "Whether logs are enabled for the Worker.",
																		"type": "boolean"
																	},
																	"head_sampling_rate": {
																		"default": 1,
																		"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
																		"example": 1,
																		"type": "number"
																	},
																	"invocation_logs": {
																		"default": true,
																		"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
																		"type": "boolean"
																	}
																},
																"type": "object"
															}
														},
														"type": "object"
													},
													"subdomain": {
														"description": "Subdomain settings for the Worker.",
														"properties": {
															"enabled": {
																"default": false,
																"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
																"type": "boolean"
															},
															"previews_enabled": {
																"default": false,
																"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
																"type": "boolean"
															}
														},
														"type": "object"
													},
													"tags": {
														"default": [],
														"description": "Tags associated with the Worker.",
														"example": [
															"my-team",
															"my-public-api"
														],
														"items": {
															"maxLength": 1024,
															"pattern": "^[^,&]*$",
															"type": "string"
														},
														"maxItems": 8,
														"type": "array",
														"x-stainless-collection-type": "set"
													},
													"tail_consumers": {
														"default": [],
														"description": "Other Workers that should consume logs from the Worker.",
														"items": {
															"properties": {
																"name": {
																	"description": "Name of the consumer Worker.",
																	"example": "my-tail-consumer",
																	"type": "string"
																}
															},
															"required": [
																"name"
															],
															"type": "object"
														},
														"type": "array",
														"x-stainless-collection-type": "set"
													},
													"updated_on": {
														"description": "When the Worker was most recently updated.",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													}
												},
												"required": [
													"id",
													"name",
													"tags",
													"subdomain",
													"observability",
													"logpush",
													"tail_consumers",
													"created_on",
													"updated_on"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Workers success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List Workers failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Workers",
		"tags": [
			"Workers"
		],
		"x-api-token-group": [
			"Workers Tail Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		]
	},
	"GET /accounts/{account_id}/workers/workers/{worker_id}": {
		"description": "Get details about a specific Worker.",
		"operationId": "getWorker",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "When the Worker was created.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"description": "Immutable ID of the Worker.",
													"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
													"readOnly": true,
													"type": "string"
												},
												"logpush": {
													"default": false,
													"description": "Whether logpush is enabled for the Worker.",
													"type": "boolean"
												},
												"name": {
													"description": "Name of the Worker.",
													"example": "my-worker",
													"pattern": "^[a-z0-9_][a-z0-9-_]*$",
													"type": "string"
												},
												"observability": {
													"description": "Observability settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether observability is enabled for the Worker.",
															"type": "boolean"
														},
														"head_sampling_rate": {
															"default": 1,
															"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
															"example": 1,
															"type": "number"
														},
														"logs": {
															"description": "Log settings for the Worker.",
															"properties": {
																"enabled": {
																	"default": false,
																	"description": "Whether logs are enabled for the Worker.",
																	"type": "boolean"
																},
																"head_sampling_rate": {
																	"default": 1,
																	"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
																	"example": 1,
																	"type": "number"
																},
																"invocation_logs": {
																	"default": true,
																	"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												},
												"subdomain": {
													"description": "Subdomain settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
															"type": "boolean"
														},
														"previews_enabled": {
															"default": false,
															"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
															"type": "boolean"
														}
													},
													"type": "object"
												},
												"tags": {
													"default": [],
													"description": "Tags associated with the Worker.",
													"example": [
														"my-team",
														"my-public-api"
													],
													"items": {
														"maxLength": 1024,
														"pattern": "^[^,&]*$",
														"type": "string"
													},
													"maxItems": 8,
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"tail_consumers": {
													"default": [],
													"description": "Other Workers that should consume logs from the Worker.",
													"items": {
														"properties": {
															"name": {
																"description": "Name of the consumer Worker.",
																"example": "my-tail-consumer",
																"type": "string"
															}
														},
														"required": [
															"name"
														],
														"type": "object"
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"updated_on": {
													"description": "When the Worker was most recently updated.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"tags",
												"subdomain",
												"observability",
												"logpush",
												"tail_consumers",
												"created_on",
												"updated_on"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Worker success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Worker failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Worker",
		"tags": [
			"Workers"
		],
		"x-api-token-group": [
			"Workers Tail Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		]
	},
	"GET /workers/{external_script_id}/builds": {
		"description": "Get all builds for a specific worker script with pagination",
		"operationId": "listBuildsByScript",
		"parameters": [
			{
				"description": "External script identifier",
				"in": "path",
				"name": "external_script_id",
				"required": true,
				"schema": {
					"example": "my-worker",
					"type": "string"
				}
			},
			{
				"description": "Page number for pagination",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "Number of items per page",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 50,
					"maximum": 200,
					"minimum": 1,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"example": 12000,
														"type": "integer"
													},
													"message": {
														"example": "Not found",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"result_info": {
											"properties": {
												"count": {
													"example": 25,
													"type": "integer"
												},
												"page": {
													"example": 1,
													"type": "integer"
												},
												"per_page": {
													"example": 50,
													"type": "integer"
												},
												"total_count": {
													"example": 150,
													"type": "integer"
												},
												"total_pages": {
													"example": 3,
													"type": "integer"
												}
											},
											"type": "object"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"build_outcome": {
														"enum": [
															"success",
															"fail",
															"skipped",
															"cancelled",
															"terminated"
														],
														"example": "success",
														"type": "string"
													},
													"build_trigger_metadata": {
														"properties": {
															"author": {
																"example": "developer@cloudflare.com",
																"type": "string"
															},
															"branch": {
																"example": "main",
																"type": "string"
															},
															"build_command": {
																"example": "npm run build",
																"type": "string"
															},
															"build_token_name": {
																"example": "My Build Token",
																"type": "string"
															},
															"build_token_uuid": {
																"format": "uuid",
																"type": "string"
															},
															"build_trigger_source": {
																"enum": [
																	"push",
																	"pull_request",
																	"manual",
																	"api"
																],
																"example": "push",
																"type": "string"
															},
															"commit_hash": {
																"example": "abc123def456",
																"type": "string"
															},
															"commit_message": {
																"example": "Add new feature",
																"type": "string"
															},
															"deploy_command": {
																"example": "npm run deploy",
																"type": "string"
															},
															"environment_variables": {
																"additionalProperties": {
																	"type": "string"
																},
																"type": "object"
															},
															"provider_account_name": {
																"example": "Cloudflare",
																"type": "string"
															},
															"provider_type": {
																"enum": [
																	"github"
																],
																"example": "github",
																"type": "string"
															},
															"repo_name": {
																"example": "workers-sdk",
																"type": "string"
															},
															"root_directory": {
																"example": "/",
																"type": "string"
															}
														},
														"type": "object"
													},
													"build_uuid": {
														"format": "uuid",
														"type": "string"
													},
													"created_on": {
														"format": "date-time",
														"type": "string"
													},
													"initializing_on": {
														"format": "date-time",
														"nullable": true,
														"type": "string"
													},
													"modified_on": {
														"format": "date-time",
														"type": "string"
													},
													"pull_request": {
														"nullable": true,
														"properties": {
															"created_on": {
																"format": "date-time",
																"type": "string"
															},
															"pull_request_url": {
																"example": "https://github.com/cloudflare/workers-sdk/pull/123",
																"format": "uri",
																"type": "string"
															}
														},
														"type": "object"
													},
													"running_on": {
														"format": "date-time",
														"nullable": true,
														"type": "string"
													},
													"status": {
														"enum": [
															"queued",
															"initializing",
															"running",
															"stopped"
														],
														"example": "running",
														"type": "string"
													},
													"stopped_on": {
														"format": "date-time",
														"nullable": true,
														"type": "string"
													},
													"trigger": {
														"description": "Trigger information without build_token_uuid",
														"properties": {
															"branch_excludes": {
																"items": {
																	"type": "string"
																},
																"type": "array"
															},
															"branch_includes": {
																"items": {
																	"type": "string"
																},
																"type": "array"
															},
															"build_caching_enabled": {
																"type": "boolean"
															},
															"build_command": {
																"example": "npm run build",
																"type": "string"
															},
															"created_on": {
																"format": "date-time",
																"type": "string"
															},
															"deleted_on": {
																"format": "date-time",
																"nullable": true,
																"type": "string"
															},
															"deploy_command": {
																"example": "npm run deploy",
																"type": "string"
															},
															"external_script_id": {
																"example": "my-worker",
																"type": "string"
															},
															"modified_on": {
																"format": "date-time",
																"type": "string"
															},
															"path_excludes": {
																"items": {
																	"type": "string"
																},
																"type": "array"
															},
															"path_includes": {
																"items": {
																	"type": "string"
																},
																"type": "array"
															},
															"repo_connection": {
																"properties": {
																	"created_on": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"deleted_on": {
																		"format": "date-time",
																		"nullable": true,
																		"type": "string"
																	},
																	"modified_on": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"provider_account_id": {
																		"example": "cloudflare",
																		"type": "string"
																	},
																	"provider_account_name": {
																		"example": "Cloudflare",
																		"type": "string"
																	},
																	"provider_type": {
																		"enum": [
																			"github"
																		],
																		"example": "github",
																		"type": "string"
																	},
																	"repo_connection_uuid": {
																		"format": "uuid",
																		"type": "string"
																	},
																	"repo_id": {
																		"example": "workers-sdk",
																		"type": "string"
																	},
																	"repo_name": {
																		"example": "workers-sdk",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"root_directory": {
																"example": "/",
																"type": "string"
															},
															"trigger_name": {
																"example": "Production Deploy",
																"type": "string"
															},
															"trigger_uuid": {
																"format": "uuid",
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"type": "object"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"example": 25,
													"type": "integer"
												},
												"page": {
													"example": 1,
													"type": "integer"
												},
												"per_page": {
													"example": 50,
													"type": "integer"
												},
												"total_count": {
													"example": 150,
													"type": "integer"
												},
												"total_pages": {
													"example": 3,
													"type": "integer"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Builds retrieved successfully"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List builds by script",
		"tags": [
			"Workers"
		]
	},
	"GET /workers/{external_script_id}/triggers": {
		"description": "Get all triggers for a specific worker script",
		"operationId": "listTriggersByScript",
		"parameters": [
			{
				"description": "External script identifier",
				"in": "path",
				"name": "external_script_id",
				"required": true,
				"schema": {
					"example": "my-worker",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"items": {
												"properties": {
													"code": {
														"example": 12000,
														"type": "integer"
													},
													"message": {
														"example": "Not found",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"result": {
											"nullable": true,
											"type": "object"
										},
										"result_info": {
											"properties": {
												"count": {
													"example": 25,
													"type": "integer"
												},
												"page": {
													"example": 1,
													"type": "integer"
												},
												"per_page": {
													"example": 50,
													"type": "integer"
												},
												"total_count": {
													"example": 150,
													"type": "integer"
												},
												"total_pages": {
													"example": 3,
													"type": "integer"
												}
											},
											"type": "object"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"branch_excludes": {
														"example": [],
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"branch_includes": {
														"example": [
															"main"
														],
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"build_caching_enabled": {
														"example": false,
														"type": "boolean"
													},
													"build_command": {
														"example": "npm run build",
														"type": "string"
													},
													"build_token_name": {
														"example": "My Build Token",
														"type": "string"
													},
													"build_token_uuid": {
														"format": "uuid",
														"type": "string"
													},
													"created_on": {
														"format": "date-time",
														"type": "string"
													},
													"deleted_on": {
														"format": "date-time",
														"nullable": true,
														"type": "string"
													},
													"deploy_command": {
														"example": "npm run deploy",
														"type": "string"
													},
													"external_script_id": {
														"example": "my-worker",
														"type": "string"
													},
													"modified_on": {
														"format": "date-time",
														"type": "string"
													},
													"path_excludes": {
														"example": [
															"*.md"
														],
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"path_includes": {
														"example": [
															"src/**"
														],
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"repo_connection": {
														"properties": {
															"created_on": {
																"format": "date-time",
																"type": "string"
															},
															"deleted_on": {
																"format": "date-time",
																"nullable": true,
																"type": "string"
															},
															"modified_on": {
																"format": "date-time",
																"type": "string"
															},
															"provider_account_id": {
																"example": "cloudflare",
																"type": "string"
															},
															"provider_account_name": {
																"example": "Cloudflare",
																"type": "string"
															},
															"provider_type": {
																"enum": [
																	"github"
																],
																"example": "github",
																"type": "string"
															},
															"repo_connection_uuid": {
																"format": "uuid",
																"type": "string"
															},
															"repo_id": {
																"example": "workers-sdk",
																"type": "string"
															},
															"repo_name": {
																"example": "workers-sdk",
																"type": "string"
															}
														},
														"type": "object"
													},
													"root_directory": {
														"example": "/",
														"type": "string"
													},
													"trigger_name": {
														"example": "Production Deploy",
														"type": "string"
													},
													"trigger_uuid": {
														"format": "uuid",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Triggers retrieved successfully"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List triggers by script",
		"tags": [
			"Workers"
		]
	},
	"PATCH /accounts/{account_id}/workers/workers/{worker_id}": {
		"description": "Perform a partial update on a Worker, where omitted properties are left unchanged from their current values.",
		"operationId": "editWorker",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/merge-patch+json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"created_on": {
										"description": "When the Worker was created.",
										"format": "date-time",
										"readOnly": true,
										"type": "string"
									},
									"id": {
										"description": "Immutable ID of the Worker.",
										"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
										"readOnly": true,
										"type": "string"
									},
									"logpush": {
										"default": false,
										"description": "Whether logpush is enabled for the Worker.",
										"type": "boolean"
									},
									"name": {
										"description": "Name of the Worker.",
										"example": "my-worker",
										"pattern": "^[a-z0-9_][a-z0-9-_]*$",
										"type": "string"
									},
									"observability": {
										"description": "Observability settings for the Worker.",
										"properties": {
											"enabled": {
												"default": false,
												"description": "Whether observability is enabled for the Worker.",
												"type": "boolean"
											},
											"head_sampling_rate": {
												"default": 1,
												"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
												"example": 1,
												"type": "number"
											},
											"logs": {
												"description": "Log settings for the Worker.",
												"properties": {
													"enabled": {
														"default": false,
														"description": "Whether logs are enabled for the Worker.",
														"type": "boolean"
													},
													"head_sampling_rate": {
														"default": 1,
														"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
														"example": 1,
														"type": "number"
													},
													"invocation_logs": {
														"default": true,
														"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
														"type": "boolean"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"subdomain": {
										"description": "Subdomain settings for the Worker.",
										"properties": {
											"enabled": {
												"default": false,
												"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
												"type": "boolean"
											},
											"previews_enabled": {
												"default": false,
												"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"tags": {
										"default": [],
										"description": "Tags associated with the Worker.",
										"example": [
											"my-team",
											"my-public-api"
										],
										"items": {
											"maxLength": 1024,
											"pattern": "^[^,&]*$",
											"type": "string"
										},
										"maxItems": 8,
										"type": "array",
										"x-stainless-collection-type": "set"
									},
									"tail_consumers": {
										"default": [],
										"description": "Other Workers that should consume logs from the Worker.",
										"items": {
											"properties": {
												"name": {
													"description": "Name of the consumer Worker.",
													"example": "my-tail-consumer",
													"type": "string"
												}
											},
											"required": [
												"name"
											],
											"type": "object"
										},
										"type": "array",
										"x-stainless-collection-type": "set"
									},
									"updated_on": {
										"description": "When the Worker was most recently updated.",
										"format": "date-time",
										"readOnly": true,
										"type": "string"
									}
								},
								"required": [
									"id",
									"name",
									"tags",
									"subdomain",
									"observability",
									"logpush",
									"tail_consumers",
									"created_on",
									"updated_on"
								],
								"type": "object"
							},
							{
								"type": "object"
							}
						]
					}
				}
			},
			"description": "Worker partial update parameters.",
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "When the Worker was created.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"description": "Immutable ID of the Worker.",
													"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
													"readOnly": true,
													"type": "string"
												},
												"logpush": {
													"default": false,
													"description": "Whether logpush is enabled for the Worker.",
													"type": "boolean"
												},
												"name": {
													"description": "Name of the Worker.",
													"example": "my-worker",
													"pattern": "^[a-z0-9_][a-z0-9-_]*$",
													"type": "string"
												},
												"observability": {
													"description": "Observability settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether observability is enabled for the Worker.",
															"type": "boolean"
														},
														"head_sampling_rate": {
															"default": 1,
															"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
															"example": 1,
															"type": "number"
														},
														"logs": {
															"description": "Log settings for the Worker.",
															"properties": {
																"enabled": {
																	"default": false,
																	"description": "Whether logs are enabled for the Worker.",
																	"type": "boolean"
																},
																"head_sampling_rate": {
																	"default": 1,
																	"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
																	"example": 1,
																	"type": "number"
																},
																"invocation_logs": {
																	"default": true,
																	"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												},
												"subdomain": {
													"description": "Subdomain settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
															"type": "boolean"
														},
														"previews_enabled": {
															"default": false,
															"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
															"type": "boolean"
														}
													},
													"type": "object"
												},
												"tags": {
													"default": [],
													"description": "Tags associated with the Worker.",
													"example": [
														"my-team",
														"my-public-api"
													],
													"items": {
														"maxLength": 1024,
														"pattern": "^[^,&]*$",
														"type": "string"
													},
													"maxItems": 8,
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"tail_consumers": {
													"default": [],
													"description": "Other Workers that should consume logs from the Worker.",
													"items": {
														"properties": {
															"name": {
																"description": "Name of the consumer Worker.",
																"example": "my-tail-consumer",
																"type": "string"
															}
														},
														"required": [
															"name"
														],
														"type": "object"
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"updated_on": {
													"description": "When the Worker was most recently updated.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"tags",
												"subdomain",
												"observability",
												"logpush",
												"tail_consumers",
												"created_on",
												"updated_on"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Partially Update Worker success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Partially Update Worker failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Edit Worker",
		"tags": [
			"Workers"
		]
	},
	"POST /accounts/{account_id}/workers/workers": {
		"description": "Create a new Worker.",
		"operationId": "createWorker",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"created_on": {
										"description": "When the Worker was created.",
										"format": "date-time",
										"readOnly": true,
										"type": "string"
									},
									"id": {
										"description": "Immutable ID of the Worker.",
										"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
										"readOnly": true,
										"type": "string"
									},
									"logpush": {
										"default": false,
										"description": "Whether logpush is enabled for the Worker.",
										"type": "boolean"
									},
									"name": {
										"description": "Name of the Worker.",
										"example": "my-worker",
										"pattern": "^[a-z0-9_][a-z0-9-_]*$",
										"type": "string"
									},
									"observability": {
										"description": "Observability settings for the Worker.",
										"properties": {
											"enabled": {
												"default": false,
												"description": "Whether observability is enabled for the Worker.",
												"type": "boolean"
											},
											"head_sampling_rate": {
												"default": 1,
												"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
												"example": 1,
												"type": "number"
											},
											"logs": {
												"description": "Log settings for the Worker.",
												"properties": {
													"enabled": {
														"default": false,
														"description": "Whether logs are enabled for the Worker.",
														"type": "boolean"
													},
													"head_sampling_rate": {
														"default": 1,
														"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
														"example": 1,
														"type": "number"
													},
													"invocation_logs": {
														"default": true,
														"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
														"type": "boolean"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"subdomain": {
										"description": "Subdomain settings for the Worker.",
										"properties": {
											"enabled": {
												"default": false,
												"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
												"type": "boolean"
											},
											"previews_enabled": {
												"default": false,
												"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"tags": {
										"default": [],
										"description": "Tags associated with the Worker.",
										"example": [
											"my-team",
											"my-public-api"
										],
										"items": {
											"maxLength": 1024,
											"pattern": "^[^,&]*$",
											"type": "string"
										},
										"maxItems": 8,
										"type": "array",
										"x-stainless-collection-type": "set"
									},
									"tail_consumers": {
										"default": [],
										"description": "Other Workers that should consume logs from the Worker.",
										"items": {
											"properties": {
												"name": {
													"description": "Name of the consumer Worker.",
													"example": "my-tail-consumer",
													"type": "string"
												}
											},
											"required": [
												"name"
											],
											"type": "object"
										},
										"type": "array",
										"x-stainless-collection-type": "set"
									},
									"updated_on": {
										"description": "When the Worker was most recently updated.",
										"format": "date-time",
										"readOnly": true,
										"type": "string"
									}
								},
								"required": [
									"id",
									"name",
									"tags",
									"subdomain",
									"observability",
									"logpush",
									"tail_consumers",
									"created_on",
									"updated_on"
								],
								"type": "object"
							},
							{
								"required": [
									"name"
								],
								"type": "object"
							}
						]
					}
				}
			},
			"description": "Worker creation parameters.",
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "When the Worker was created.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"description": "Immutable ID of the Worker.",
													"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
													"readOnly": true,
													"type": "string"
												},
												"logpush": {
													"default": false,
													"description": "Whether logpush is enabled for the Worker.",
													"type": "boolean"
												},
												"name": {
													"description": "Name of the Worker.",
													"example": "my-worker",
													"pattern": "^[a-z0-9_][a-z0-9-_]*$",
													"type": "string"
												},
												"observability": {
													"description": "Observability settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether observability is enabled for the Worker.",
															"type": "boolean"
														},
														"head_sampling_rate": {
															"default": 1,
															"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
															"example": 1,
															"type": "number"
														},
														"logs": {
															"description": "Log settings for the Worker.",
															"properties": {
																"enabled": {
																	"default": false,
																	"description": "Whether logs are enabled for the Worker.",
																	"type": "boolean"
																},
																"head_sampling_rate": {
																	"default": 1,
																	"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
																	"example": 1,
																	"type": "number"
																},
																"invocation_logs": {
																	"default": true,
																	"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												},
												"subdomain": {
													"description": "Subdomain settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
															"type": "boolean"
														},
														"previews_enabled": {
															"default": false,
															"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
															"type": "boolean"
														}
													},
													"type": "object"
												},
												"tags": {
													"default": [],
													"description": "Tags associated with the Worker.",
													"example": [
														"my-team",
														"my-public-api"
													],
													"items": {
														"maxLength": 1024,
														"pattern": "^[^,&]*$",
														"type": "string"
													},
													"maxItems": 8,
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"tail_consumers": {
													"default": [],
													"description": "Other Workers that should consume logs from the Worker.",
													"items": {
														"properties": {
															"name": {
																"description": "Name of the consumer Worker.",
																"example": "my-tail-consumer",
																"type": "string"
															}
														},
														"required": [
															"name"
														],
														"type": "object"
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"updated_on": {
													"description": "When the Worker was most recently updated.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"tags",
												"subdomain",
												"observability",
												"logpush",
												"tail_consumers",
												"created_on",
												"updated_on"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Worker success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create Worker failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Worker",
		"tags": [
			"Workers"
		],
		"x-api-token-group": [
			"Workers Scripts Write"
		]
	},
	"PUT /accounts/{account_id}/workers/workers/{worker_id}": {
		"description": "Perform a complete replacement of a Worker, where omitted properties are set to their default values. This is the exact same as the Create Worker endpoint, but operates on an existing Worker. To perform a partial update instead, use the Edit Worker endpoint.",
		"operationId": "updateWorker",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"created_on": {
										"description": "When the Worker was created.",
										"format": "date-time",
										"readOnly": true,
										"type": "string"
									},
									"id": {
										"description": "Immutable ID of the Worker.",
										"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
										"readOnly": true,
										"type": "string"
									},
									"logpush": {
										"default": false,
										"description": "Whether logpush is enabled for the Worker.",
										"type": "boolean"
									},
									"name": {
										"description": "Name of the Worker.",
										"example": "my-worker",
										"pattern": "^[a-z0-9_][a-z0-9-_]*$",
										"type": "string"
									},
									"observability": {
										"description": "Observability settings for the Worker.",
										"properties": {
											"enabled": {
												"default": false,
												"description": "Whether observability is enabled for the Worker.",
												"type": "boolean"
											},
											"head_sampling_rate": {
												"default": 1,
												"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
												"example": 1,
												"type": "number"
											},
											"logs": {
												"description": "Log settings for the Worker.",
												"properties": {
													"enabled": {
														"default": false,
														"description": "Whether logs are enabled for the Worker.",
														"type": "boolean"
													},
													"head_sampling_rate": {
														"default": 1,
														"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
														"example": 1,
														"type": "number"
													},
													"invocation_logs": {
														"default": true,
														"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
														"type": "boolean"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"subdomain": {
										"description": "Subdomain settings for the Worker.",
										"properties": {
											"enabled": {
												"default": false,
												"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
												"type": "boolean"
											},
											"previews_enabled": {
												"default": false,
												"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"tags": {
										"default": [],
										"description": "Tags associated with the Worker.",
										"example": [
											"my-team",
											"my-public-api"
										],
										"items": {
											"maxLength": 1024,
											"pattern": "^[^,&]*$",
											"type": "string"
										},
										"maxItems": 8,
										"type": "array",
										"x-stainless-collection-type": "set"
									},
									"tail_consumers": {
										"default": [],
										"description": "Other Workers that should consume logs from the Worker.",
										"items": {
											"properties": {
												"name": {
													"description": "Name of the consumer Worker.",
													"example": "my-tail-consumer",
													"type": "string"
												}
											},
											"required": [
												"name"
											],
											"type": "object"
										},
										"type": "array",
										"x-stainless-collection-type": "set"
									},
									"updated_on": {
										"description": "When the Worker was most recently updated.",
										"format": "date-time",
										"readOnly": true,
										"type": "string"
									}
								},
								"required": [
									"id",
									"name",
									"tags",
									"subdomain",
									"observability",
									"logpush",
									"tail_consumers",
									"created_on",
									"updated_on"
								],
								"type": "object"
							},
							{
								"required": [
									"name"
								],
								"type": "object"
							}
						]
					}
				}
			},
			"description": "Worker update parameters.",
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"description": "When the Worker was created.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"description": "Immutable ID of the Worker.",
													"example": "e8f70fdbc8b1fb0b8ddb1af166186758",
													"readOnly": true,
													"type": "string"
												},
												"logpush": {
													"default": false,
													"description": "Whether logpush is enabled for the Worker.",
													"type": "boolean"
												},
												"name": {
													"description": "Name of the Worker.",
													"example": "my-worker",
													"pattern": "^[a-z0-9_][a-z0-9-_]*$",
													"type": "string"
												},
												"observability": {
													"description": "Observability settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether observability is enabled for the Worker.",
															"type": "boolean"
														},
														"head_sampling_rate": {
															"default": 1,
															"description": "The sampling rate for observability. From 0 to 1 (1 = 100%, 0.1 = 10%).",
															"example": 1,
															"type": "number"
														},
														"logs": {
															"description": "Log settings for the Worker.",
															"properties": {
																"enabled": {
																	"default": false,
																	"description": "Whether logs are enabled for the Worker.",
																	"type": "boolean"
																},
																"head_sampling_rate": {
																	"default": 1,
																	"description": "The sampling rate for logs. From 0 to 1 (1 = 100%, 0.1 = 10%).",
																	"example": 1,
																	"type": "number"
																},
																"invocation_logs": {
																	"default": true,
																	"description": "Whether [invocation logs](https://developers.cloudflare.com/workers/observability/logs/workers-logs/#invocation-logs) are enabled for the Worker.",
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												},
												"subdomain": {
													"description": "Subdomain settings for the Worker.",
													"properties": {
														"enabled": {
															"default": false,
															"description": "Whether the *.workers.dev subdomain is enabled for the Worker.",
															"type": "boolean"
														},
														"previews_enabled": {
															"default": false,
															"description": "Whether [preview URLs](https://developers.cloudflare.com/workers/configuration/previews/) are enabled for the Worker.",
															"type": "boolean"
														}
													},
													"type": "object"
												},
												"tags": {
													"default": [],
													"description": "Tags associated with the Worker.",
													"example": [
														"my-team",
														"my-public-api"
													],
													"items": {
														"maxLength": 1024,
														"pattern": "^[^,&]*$",
														"type": "string"
													},
													"maxItems": 8,
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"tail_consumers": {
													"default": [],
													"description": "Other Workers that should consume logs from the Worker.",
													"items": {
														"properties": {
															"name": {
																"description": "Name of the consumer Worker.",
																"example": "my-tail-consumer",
																"type": "string"
															}
														},
														"required": [
															"name"
														],
														"type": "object"
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"updated_on": {
													"description": "When the Worker was most recently updated.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"name",
												"tags",
												"subdomain",
												"observability",
												"logpush",
												"tail_consumers",
												"created_on",
												"updated_on"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Worker success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update Worker failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Worker",
		"tags": [
			"Workers"
		],
		"x-api-token-group": [
			"Workers Scripts Write"
		]
	}
}