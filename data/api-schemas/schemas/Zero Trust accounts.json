{
	"GET /accounts/{account_id}/devices/settings": {
		"description": "Describes the current device settings for a Zero Trust account.",
		"operationId": "zero-trust-accounts-get-device-settings-for-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
													"type": "number"
												},
												"gateway_proxy_enabled": {
													"description": "Enable gateway proxy filtering on TCP.",
													"example": true,
													"type": "boolean"
												},
												"gateway_udp_proxy_enabled": {
													"description": "Enable gateway proxy filtering on UDP.",
													"example": true,
													"type": "boolean"
												},
												"root_certificate_installation_enabled": {
													"description": "Enable installation of cloudflare managed root certificate.",
													"example": true,
													"type": "boolean"
												},
												"use_zt_virtual_ip": {
													"description": "Enable using CGNAT virtual IPv4.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get device settings for a Zero Trust account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
															"type": "number"
														},
														"gateway_proxy_enabled": {
															"description": "Enable gateway proxy filtering on TCP.",
															"example": true,
															"type": "boolean"
														},
														"gateway_udp_proxy_enabled": {
															"description": "Enable gateway proxy filtering on UDP.",
															"example": true,
															"type": "boolean"
														},
														"root_certificate_installation_enabled": {
															"description": "Enable installation of cloudflare managed root certificate.",
															"example": true,
															"type": "boolean"
														},
														"use_zt_virtual_ip": {
															"description": "Enable using CGNAT virtual IPv4.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get device settings for a Zero Trust account response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get device settings for a Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway": {
		"description": "Gets information about the current Zero Trust account.",
		"operationId": "zero-trust-accounts-get-zero-trust-account-information",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"gateway_tag": {
													"description": "Gateway internal ID.",
													"example": "f174e90afafe4643bbbc4a0ed4fc8415",
													"maxLength": 32,
													"type": "string"
												},
												"id": {
													"description": "Cloudflare account ID.",
													"example": "699d98642c564d2e855e9661899b7252",
													"maxLength": 32,
													"type": "string"
												},
												"provider_name": {
													"description": "The name of the provider. Usually Cloudflare.",
													"example": "Cloudflare",
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zero Trust account information response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"type": "object"
								},
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gateway_tag": {
															"description": "Gateway internal ID.",
															"example": "f174e90afafe4643bbbc4a0ed4fc8415",
															"maxLength": 32,
															"type": "string"
														},
														"id": {
															"description": "Cloudflare account ID.",
															"example": "699d98642c564d2e855e9661899b7252",
															"maxLength": 32,
															"type": "string"
														},
														"provider_name": {
															"description": "The name of the provider. Usually Cloudflare.",
															"example": "Cloudflare",
															"type": "string"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Zero Trust account information response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Zero Trust account information",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway/configuration": {
		"description": "Fetches the current Zero Trust account configuration.",
		"operationId": "zero-trust-accounts-get-zero-trust-account-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Account settings",
													"properties": {
														"settings": {
															"description": "Account settings",
															"properties": {
																"activity_log": {
																	"description": "Activity log settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable activity logging.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"antivirus": {
																	"description": "Anti-virus settings.",
																	"properties": {
																		"enabled_download_phase": {
																			"description": "Enable anti-virus scanning on downloads.",
																			"example": false,
																			"type": "boolean"
																		},
																		"enabled_upload_phase": {
																			"description": "Enable anti-virus scanning on uploads.",
																			"example": false,
																			"type": "boolean"
																		},
																		"fail_closed": {
																			"description": "Block requests for files that cannot be scanned.",
																			"example": false,
																			"type": "boolean"
																		},
																		"notification_settings": {
																			"description": "Configure a message to display on the user's device when an antivirus search is performed.",
																			"properties": {
																				"enabled": {
																					"description": "Set notification on",
																					"type": "boolean"
																				},
																				"msg": {
																					"description": "Customize the message shown in the notification.",
																					"type": "string"
																				},
																				"support_url": {
																					"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		}
																	},
																	"type": "object"
																},
																"block_page": {
																	"description": "Block page layout settings.",
																	"properties": {
																		"background_color": {
																			"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
																			"type": "string"
																		},
																		"enabled": {
																			"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean"
																		},
																		"footer_text": {
																			"description": "If mode is customized_block_page: block page footer text.",
																			"example": "--footer--",
																			"type": "string"
																		},
																		"header_text": {
																			"description": "If mode is customized_block_page: block page header text.",
																			"example": "--header--",
																			"type": "string"
																		},
																		"include_context": {
																			"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
																			"type": "boolean"
																		},
																		"logo_path": {
																			"description": "If mode is customized_block_page: full URL to the logo file.",
																			"example": "https://logos.com/a.png",
																			"type": "string"
																		},
																		"mailto_address": {
																			"description": "If mode is customized_block_page: admin email for users to contact.",
																			"example": "admin@example.com",
																			"type": "string"
																		},
																		"mailto_subject": {
																			"description": "If mode is customized_block_page: subject line for emails created from block page.",
																			"example": "Blocked User Inquiry",
																			"type": "string"
																		},
																		"mode": {
																			"default": "customized_block_page",
																			"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
																			"enum": [
																				"customized_block_page",
																				"redirect_uri"
																			],
																			"type": "string"
																		},
																		"name": {
																			"description": "If mode is customized_block_page: block page title.",
																			"example": "Cloudflare",
																			"type": "string"
																		},
																		"suppress_footer": {
																			"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
																			"example": false,
																			"type": "boolean"
																		},
																		"target_uri": {
																			"description": "If mode is redirect_uri: URI to which the user should be redirected.",
																			"format": "uri",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"body_scanning": {
																	"description": "DLP body scanning settings.",
																	"properties": {
																		"inspection_mode": {
																			"description": "Set the inspection mode to either `deep` or `shallow`.",
																			"example": "deep",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"browser_isolation": {
																	"description": "Browser isolation settings.",
																	"properties": {
																		"non_identity_enabled": {
																			"description": "Enable non-identity onramp support for Browser Isolation.",
																			"example": true,
																			"type": "boolean"
																		},
																		"url_browser_isolation_enabled": {
																			"description": "Enable Clientless Browser Isolation.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"certificate": {
																	"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
																	"properties": {
																		"id": {
																			"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string"
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"custom_certificate": {
																	"deprecated": true,
																	"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
																	"properties": {
																		"binding_status": {
																			"description": "Certificate status (internal).",
																			"example": "pending_deployment",
																			"readOnly": true,
																			"type": "string"
																		},
																		"enabled": {
																			"description": "Enable use of custom certificate authority for signing Gateway traffic.",
																			"example": true,
																			"type": "boolean"
																		},
																		"id": {
																			"description": "UUID of certificate (ID from MTLS certificate store).",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string"
																		},
																		"updated_at": {
																			"format": "date-time",
																			"readOnly": true,
																			"type": "string"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"type": "object"
																},
																"extended_email_matching": {
																	"description": "Extended e-mail matching settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"fips": {
																	"description": "FIPS settings.",
																	"properties": {
																		"tls": {
																			"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"protocol_detection": {
																	"description": "Protocol Detection settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable detecting protocol on initial bytes of client traffic.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"sandbox": {
																	"description": "Sandbox settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable sandbox.",
																			"example": true,
																			"type": "boolean"
																		},
																		"fallback_action": {
																			"description": "Action to take when the file cannot be scanned.",
																			"enum": [
																				"allow",
																				"block"
																			],
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"tls_decrypt": {
																	"description": "TLS interception settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable inspecting encrypted HTTP traffic.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														}
													}
												},
												{
													"properties": {
														"created_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string"
														},
														"updated_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string"
														}
													}
												}
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zero Trust account configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "Account settings",
															"properties": {
																"settings": {
																	"description": "Account settings",
																	"properties": {
																		"activity_log": {
																			"description": "Activity log settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable activity logging.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"antivirus": {
																			"description": "Anti-virus settings.",
																			"properties": {
																				"enabled_download_phase": {
																					"description": "Enable anti-virus scanning on downloads.",
																					"example": false,
																					"type": "boolean"
																				},
																				"enabled_upload_phase": {
																					"description": "Enable anti-virus scanning on uploads.",
																					"example": false,
																					"type": "boolean"
																				},
																				"fail_closed": {
																					"description": "Block requests for files that cannot be scanned.",
																					"example": false,
																					"type": "boolean"
																				},
																				"notification_settings": {
																					"description": "Configure a message to display on the user's device when an antivirus search is performed.",
																					"properties": {
																						"enabled": {
																							"description": "Set notification on",
																							"type": "boolean"
																						},
																						"msg": {
																							"description": "Customize the message shown in the notification.",
																							"type": "string"
																						},
																						"support_url": {
																							"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
																							"type": "string"
																						}
																					},
																					"type": "object"
																				}
																			},
																			"type": "object"
																		},
																		"block_page": {
																			"description": "Block page layout settings.",
																			"properties": {
																				"background_color": {
																					"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
																					"type": "string"
																				},
																				"enabled": {
																					"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean"
																				},
																				"footer_text": {
																					"description": "If mode is customized_block_page: block page footer text.",
																					"example": "--footer--",
																					"type": "string"
																				},
																				"header_text": {
																					"description": "If mode is customized_block_page: block page header text.",
																					"example": "--header--",
																					"type": "string"
																				},
																				"include_context": {
																					"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
																					"type": "boolean"
																				},
																				"logo_path": {
																					"description": "If mode is customized_block_page: full URL to the logo file.",
																					"example": "https://logos.com/a.png",
																					"type": "string"
																				},
																				"mailto_address": {
																					"description": "If mode is customized_block_page: admin email for users to contact.",
																					"example": "admin@example.com",
																					"type": "string"
																				},
																				"mailto_subject": {
																					"description": "If mode is customized_block_page: subject line for emails created from block page.",
																					"example": "Blocked User Inquiry",
																					"type": "string"
																				},
																				"mode": {
																					"default": "customized_block_page",
																					"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
																					"enum": [
																						"customized_block_page",
																						"redirect_uri"
																					],
																					"type": "string"
																				},
																				"name": {
																					"description": "If mode is customized_block_page: block page title.",
																					"example": "Cloudflare",
																					"type": "string"
																				},
																				"suppress_footer": {
																					"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
																					"example": false,
																					"type": "boolean"
																				},
																				"target_uri": {
																					"description": "If mode is redirect_uri: URI to which the user should be redirected.",
																					"format": "uri",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"body_scanning": {
																			"description": "DLP body scanning settings.",
																			"properties": {
																				"inspection_mode": {
																					"description": "Set the inspection mode to either `deep` or `shallow`.",
																					"example": "deep",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"browser_isolation": {
																			"description": "Browser isolation settings.",
																			"properties": {
																				"non_identity_enabled": {
																					"description": "Enable non-identity onramp support for Browser Isolation.",
																					"example": true,
																					"type": "boolean"
																				},
																				"url_browser_isolation_enabled": {
																					"description": "Enable Clientless Browser Isolation.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"certificate": {
																			"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
																			"properties": {
																				"id": {
																					"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string"
																				}
																			},
																			"required": [
																				"id"
																			],
																			"type": "object"
																		},
																		"custom_certificate": {
																			"deprecated": true,
																			"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
																			"properties": {
																				"binding_status": {
																					"description": "Certificate status (internal).",
																					"example": "pending_deployment",
																					"readOnly": true,
																					"type": "string"
																				},
																				"enabled": {
																					"description": "Enable use of custom certificate authority for signing Gateway traffic.",
																					"example": true,
																					"type": "boolean"
																				},
																				"id": {
																					"description": "UUID of certificate (ID from MTLS certificate store).",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string"
																				},
																				"updated_at": {
																					"format": "date-time",
																					"readOnly": true,
																					"type": "string"
																				}
																			},
																			"required": [
																				"enabled"
																			],
																			"type": "object"
																		},
																		"extended_email_matching": {
																			"description": "Extended e-mail matching settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"fips": {
																			"description": "FIPS settings.",
																			"properties": {
																				"tls": {
																					"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"protocol_detection": {
																			"description": "Protocol Detection settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable detecting protocol on initial bytes of client traffic.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"sandbox": {
																			"description": "Sandbox settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable sandbox.",
																					"example": true,
																					"type": "boolean"
																				},
																				"fallback_action": {
																					"description": "Action to take when the file cannot be scanned.",
																					"enum": [
																						"allow",
																						"block"
																					],
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"tls_decrypt": {
																			"description": "TLS interception settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable inspecting encrypted HTTP traffic.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		}
																	},
																	"type": "object"
																}
															}
														},
														{
															"properties": {
																"created_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"type": "string"
																},
																"updated_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"type": "string"
																}
															}
														}
													],
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Zero Trust account configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Zero Trust account configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway/configuration/custom_certificate": {
		"description": "Fetches the current Zero Trust certificate configuration.",
		"operationId": "zero-trust-accounts-get-zero-trust-certificate-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"deprecated": true,
							"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
							"properties": {
								"binding_status": {
									"description": "Certificate status (internal).",
									"example": "pending_deployment",
									"readOnly": true,
									"type": "string"
								},
								"enabled": {
									"description": "Enable use of custom certificate authority for signing Gateway traffic.",
									"example": true,
									"type": "boolean"
								},
								"id": {
									"description": "UUID of certificate (ID from MTLS certificate store).",
									"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
									"type": "string"
								},
								"updated_at": {
									"format": "date-time",
									"readOnly": true,
									"type": "string"
								}
							},
							"required": [
								"enabled"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zero Trust account configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"deprecated": true,
									"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
									"properties": {
										"binding_status": {
											"description": "Certificate status (internal).",
											"example": "pending_deployment",
											"readOnly": true,
											"type": "string"
										},
										"enabled": {
											"description": "Enable use of custom certificate authority for signing Gateway traffic.",
											"example": true,
											"type": "boolean"
										},
										"id": {
											"description": "UUID of certificate (ID from MTLS certificate store).",
											"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
											"type": "string"
										},
										"updated_at": {
											"format": "date-time",
											"readOnly": true,
											"type": "string"
										}
									},
									"required": [
										"enabled"
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Zero Trust account configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Zero Trust certificate configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway/logging": {
		"description": "Fetches the current logging settings for Zero Trust account.",
		"operationId": "zero-trust-accounts-get-logging-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"redact_pii": {
													"description": "Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).",
													"example": true,
													"type": "boolean"
												},
												"settings_by_rule_type": {
													"description": "Logging settings by rule type.",
													"properties": {
														"dns": {
															"description": "Logging settings for DNS firewall.",
															"type": "object"
														},
														"http": {
															"description": "Logging settings for HTTP/HTTPS firewall.",
															"type": "object"
														},
														"l4": {
															"description": "Logging settings for Network firewall.",
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get logging settings for the Zero Trust account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"redact_pii": {
															"description": "Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).",
															"example": true,
															"type": "boolean"
														},
														"settings_by_rule_type": {
															"description": "Logging settings by rule type.",
															"properties": {
																"dns": {
																	"description": "Logging settings for DNS firewall.",
																	"type": "object"
																},
																"http": {
																	"description": "Logging settings for HTTP/HTTPS firewall.",
																	"type": "object"
																},
																"l4": {
																	"description": "Logging settings for Network firewall.",
																	"type": "object"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get logging settings for the Zero Trust account response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get logging settings for the Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"PATCH /accounts/{account_id}/devices/settings": {
		"description": "Patches the current device settings for a Zero Trust account.",
		"operationId": "zero-trust-accounts-patch-device-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"disable_for_time": {
								"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
								"type": "number"
							},
							"gateway_proxy_enabled": {
								"description": "Enable gateway proxy filtering on TCP.",
								"example": true,
								"type": "boolean"
							},
							"gateway_udp_proxy_enabled": {
								"description": "Enable gateway proxy filtering on UDP.",
								"example": true,
								"type": "boolean"
							},
							"root_certificate_installation_enabled": {
								"description": "Enable installation of cloudflare managed root certificate.",
								"example": true,
								"type": "boolean"
							},
							"use_zt_virtual_ip": {
								"description": "Enable using CGNAT virtual IPv4.",
								"example": true,
								"type": "boolean"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
													"type": "number"
												},
												"gateway_proxy_enabled": {
													"description": "Enable gateway proxy filtering on TCP.",
													"example": true,
													"type": "boolean"
												},
												"gateway_udp_proxy_enabled": {
													"description": "Enable gateway proxy filtering on UDP.",
													"example": true,
													"type": "boolean"
												},
												"root_certificate_installation_enabled": {
													"description": "Enable installation of cloudflare managed root certificate.",
													"example": true,
													"type": "boolean"
												},
												"use_zt_virtual_ip": {
													"description": "Enable using CGNAT virtual IPv4.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch device settings for a Zero Trust account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
															"type": "number"
														},
														"gateway_proxy_enabled": {
															"description": "Enable gateway proxy filtering on TCP.",
															"example": true,
															"type": "boolean"
														},
														"gateway_udp_proxy_enabled": {
															"description": "Enable gateway proxy filtering on UDP.",
															"example": true,
															"type": "boolean"
														},
														"root_certificate_installation_enabled": {
															"description": "Enable installation of cloudflare managed root certificate.",
															"example": true,
															"type": "boolean"
														},
														"use_zt_virtual_ip": {
															"description": "Enable using CGNAT virtual IPv4.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Patch device settings for a Zero Trust account response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch device settings for a Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PATCH /accounts/{account_id}/gateway/configuration": {
		"description": "Patches the current Zero Trust account configuration. This endpoint can update a single subcollection of settings such as `antivirus`, `tls_decrypt`, `activity_log`, `block_page`, `browser_isolation`, `fips`, `body_scanning`, or `certificate`, without updating the entire configuration object. Returns an error if any collection of settings is not properly configured.",
		"operationId": "zero-trust-accounts-patch-zero-trust-account-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Account settings",
						"properties": {
							"settings": {
								"description": "Account settings",
								"properties": {
									"activity_log": {
										"description": "Activity log settings.",
										"properties": {
											"enabled": {
												"description": "Enable activity logging.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"antivirus": {
										"description": "Anti-virus settings.",
										"properties": {
											"enabled_download_phase": {
												"description": "Enable anti-virus scanning on downloads.",
												"example": false,
												"type": "boolean"
											},
											"enabled_upload_phase": {
												"description": "Enable anti-virus scanning on uploads.",
												"example": false,
												"type": "boolean"
											},
											"fail_closed": {
												"description": "Block requests for files that cannot be scanned.",
												"example": false,
												"type": "boolean"
											},
											"notification_settings": {
												"description": "Configure a message to display on the user's device when an antivirus search is performed.",
												"properties": {
													"enabled": {
														"description": "Set notification on",
														"type": "boolean"
													},
													"msg": {
														"description": "Customize the message shown in the notification.",
														"type": "string"
													},
													"support_url": {
														"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"block_page": {
										"description": "Block page layout settings.",
										"properties": {
											"background_color": {
												"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
												"type": "string"
											},
											"enabled": {
												"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
												"example": true,
												"type": "boolean"
											},
											"footer_text": {
												"description": "If mode is customized_block_page: block page footer text.",
												"example": "--footer--",
												"type": "string"
											},
											"header_text": {
												"description": "If mode is customized_block_page: block page header text.",
												"example": "--header--",
												"type": "string"
											},
											"include_context": {
												"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
												"type": "boolean"
											},
											"logo_path": {
												"description": "If mode is customized_block_page: full URL to the logo file.",
												"example": "https://logos.com/a.png",
												"type": "string"
											},
											"mailto_address": {
												"description": "If mode is customized_block_page: admin email for users to contact.",
												"example": "admin@example.com",
												"type": "string"
											},
											"mailto_subject": {
												"description": "If mode is customized_block_page: subject line for emails created from block page.",
												"example": "Blocked User Inquiry",
												"type": "string"
											},
											"mode": {
												"default": "customized_block_page",
												"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
												"enum": [
													"customized_block_page",
													"redirect_uri"
												],
												"type": "string"
											},
											"name": {
												"description": "If mode is customized_block_page: block page title.",
												"example": "Cloudflare",
												"type": "string"
											},
											"suppress_footer": {
												"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
												"example": false,
												"type": "boolean"
											},
											"target_uri": {
												"description": "If mode is redirect_uri: URI to which the user should be redirected.",
												"format": "uri",
												"type": "string"
											}
										},
										"type": "object"
									},
									"body_scanning": {
										"description": "DLP body scanning settings.",
										"properties": {
											"inspection_mode": {
												"description": "Set the inspection mode to either `deep` or `shallow`.",
												"example": "deep",
												"type": "string"
											}
										},
										"type": "object"
									},
									"browser_isolation": {
										"description": "Browser isolation settings.",
										"properties": {
											"non_identity_enabled": {
												"description": "Enable non-identity onramp support for Browser Isolation.",
												"example": true,
												"type": "boolean"
											},
											"url_browser_isolation_enabled": {
												"description": "Enable Clientless Browser Isolation.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"certificate": {
										"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
										"properties": {
											"id": {
												"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string"
											}
										},
										"required": [
											"id"
										],
										"type": "object"
									},
									"custom_certificate": {
										"deprecated": true,
										"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
										"properties": {
											"binding_status": {
												"description": "Certificate status (internal).",
												"example": "pending_deployment",
												"readOnly": true,
												"type": "string"
											},
											"enabled": {
												"description": "Enable use of custom certificate authority for signing Gateway traffic.",
												"example": true,
												"type": "boolean"
											},
											"id": {
												"description": "UUID of certificate (ID from MTLS certificate store).",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string"
											},
											"updated_at": {
												"format": "date-time",
												"readOnly": true,
												"type": "string"
											}
										},
										"required": [
											"enabled"
										],
										"type": "object"
									},
									"extended_email_matching": {
										"description": "Extended e-mail matching settings.",
										"properties": {
											"enabled": {
												"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"fips": {
										"description": "FIPS settings.",
										"properties": {
											"tls": {
												"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"protocol_detection": {
										"description": "Protocol Detection settings.",
										"properties": {
											"enabled": {
												"description": "Enable detecting protocol on initial bytes of client traffic.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"sandbox": {
										"description": "Sandbox settings.",
										"properties": {
											"enabled": {
												"description": "Enable sandbox.",
												"example": true,
												"type": "boolean"
											},
											"fallback_action": {
												"description": "Action to take when the file cannot be scanned.",
												"enum": [
													"allow",
													"block"
												],
												"type": "string"
											}
										},
										"type": "object"
									},
									"tls_decrypt": {
										"description": "TLS interception settings.",
										"properties": {
											"enabled": {
												"description": "Enable inspecting encrypted HTTP traffic.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Account settings",
													"properties": {
														"settings": {
															"description": "Account settings",
															"properties": {
																"activity_log": {
																	"description": "Activity log settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable activity logging.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"antivirus": {
																	"description": "Anti-virus settings.",
																	"properties": {
																		"enabled_download_phase": {
																			"description": "Enable anti-virus scanning on downloads.",
																			"example": false,
																			"type": "boolean"
																		},
																		"enabled_upload_phase": {
																			"description": "Enable anti-virus scanning on uploads.",
																			"example": false,
																			"type": "boolean"
																		},
																		"fail_closed": {
																			"description": "Block requests for files that cannot be scanned.",
																			"example": false,
																			"type": "boolean"
																		},
																		"notification_settings": {
																			"description": "Configure a message to display on the user's device when an antivirus search is performed.",
																			"properties": {
																				"enabled": {
																					"description": "Set notification on",
																					"type": "boolean"
																				},
																				"msg": {
																					"description": "Customize the message shown in the notification.",
																					"type": "string"
																				},
																				"support_url": {
																					"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		}
																	},
																	"type": "object"
																},
																"block_page": {
																	"description": "Block page layout settings.",
																	"properties": {
																		"background_color": {
																			"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
																			"type": "string"
																		},
																		"enabled": {
																			"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean"
																		},
																		"footer_text": {
																			"description": "If mode is customized_block_page: block page footer text.",
																			"example": "--footer--",
																			"type": "string"
																		},
																		"header_text": {
																			"description": "If mode is customized_block_page: block page header text.",
																			"example": "--header--",
																			"type": "string"
																		},
																		"include_context": {
																			"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
																			"type": "boolean"
																		},
																		"logo_path": {
																			"description": "If mode is customized_block_page: full URL to the logo file.",
																			"example": "https://logos.com/a.png",
																			"type": "string"
																		},
																		"mailto_address": {
																			"description": "If mode is customized_block_page: admin email for users to contact.",
																			"example": "admin@example.com",
																			"type": "string"
																		},
																		"mailto_subject": {
																			"description": "If mode is customized_block_page: subject line for emails created from block page.",
																			"example": "Blocked User Inquiry",
																			"type": "string"
																		},
																		"mode": {
																			"default": "customized_block_page",
																			"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
																			"enum": [
																				"customized_block_page",
																				"redirect_uri"
																			],
																			"type": "string"
																		},
																		"name": {
																			"description": "If mode is customized_block_page: block page title.",
																			"example": "Cloudflare",
																			"type": "string"
																		},
																		"suppress_footer": {
																			"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
																			"example": false,
																			"type": "boolean"
																		},
																		"target_uri": {
																			"description": "If mode is redirect_uri: URI to which the user should be redirected.",
																			"format": "uri",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"body_scanning": {
																	"description": "DLP body scanning settings.",
																	"properties": {
																		"inspection_mode": {
																			"description": "Set the inspection mode to either `deep` or `shallow`.",
																			"example": "deep",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"browser_isolation": {
																	"description": "Browser isolation settings.",
																	"properties": {
																		"non_identity_enabled": {
																			"description": "Enable non-identity onramp support for Browser Isolation.",
																			"example": true,
																			"type": "boolean"
																		},
																		"url_browser_isolation_enabled": {
																			"description": "Enable Clientless Browser Isolation.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"certificate": {
																	"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
																	"properties": {
																		"id": {
																			"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string"
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"custom_certificate": {
																	"deprecated": true,
																	"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
																	"properties": {
																		"binding_status": {
																			"description": "Certificate status (internal).",
																			"example": "pending_deployment",
																			"readOnly": true,
																			"type": "string"
																		},
																		"enabled": {
																			"description": "Enable use of custom certificate authority for signing Gateway traffic.",
																			"example": true,
																			"type": "boolean"
																		},
																		"id": {
																			"description": "UUID of certificate (ID from MTLS certificate store).",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string"
																		},
																		"updated_at": {
																			"format": "date-time",
																			"readOnly": true,
																			"type": "string"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"type": "object"
																},
																"extended_email_matching": {
																	"description": "Extended e-mail matching settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"fips": {
																	"description": "FIPS settings.",
																	"properties": {
																		"tls": {
																			"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"protocol_detection": {
																	"description": "Protocol Detection settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable detecting protocol on initial bytes of client traffic.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"sandbox": {
																	"description": "Sandbox settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable sandbox.",
																			"example": true,
																			"type": "boolean"
																		},
																		"fallback_action": {
																			"description": "Action to take when the file cannot be scanned.",
																			"enum": [
																				"allow",
																				"block"
																			],
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"tls_decrypt": {
																	"description": "TLS interception settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable inspecting encrypted HTTP traffic.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														}
													}
												},
												{
													"properties": {
														"created_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string"
														},
														"updated_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string"
														}
													}
												}
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update Zero Trust account configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "Account settings",
															"properties": {
																"settings": {
																	"description": "Account settings",
																	"properties": {
																		"activity_log": {
																			"description": "Activity log settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable activity logging.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"antivirus": {
																			"description": "Anti-virus settings.",
																			"properties": {
																				"enabled_download_phase": {
																					"description": "Enable anti-virus scanning on downloads.",
																					"example": false,
																					"type": "boolean"
																				},
																				"enabled_upload_phase": {
																					"description": "Enable anti-virus scanning on uploads.",
																					"example": false,
																					"type": "boolean"
																				},
																				"fail_closed": {
																					"description": "Block requests for files that cannot be scanned.",
																					"example": false,
																					"type": "boolean"
																				},
																				"notification_settings": {
																					"description": "Configure a message to display on the user's device when an antivirus search is performed.",
																					"properties": {
																						"enabled": {
																							"description": "Set notification on",
																							"type": "boolean"
																						},
																						"msg": {
																							"description": "Customize the message shown in the notification.",
																							"type": "string"
																						},
																						"support_url": {
																							"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
																							"type": "string"
																						}
																					},
																					"type": "object"
																				}
																			},
																			"type": "object"
																		},
																		"block_page": {
																			"description": "Block page layout settings.",
																			"properties": {
																				"background_color": {
																					"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
																					"type": "string"
																				},
																				"enabled": {
																					"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean"
																				},
																				"footer_text": {
																					"description": "If mode is customized_block_page: block page footer text.",
																					"example": "--footer--",
																					"type": "string"
																				},
																				"header_text": {
																					"description": "If mode is customized_block_page: block page header text.",
																					"example": "--header--",
																					"type": "string"
																				},
																				"include_context": {
																					"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
																					"type": "boolean"
																				},
																				"logo_path": {
																					"description": "If mode is customized_block_page: full URL to the logo file.",
																					"example": "https://logos.com/a.png",
																					"type": "string"
																				},
																				"mailto_address": {
																					"description": "If mode is customized_block_page: admin email for users to contact.",
																					"example": "admin@example.com",
																					"type": "string"
																				},
																				"mailto_subject": {
																					"description": "If mode is customized_block_page: subject line for emails created from block page.",
																					"example": "Blocked User Inquiry",
																					"type": "string"
																				},
																				"mode": {
																					"default": "customized_block_page",
																					"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
																					"enum": [
																						"customized_block_page",
																						"redirect_uri"
																					],
																					"type": "string"
																				},
																				"name": {
																					"description": "If mode is customized_block_page: block page title.",
																					"example": "Cloudflare",
																					"type": "string"
																				},
																				"suppress_footer": {
																					"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
																					"example": false,
																					"type": "boolean"
																				},
																				"target_uri": {
																					"description": "If mode is redirect_uri: URI to which the user should be redirected.",
																					"format": "uri",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"body_scanning": {
																			"description": "DLP body scanning settings.",
																			"properties": {
																				"inspection_mode": {
																					"description": "Set the inspection mode to either `deep` or `shallow`.",
																					"example": "deep",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"browser_isolation": {
																			"description": "Browser isolation settings.",
																			"properties": {
																				"non_identity_enabled": {
																					"description": "Enable non-identity onramp support for Browser Isolation.",
																					"example": true,
																					"type": "boolean"
																				},
																				"url_browser_isolation_enabled": {
																					"description": "Enable Clientless Browser Isolation.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"certificate": {
																			"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
																			"properties": {
																				"id": {
																					"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string"
																				}
																			},
																			"required": [
																				"id"
																			],
																			"type": "object"
																		},
																		"custom_certificate": {
																			"deprecated": true,
																			"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
																			"properties": {
																				"binding_status": {
																					"description": "Certificate status (internal).",
																					"example": "pending_deployment",
																					"readOnly": true,
																					"type": "string"
																				},
																				"enabled": {
																					"description": "Enable use of custom certificate authority for signing Gateway traffic.",
																					"example": true,
																					"type": "boolean"
																				},
																				"id": {
																					"description": "UUID of certificate (ID from MTLS certificate store).",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string"
																				},
																				"updated_at": {
																					"format": "date-time",
																					"readOnly": true,
																					"type": "string"
																				}
																			},
																			"required": [
																				"enabled"
																			],
																			"type": "object"
																		},
																		"extended_email_matching": {
																			"description": "Extended e-mail matching settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"fips": {
																			"description": "FIPS settings.",
																			"properties": {
																				"tls": {
																					"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"protocol_detection": {
																			"description": "Protocol Detection settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable detecting protocol on initial bytes of client traffic.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"sandbox": {
																			"description": "Sandbox settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable sandbox.",
																					"example": true,
																					"type": "boolean"
																				},
																				"fallback_action": {
																					"description": "Action to take when the file cannot be scanned.",
																					"enum": [
																						"allow",
																						"block"
																					],
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"tls_decrypt": {
																			"description": "TLS interception settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable inspecting encrypted HTTP traffic.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		}
																	},
																	"type": "object"
																}
															}
														},
														{
															"properties": {
																"created_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"type": "string"
																},
																"updated_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"type": "string"
																}
															}
														}
													],
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Zero Trust account configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Patch Zero Trust account configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"POST /accounts/{account_id}/gateway": {
		"description": "Creates a Zero Trust account with an existing Cloudflare account.",
		"operationId": "zero-trust-accounts-create-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"gateway_tag": {
													"description": "Gateway internal ID.",
													"example": "f174e90afafe4643bbbc4a0ed4fc8415",
													"maxLength": 32,
													"type": "string"
												},
												"id": {
													"description": "Cloudflare account ID.",
													"example": "699d98642c564d2e855e9661899b7252",
													"maxLength": 32,
													"type": "string"
												},
												"provider_name": {
													"description": "The name of the provider. Usually Cloudflare.",
													"example": "Cloudflare",
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create Zero Trust account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"type": "object"
								},
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gateway_tag": {
															"description": "Gateway internal ID.",
															"example": "f174e90afafe4643bbbc4a0ed4fc8415",
															"maxLength": 32,
															"type": "string"
														},
														"id": {
															"description": "Cloudflare account ID.",
															"example": "699d98642c564d2e855e9661899b7252",
															"maxLength": 32,
															"type": "string"
														},
														"provider_name": {
															"description": "The name of the provider. Usually Cloudflare.",
															"example": "Cloudflare",
															"type": "string"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Zero Trust account response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/settings": {
		"description": "Updates the current device settings for a Zero Trust account.",
		"operationId": "zero-trust-accounts-update-device-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"disable_for_time": {
								"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
								"type": "number"
							},
							"gateway_proxy_enabled": {
								"description": "Enable gateway proxy filtering on TCP.",
								"example": true,
								"type": "boolean"
							},
							"gateway_udp_proxy_enabled": {
								"description": "Enable gateway proxy filtering on UDP.",
								"example": true,
								"type": "boolean"
							},
							"root_certificate_installation_enabled": {
								"description": "Enable installation of cloudflare managed root certificate.",
								"example": true,
								"type": "boolean"
							},
							"use_zt_virtual_ip": {
								"description": "Enable using CGNAT virtual IPv4.",
								"example": true,
								"type": "boolean"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
													"type": "number"
												},
												"gateway_proxy_enabled": {
													"description": "Enable gateway proxy filtering on TCP.",
													"example": true,
													"type": "boolean"
												},
												"gateway_udp_proxy_enabled": {
													"description": "Enable gateway proxy filtering on UDP.",
													"example": true,
													"type": "boolean"
												},
												"root_certificate_installation_enabled": {
													"description": "Enable installation of cloudflare managed root certificate.",
													"example": true,
													"type": "boolean"
												},
												"use_zt_virtual_ip": {
													"description": "Enable using CGNAT virtual IPv4.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update device settings for a Zero Trust account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
															"type": "number"
														},
														"gateway_proxy_enabled": {
															"description": "Enable gateway proxy filtering on TCP.",
															"example": true,
															"type": "boolean"
														},
														"gateway_udp_proxy_enabled": {
															"description": "Enable gateway proxy filtering on UDP.",
															"example": true,
															"type": "boolean"
														},
														"root_certificate_installation_enabled": {
															"description": "Enable installation of cloudflare managed root certificate.",
															"example": true,
															"type": "boolean"
														},
														"use_zt_virtual_ip": {
															"description": "Enable using CGNAT virtual IPv4.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update device settings for a Zero Trust account response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update device settings for a Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/gateway/configuration": {
		"description": "Updates the current Zero Trust account configuration.",
		"operationId": "zero-trust-accounts-update-zero-trust-account-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Account settings",
						"properties": {
							"settings": {
								"description": "Account settings",
								"properties": {
									"activity_log": {
										"description": "Activity log settings.",
										"properties": {
											"enabled": {
												"description": "Enable activity logging.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"antivirus": {
										"description": "Anti-virus settings.",
										"properties": {
											"enabled_download_phase": {
												"description": "Enable anti-virus scanning on downloads.",
												"example": false,
												"type": "boolean"
											},
											"enabled_upload_phase": {
												"description": "Enable anti-virus scanning on uploads.",
												"example": false,
												"type": "boolean"
											},
											"fail_closed": {
												"description": "Block requests for files that cannot be scanned.",
												"example": false,
												"type": "boolean"
											},
											"notification_settings": {
												"description": "Configure a message to display on the user's device when an antivirus search is performed.",
												"properties": {
													"enabled": {
														"description": "Set notification on",
														"type": "boolean"
													},
													"msg": {
														"description": "Customize the message shown in the notification.",
														"type": "string"
													},
													"support_url": {
														"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"type": "object"
									},
									"block_page": {
										"description": "Block page layout settings.",
										"properties": {
											"background_color": {
												"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
												"type": "string"
											},
											"enabled": {
												"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
												"example": true,
												"type": "boolean"
											},
											"footer_text": {
												"description": "If mode is customized_block_page: block page footer text.",
												"example": "--footer--",
												"type": "string"
											},
											"header_text": {
												"description": "If mode is customized_block_page: block page header text.",
												"example": "--header--",
												"type": "string"
											},
											"include_context": {
												"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
												"type": "boolean"
											},
											"logo_path": {
												"description": "If mode is customized_block_page: full URL to the logo file.",
												"example": "https://logos.com/a.png",
												"type": "string"
											},
											"mailto_address": {
												"description": "If mode is customized_block_page: admin email for users to contact.",
												"example": "admin@example.com",
												"type": "string"
											},
											"mailto_subject": {
												"description": "If mode is customized_block_page: subject line for emails created from block page.",
												"example": "Blocked User Inquiry",
												"type": "string"
											},
											"mode": {
												"default": "customized_block_page",
												"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
												"enum": [
													"customized_block_page",
													"redirect_uri"
												],
												"type": "string"
											},
											"name": {
												"description": "If mode is customized_block_page: block page title.",
												"example": "Cloudflare",
												"type": "string"
											},
											"suppress_footer": {
												"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
												"example": false,
												"type": "boolean"
											},
											"target_uri": {
												"description": "If mode is redirect_uri: URI to which the user should be redirected.",
												"format": "uri",
												"type": "string"
											}
										},
										"type": "object"
									},
									"body_scanning": {
										"description": "DLP body scanning settings.",
										"properties": {
											"inspection_mode": {
												"description": "Set the inspection mode to either `deep` or `shallow`.",
												"example": "deep",
												"type": "string"
											}
										},
										"type": "object"
									},
									"browser_isolation": {
										"description": "Browser isolation settings.",
										"properties": {
											"non_identity_enabled": {
												"description": "Enable non-identity onramp support for Browser Isolation.",
												"example": true,
												"type": "boolean"
											},
											"url_browser_isolation_enabled": {
												"description": "Enable Clientless Browser Isolation.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"certificate": {
										"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
										"properties": {
											"id": {
												"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string"
											}
										},
										"required": [
											"id"
										],
										"type": "object"
									},
									"custom_certificate": {
										"deprecated": true,
										"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
										"properties": {
											"binding_status": {
												"description": "Certificate status (internal).",
												"example": "pending_deployment",
												"readOnly": true,
												"type": "string"
											},
											"enabled": {
												"description": "Enable use of custom certificate authority for signing Gateway traffic.",
												"example": true,
												"type": "boolean"
											},
											"id": {
												"description": "UUID of certificate (ID from MTLS certificate store).",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string"
											},
											"updated_at": {
												"format": "date-time",
												"readOnly": true,
												"type": "string"
											}
										},
										"required": [
											"enabled"
										],
										"type": "object"
									},
									"extended_email_matching": {
										"description": "Extended e-mail matching settings.",
										"properties": {
											"enabled": {
												"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"fips": {
										"description": "FIPS settings.",
										"properties": {
											"tls": {
												"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"protocol_detection": {
										"description": "Protocol Detection settings.",
										"properties": {
											"enabled": {
												"description": "Enable detecting protocol on initial bytes of client traffic.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									},
									"sandbox": {
										"description": "Sandbox settings.",
										"properties": {
											"enabled": {
												"description": "Enable sandbox.",
												"example": true,
												"type": "boolean"
											},
											"fallback_action": {
												"description": "Action to take when the file cannot be scanned.",
												"enum": [
													"allow",
													"block"
												],
												"type": "string"
											}
										},
										"type": "object"
									},
									"tls_decrypt": {
										"description": "TLS interception settings.",
										"properties": {
											"enabled": {
												"description": "Enable inspecting encrypted HTTP traffic.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Account settings",
													"properties": {
														"settings": {
															"description": "Account settings",
															"properties": {
																"activity_log": {
																	"description": "Activity log settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable activity logging.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"antivirus": {
																	"description": "Anti-virus settings.",
																	"properties": {
																		"enabled_download_phase": {
																			"description": "Enable anti-virus scanning on downloads.",
																			"example": false,
																			"type": "boolean"
																		},
																		"enabled_upload_phase": {
																			"description": "Enable anti-virus scanning on uploads.",
																			"example": false,
																			"type": "boolean"
																		},
																		"fail_closed": {
																			"description": "Block requests for files that cannot be scanned.",
																			"example": false,
																			"type": "boolean"
																		},
																		"notification_settings": {
																			"description": "Configure a message to display on the user's device when an antivirus search is performed.",
																			"properties": {
																				"enabled": {
																					"description": "Set notification on",
																					"type": "boolean"
																				},
																				"msg": {
																					"description": "Customize the message shown in the notification.",
																					"type": "string"
																				},
																				"support_url": {
																					"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		}
																	},
																	"type": "object"
																},
																"block_page": {
																	"description": "Block page layout settings.",
																	"properties": {
																		"background_color": {
																			"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
																			"type": "string"
																		},
																		"enabled": {
																			"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean"
																		},
																		"footer_text": {
																			"description": "If mode is customized_block_page: block page footer text.",
																			"example": "--footer--",
																			"type": "string"
																		},
																		"header_text": {
																			"description": "If mode is customized_block_page: block page header text.",
																			"example": "--header--",
																			"type": "string"
																		},
																		"include_context": {
																			"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
																			"type": "boolean"
																		},
																		"logo_path": {
																			"description": "If mode is customized_block_page: full URL to the logo file.",
																			"example": "https://logos.com/a.png",
																			"type": "string"
																		},
																		"mailto_address": {
																			"description": "If mode is customized_block_page: admin email for users to contact.",
																			"example": "admin@example.com",
																			"type": "string"
																		},
																		"mailto_subject": {
																			"description": "If mode is customized_block_page: subject line for emails created from block page.",
																			"example": "Blocked User Inquiry",
																			"type": "string"
																		},
																		"mode": {
																			"default": "customized_block_page",
																			"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
																			"enum": [
																				"customized_block_page",
																				"redirect_uri"
																			],
																			"type": "string"
																		},
																		"name": {
																			"description": "If mode is customized_block_page: block page title.",
																			"example": "Cloudflare",
																			"type": "string"
																		},
																		"suppress_footer": {
																			"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
																			"example": false,
																			"type": "boolean"
																		},
																		"target_uri": {
																			"description": "If mode is redirect_uri: URI to which the user should be redirected.",
																			"format": "uri",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"body_scanning": {
																	"description": "DLP body scanning settings.",
																	"properties": {
																		"inspection_mode": {
																			"description": "Set the inspection mode to either `deep` or `shallow`.",
																			"example": "deep",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"browser_isolation": {
																	"description": "Browser isolation settings.",
																	"properties": {
																		"non_identity_enabled": {
																			"description": "Enable non-identity onramp support for Browser Isolation.",
																			"example": true,
																			"type": "boolean"
																		},
																		"url_browser_isolation_enabled": {
																			"description": "Enable Clientless Browser Isolation.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"certificate": {
																	"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
																	"properties": {
																		"id": {
																			"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string"
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object"
																},
																"custom_certificate": {
																	"deprecated": true,
																	"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
																	"properties": {
																		"binding_status": {
																			"description": "Certificate status (internal).",
																			"example": "pending_deployment",
																			"readOnly": true,
																			"type": "string"
																		},
																		"enabled": {
																			"description": "Enable use of custom certificate authority for signing Gateway traffic.",
																			"example": true,
																			"type": "boolean"
																		},
																		"id": {
																			"description": "UUID of certificate (ID from MTLS certificate store).",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string"
																		},
																		"updated_at": {
																			"format": "date-time",
																			"readOnly": true,
																			"type": "string"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"type": "object"
																},
																"extended_email_matching": {
																	"description": "Extended e-mail matching settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"fips": {
																	"description": "FIPS settings.",
																	"properties": {
																		"tls": {
																			"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"protocol_detection": {
																	"description": "Protocol Detection settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable detecting protocol on initial bytes of client traffic.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																},
																"sandbox": {
																	"description": "Sandbox settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable sandbox.",
																			"example": true,
																			"type": "boolean"
																		},
																		"fallback_action": {
																			"description": "Action to take when the file cannot be scanned.",
																			"enum": [
																				"allow",
																				"block"
																			],
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"tls_decrypt": {
																	"description": "TLS interception settings.",
																	"properties": {
																		"enabled": {
																			"description": "Enable inspecting encrypted HTTP traffic.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														}
													}
												},
												{
													"properties": {
														"created_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string"
														},
														"updated_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"type": "string"
														}
													}
												}
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update Zero Trust account configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "Account settings",
															"properties": {
																"settings": {
																	"description": "Account settings",
																	"properties": {
																		"activity_log": {
																			"description": "Activity log settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable activity logging.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"antivirus": {
																			"description": "Anti-virus settings.",
																			"properties": {
																				"enabled_download_phase": {
																					"description": "Enable anti-virus scanning on downloads.",
																					"example": false,
																					"type": "boolean"
																				},
																				"enabled_upload_phase": {
																					"description": "Enable anti-virus scanning on uploads.",
																					"example": false,
																					"type": "boolean"
																				},
																				"fail_closed": {
																					"description": "Block requests for files that cannot be scanned.",
																					"example": false,
																					"type": "boolean"
																				},
																				"notification_settings": {
																					"description": "Configure a message to display on the user's device when an antivirus search is performed.",
																					"properties": {
																						"enabled": {
																							"description": "Set notification on",
																							"type": "boolean"
																						},
																						"msg": {
																							"description": "Customize the message shown in the notification.",
																							"type": "string"
																						},
																						"support_url": {
																							"description": "Optional URL to direct users to additional information. If not set, the notification will open a block page.",
																							"type": "string"
																						}
																					},
																					"type": "object"
																				}
																			},
																			"type": "object"
																		},
																		"block_page": {
																			"description": "Block page layout settings.",
																			"properties": {
																				"background_color": {
																					"description": "If mode is customized_block_page: block page background color in #rrggbb format.",
																					"type": "string"
																				},
																				"enabled": {
																					"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean"
																				},
																				"footer_text": {
																					"description": "If mode is customized_block_page: block page footer text.",
																					"example": "--footer--",
																					"type": "string"
																				},
																				"header_text": {
																					"description": "If mode is customized_block_page: block page header text.",
																					"example": "--header--",
																					"type": "string"
																				},
																				"include_context": {
																					"description": "If mode is redirect_uri: when enabled, context will be appended to target_uri as query parameters.",
																					"type": "boolean"
																				},
																				"logo_path": {
																					"description": "If mode is customized_block_page: full URL to the logo file.",
																					"example": "https://logos.com/a.png",
																					"type": "string"
																				},
																				"mailto_address": {
																					"description": "If mode is customized_block_page: admin email for users to contact.",
																					"example": "admin@example.com",
																					"type": "string"
																				},
																				"mailto_subject": {
																					"description": "If mode is customized_block_page: subject line for emails created from block page.",
																					"example": "Blocked User Inquiry",
																					"type": "string"
																				},
																				"mode": {
																					"default": "customized_block_page",
																					"description": "Controls whether the user is redirected to a Cloudflare-hosted block page or to a customer-provided URI.",
																					"enum": [
																						"customized_block_page",
																						"redirect_uri"
																					],
																					"type": "string"
																				},
																				"name": {
																					"description": "If mode is customized_block_page: block page title.",
																					"example": "Cloudflare",
																					"type": "string"
																				},
																				"suppress_footer": {
																					"description": "If mode is customized_block_page: suppress detailed info at the bottom of the block page.",
																					"example": false,
																					"type": "boolean"
																				},
																				"target_uri": {
																					"description": "If mode is redirect_uri: URI to which the user should be redirected.",
																					"format": "uri",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"body_scanning": {
																			"description": "DLP body scanning settings.",
																			"properties": {
																				"inspection_mode": {
																					"description": "Set the inspection mode to either `deep` or `shallow`.",
																					"example": "deep",
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"browser_isolation": {
																			"description": "Browser isolation settings.",
																			"properties": {
																				"non_identity_enabled": {
																					"description": "Enable non-identity onramp support for Browser Isolation.",
																					"example": true,
																					"type": "boolean"
																				},
																				"url_browser_isolation_enabled": {
																					"description": "Enable Clientless Browser Isolation.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"certificate": {
																			"description": "Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used.",
																			"properties": {
																				"id": {
																					"description": "UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string"
																				}
																			},
																			"required": [
																				"id"
																			],
																			"type": "object"
																		},
																		"custom_certificate": {
																			"deprecated": true,
																			"description": "Custom certificate settings for BYO-PKI. (deprecated and replaced by `certificate`)",
																			"properties": {
																				"binding_status": {
																					"description": "Certificate status (internal).",
																					"example": "pending_deployment",
																					"readOnly": true,
																					"type": "string"
																				},
																				"enabled": {
																					"description": "Enable use of custom certificate authority for signing Gateway traffic.",
																					"example": true,
																					"type": "boolean"
																				},
																				"id": {
																					"description": "UUID of certificate (ID from MTLS certificate store).",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string"
																				},
																				"updated_at": {
																					"format": "date-time",
																					"readOnly": true,
																					"type": "string"
																				}
																			},
																			"required": [
																				"enabled"
																			],
																			"type": "object"
																		},
																		"extended_email_matching": {
																			"description": "Extended e-mail matching settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"fips": {
																			"description": "FIPS settings.",
																			"properties": {
																				"tls": {
																					"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"protocol_detection": {
																			"description": "Protocol Detection settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable detecting protocol on initial bytes of client traffic.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		},
																		"sandbox": {
																			"description": "Sandbox settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable sandbox.",
																					"example": true,
																					"type": "boolean"
																				},
																				"fallback_action": {
																					"description": "Action to take when the file cannot be scanned.",
																					"enum": [
																						"allow",
																						"block"
																					],
																					"type": "string"
																				}
																			},
																			"type": "object"
																		},
																		"tls_decrypt": {
																			"description": "TLS interception settings.",
																			"properties": {
																				"enabled": {
																					"description": "Enable inspecting encrypted HTTP traffic.",
																					"example": true,
																					"type": "boolean"
																				}
																			},
																			"type": "object"
																		}
																	},
																	"type": "object"
																}
															}
														},
														{
															"properties": {
																"created_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"type": "string"
																},
																"updated_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"type": "string"
																}
															}
														}
													],
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Zero Trust account configuration response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Zero Trust account configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/gateway/logging": {
		"description": "Updates logging settings for the current Zero Trust account.",
		"operationId": "zero-trust-accounts-update-logging-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"redact_pii": {
								"description": "Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).",
								"example": true,
								"type": "boolean"
							},
							"settings_by_rule_type": {
								"description": "Logging settings by rule type.",
								"properties": {
									"dns": {
										"description": "Logging settings for DNS firewall.",
										"type": "object"
									},
									"http": {
										"description": "Logging settings for HTTP/HTTPS firewall.",
										"type": "object"
									},
									"l4": {
										"description": "Logging settings for Network firewall.",
										"type": "object"
									}
								},
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"redact_pii": {
													"description": "Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).",
													"example": true,
													"type": "boolean"
												},
												"settings_by_rule_type": {
													"description": "Logging settings by rule type.",
													"properties": {
														"dns": {
															"description": "Logging settings for DNS firewall.",
															"type": "object"
														},
														"http": {
															"description": "Logging settings for HTTP/HTTPS firewall.",
															"type": "object"
														},
														"l4": {
															"description": "Logging settings for Network firewall.",
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update logging settings for the Zero Trust account response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"redact_pii": {
															"description": "Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).",
															"example": true,
															"type": "boolean"
														},
														"settings_by_rule_type": {
															"description": "Logging settings by rule type.",
															"properties": {
																"dns": {
																	"description": "Logging settings for DNS firewall.",
																	"type": "object"
																},
																"http": {
																	"description": "Logging settings for HTTP/HTTPS firewall.",
																	"type": "object"
																},
																"l4": {
																	"description": "Logging settings for Network firewall.",
																	"type": "object"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update logging settings for the Zero Trust account response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Zero Trust account logging settings",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	}
}