{
	"DELETE /accounts/{account_id}/devices/settings": {
		"description": "Resets the current device settings for a Zero Trust account.",
		"operationId": "zero-trust-accounts-delete-device-settings-for-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
													"type": "number"
												},
												"gateway_proxy_enabled": {
													"description": "Enable gateway proxy filtering on TCP.",
													"example": true,
													"type": "boolean"
												},
												"gateway_udp_proxy_enabled": {
													"description": "Enable gateway proxy filtering on UDP.",
													"example": true,
													"type": "boolean"
												},
												"root_certificate_installation_enabled": {
													"description": "Enable installation of cloudflare managed root certificate.",
													"example": true,
													"type": "boolean"
												},
												"use_zt_virtual_ip": {
													"description": "Enable using CGNAT virtual IPv4.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Reset response for device settings for a Zero Trust account."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
															"type": "number"
														},
														"gateway_proxy_enabled": {
															"description": "Enable gateway proxy filtering on TCP.",
															"example": true,
															"type": "boolean"
														},
														"gateway_udp_proxy_enabled": {
															"description": "Enable gateway proxy filtering on UDP.",
															"example": true,
															"type": "boolean"
														},
														"root_certificate_installation_enabled": {
															"description": "Enable installation of cloudflare managed root certificate.",
															"example": true,
															"type": "boolean"
														},
														"use_zt_virtual_ip": {
															"description": "Enable using CGNAT virtual IPv4.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Reset failure response device settings for a Zero Trust account."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Reset device settings for a Zero Trust account with defaults. This turns off all proxying.",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/settings": {
		"description": "Describes the current device settings for a Zero Trust account.",
		"operationId": "zero-trust-accounts-get-device-settings-for-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
													"type": "number"
												},
												"gateway_proxy_enabled": {
													"description": "Enable gateway proxy filtering on TCP.",
													"example": true,
													"type": "boolean"
												},
												"gateway_udp_proxy_enabled": {
													"description": "Enable gateway proxy filtering on UDP.",
													"example": true,
													"type": "boolean"
												},
												"root_certificate_installation_enabled": {
													"description": "Enable installation of cloudflare managed root certificate.",
													"example": true,
													"type": "boolean"
												},
												"use_zt_virtual_ip": {
													"description": "Enable using CGNAT virtual IPv4.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get device settings for a Zero Trust account response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
															"type": "number"
														},
														"gateway_proxy_enabled": {
															"description": "Enable gateway proxy filtering on TCP.",
															"example": true,
															"type": "boolean"
														},
														"gateway_udp_proxy_enabled": {
															"description": "Enable gateway proxy filtering on UDP.",
															"example": true,
															"type": "boolean"
														},
														"root_certificate_installation_enabled": {
															"description": "Enable installation of cloudflare managed root certificate.",
															"example": true,
															"type": "boolean"
														},
														"use_zt_virtual_ip": {
															"description": "Enable using CGNAT virtual IPv4.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get device settings for a Zero Trust account response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get device settings for a Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway": {
		"description": "Retrieve information about the current Zero Trust account.",
		"operationId": "zero-trust-accounts-get-zero-trust-account-information",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Indicate whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"gateway_tag": {
													"description": "Specify the gateway internal ID.",
													"example": "f174e90afafe4643bbbc4a0ed4fc8415",
													"maxLength": 32,
													"type": "string"
												},
												"id": {
													"description": "Specify the Cloudflare account ID.",
													"example": "699d98642c564d2e855e9661899b7252",
													"maxLength": 32,
													"type": "string"
												},
												"provider_name": {
													"description": "Specify the provider name (usually Cloudflare).",
													"example": "Cloudflare",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Zero Trust account information response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"type": "object"
								},
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Indicate whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gateway_tag": {
															"description": "Specify the gateway internal ID.",
															"example": "f174e90afafe4643bbbc4a0ed4fc8415",
															"maxLength": 32,
															"type": "string"
														},
														"id": {
															"description": "Specify the Cloudflare account ID.",
															"example": "699d98642c564d2e855e9661899b7252",
															"maxLength": 32,
															"type": "string"
														},
														"provider_name": {
															"description": "Specify the provider name (usually Cloudflare).",
															"example": "Cloudflare",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Zero Trust account information response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Zero Trust account information",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway/configuration": {
		"description": "Retrieve the current Zero Trust account configuration.",
		"operationId": "zero-trust-accounts-get-zero-trust-account-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Indicate whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Specify account settings.",
													"properties": {
														"settings": {
															"description": "Specify account settings.",
															"properties": {
																"activity_log": {
																	"description": "Specify activity log settings.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to log activity.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"antivirus": {
																	"description": "Specify anti-virus settings.",
																	"nullable": true,
																	"properties": {
																		"enabled_download_phase": {
																			"description": "Specify whether to enable anti-virus scanning on downloads.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"enabled_upload_phase": {
																			"description": "Specify whether to enable anti-virus scanning on uploads.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"fail_closed": {
																			"description": "Specify whether to block requests for unscannable files.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"notification_settings": {
																			"description": "Configure the message the user's device shows during an antivirus scan.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable notifications.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"include_context": {
																					"description": "Specify whether to include context information as query parameters.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"msg": {
																					"description": "Specify the message to show in the notification.",
																					"type": "string",
																					"x-auditable": true
																				},
																				"support_url": {
																					"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "computed_optional"
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"block_page": {
																	"description": "Specify block page layout settings.",
																	"nullable": true,
																	"properties": {
																		"background_color": {
																			"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Specify whether to enable the custom block page.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"footer_text": {
																			"description": "Specify the block page footer text when the mode is customized_block_page.",
																			"example": "--footer--",
																			"type": "string",
																			"x-auditable": true
																		},
																		"header_text": {
																			"description": "Specify the block page header text when the mode is customized_block_page.",
																			"example": "--header--",
																			"type": "string",
																			"x-auditable": true
																		},
																		"include_context": {
																			"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"logo_path": {
																			"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
																			"example": "https://logos.com/a.png",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mailto_address": {
																			"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
																			"example": "admin@example.com",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mailto_subject": {
																			"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
																			"example": "Blocked User Inquiry",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mode": {
																			"default": "",
																			"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
																			"enum": [
																				"",
																				"customized_block_page",
																				"redirect_uri"
																			],
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"name": {
																			"description": "Specify the block page title when the mode is customized_block_page.",
																			"example": "Cloudflare",
																			"type": "string",
																			"x-auditable": true
																		},
																		"read_only": {
																			"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																			"nullable": true,
																			"readOnly": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"source_account": {
																			"description": "Indicate the account tag of the account that shared this setting.",
																			"nullable": true,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"suppress_footer": {
																			"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
																			"example": false,
																			"type": "boolean"
																		},
																		"target_uri": {
																			"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
																			"format": "uri",
																			"type": "string",
																			"x-auditable": true
																		},
																		"version": {
																			"description": "Indicate the version number of the setting.",
																			"example": 1,
																			"nullable": true,
																			"readOnly": true,
																			"type": "integer",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"body_scanning": {
																	"description": "Specify the DLP inspection mode.",
																	"nullable": true,
																	"properties": {
																		"inspection_mode": {
																			"description": "Specify the inspection mode as either `deep` or `shallow`.",
																			"enum": [
																				"deep",
																				"shallow"
																			],
																			"example": "deep",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"browser_isolation": {
																	"description": "Specify Clientless Browser Isolation settings.",
																	"nullable": true,
																	"properties": {
																		"non_identity_enabled": {
																			"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"url_browser_isolation_enabled": {
																			"description": "Specify whether to enable Clientless Browser Isolation.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"certificate": {
																	"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
																	"nullable": true,
																	"properties": {
																		"id": {
																			"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"custom_certificate": {
																	"deprecated": true,
																	"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
																	"nullable": true,
																	"properties": {
																		"binding_status": {
																			"description": "Indicate the internal certificate status.",
																			"example": "pending_deployment",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"id": {
																			"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string",
																			"x-auditable": true
																		},
																		"updated_at": {
																			"format": "date-time",
																			"readOnly": true,
																			"type": "string"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"extended_email_matching": {
																	"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"read_only": {
																			"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																			"readOnly": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"source_account": {
																			"description": "Indicate the account tag of the account that shared this setting.",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"version": {
																			"description": "Indicate the version number of the setting.",
																			"example": 1,
																			"readOnly": true,
																			"type": "integer",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"fips": {
																	"description": "Specify FIPS settings.",
																	"nullable": true,
																	"properties": {
																		"tls": {
																			"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"host_selector": {
																	"description": "Enable host selection in egress policies.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to enable filtering via hosts for egress policies.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"inspection": {
																	"description": "Define the proxy inspection mode.",
																	"nullable": true,
																	"properties": {
																		"mode": {
																			"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
																			"enum": [
																				"static",
																				"dynamic"
																			],
																			"example": "static",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"protocol_detection": {
																	"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"sandbox": {
																	"description": "Specify whether to enable the sandbox.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to enable the sandbox.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"fallback_action": {
																			"description": "Specify the action to take when the system cannot scan the file.",
																			"enum": [
																				"allow",
																				"block"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"tls_decrypt": {
																	"description": "Specify whether to inspect encrypted HTTP traffic.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to inspect encrypted HTTP traffic.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																}
															},
															"type": "object"
														}
													}
												},
												{
													"properties": {
														"created_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"updated_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Zero Trust account configuration response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Indicate whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "Specify account settings.",
															"properties": {
																"settings": {
																	"description": "Specify account settings.",
																	"properties": {
																		"activity_log": {
																			"description": "Specify activity log settings.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to log activity.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"antivirus": {
																			"description": "Specify anti-virus settings.",
																			"nullable": true,
																			"properties": {
																				"enabled_download_phase": {
																					"description": "Specify whether to enable anti-virus scanning on downloads.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"enabled_upload_phase": {
																					"description": "Specify whether to enable anti-virus scanning on uploads.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"fail_closed": {
																					"description": "Specify whether to block requests for unscannable files.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"notification_settings": {
																					"description": "Configure the message the user's device shows during an antivirus scan.",
																					"nullable": true,
																					"properties": {
																						"enabled": {
																							"description": "Specify whether to enable notifications.",
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"include_context": {
																							"description": "Specify whether to include context information as query parameters.",
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"msg": {
																							"description": "Specify the message to show in the notification.",
																							"type": "string",
																							"x-auditable": true
																						},
																						"support_url": {
																							"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object",
																					"x-stainless-terraform-configurability": "computed_optional"
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"block_page": {
																			"description": "Specify block page layout settings.",
																			"nullable": true,
																			"properties": {
																				"background_color": {
																					"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
																					"type": "string",
																					"x-auditable": true
																				},
																				"enabled": {
																					"description": "Specify whether to enable the custom block page.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"footer_text": {
																					"description": "Specify the block page footer text when the mode is customized_block_page.",
																					"example": "--footer--",
																					"type": "string",
																					"x-auditable": true
																				},
																				"header_text": {
																					"description": "Specify the block page header text when the mode is customized_block_page.",
																					"example": "--header--",
																					"type": "string",
																					"x-auditable": true
																				},
																				"include_context": {
																					"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"logo_path": {
																					"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
																					"example": "https://logos.com/a.png",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mailto_address": {
																					"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
																					"example": "admin@example.com",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mailto_subject": {
																					"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
																					"example": "Blocked User Inquiry",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mode": {
																					"default": "",
																					"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
																					"enum": [
																						"",
																						"customized_block_page",
																						"redirect_uri"
																					],
																					"type": "string",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"name": {
																					"description": "Specify the block page title when the mode is customized_block_page.",
																					"example": "Cloudflare",
																					"type": "string",
																					"x-auditable": true
																				},
																				"read_only": {
																					"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																					"nullable": true,
																					"readOnly": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"source_account": {
																					"description": "Indicate the account tag of the account that shared this setting.",
																					"nullable": true,
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"suppress_footer": {
																					"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
																					"example": false,
																					"type": "boolean"
																				},
																				"target_uri": {
																					"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
																					"format": "uri",
																					"type": "string",
																					"x-auditable": true
																				},
																				"version": {
																					"description": "Indicate the version number of the setting.",
																					"example": 1,
																					"nullable": true,
																					"readOnly": true,
																					"type": "integer",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"body_scanning": {
																			"description": "Specify the DLP inspection mode.",
																			"nullable": true,
																			"properties": {
																				"inspection_mode": {
																					"description": "Specify the inspection mode as either `deep` or `shallow`.",
																					"enum": [
																						"deep",
																						"shallow"
																					],
																					"example": "deep",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"browser_isolation": {
																			"description": "Specify Clientless Browser Isolation settings.",
																			"nullable": true,
																			"properties": {
																				"non_identity_enabled": {
																					"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"url_browser_isolation_enabled": {
																					"description": "Specify whether to enable Clientless Browser Isolation.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"certificate": {
																			"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
																			"nullable": true,
																			"properties": {
																				"id": {
																					"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"id"
																			],
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"custom_certificate": {
																			"deprecated": true,
																			"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
																			"nullable": true,
																			"properties": {
																				"binding_status": {
																					"description": "Indicate the internal certificate status.",
																					"example": "pending_deployment",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"enabled": {
																					"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"id": {
																					"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string",
																					"x-auditable": true
																				},
																				"updated_at": {
																					"format": "date-time",
																					"readOnly": true,
																					"type": "string"
																				}
																			},
																			"required": [
																				"enabled"
																			],
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"extended_email_matching": {
																			"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"read_only": {
																					"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																					"readOnly": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"source_account": {
																					"description": "Indicate the account tag of the account that shared this setting.",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"version": {
																					"description": "Indicate the version number of the setting.",
																					"example": 1,
																					"readOnly": true,
																					"type": "integer",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"fips": {
																			"description": "Specify FIPS settings.",
																			"nullable": true,
																			"properties": {
																				"tls": {
																					"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"host_selector": {
																			"description": "Enable host selection in egress policies.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable filtering via hosts for egress policies.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"inspection": {
																			"description": "Define the proxy inspection mode.",
																			"nullable": true,
																			"properties": {
																				"mode": {
																					"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
																					"enum": [
																						"static",
																						"dynamic"
																					],
																					"example": "static",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"protocol_detection": {
																			"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"sandbox": {
																			"description": "Specify whether to enable the sandbox.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable the sandbox.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"fallback_action": {
																					"description": "Specify the action to take when the system cannot scan the file.",
																					"enum": [
																						"allow",
																						"block"
																					],
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"tls_decrypt": {
																			"description": "Specify whether to inspect encrypted HTTP traffic.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to inspect encrypted HTTP traffic.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		}
																	},
																	"type": "object"
																}
															}
														},
														{
															"properties": {
																"created_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"updated_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																}
															},
															"type": "object"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Zero Trust account configuration response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Zero Trust account configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway/configuration/custom_certificate": {
		"deprecated": true,
		"description": "Retrieve the current Zero Trust certificate configuration.",
		"operationId": "zero-trust-accounts-get-zero-trust-certificate-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"deprecated": true,
							"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
							"nullable": true,
							"properties": {
								"binding_status": {
									"description": "Indicate the internal certificate status.",
									"example": "pending_deployment",
									"readOnly": true,
									"type": "string",
									"x-auditable": true
								},
								"enabled": {
									"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
									"example": true,
									"nullable": true,
									"type": "boolean",
									"x-auditable": true
								},
								"id": {
									"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
									"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
									"type": "string",
									"x-auditable": true
								},
								"updated_at": {
									"format": "date-time",
									"readOnly": true,
									"type": "string"
								}
							},
							"required": [
								"enabled"
							],
							"type": "object",
							"x-stainless-terraform-configurability": "optional"
						}
					}
				},
				"description": "Zero Trust account configuration response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"deprecated": true,
									"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
									"nullable": true,
									"properties": {
										"binding_status": {
											"description": "Indicate the internal certificate status.",
											"example": "pending_deployment",
											"readOnly": true,
											"type": "string",
											"x-auditable": true
										},
										"enabled": {
											"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
											"example": true,
											"nullable": true,
											"type": "boolean",
											"x-auditable": true
										},
										"id": {
											"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
											"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
											"type": "string",
											"x-auditable": true
										},
										"updated_at": {
											"format": "date-time",
											"readOnly": true,
											"type": "string"
										}
									},
									"required": [
										"enabled"
									],
									"type": "object",
									"x-stainless-terraform-configurability": "optional"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Zero Trust account configuration response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Zero Trust certificate configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/gateway/logging": {
		"description": "Retrieve the current logging settings for the Zero Trust account.",
		"operationId": "zero-trust-accounts-get-logging-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Indicate whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"redact_pii": {
													"default": false,
													"description": "Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"settings_by_rule_type": {
													"description": "Configure logging settings for each rule type.",
													"properties": {
														"dns": {
															"allOf": [
																{
																	"properties": {
																		"log_all": {
																			"default": false,
																			"description": "Specify whether to log all requests to this service.",
																			"example": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"log_blocks": {
																			"default": false,
																			"description": "Specify whether to log only blocking requests to this service.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "Configure logging settings for DNS firewall."
														},
														"http": {
															"allOf": [
																{
																	"properties": {
																		"log_all": {
																			"default": false,
																			"description": "Specify whether to log all requests to this service.",
																			"example": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"log_blocks": {
																			"default": false,
																			"description": "Specify whether to log only blocking requests to this service.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "Configure logging settings for HTTP/HTTPS firewall."
														},
														"l4": {
															"allOf": [
																{
																	"properties": {
																		"log_all": {
																			"default": false,
																			"description": "Specify whether to log all requests to this service.",
																			"example": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"log_blocks": {
																			"default": false,
																			"description": "Specify whether to log only blocking requests to this service.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "Configure logging settings for Network firewall."
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Logging settings retrieval response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Indicate whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"redact_pii": {
															"default": false,
															"description": "Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"settings_by_rule_type": {
															"description": "Configure logging settings for each rule type.",
															"properties": {
																"dns": {
																	"allOf": [
																		{
																			"properties": {
																				"log_all": {
																					"default": false,
																					"description": "Specify whether to log all requests to this service.",
																					"example": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"log_blocks": {
																					"default": false,
																					"description": "Specify whether to log only blocking requests to this service.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		}
																	],
																	"description": "Configure logging settings for DNS firewall."
																},
																"http": {
																	"allOf": [
																		{
																			"properties": {
																				"log_all": {
																					"default": false,
																					"description": "Specify whether to log all requests to this service.",
																					"example": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"log_blocks": {
																					"default": false,
																					"description": "Specify whether to log only blocking requests to this service.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		}
																	],
																	"description": "Configure logging settings for HTTP/HTTPS firewall."
																},
																"l4": {
																	"allOf": [
																		{
																			"properties": {
																				"log_all": {
																					"default": false,
																					"description": "Specify whether to log all requests to this service.",
																					"example": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"log_blocks": {
																					"default": false,
																					"description": "Specify whether to log only blocking requests to this service.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		}
																	],
																	"description": "Configure logging settings for Network firewall."
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Logging settings retrieval response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get logging settings for the Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"PATCH /accounts/{account_id}/devices/settings": {
		"description": "Patches the current device settings for a Zero Trust account.",
		"operationId": "zero-trust-accounts-patch-device-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"disable_for_time": {
								"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
								"type": "number"
							},
							"gateway_proxy_enabled": {
								"description": "Enable gateway proxy filtering on TCP.",
								"example": true,
								"type": "boolean"
							},
							"gateway_udp_proxy_enabled": {
								"description": "Enable gateway proxy filtering on UDP.",
								"example": true,
								"type": "boolean"
							},
							"root_certificate_installation_enabled": {
								"description": "Enable installation of cloudflare managed root certificate.",
								"example": true,
								"type": "boolean"
							},
							"use_zt_virtual_ip": {
								"description": "Enable using CGNAT virtual IPv4.",
								"example": true,
								"type": "boolean"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
													"type": "number"
												},
												"gateway_proxy_enabled": {
													"description": "Enable gateway proxy filtering on TCP.",
													"example": true,
													"type": "boolean"
												},
												"gateway_udp_proxy_enabled": {
													"description": "Enable gateway proxy filtering on UDP.",
													"example": true,
													"type": "boolean"
												},
												"root_certificate_installation_enabled": {
													"description": "Enable installation of cloudflare managed root certificate.",
													"example": true,
													"type": "boolean"
												},
												"use_zt_virtual_ip": {
													"description": "Enable using CGNAT virtual IPv4.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Patch device settings for a Zero Trust account response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
															"type": "number"
														},
														"gateway_proxy_enabled": {
															"description": "Enable gateway proxy filtering on TCP.",
															"example": true,
															"type": "boolean"
														},
														"gateway_udp_proxy_enabled": {
															"description": "Enable gateway proxy filtering on UDP.",
															"example": true,
															"type": "boolean"
														},
														"root_certificate_installation_enabled": {
															"description": "Enable installation of cloudflare managed root certificate.",
															"example": true,
															"type": "boolean"
														},
														"use_zt_virtual_ip": {
															"description": "Enable using CGNAT virtual IPv4.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Patch device settings for a Zero Trust account response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Patch device settings for a Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PATCH /accounts/{account_id}/gateway/configuration": {
		"description": "Update (PATCH) a single subcollection of settings such as `antivirus`, `tls_decrypt`, `activity_log`, `block_page`, `browser_isolation`, `fips`, `body_scanning`, or `certificate` without updating the entire configuration object. This endpoint returns an error if any settings collection lacks proper configuration.",
		"operationId": "zero-trust-accounts-patch-zero-trust-account-configuration",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Specify account settings.",
						"properties": {
							"settings": {
								"description": "Specify account settings.",
								"properties": {
									"activity_log": {
										"description": "Specify activity log settings.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to log activity.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"antivirus": {
										"description": "Specify anti-virus settings.",
										"nullable": true,
										"properties": {
											"enabled_download_phase": {
												"description": "Specify whether to enable anti-virus scanning on downloads.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "computed_optional"
											},
											"enabled_upload_phase": {
												"description": "Specify whether to enable anti-virus scanning on uploads.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "computed_optional"
											},
											"fail_closed": {
												"description": "Specify whether to block requests for unscannable files.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "computed_optional"
											},
											"notification_settings": {
												"description": "Configure the message the user's device shows during an antivirus scan.",
												"nullable": true,
												"properties": {
													"enabled": {
														"description": "Specify whether to enable notifications.",
														"type": "boolean",
														"x-auditable": true
													},
													"include_context": {
														"description": "Specify whether to include context information as query parameters.",
														"type": "boolean",
														"x-auditable": true
													},
													"msg": {
														"description": "Specify the message to show in the notification.",
														"type": "string",
														"x-auditable": true
													},
													"support_url": {
														"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object",
												"x-stainless-terraform-configurability": "computed_optional"
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"block_page": {
										"description": "Specify block page layout settings.",
										"nullable": true,
										"properties": {
											"background_color": {
												"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
												"type": "string",
												"x-auditable": true
											},
											"enabled": {
												"description": "Specify whether to enable the custom block page.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"footer_text": {
												"description": "Specify the block page footer text when the mode is customized_block_page.",
												"example": "--footer--",
												"type": "string",
												"x-auditable": true
											},
											"header_text": {
												"description": "Specify the block page header text when the mode is customized_block_page.",
												"example": "--header--",
												"type": "string",
												"x-auditable": true
											},
											"include_context": {
												"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
												"type": "boolean",
												"x-auditable": true
											},
											"logo_path": {
												"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
												"example": "https://logos.com/a.png",
												"type": "string",
												"x-auditable": true
											},
											"mailto_address": {
												"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
												"example": "admin@example.com",
												"type": "string",
												"x-auditable": true
											},
											"mailto_subject": {
												"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
												"example": "Blocked User Inquiry",
												"type": "string",
												"x-auditable": true
											},
											"mode": {
												"default": "",
												"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
												"enum": [
													"",
													"customized_block_page",
													"redirect_uri"
												],
												"type": "string",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											},
											"name": {
												"description": "Specify the block page title when the mode is customized_block_page.",
												"example": "Cloudflare",
												"type": "string",
												"x-auditable": true
											},
											"read_only": {
												"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
												"nullable": true,
												"readOnly": true,
												"type": "boolean",
												"x-auditable": true
											},
											"source_account": {
												"description": "Indicate the account tag of the account that shared this setting.",
												"nullable": true,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"suppress_footer": {
												"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
												"example": false,
												"type": "boolean"
											},
											"target_uri": {
												"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
												"format": "uri",
												"type": "string",
												"x-auditable": true
											},
											"version": {
												"description": "Indicate the version number of the setting.",
												"example": 1,
												"nullable": true,
												"readOnly": true,
												"type": "integer",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"body_scanning": {
										"description": "Specify the DLP inspection mode.",
										"nullable": true,
										"properties": {
											"inspection_mode": {
												"description": "Specify the inspection mode as either `deep` or `shallow`.",
												"enum": [
													"deep",
													"shallow"
												],
												"example": "deep",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"browser_isolation": {
										"description": "Specify Clientless Browser Isolation settings.",
										"nullable": true,
										"properties": {
											"non_identity_enabled": {
												"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											},
											"url_browser_isolation_enabled": {
												"description": "Specify whether to enable Clientless Browser Isolation.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"certificate": {
										"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
										"nullable": true,
										"properties": {
											"id": {
												"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"id"
										],
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"custom_certificate": {
										"deprecated": true,
										"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
										"nullable": true,
										"properties": {
											"binding_status": {
												"description": "Indicate the internal certificate status.",
												"example": "pending_deployment",
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"enabled": {
												"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"id": {
												"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string",
												"x-auditable": true
											},
											"updated_at": {
												"format": "date-time",
												"readOnly": true,
												"type": "string"
											}
										},
										"required": [
											"enabled"
										],
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"extended_email_matching": {
										"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"read_only": {
												"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
												"readOnly": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											},
											"source_account": {
												"description": "Indicate the account tag of the account that shared this setting.",
												"readOnly": true,
												"type": "string",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											},
											"version": {
												"description": "Indicate the version number of the setting.",
												"example": 1,
												"readOnly": true,
												"type": "integer",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"fips": {
										"description": "Specify FIPS settings.",
										"nullable": true,
										"properties": {
											"tls": {
												"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"host_selector": {
										"description": "Enable host selection in egress policies.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to enable filtering via hosts for egress policies.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"inspection": {
										"description": "Define the proxy inspection mode.",
										"nullable": true,
										"properties": {
											"mode": {
												"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
												"enum": [
													"static",
													"dynamic"
												],
												"example": "static",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"protocol_detection": {
										"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"sandbox": {
										"description": "Specify whether to enable the sandbox.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to enable the sandbox.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"fallback_action": {
												"description": "Specify the action to take when the system cannot scan the file.",
												"enum": [
													"allow",
													"block"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"tls_decrypt": {
										"description": "Specify whether to inspect encrypted HTTP traffic.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to inspect encrypted HTTP traffic.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Indicate whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Specify account settings.",
													"properties": {
														"settings": {
															"description": "Specify account settings.",
															"properties": {
																"activity_log": {
																	"description": "Specify activity log settings.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to log activity.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"antivirus": {
																	"description": "Specify anti-virus settings.",
																	"nullable": true,
																	"properties": {
																		"enabled_download_phase": {
																			"description": "Specify whether to enable anti-virus scanning on downloads.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"enabled_upload_phase": {
																			"description": "Specify whether to enable anti-virus scanning on uploads.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"fail_closed": {
																			"description": "Specify whether to block requests for unscannable files.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"notification_settings": {
																			"description": "Configure the message the user's device shows during an antivirus scan.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable notifications.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"include_context": {
																					"description": "Specify whether to include context information as query parameters.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"msg": {
																					"description": "Specify the message to show in the notification.",
																					"type": "string",
																					"x-auditable": true
																				},
																				"support_url": {
																					"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "computed_optional"
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"block_page": {
																	"description": "Specify block page layout settings.",
																	"nullable": true,
																	"properties": {
																		"background_color": {
																			"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Specify whether to enable the custom block page.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"footer_text": {
																			"description": "Specify the block page footer text when the mode is customized_block_page.",
																			"example": "--footer--",
																			"type": "string",
																			"x-auditable": true
																		},
																		"header_text": {
																			"description": "Specify the block page header text when the mode is customized_block_page.",
																			"example": "--header--",
																			"type": "string",
																			"x-auditable": true
																		},
																		"include_context": {
																			"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"logo_path": {
																			"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
																			"example": "https://logos.com/a.png",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mailto_address": {
																			"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
																			"example": "admin@example.com",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mailto_subject": {
																			"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
																			"example": "Blocked User Inquiry",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mode": {
																			"default": "",
																			"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
																			"enum": [
																				"",
																				"customized_block_page",
																				"redirect_uri"
																			],
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"name": {
																			"description": "Specify the block page title when the mode is customized_block_page.",
																			"example": "Cloudflare",
																			"type": "string",
																			"x-auditable": true
																		},
																		"read_only": {
																			"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																			"nullable": true,
																			"readOnly": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"source_account": {
																			"description": "Indicate the account tag of the account that shared this setting.",
																			"nullable": true,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"suppress_footer": {
																			"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
																			"example": false,
																			"type": "boolean"
																		},
																		"target_uri": {
																			"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
																			"format": "uri",
																			"type": "string",
																			"x-auditable": true
																		},
																		"version": {
																			"description": "Indicate the version number of the setting.",
																			"example": 1,
																			"nullable": true,
																			"readOnly": true,
																			"type": "integer",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"body_scanning": {
																	"description": "Specify the DLP inspection mode.",
																	"nullable": true,
																	"properties": {
																		"inspection_mode": {
																			"description": "Specify the inspection mode as either `deep` or `shallow`.",
																			"enum": [
																				"deep",
																				"shallow"
																			],
																			"example": "deep",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"browser_isolation": {
																	"description": "Specify Clientless Browser Isolation settings.",
																	"nullable": true,
																	"properties": {
																		"non_identity_enabled": {
																			"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"url_browser_isolation_enabled": {
																			"description": "Specify whether to enable Clientless Browser Isolation.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"certificate": {
																	"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
																	"nullable": true,
																	"properties": {
																		"id": {
																			"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"custom_certificate": {
																	"deprecated": true,
																	"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
																	"nullable": true,
																	"properties": {
																		"binding_status": {
																			"description": "Indicate the internal certificate status.",
																			"example": "pending_deployment",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"id": {
																			"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string",
																			"x-auditable": true
																		},
																		"updated_at": {
																			"format": "date-time",
																			"readOnly": true,
																			"type": "string"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"extended_email_matching": {
																	"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"read_only": {
																			"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																			"readOnly": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"source_account": {
																			"description": "Indicate the account tag of the account that shared this setting.",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"version": {
																			"description": "Indicate the version number of the setting.",
																			"example": 1,
																			"readOnly": true,
																			"type": "integer",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"fips": {
																	"description": "Specify FIPS settings.",
																	"nullable": true,
																	"properties": {
																		"tls": {
																			"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"host_selector": {
																	"description": "Enable host selection in egress policies.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to enable filtering via hosts for egress policies.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"inspection": {
																	"description": "Define the proxy inspection mode.",
																	"nullable": true,
																	"properties": {
																		"mode": {
																			"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
																			"enum": [
																				"static",
																				"dynamic"
																			],
																			"example": "static",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"protocol_detection": {
																	"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"sandbox": {
																	"description": "Specify whether to enable the sandbox.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to enable the sandbox.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"fallback_action": {
																			"description": "Specify the action to take when the system cannot scan the file.",
																			"enum": [
																				"allow",
																				"block"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"tls_decrypt": {
																	"description": "Specify whether to inspect encrypted HTTP traffic.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to inspect encrypted HTTP traffic.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																}
															},
															"type": "object"
														}
													}
												},
												{
													"properties": {
														"created_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"updated_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Zero Trust account configuration response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Indicate whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "Specify account settings.",
															"properties": {
																"settings": {
																	"description": "Specify account settings.",
																	"properties": {
																		"activity_log": {
																			"description": "Specify activity log settings.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to log activity.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"antivirus": {
																			"description": "Specify anti-virus settings.",
																			"nullable": true,
																			"properties": {
																				"enabled_download_phase": {
																					"description": "Specify whether to enable anti-virus scanning on downloads.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"enabled_upload_phase": {
																					"description": "Specify whether to enable anti-virus scanning on uploads.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"fail_closed": {
																					"description": "Specify whether to block requests for unscannable files.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"notification_settings": {
																					"description": "Configure the message the user's device shows during an antivirus scan.",
																					"nullable": true,
																					"properties": {
																						"enabled": {
																							"description": "Specify whether to enable notifications.",
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"include_context": {
																							"description": "Specify whether to include context information as query parameters.",
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"msg": {
																							"description": "Specify the message to show in the notification.",
																							"type": "string",
																							"x-auditable": true
																						},
																						"support_url": {
																							"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object",
																					"x-stainless-terraform-configurability": "computed_optional"
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"block_page": {
																			"description": "Specify block page layout settings.",
																			"nullable": true,
																			"properties": {
																				"background_color": {
																					"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
																					"type": "string",
																					"x-auditable": true
																				},
																				"enabled": {
																					"description": "Specify whether to enable the custom block page.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"footer_text": {
																					"description": "Specify the block page footer text when the mode is customized_block_page.",
																					"example": "--footer--",
																					"type": "string",
																					"x-auditable": true
																				},
																				"header_text": {
																					"description": "Specify the block page header text when the mode is customized_block_page.",
																					"example": "--header--",
																					"type": "string",
																					"x-auditable": true
																				},
																				"include_context": {
																					"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"logo_path": {
																					"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
																					"example": "https://logos.com/a.png",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mailto_address": {
																					"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
																					"example": "admin@example.com",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mailto_subject": {
																					"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
																					"example": "Blocked User Inquiry",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mode": {
																					"default": "",
																					"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
																					"enum": [
																						"",
																						"customized_block_page",
																						"redirect_uri"
																					],
																					"type": "string",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"name": {
																					"description": "Specify the block page title when the mode is customized_block_page.",
																					"example": "Cloudflare",
																					"type": "string",
																					"x-auditable": true
																				},
																				"read_only": {
																					"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																					"nullable": true,
																					"readOnly": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"source_account": {
																					"description": "Indicate the account tag of the account that shared this setting.",
																					"nullable": true,
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"suppress_footer": {
																					"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
																					"example": false,
																					"type": "boolean"
																				},
																				"target_uri": {
																					"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
																					"format": "uri",
																					"type": "string",
																					"x-auditable": true
																				},
																				"version": {
																					"description": "Indicate the version number of the setting.",
																					"example": 1,
																					"nullable": true,
																					"readOnly": true,
																					"type": "integer",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"body_scanning": {
																			"description": "Specify the DLP inspection mode.",
																			"nullable": true,
																			"properties": {
																				"inspection_mode": {
																					"description": "Specify the inspection mode as either `deep` or `shallow`.",
																					"enum": [
																						"deep",
																						"shallow"
																					],
																					"example": "deep",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"browser_isolation": {
																			"description": "Specify Clientless Browser Isolation settings.",
																			"nullable": true,
																			"properties": {
																				"non_identity_enabled": {
																					"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"url_browser_isolation_enabled": {
																					"description": "Specify whether to enable Clientless Browser Isolation.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"certificate": {
																			"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
																			"nullable": true,
																			"properties": {
																				"id": {
																					"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"id"
																			],
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"custom_certificate": {
																			"deprecated": true,
																			"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
																			"nullable": true,
																			"properties": {
																				"binding_status": {
																					"description": "Indicate the internal certificate status.",
																					"example": "pending_deployment",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"enabled": {
																					"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"id": {
																					"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string",
																					"x-auditable": true
																				},
																				"updated_at": {
																					"format": "date-time",
																					"readOnly": true,
																					"type": "string"
																				}
																			},
																			"required": [
																				"enabled"
																			],
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"extended_email_matching": {
																			"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"read_only": {
																					"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																					"readOnly": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"source_account": {
																					"description": "Indicate the account tag of the account that shared this setting.",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"version": {
																					"description": "Indicate the version number of the setting.",
																					"example": 1,
																					"readOnly": true,
																					"type": "integer",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"fips": {
																			"description": "Specify FIPS settings.",
																			"nullable": true,
																			"properties": {
																				"tls": {
																					"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"host_selector": {
																			"description": "Enable host selection in egress policies.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable filtering via hosts for egress policies.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"inspection": {
																			"description": "Define the proxy inspection mode.",
																			"nullable": true,
																			"properties": {
																				"mode": {
																					"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
																					"enum": [
																						"static",
																						"dynamic"
																					],
																					"example": "static",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"protocol_detection": {
																			"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"sandbox": {
																			"description": "Specify whether to enable the sandbox.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable the sandbox.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"fallback_action": {
																					"description": "Specify the action to take when the system cannot scan the file.",
																					"enum": [
																						"allow",
																						"block"
																					],
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"tls_decrypt": {
																			"description": "Specify whether to inspect encrypted HTTP traffic.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to inspect encrypted HTTP traffic.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		}
																	},
																	"type": "object"
																}
															}
														},
														{
															"properties": {
																"created_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"updated_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																}
															},
															"type": "object"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Zero Trust account configuration response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Patch Zero Trust account configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"POST /accounts/{account_id}/gateway": {
		"description": "Create a Zero Trust account for an existing Cloudflare account.",
		"operationId": "zero-trust-accounts-create-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Indicate whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"gateway_tag": {
													"description": "Specify the gateway internal ID.",
													"example": "f174e90afafe4643bbbc4a0ed4fc8415",
													"maxLength": 32,
													"type": "string"
												},
												"id": {
													"description": "Specify the Cloudflare account ID.",
													"example": "699d98642c564d2e855e9661899b7252",
													"maxLength": 32,
													"type": "string"
												},
												"provider_name": {
													"description": "Specify the provider name (usually Cloudflare).",
													"example": "Cloudflare",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Create Zero Trust account response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"type": "object"
								},
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Indicate whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gateway_tag": {
															"description": "Specify the gateway internal ID.",
															"example": "f174e90afafe4643bbbc4a0ed4fc8415",
															"maxLength": 32,
															"type": "string"
														},
														"id": {
															"description": "Specify the Cloudflare account ID.",
															"example": "699d98642c564d2e855e9661899b7252",
															"maxLength": 32,
															"type": "string"
														},
														"provider_name": {
															"description": "Specify the provider name (usually Cloudflare).",
															"example": "Cloudflare",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Zero Trust account response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/settings": {
		"description": "Updates the current device settings for a Zero Trust account.",
		"operationId": "zero-trust-accounts-update-device-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"disable_for_time": {
								"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
								"type": "number"
							},
							"gateway_proxy_enabled": {
								"description": "Enable gateway proxy filtering on TCP.",
								"example": true,
								"type": "boolean"
							},
							"gateway_udp_proxy_enabled": {
								"description": "Enable gateway proxy filtering on UDP.",
								"example": true,
								"type": "boolean"
							},
							"root_certificate_installation_enabled": {
								"description": "Enable installation of cloudflare managed root certificate.",
								"example": true,
								"type": "boolean"
							},
							"use_zt_virtual_ip": {
								"description": "Enable using CGNAT virtual IPv4.",
								"example": true,
								"type": "boolean"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
													"type": "number"
												},
												"gateway_proxy_enabled": {
													"description": "Enable gateway proxy filtering on TCP.",
													"example": true,
													"type": "boolean"
												},
												"gateway_udp_proxy_enabled": {
													"description": "Enable gateway proxy filtering on UDP.",
													"example": true,
													"type": "boolean"
												},
												"root_certificate_installation_enabled": {
													"description": "Enable installation of cloudflare managed root certificate.",
													"example": true,
													"type": "boolean"
												},
												"use_zt_virtual_ip": {
													"description": "Enable using CGNAT virtual IPv4.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Update device settings for a Zero Trust account response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"description": "Sets the time limit, in seconds, that a user can use an override code to bypass WARP.",
															"type": "number"
														},
														"gateway_proxy_enabled": {
															"description": "Enable gateway proxy filtering on TCP.",
															"example": true,
															"type": "boolean"
														},
														"gateway_udp_proxy_enabled": {
															"description": "Enable gateway proxy filtering on UDP.",
															"example": true,
															"type": "boolean"
														},
														"root_certificate_installation_enabled": {
															"description": "Enable installation of cloudflare managed root certificate.",
															"example": true,
															"type": "boolean"
														},
														"use_zt_virtual_ip": {
															"description": "Enable using CGNAT virtual IPv4.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update device settings for a Zero Trust account response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update device settings for a Zero Trust account",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/gateway/configuration": {
		"description": "Update the current Zero Trust account configuration.",
		"operationId": "zero-trust-accounts-update-zero-trust-account-configuration.",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Specify account settings.",
						"properties": {
							"settings": {
								"description": "Specify account settings.",
								"properties": {
									"activity_log": {
										"description": "Specify activity log settings.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to log activity.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"antivirus": {
										"description": "Specify anti-virus settings.",
										"nullable": true,
										"properties": {
											"enabled_download_phase": {
												"description": "Specify whether to enable anti-virus scanning on downloads.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "computed_optional"
											},
											"enabled_upload_phase": {
												"description": "Specify whether to enable anti-virus scanning on uploads.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "computed_optional"
											},
											"fail_closed": {
												"description": "Specify whether to block requests for unscannable files.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "computed_optional"
											},
											"notification_settings": {
												"description": "Configure the message the user's device shows during an antivirus scan.",
												"nullable": true,
												"properties": {
													"enabled": {
														"description": "Specify whether to enable notifications.",
														"type": "boolean",
														"x-auditable": true
													},
													"include_context": {
														"description": "Specify whether to include context information as query parameters.",
														"type": "boolean",
														"x-auditable": true
													},
													"msg": {
														"description": "Specify the message to show in the notification.",
														"type": "string",
														"x-auditable": true
													},
													"support_url": {
														"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
														"type": "string",
														"x-auditable": true
													}
												},
												"type": "object",
												"x-stainless-terraform-configurability": "computed_optional"
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"block_page": {
										"description": "Specify block page layout settings.",
										"nullable": true,
										"properties": {
											"background_color": {
												"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
												"type": "string",
												"x-auditable": true
											},
											"enabled": {
												"description": "Specify whether to enable the custom block page.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"footer_text": {
												"description": "Specify the block page footer text when the mode is customized_block_page.",
												"example": "--footer--",
												"type": "string",
												"x-auditable": true
											},
											"header_text": {
												"description": "Specify the block page header text when the mode is customized_block_page.",
												"example": "--header--",
												"type": "string",
												"x-auditable": true
											},
											"include_context": {
												"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
												"type": "boolean",
												"x-auditable": true
											},
											"logo_path": {
												"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
												"example": "https://logos.com/a.png",
												"type": "string",
												"x-auditable": true
											},
											"mailto_address": {
												"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
												"example": "admin@example.com",
												"type": "string",
												"x-auditable": true
											},
											"mailto_subject": {
												"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
												"example": "Blocked User Inquiry",
												"type": "string",
												"x-auditable": true
											},
											"mode": {
												"default": "",
												"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
												"enum": [
													"",
													"customized_block_page",
													"redirect_uri"
												],
												"type": "string",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											},
											"name": {
												"description": "Specify the block page title when the mode is customized_block_page.",
												"example": "Cloudflare",
												"type": "string",
												"x-auditable": true
											},
											"read_only": {
												"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
												"nullable": true,
												"readOnly": true,
												"type": "boolean",
												"x-auditable": true
											},
											"source_account": {
												"description": "Indicate the account tag of the account that shared this setting.",
												"nullable": true,
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"suppress_footer": {
												"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
												"example": false,
												"type": "boolean"
											},
											"target_uri": {
												"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
												"format": "uri",
												"type": "string",
												"x-auditable": true
											},
											"version": {
												"description": "Indicate the version number of the setting.",
												"example": 1,
												"nullable": true,
												"readOnly": true,
												"type": "integer",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"body_scanning": {
										"description": "Specify the DLP inspection mode.",
										"nullable": true,
										"properties": {
											"inspection_mode": {
												"description": "Specify the inspection mode as either `deep` or `shallow`.",
												"enum": [
													"deep",
													"shallow"
												],
												"example": "deep",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"browser_isolation": {
										"description": "Specify Clientless Browser Isolation settings.",
										"nullable": true,
										"properties": {
											"non_identity_enabled": {
												"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											},
											"url_browser_isolation_enabled": {
												"description": "Specify whether to enable Clientless Browser Isolation.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"certificate": {
										"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
										"nullable": true,
										"properties": {
											"id": {
												"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"id"
										],
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"custom_certificate": {
										"deprecated": true,
										"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
										"nullable": true,
										"properties": {
											"binding_status": {
												"description": "Indicate the internal certificate status.",
												"example": "pending_deployment",
												"readOnly": true,
												"type": "string",
												"x-auditable": true
											},
											"enabled": {
												"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"id": {
												"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
												"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
												"type": "string",
												"x-auditable": true
											},
											"updated_at": {
												"format": "date-time",
												"readOnly": true,
												"type": "string"
											}
										},
										"required": [
											"enabled"
										],
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"extended_email_matching": {
										"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"read_only": {
												"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
												"readOnly": true,
												"type": "boolean",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											},
											"source_account": {
												"description": "Indicate the account tag of the account that shared this setting.",
												"readOnly": true,
												"type": "string",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											},
											"version": {
												"description": "Indicate the version number of the setting.",
												"example": 1,
												"readOnly": true,
												"type": "integer",
												"x-auditable": true,
												"x-stainless-terraform-configurability": "optional"
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"fips": {
										"description": "Specify FIPS settings.",
										"nullable": true,
										"properties": {
											"tls": {
												"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"host_selector": {
										"description": "Enable host selection in egress policies.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to enable filtering via hosts for egress policies.",
												"example": false,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"inspection": {
										"description": "Define the proxy inspection mode.",
										"nullable": true,
										"properties": {
											"mode": {
												"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
												"enum": [
													"static",
													"dynamic"
												],
												"example": "static",
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"protocol_detection": {
										"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"sandbox": {
										"description": "Specify whether to enable the sandbox.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to enable the sandbox.",
												"example": true,
												"nullable": true,
												"type": "boolean",
												"x-auditable": true
											},
											"fallback_action": {
												"description": "Specify the action to take when the system cannot scan the file.",
												"enum": [
													"allow",
													"block"
												],
												"type": "string",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									},
									"tls_decrypt": {
										"description": "Specify whether to inspect encrypted HTTP traffic.",
										"nullable": true,
										"properties": {
											"enabled": {
												"description": "Specify whether to inspect encrypted HTTP traffic.",
												"example": true,
												"type": "boolean",
												"x-auditable": true
											}
										},
										"type": "object",
										"x-stainless-terraform-configurability": "optional"
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Indicate whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Specify account settings.",
													"properties": {
														"settings": {
															"description": "Specify account settings.",
															"properties": {
																"activity_log": {
																	"description": "Specify activity log settings.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to log activity.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"antivirus": {
																	"description": "Specify anti-virus settings.",
																	"nullable": true,
																	"properties": {
																		"enabled_download_phase": {
																			"description": "Specify whether to enable anti-virus scanning on downloads.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"enabled_upload_phase": {
																			"description": "Specify whether to enable anti-virus scanning on uploads.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"fail_closed": {
																			"description": "Specify whether to block requests for unscannable files.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"notification_settings": {
																			"description": "Configure the message the user's device shows during an antivirus scan.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable notifications.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"include_context": {
																					"description": "Specify whether to include context information as query parameters.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"msg": {
																					"description": "Specify the message to show in the notification.",
																					"type": "string",
																					"x-auditable": true
																				},
																				"support_url": {
																					"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "computed_optional"
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"block_page": {
																	"description": "Specify block page layout settings.",
																	"nullable": true,
																	"properties": {
																		"background_color": {
																			"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Specify whether to enable the custom block page.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"footer_text": {
																			"description": "Specify the block page footer text when the mode is customized_block_page.",
																			"example": "--footer--",
																			"type": "string",
																			"x-auditable": true
																		},
																		"header_text": {
																			"description": "Specify the block page header text when the mode is customized_block_page.",
																			"example": "--header--",
																			"type": "string",
																			"x-auditable": true
																		},
																		"include_context": {
																			"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"logo_path": {
																			"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
																			"example": "https://logos.com/a.png",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mailto_address": {
																			"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
																			"example": "admin@example.com",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mailto_subject": {
																			"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
																			"example": "Blocked User Inquiry",
																			"type": "string",
																			"x-auditable": true
																		},
																		"mode": {
																			"default": "",
																			"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
																			"enum": [
																				"",
																				"customized_block_page",
																				"redirect_uri"
																			],
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"name": {
																			"description": "Specify the block page title when the mode is customized_block_page.",
																			"example": "Cloudflare",
																			"type": "string",
																			"x-auditable": true
																		},
																		"read_only": {
																			"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																			"nullable": true,
																			"readOnly": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"source_account": {
																			"description": "Indicate the account tag of the account that shared this setting.",
																			"nullable": true,
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"suppress_footer": {
																			"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
																			"example": false,
																			"type": "boolean"
																		},
																		"target_uri": {
																			"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
																			"format": "uri",
																			"type": "string",
																			"x-auditable": true
																		},
																		"version": {
																			"description": "Indicate the version number of the setting.",
																			"example": 1,
																			"nullable": true,
																			"readOnly": true,
																			"type": "integer",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"body_scanning": {
																	"description": "Specify the DLP inspection mode.",
																	"nullable": true,
																	"properties": {
																		"inspection_mode": {
																			"description": "Specify the inspection mode as either `deep` or `shallow`.",
																			"enum": [
																				"deep",
																				"shallow"
																			],
																			"example": "deep",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"browser_isolation": {
																	"description": "Specify Clientless Browser Isolation settings.",
																	"nullable": true,
																	"properties": {
																		"non_identity_enabled": {
																			"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"url_browser_isolation_enabled": {
																			"description": "Specify whether to enable Clientless Browser Isolation.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"certificate": {
																	"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
																	"nullable": true,
																	"properties": {
																		"id": {
																			"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id"
																	],
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"custom_certificate": {
																	"deprecated": true,
																	"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
																	"nullable": true,
																	"properties": {
																		"binding_status": {
																			"description": "Indicate the internal certificate status.",
																			"example": "pending_deployment",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"id": {
																			"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
																			"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																			"type": "string",
																			"x-auditable": true
																		},
																		"updated_at": {
																			"format": "date-time",
																			"readOnly": true,
																			"type": "string"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"extended_email_matching": {
																	"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"read_only": {
																			"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																			"readOnly": true,
																			"type": "boolean",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"source_account": {
																			"description": "Indicate the account tag of the account that shared this setting.",
																			"readOnly": true,
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"version": {
																			"description": "Indicate the version number of the setting.",
																			"example": 1,
																			"readOnly": true,
																			"type": "integer",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "optional"
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"fips": {
																	"description": "Specify FIPS settings.",
																	"nullable": true,
																	"properties": {
																		"tls": {
																			"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"host_selector": {
																	"description": "Enable host selection in egress policies.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to enable filtering via hosts for egress policies.",
																			"example": false,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"inspection": {
																	"description": "Define the proxy inspection mode.",
																	"nullable": true,
																	"properties": {
																		"mode": {
																			"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
																			"enum": [
																				"static",
																				"dynamic"
																			],
																			"example": "static",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"protocol_detection": {
																	"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"sandbox": {
																	"description": "Specify whether to enable the sandbox.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to enable the sandbox.",
																			"example": true,
																			"nullable": true,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"fallback_action": {
																			"description": "Specify the action to take when the system cannot scan the file.",
																			"enum": [
																				"allow",
																				"block"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																},
																"tls_decrypt": {
																	"description": "Specify whether to inspect encrypted HTTP traffic.",
																	"nullable": true,
																	"properties": {
																		"enabled": {
																			"description": "Specify whether to inspect encrypted HTTP traffic.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object",
																	"x-stainless-terraform-configurability": "optional"
																}
															},
															"type": "object"
														}
													}
												},
												{
													"properties": {
														"created_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"updated_at": {
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Zero Trust account configuration response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Indicate whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "Specify account settings.",
															"properties": {
																"settings": {
																	"description": "Specify account settings.",
																	"properties": {
																		"activity_log": {
																			"description": "Specify activity log settings.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to log activity.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"antivirus": {
																			"description": "Specify anti-virus settings.",
																			"nullable": true,
																			"properties": {
																				"enabled_download_phase": {
																					"description": "Specify whether to enable anti-virus scanning on downloads.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"enabled_upload_phase": {
																					"description": "Specify whether to enable anti-virus scanning on uploads.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"fail_closed": {
																					"description": "Specify whether to block requests for unscannable files.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				},
																				"notification_settings": {
																					"description": "Configure the message the user's device shows during an antivirus scan.",
																					"nullable": true,
																					"properties": {
																						"enabled": {
																							"description": "Specify whether to enable notifications.",
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"include_context": {
																							"description": "Specify whether to include context information as query parameters.",
																							"type": "boolean",
																							"x-auditable": true
																						},
																						"msg": {
																							"description": "Specify the message to show in the notification.",
																							"type": "string",
																							"x-auditable": true
																						},
																						"support_url": {
																							"description": "Specify a URL that directs users to more information. If unset, the notification opens a block page.",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object",
																					"x-stainless-terraform-configurability": "computed_optional"
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"block_page": {
																			"description": "Specify block page layout settings.",
																			"nullable": true,
																			"properties": {
																				"background_color": {
																					"description": "Specify the block page background color in `#rrggbb` format when the mode is customized_block_page.",
																					"type": "string",
																					"x-auditable": true
																				},
																				"enabled": {
																					"description": "Specify whether to enable the custom block page.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"footer_text": {
																					"description": "Specify the block page footer text when the mode is customized_block_page.",
																					"example": "--footer--",
																					"type": "string",
																					"x-auditable": true
																				},
																				"header_text": {
																					"description": "Specify the block page header text when the mode is customized_block_page.",
																					"example": "--header--",
																					"type": "string",
																					"x-auditable": true
																				},
																				"include_context": {
																					"description": "Specify whether to append context to target_uri as query parameters. This applies only when the mode is redirect_uri.",
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"logo_path": {
																					"description": "Specify the full URL to the logo file when the mode is customized_block_page.",
																					"example": "https://logos.com/a.png",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mailto_address": {
																					"description": "Specify the admin email for users to contact when the mode is customized_block_page.",
																					"example": "admin@example.com",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mailto_subject": {
																					"description": "Specify the subject line for emails created from the block page when the mode is customized_block_page.",
																					"example": "Blocked User Inquiry",
																					"type": "string",
																					"x-auditable": true
																				},
																				"mode": {
																					"default": "",
																					"description": "Specify whether to redirect users to a Cloudflare-hosted block page or a customer-provided URI.",
																					"enum": [
																						"",
																						"customized_block_page",
																						"redirect_uri"
																					],
																					"type": "string",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"name": {
																					"description": "Specify the block page title when the mode is customized_block_page.",
																					"example": "Cloudflare",
																					"type": "string",
																					"x-auditable": true
																				},
																				"read_only": {
																					"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																					"nullable": true,
																					"readOnly": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"source_account": {
																					"description": "Indicate the account tag of the account that shared this setting.",
																					"nullable": true,
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"suppress_footer": {
																					"description": "Specify whether to suppress detailed information at the bottom of the block page when the mode is customized_block_page.",
																					"example": false,
																					"type": "boolean"
																				},
																				"target_uri": {
																					"description": "Specify the URI to redirect users to when the mode is redirect_uri.",
																					"format": "uri",
																					"type": "string",
																					"x-auditable": true
																				},
																				"version": {
																					"description": "Indicate the version number of the setting.",
																					"example": 1,
																					"nullable": true,
																					"readOnly": true,
																					"type": "integer",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"body_scanning": {
																			"description": "Specify the DLP inspection mode.",
																			"nullable": true,
																			"properties": {
																				"inspection_mode": {
																					"description": "Specify the inspection mode as either `deep` or `shallow`.",
																					"enum": [
																						"deep",
																						"shallow"
																					],
																					"example": "deep",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"browser_isolation": {
																			"description": "Specify Clientless Browser Isolation settings.",
																			"nullable": true,
																			"properties": {
																				"non_identity_enabled": {
																					"description": "Specify whether to enable non-identity onramp support for Browser Isolation.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"url_browser_isolation_enabled": {
																					"description": "Specify whether to enable Clientless Browser Isolation.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"certificate": {
																			"description": "Specify certificate settings for Gateway TLS interception. If unset, the Cloudflare Root CA handles interception.",
																			"nullable": true,
																			"properties": {
																				"id": {
																					"description": "Specify the UUID of the certificate used for interception. Ensure the certificate is available at the edge(previously called 'active'). A nil UUID directs Cloudflare to use the Root CA.",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"id"
																			],
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"custom_certificate": {
																			"deprecated": true,
																			"description": "Specify custom certificate settings for BYO-PKI. This field is deprecated; use `certificate` instead.",
																			"nullable": true,
																			"properties": {
																				"binding_status": {
																					"description": "Indicate the internal certificate status.",
																					"example": "pending_deployment",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true
																				},
																				"enabled": {
																					"description": "Specify whether to enable a custom certificate authority for signing Gateway traffic.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"id": {
																					"description": "Specify the UUID of the certificate (ID from MTLS certificate store).",
																					"example": "d1b364c5-1311-466e-a194-f0e943e0799f",
																					"type": "string",
																					"x-auditable": true
																				},
																				"updated_at": {
																					"format": "date-time",
																					"readOnly": true,
																					"type": "string"
																				}
																			},
																			"required": [
																				"enabled"
																			],
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"extended_email_matching": {
																			"description": "Specify user email settings for the firewall policies. When this is enabled, we standardize the email addresses in the identity part of the rule, so that they match the extended email variants in the firewall policies. When this setting is turned off, the email addresses in the identity part of the rule will be matched exactly as provided. If your email has `.` or `+` modifiers, you should enable this setting.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to match all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"read_only": {
																					"description": "Indicate that this setting was shared via the Orgs API and read only for the current account.",
																					"readOnly": true,
																					"type": "boolean",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"source_account": {
																					"description": "Indicate the account tag of the account that shared this setting.",
																					"readOnly": true,
																					"type": "string",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				},
																				"version": {
																					"description": "Indicate the version number of the setting.",
																					"example": 1,
																					"readOnly": true,
																					"type": "integer",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "optional"
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"fips": {
																			"description": "Specify FIPS settings.",
																			"nullable": true,
																			"properties": {
																				"tls": {
																					"description": "Enforce cipher suites and TLS versions compliant with FIPS 140-2.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"host_selector": {
																			"description": "Enable host selection in egress policies.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable filtering via hosts for egress policies.",
																					"example": false,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"inspection": {
																			"description": "Define the proxy inspection mode.",
																			"nullable": true,
																			"properties": {
																				"mode": {
																					"description": "Define the proxy inspection mode.   1. static: Gateway applies static inspection to HTTP on TCP(80). With TLS decryption on, Gateway inspects HTTPS traffic on TCP(443) and UDP(443).   2. dynamic: Gateway applies protocol detection to inspect HTTP and HTTPS traffic on any port. TLS decryption must remain on to inspect HTTPS traffic.",
																					"enum": [
																						"static",
																						"dynamic"
																					],
																					"example": "static",
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"protocol_detection": {
																			"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to detect protocols from the initial bytes of client traffic.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"sandbox": {
																			"description": "Specify whether to enable the sandbox.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to enable the sandbox.",
																					"example": true,
																					"nullable": true,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"fallback_action": {
																					"description": "Specify the action to take when the system cannot scan the file.",
																					"enum": [
																						"allow",
																						"block"
																					],
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		},
																		"tls_decrypt": {
																			"description": "Specify whether to inspect encrypted HTTP traffic.",
																			"nullable": true,
																			"properties": {
																				"enabled": {
																					"description": "Specify whether to inspect encrypted HTTP traffic.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object",
																			"x-stainless-terraform-configurability": "optional"
																		}
																	},
																	"type": "object"
																}
															}
														},
														{
															"properties": {
																"created_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																},
																"updated_at": {
																	"example": "2014-01-01T05:20:00.12345Z",
																	"format": "date-time",
																	"readOnly": true,
																	"type": "string"
																}
															},
															"type": "object"
														}
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Zero Trust account configuration response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Zero Trust account configuration",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/gateway/logging": {
		"description": "Update logging settings for the current Zero Trust account.",
		"operationId": "zero-trust-accounts-update-logging-settings-for-the-zero-trust-account",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"redact_pii": {
								"default": false,
								"description": "Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"settings_by_rule_type": {
								"description": "Configure logging settings for each rule type.",
								"properties": {
									"dns": {
										"allOf": [
											{
												"properties": {
													"log_all": {
														"default": false,
														"description": "Specify whether to log all requests to this service.",
														"example": false,
														"type": "boolean",
														"x-auditable": true
													},
													"log_blocks": {
														"default": false,
														"description": "Specify whether to log only blocking requests to this service.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													}
												},
												"type": "object"
											}
										],
										"description": "Configure logging settings for DNS firewall."
									},
									"http": {
										"allOf": [
											{
												"properties": {
													"log_all": {
														"default": false,
														"description": "Specify whether to log all requests to this service.",
														"example": false,
														"type": "boolean",
														"x-auditable": true
													},
													"log_blocks": {
														"default": false,
														"description": "Specify whether to log only blocking requests to this service.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													}
												},
												"type": "object"
											}
										],
										"description": "Configure logging settings for HTTP/HTTPS firewall."
									},
									"l4": {
										"allOf": [
											{
												"properties": {
													"log_all": {
														"default": false,
														"description": "Specify whether to log all requests to this service.",
														"example": false,
														"type": "boolean",
														"x-auditable": true
													},
													"log_blocks": {
														"default": false,
														"description": "Specify whether to log only blocking requests to this service.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													}
												},
												"type": "object"
											}
										],
										"description": "Configure logging settings for Network firewall."
									}
								},
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Indicate whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"redact_pii": {
													"default": false,
													"description": "Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"settings_by_rule_type": {
													"description": "Configure logging settings for each rule type.",
													"properties": {
														"dns": {
															"allOf": [
																{
																	"properties": {
																		"log_all": {
																			"default": false,
																			"description": "Specify whether to log all requests to this service.",
																			"example": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"log_blocks": {
																			"default": false,
																			"description": "Specify whether to log only blocking requests to this service.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "Configure logging settings for DNS firewall."
														},
														"http": {
															"allOf": [
																{
																	"properties": {
																		"log_all": {
																			"default": false,
																			"description": "Specify whether to log all requests to this service.",
																			"example": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"log_blocks": {
																			"default": false,
																			"description": "Specify whether to log only blocking requests to this service.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "Configure logging settings for HTTP/HTTPS firewall."
														},
														"l4": {
															"allOf": [
																{
																	"properties": {
																		"log_all": {
																			"default": false,
																			"description": "Specify whether to log all requests to this service.",
																			"example": false,
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"log_blocks": {
																			"default": false,
																			"description": "Specify whether to log only blocking requests to this service.",
																			"example": true,
																			"type": "boolean",
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "Configure logging settings for Network firewall."
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Logging settings update response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Indicate whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"redact_pii": {
															"default": false,
															"description": "Indicate whether to redact personally identifiable information from activity logging (PII fields include source IP, user email, user ID, device ID, URL, referrer, and user agent).",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"settings_by_rule_type": {
															"description": "Configure logging settings for each rule type.",
															"properties": {
																"dns": {
																	"allOf": [
																		{
																			"properties": {
																				"log_all": {
																					"default": false,
																					"description": "Specify whether to log all requests to this service.",
																					"example": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"log_blocks": {
																					"default": false,
																					"description": "Specify whether to log only blocking requests to this service.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		}
																	],
																	"description": "Configure logging settings for DNS firewall."
																},
																"http": {
																	"allOf": [
																		{
																			"properties": {
																				"log_all": {
																					"default": false,
																					"description": "Specify whether to log all requests to this service.",
																					"example": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"log_blocks": {
																					"default": false,
																					"description": "Specify whether to log only blocking requests to this service.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		}
																	],
																	"description": "Configure logging settings for HTTP/HTTPS firewall."
																},
																"l4": {
																	"allOf": [
																		{
																			"properties": {
																				"log_all": {
																					"default": false,
																					"description": "Specify whether to log all requests to this service.",
																					"example": false,
																					"type": "boolean",
																					"x-auditable": true
																				},
																				"log_blocks": {
																					"default": false,
																					"description": "Specify whether to log only blocking requests to this service.",
																					"example": true,
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"type": "object"
																		}
																	],
																	"description": "Configure logging settings for Network firewall."
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1,
											"type": "object"
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [],
											"type": "object"
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Indicate whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Logging settings update response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update Zero Trust account logging settings",
		"tags": [
			"Zero Trust accounts"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	}
}