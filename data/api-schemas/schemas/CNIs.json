{
	"DELETE /accounts/{account_id}/cni/cnis/{cni}": {
		"operationId": "delete_cni",
		"parameters": [
			{
				"description": "CNI ID to retrieve information about",
				"in": "path",
				"name": "cni",
				"required": true,
				"schema": {
					"format": "uuid",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Customer account tag",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"description": "CNI has been successfully deleted"
			},
			"400": {
				"description": "Bad request"
			},
			"404": {
				"description": "CNI not found"
			},
			"500": {
				"description": "Internal server error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete a specified CNI object",
		"tags": [
			"CNIs"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		]
	},
	"GET /accounts/{account_id}/cni/cnis": {
		"operationId": "list_cnis",
		"parameters": [
			{
				"description": "If specified, only show CNIs associated with the specified slot",
				"in": "query",
				"name": "slot",
				"schema": {
					"nullable": true,
					"type": "string"
				}
			},
			{
				"description": "If specified, only show cnis associated with the specified tunnel id",
				"in": "query",
				"name": "tunnel_id",
				"schema": {
					"nullable": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "cursor",
				"schema": {
					"format": "int32",
					"nullable": true,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"minimum": 0,
					"nullable": true,
					"type": "integer"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Customer account tag",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"items": {
									"items": {
										"properties": {
											"account": {
												"description": "Customer account tag",
												"type": "string"
											},
											"bgp": {
												"properties": {
													"customer_asn": {
														"description": "ASN used on the customer end of the BGP session",
														"format": "int32",
														"minimum": 0,
														"type": "integer"
													},
													"extra_prefixes": {
														"description": "Extra set of static prefixes to advertise to the customer's end of the session",
														"example": "192.168.3.4/31",
														"items": {
															"format": "A.B.C.D/N",
															"type": "string"
														},
														"type": "array"
													},
													"md5_key": {
														"description": "MD5 key to use for session authentication.\n\nNote that *this is not a security measure*. MD5 is not a valid security mechanism, and the\nkey is not treated as a secret value. This is *only* supported for preventing\nmisconfiguration, not for defending against malicious attacks.\n\nThe MD5 key, if set, must be of non-zero length and consist only of the following types of\ncharacter:\n\n* ASCII alphanumerics: `[a-zA-Z0-9]`\n* Special characters in the set `'!@#$%^&*()+[]{}<>/.,;:_-~`= \\|`\n\nIn other words, MD5 keys may contain any printable ASCII character aside from newline (0x0A),\nquotation mark (`\"`), vertical tab (0x0B), carriage return (0x0D), tab (0x09), form feed\n(0x0C), and the question mark (`?`). Requests specifying an MD5 key with one or more of\nthese disallowed characters will be rejected.",
														"nullable": true,
														"type": "string"
													}
												},
												"required": [
													"customer_asn",
													"extra_prefixes"
												],
												"type": "object"
											},
											"cust_ip": {
												"description": "Customer end of the point-to-point link\n\nThis should always be inside the same prefix as `p2p_ip`.",
												"example": "192.168.3.4/31",
												"format": "A.B.C.D/N",
												"type": "string"
											},
											"id": {
												"format": "uuid",
												"type": "string"
											},
											"interconnect": {
												"description": "Interconnect identifier hosting this CNI",
												"type": "string"
											},
											"magic": {
												"properties": {
													"conduit_name": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"mtu": {
														"format": "int32",
														"minimum": 0,
														"type": "integer"
													}
												},
												"required": [
													"conduit_name",
													"description",
													"mtu"
												],
												"type": "object"
											},
											"p2p_ip": {
												"description": "Cloudflare end of the point-to-point link",
												"example": "192.168.3.4/31",
												"format": "A.B.C.D/N",
												"type": "string"
											}
										},
										"required": [
											"id",
											"interconnect",
											"account",
											"p2p_ip",
											"cust_ip",
											"magic"
										],
										"type": "object"
									},
									"type": "array"
								},
								"next": {
									"format": "int32",
									"nullable": true,
									"type": "integer"
								}
							},
							"required": [
								"items"
							],
							"type": "object"
						}
					}
				},
				"description": "List of matching CNI objects"
			},
			"400": {
				"description": "Bad request"
			},
			"500": {
				"description": "Internal server error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List existing CNI objects",
		"tags": [
			"CNIs"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read",
			"Magic Transit Read",
			"Magic Transit Write"
		]
	},
	"GET /accounts/{account_id}/cni/cnis/{cni}": {
		"operationId": "get_cni",
		"parameters": [
			{
				"description": "CNI ID to retrieve information about",
				"in": "path",
				"name": "cni",
				"required": true,
				"schema": {
					"format": "uuid",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Customer account tag",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"account": {
									"description": "Customer account tag",
									"type": "string"
								},
								"bgp": {
									"properties": {
										"customer_asn": {
											"description": "ASN used on the customer end of the BGP session",
											"format": "int32",
											"minimum": 0,
											"type": "integer"
										},
										"extra_prefixes": {
											"description": "Extra set of static prefixes to advertise to the customer's end of the session",
											"example": "192.168.3.4/31",
											"items": {
												"format": "A.B.C.D/N",
												"type": "string"
											},
											"type": "array"
										},
										"md5_key": {
											"description": "MD5 key to use for session authentication.\n\nNote that *this is not a security measure*. MD5 is not a valid security mechanism, and the\nkey is not treated as a secret value. This is *only* supported for preventing\nmisconfiguration, not for defending against malicious attacks.\n\nThe MD5 key, if set, must be of non-zero length and consist only of the following types of\ncharacter:\n\n* ASCII alphanumerics: `[a-zA-Z0-9]`\n* Special characters in the set `'!@#$%^&*()+[]{}<>/.,;:_-~`= \\|`\n\nIn other words, MD5 keys may contain any printable ASCII character aside from newline (0x0A),\nquotation mark (`\"`), vertical tab (0x0B), carriage return (0x0D), tab (0x09), form feed\n(0x0C), and the question mark (`?`). Requests specifying an MD5 key with one or more of\nthese disallowed characters will be rejected.",
											"nullable": true,
											"type": "string"
										}
									},
									"required": [
										"customer_asn",
										"extra_prefixes"
									],
									"type": "object"
								},
								"cust_ip": {
									"description": "Customer end of the point-to-point link\n\nThis should always be inside the same prefix as `p2p_ip`.",
									"example": "192.168.3.4/31",
									"format": "A.B.C.D/N",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"interconnect": {
									"description": "Interconnect identifier hosting this CNI",
									"type": "string"
								},
								"magic": {
									"properties": {
										"conduit_name": {
											"type": "string"
										},
										"description": {
											"type": "string"
										},
										"mtu": {
											"format": "int32",
											"minimum": 0,
											"type": "integer"
										}
									},
									"required": [
										"conduit_name",
										"description",
										"mtu"
									],
									"type": "object"
								},
								"p2p_ip": {
									"description": "Cloudflare end of the point-to-point link",
									"example": "192.168.3.4/31",
									"format": "A.B.C.D/N",
									"type": "string"
								}
							},
							"required": [
								"id",
								"interconnect",
								"account",
								"p2p_ip",
								"cust_ip",
								"magic"
							],
							"type": "object"
						}
					}
				},
				"description": "CNI's associated data"
			},
			"400": {
				"description": "Bad request"
			},
			"404": {
				"description": "CNI not found"
			},
			"500": {
				"description": "Internal server error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get information about a CNI object",
		"tags": [
			"CNIs"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic WAN Read",
			"Magic Transit Read",
			"Magic Transit Write"
		]
	},
	"POST /accounts/{account_id}/cni/cnis": {
		"operationId": "create_cni",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Customer account tag",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"account": {
								"description": "Customer account tag",
								"type": "string"
							},
							"bgp": {
								"properties": {
									"customer_asn": {
										"description": "ASN used on the customer end of the BGP session",
										"format": "int32",
										"minimum": 0,
										"type": "integer"
									},
									"extra_prefixes": {
										"description": "Extra set of static prefixes to advertise to the customer's end of the session",
										"example": "192.168.3.4/31",
										"items": {
											"format": "A.B.C.D/N",
											"type": "string"
										},
										"type": "array"
									},
									"md5_key": {
										"description": "MD5 key to use for session authentication.\n\nNote that *this is not a security measure*. MD5 is not a valid security mechanism, and the\nkey is not treated as a secret value. This is *only* supported for preventing\nmisconfiguration, not for defending against malicious attacks.\n\nThe MD5 key, if set, must be of non-zero length and consist only of the following types of\ncharacter:\n\n* ASCII alphanumerics: `[a-zA-Z0-9]`\n* Special characters in the set `'!@#$%^&*()+[]{}<>/.,;:_-~`= \\|`\n\nIn other words, MD5 keys may contain any printable ASCII character aside from newline (0x0A),\nquotation mark (`\"`), vertical tab (0x0B), carriage return (0x0D), tab (0x09), form feed\n(0x0C), and the question mark (`?`). Requests specifying an MD5 key with one or more of\nthese disallowed characters will be rejected.",
										"nullable": true,
										"type": "string"
									}
								},
								"required": [
									"customer_asn",
									"extra_prefixes"
								],
								"type": "object"
							},
							"interconnect": {
								"type": "string"
							},
							"magic": {
								"properties": {
									"conduit_name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"mtu": {
										"format": "int32",
										"minimum": 0,
										"type": "integer"
									}
								},
								"required": [
									"conduit_name",
									"description",
									"mtu"
								],
								"type": "object"
							}
						},
						"required": [
							"interconnect",
							"account",
							"magic"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"account": {
									"description": "Customer account tag",
									"type": "string"
								},
								"bgp": {
									"properties": {
										"customer_asn": {
											"description": "ASN used on the customer end of the BGP session",
											"format": "int32",
											"minimum": 0,
											"type": "integer"
										},
										"extra_prefixes": {
											"description": "Extra set of static prefixes to advertise to the customer's end of the session",
											"example": "192.168.3.4/31",
											"items": {
												"format": "A.B.C.D/N",
												"type": "string"
											},
											"type": "array"
										},
										"md5_key": {
											"description": "MD5 key to use for session authentication.\n\nNote that *this is not a security measure*. MD5 is not a valid security mechanism, and the\nkey is not treated as a secret value. This is *only* supported for preventing\nmisconfiguration, not for defending against malicious attacks.\n\nThe MD5 key, if set, must be of non-zero length and consist only of the following types of\ncharacter:\n\n* ASCII alphanumerics: `[a-zA-Z0-9]`\n* Special characters in the set `'!@#$%^&*()+[]{}<>/.,;:_-~`= \\|`\n\nIn other words, MD5 keys may contain any printable ASCII character aside from newline (0x0A),\nquotation mark (`\"`), vertical tab (0x0B), carriage return (0x0D), tab (0x09), form feed\n(0x0C), and the question mark (`?`). Requests specifying an MD5 key with one or more of\nthese disallowed characters will be rejected.",
											"nullable": true,
											"type": "string"
										}
									},
									"required": [
										"customer_asn",
										"extra_prefixes"
									],
									"type": "object"
								},
								"cust_ip": {
									"description": "Customer end of the point-to-point link\n\nThis should always be inside the same prefix as `p2p_ip`.",
									"example": "192.168.3.4/31",
									"format": "A.B.C.D/N",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"interconnect": {
									"description": "Interconnect identifier hosting this CNI",
									"type": "string"
								},
								"magic": {
									"properties": {
										"conduit_name": {
											"type": "string"
										},
										"description": {
											"type": "string"
										},
										"mtu": {
											"format": "int32",
											"minimum": 0,
											"type": "integer"
										}
									},
									"required": [
										"conduit_name",
										"description",
										"mtu"
									],
									"type": "object"
								},
								"p2p_ip": {
									"description": "Cloudflare end of the point-to-point link",
									"example": "192.168.3.4/31",
									"format": "A.B.C.D/N",
									"type": "string"
								}
							},
							"required": [
								"id",
								"interconnect",
								"account",
								"p2p_ip",
								"cust_ip",
								"magic"
							],
							"type": "object"
						}
					}
				},
				"description": "CNI was successfully created"
			},
			"400": {
				"description": "Bad request"
			},
			"409": {
				"description": "Name Conflict"
			},
			"500": {
				"description": "Internal server error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a new CNI object",
		"tags": [
			"CNIs"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		]
	},
	"PUT /accounts/{account_id}/cni/cnis/{cni}": {
		"operationId": "update_cni",
		"parameters": [
			{
				"description": "CNI ID to retrieve information about",
				"in": "path",
				"name": "cni",
				"required": true,
				"schema": {
					"format": "uuid",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Customer account tag",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"account": {
								"description": "Customer account tag",
								"type": "string"
							},
							"bgp": {
								"properties": {
									"customer_asn": {
										"description": "ASN used on the customer end of the BGP session",
										"format": "int32",
										"minimum": 0,
										"type": "integer"
									},
									"extra_prefixes": {
										"description": "Extra set of static prefixes to advertise to the customer's end of the session",
										"example": "192.168.3.4/31",
										"items": {
											"format": "A.B.C.D/N",
											"type": "string"
										},
										"type": "array"
									},
									"md5_key": {
										"description": "MD5 key to use for session authentication.\n\nNote that *this is not a security measure*. MD5 is not a valid security mechanism, and the\nkey is not treated as a secret value. This is *only* supported for preventing\nmisconfiguration, not for defending against malicious attacks.\n\nThe MD5 key, if set, must be of non-zero length and consist only of the following types of\ncharacter:\n\n* ASCII alphanumerics: `[a-zA-Z0-9]`\n* Special characters in the set `'!@#$%^&*()+[]{}<>/.,;:_-~`= \\|`\n\nIn other words, MD5 keys may contain any printable ASCII character aside from newline (0x0A),\nquotation mark (`\"`), vertical tab (0x0B), carriage return (0x0D), tab (0x09), form feed\n(0x0C), and the question mark (`?`). Requests specifying an MD5 key with one or more of\nthese disallowed characters will be rejected.",
										"nullable": true,
										"type": "string"
									}
								},
								"required": [
									"customer_asn",
									"extra_prefixes"
								],
								"type": "object"
							},
							"cust_ip": {
								"description": "Customer end of the point-to-point link\n\nThis should always be inside the same prefix as `p2p_ip`.",
								"example": "192.168.3.4/31",
								"format": "A.B.C.D/N",
								"type": "string"
							},
							"id": {
								"format": "uuid",
								"type": "string"
							},
							"interconnect": {
								"description": "Interconnect identifier hosting this CNI",
								"type": "string"
							},
							"magic": {
								"properties": {
									"conduit_name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"mtu": {
										"format": "int32",
										"minimum": 0,
										"type": "integer"
									}
								},
								"required": [
									"conduit_name",
									"description",
									"mtu"
								],
								"type": "object"
							},
							"p2p_ip": {
								"description": "Cloudflare end of the point-to-point link",
								"example": "192.168.3.4/31",
								"format": "A.B.C.D/N",
								"type": "string"
							}
						},
						"required": [
							"id",
							"interconnect",
							"account",
							"p2p_ip",
							"cust_ip",
							"magic"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"account": {
									"description": "Customer account tag",
									"type": "string"
								},
								"bgp": {
									"properties": {
										"customer_asn": {
											"description": "ASN used on the customer end of the BGP session",
											"format": "int32",
											"minimum": 0,
											"type": "integer"
										},
										"extra_prefixes": {
											"description": "Extra set of static prefixes to advertise to the customer's end of the session",
											"example": "192.168.3.4/31",
											"items": {
												"format": "A.B.C.D/N",
												"type": "string"
											},
											"type": "array"
										},
										"md5_key": {
											"description": "MD5 key to use for session authentication.\n\nNote that *this is not a security measure*. MD5 is not a valid security mechanism, and the\nkey is not treated as a secret value. This is *only* supported for preventing\nmisconfiguration, not for defending against malicious attacks.\n\nThe MD5 key, if set, must be of non-zero length and consist only of the following types of\ncharacter:\n\n* ASCII alphanumerics: `[a-zA-Z0-9]`\n* Special characters in the set `'!@#$%^&*()+[]{}<>/.,;:_-~`= \\|`\n\nIn other words, MD5 keys may contain any printable ASCII character aside from newline (0x0A),\nquotation mark (`\"`), vertical tab (0x0B), carriage return (0x0D), tab (0x09), form feed\n(0x0C), and the question mark (`?`). Requests specifying an MD5 key with one or more of\nthese disallowed characters will be rejected.",
											"nullable": true,
											"type": "string"
										}
									},
									"required": [
										"customer_asn",
										"extra_prefixes"
									],
									"type": "object"
								},
								"cust_ip": {
									"description": "Customer end of the point-to-point link\n\nThis should always be inside the same prefix as `p2p_ip`.",
									"example": "192.168.3.4/31",
									"format": "A.B.C.D/N",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"interconnect": {
									"description": "Interconnect identifier hosting this CNI",
									"type": "string"
								},
								"magic": {
									"properties": {
										"conduit_name": {
											"type": "string"
										},
										"description": {
											"type": "string"
										},
										"mtu": {
											"format": "int32",
											"minimum": 0,
											"type": "integer"
										}
									},
									"required": [
										"conduit_name",
										"description",
										"mtu"
									],
									"type": "object"
								},
								"p2p_ip": {
									"description": "Cloudflare end of the point-to-point link",
									"example": "192.168.3.4/31",
									"format": "A.B.C.D/N",
									"type": "string"
								}
							},
							"required": [
								"id",
								"interconnect",
								"account",
								"p2p_ip",
								"cust_ip",
								"magic"
							],
							"type": "object"
						}
					}
				},
				"description": "CNI has been successfully modified"
			},
			"400": {
				"description": "Bad request"
			},
			"404": {
				"description": "CNI not found"
			},
			"500": {
				"description": "Internal server error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Modify stored information about a CNI object",
		"tags": [
			"CNIs"
		],
		"x-api-token-group": [
			"Magic WAN Write",
			"Magic Transit Write"
		]
	}
}