{
	"DELETE /accounts/{account_id}/workers/workers/{worker_id}/versions/{version_id}": {
		"description": "Delete a version.",
		"operationId": "deleteWorkerVersion",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "version_id",
				"required": true,
				"schema": {
					"description": "Identifier for the version, which can be ID or the literal \"latest\" to operate on the most recently created version.",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"minimum": 1000,
												"type": "integer"
											},
											"documentation_url": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"source": {
												"properties": {
													"pointer": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object",
										"uniqueItems": true
									},
									"type": "array"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										true
									],
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete version success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Delete version failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Version",
		"tags": [
			"Versions"
		]
	},
	"GET /accounts/{account_id}/workers/workers/{worker_id}/versions": {
		"description": "List all versions for a Worker.",
		"operationId": "listWorkerVersions",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			},
			{
				"description": "Current page.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "Items per-page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 10,
					"maximum": 100,
					"minimum": 1,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"annotations": {
														"description": "Metadata about the version.",
														"properties": {
															"workers/message": {
																"description": "Human-readable message about the version.",
																"example": "Fixed bug.",
																"maxLength": 100,
																"type": "string"
															},
															"workers/tag": {
																"description": "User-provided identifier for the version.",
																"example": "v1.0.1",
																"maxLength": 25,
																"type": "string"
															},
															"workers/triggered_by": {
																"description": "Operation that triggered the creation of the version.",
																"example": "upload",
																"readOnly": true,
																"type": "string"
															}
														},
														"type": "object"
													},
													"assets": {
														"description": "Configuration for assets within a Worker.\n\n[`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files should be\nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
														"properties": {
															"config": {
																"description": "Configuration for assets within a Worker.",
																"properties": {
																	"html_handling": {
																		"default": "auto-trailing-slash",
																		"description": "Determines the redirects and rewrites of requests for HTML content.",
																		"enum": [
																			"auto-trailing-slash",
																			"force-trailing-slash",
																			"drop-trailing-slash",
																			"none"
																		],
																		"example": "auto-trailing-slash",
																		"type": "string"
																	},
																	"not_found_handling": {
																		"default": "none",
																		"description": "Determines the response when a request does not match a static asset, and there is no Worker script.",
																		"enum": [
																			"none",
																			"404-page",
																			"single-page-application"
																		],
																		"example": "404-page",
																		"type": "string"
																	},
																	"run_worker_first": {
																		"default": false,
																		"oneOf": [
																			{
																				"description": "Contains a list path rules to control routing to either the Worker or assets. Glob (*) and negative (!) rules are supported. Rules must start with either '/' or '!/'. At least one non-negative rule must be provided, and negative rules have higher precedence than non-negative rules.",
																				"example": "[\"/api/*\", \"/oauth/callback\", \"!/api/assets/*\"]",
																				"items": {
																					"type": "string"
																				},
																				"type": "array"
																			},
																			{
																				"description": "Enables routing to always invoke the Worker script ahead of all requests. When true, this is equivalent to `[\"/*\"]` in the string array version of this field.",
																				"example": true,
																				"type": "boolean"
																			}
																		]
																	}
																},
																"type": "object"
															},
															"jwt": {
																"description": "Token provided upon successful upload of all files from a registered manifest.",
																"type": "string",
																"x-sensitive": true
															}
														},
														"type": "object"
													},
													"bindings": {
														"description": "List of bindings attached to a Worker. You can find more about bindings on our docs: https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/#bindings.",
														"example": [
															{
																"name": "MY_ENV_VAR",
																"text": "my_data",
																"type": "plain_text"
															}
														],
														"items": {
															"description": "A binding to allow the Worker to communicate with resources.",
															"discriminator": {
																"mapping": {
																	"ai": "#/components/schemas/workers_binding_kind_ai",
																	"analytics_engine": "#/components/schemas/workers_binding_kind_analytics_engine",
																	"assets": "#/components/schemas/workers_binding_kind_assets",
																	"browser": "#/components/schemas/workers_binding_kind_browser",
																	"d1": "#/components/schemas/workers_binding_kind_d1",
																	"data_blob": "#/components/schemas/workers_binding_kind_data_blob",
																	"dispatch_namespace": "#/components/schemas/workers_binding_kind_dispatch_namespace",
																	"durable_object_namespace": "#/components/schemas/workers_binding_kind_durable_object_namespace",
																	"hyperdrive": "#/components/schemas/workers_binding_kind_hyperdrive",
																	"images": "#/components/schemas/workers_binding_kind_images",
																	"inherit": "#/components/schemas/workers_binding_kind_inherit",
																	"json": "#/components/schemas/workers_binding_kind_json",
																	"kv_namespace": "#/components/schemas/workers_binding_kind_kv_namespace",
																	"mtls_certificate": "#/components/schemas/workers_binding_kind_mtls_certificate",
																	"pipelines": "#/components/schemas/workers_binding_kind_pipelines",
																	"plain_text": "#/components/schemas/workers_binding_kind_plain_text",
																	"queue": "#/components/schemas/workers_binding_kind_queue",
																	"r2_bucket": "#/components/schemas/workers_binding_kind_r2_bucket",
																	"secret_key": "#/components/schemas/workers_binding_kind_secret_key",
																	"secret_text": "#/components/schemas/workers_binding_kind_secret_text",
																	"secrets_store_secret": "#/components/schemas/workers_binding_kind_secrets_store_secret",
																	"send_email": "#/components/schemas/workers_binding_kind_send_email",
																	"service": "#/components/schemas/workers_binding_kind_service",
																	"tail_consumer": "#/components/schemas/workers_binding_kind_tail_consumer",
																	"text_blob": "#/components/schemas/workers_binding_kind_text_blob",
																	"vectorize": "#/components/schemas/workers_binding_kind_vectorize",
																	"version_metadata": "#/components/schemas/workers_binding_kind_version_metadata",
																	"wasm_module": "#/components/schemas/workers_binding_kind_wasm_module",
																	"workflow": "#/components/schemas/workers_binding_kind_workflow"
																},
																"propertyName": "type"
															},
															"oneOf": [
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"ai"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"dataset": {
																			"description": "The name of the dataset to bind to.",
																			"example": "some_dataset",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"analytics_engine"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"dataset"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"assets"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"browser"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"id": {
																			"description": "Identifier of the D1 database to bind to.",
																			"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"d1"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"id"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"part": {
																			"description": "The name of the file containing the data content. Only accepted for `service worker syntax` Workers.",
																			"example": "my-module.bin",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"deprecated": true,
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"data_blob"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"part"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"namespace": {
																			"description": "Namespace to bind to.",
																			"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
																			"type": "string",
																			"x-auditable": true
																		},
																		"outbound": {
																			"description": "Outbound worker.",
																			"properties": {
																				"params": {
																					"description": "Pass information from the Dispatch Worker to the Outbound Worker through the parameters.",
																					"items": {
																						"example": "url",
																						"type": "string",
																						"x-auditable": true
																					},
																					"type": "array"
																				},
																				"worker": {
																					"description": "Outbound worker.",
																					"properties": {
																						"environment": {
																							"description": "Environment of the outbound worker.",
																							"type": "string",
																							"x-auditable": true
																						},
																						"service": {
																							"description": "Name of the outbound worker.",
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				}
																			},
																			"type": "object"
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"dispatch_namespace"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"namespace"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"class_name": {
																			"description": "The exported class name of the Durable Object.",
																			"example": "MyDurableObject",
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"environment": {
																			"description": "The environment of the script_name to bind to.",
																			"example": "production",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"namespace_id": {
																			"allOf": [
																				{
																					"description": "Namespace identifier tag.",
																					"example": "0f2ac74b498b48028cb68387c421e279",
																					"maxLength": 32,
																					"type": "string",
																					"x-auditable": true
																				},
																				{
																					"type": "string",
																					"x-auditable": true,
																					"x-stainless-terraform-configurability": "computed_optional"
																				}
																			]
																		},
																		"script_name": {
																			"description": "The script where the Durable Object is defined, if it is external to this Worker.",
																			"example": "my-other-worker",
																			"type": "string",
																			"x-auditable": true,
																			"x-stainless-terraform-configurability": "computed_optional"
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"durable_object_namespace"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"id": {
																			"description": "Identifier of the Hyperdrive connection to bind to.",
																			"example": "57b7076f58be42419276f058a8968187",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"hyperdrive"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"id"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "The name of the inherited binding.",
																			"example": "MY_BINDING",
																			"type": "string",
																			"x-auditable": true
																		},
																		"old_name": {
																			"description": "The old name of the inherited binding. If set, the binding will be renamed from `old_name` to `name` in the new version. If not set, the binding will keep the same name between versions.",
																			"example": "MY_OLD_BINDING",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"inherit"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"version_id": {
																			"default": "latest",
																			"description": "Identifier for the version to inherit the binding from, which can be the version ID or the literal \"latest\" to inherit from the latest version. Defaults to inheriting the binding from the latest version.",
																			"example": "8969331f-7192-434c-9938-6aea24ed58bf",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"images"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"json": {
																			"description": "JSON data to use.",
																			"example": "{ \"message\": \"Hello, world!\" }",
																			"type": "string"
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"json"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"json"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"namespace_id": {
																			"description": "Namespace identifier tag.",
																			"example": "0f2ac74b498b48028cb68387c421e279",
																			"maxLength": 32,
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"kv_namespace"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"namespace_id"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"certificate_id": {
																			"description": "Identifier of the certificate to bind to.",
																			"example": "efwu2n6s-q69d-2kr9-184j-4913e8h391k6",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"mtls_certificate"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"certificate_id"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"text": {
																			"description": "The text value to use.",
																			"example": "Hello, world!",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"plain_text"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"text"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"pipeline": {
																			"description": "Name of the Pipeline to bind to.",
																			"example": "my-pipeline",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"pipelines"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"pipeline"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"queue_name": {
																			"description": "Name of the Queue to bind to.",
																			"example": "my-queue",
																			"type": "string"
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"queue"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"queue_name"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"bucket_name": {
																			"description": "R2 bucket to bind to.",
																			"example": "my-r2-bucket",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"r2_bucket"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"bucket_name"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"text": {
																			"description": "The secret value to use.",
																			"example": "My secret.",
																			"type": "string",
																			"writeOnly": true,
																			"x-sensitive": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"secret_text"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"text"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"allowed_destination_addresses": {
																			"description": "List of allowed destination addresses.",
																			"example": [
																				"user1@example.com",
																				"user2@example.com"
																			],
																			"items": {
																				"format": "email",
																				"type": "string"
																			},
																			"type": "array",
																			"x-auditable": true
																		},
																		"allowed_sender_addresses": {
																			"description": "List of allowed sender addresses.",
																			"example": [
																				"user1@example.com",
																				"user2@example.com"
																			],
																			"items": {
																				"format": "email",
																				"type": "string"
																			},
																			"type": "array",
																			"x-auditable": true
																		},
																		"destination_address": {
																			"description": "Destination address for the email.",
																			"example": "user@example.com",
																			"format": "email",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"send_email"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"environment": {
																			"default": "production",
																			"description": "Optional environment if the Worker utilizes one.",
																			"example": "production",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"service": {
																			"description": "Name of Worker to bind to.",
																			"example": "my-worker",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"service"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"service"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"service": {
																			"description": "Name of Tail Worker to bind to.",
																			"example": "my-worker",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"tail_consumer"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"service"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"part": {
																			"description": "The name of the file containing the text content. Only accepted for `service worker syntax` Workers.",
																			"example": "my-module.txt",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"deprecated": true,
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"text_blob"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"part"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"index_name": {
																			"description": "Name of the Vectorize index to bind to.",
																			"example": "my-index-name",
																			"type": "string",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"vectorize"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"index_name"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"version_metadata"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"secret_name": {
																			"description": "Name of the secret in the store.",
																			"example": "my_secret",
																			"type": "string",
																			"x-auditable": true
																		},
																		"store_id": {
																			"description": "ID of the store containing the secret.",
																			"example": "8c8b1387108e49be85669169793e7bd2",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"secrets_store_secret"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"store_id",
																		"secret_name"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"algorithm": {
																			"description": "Algorithm-specific key parameters. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#algorithm).",
																			"type": "object",
																			"x-auditable": true
																		},
																		"format": {
																			"description": "Data format of the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#format).",
																			"enum": [
																				"raw",
																				"pkcs8",
																				"spki",
																				"jwk"
																			],
																			"example": "raw",
																			"type": "string",
																			"x-auditable": true
																		},
																		"key_base64": {
																			"description": "Base64-encoded key data. Required if `format` is \"raw\", \"pkcs8\", or \"spki\".",
																			"type": "string",
																			"writeOnly": true,
																			"x-sensitive": true
																		},
																		"key_jwk": {
																			"description": "Key data in [JSON Web Key](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#json_web_key) format. Required if `format` is \"jwk\".",
																			"type": "object",
																			"writeOnly": true,
																			"x-sensitive": true
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"secret_key"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"usages": {
																			"description": "Allowed operations with the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#keyUsages).",
																			"example": [
																				"encrypt",
																				"decrypt"
																			],
																			"items": {
																				"enum": [
																					"encrypt",
																					"decrypt",
																					"sign",
																					"verify",
																					"deriveKey",
																					"deriveBits",
																					"wrapKey",
																					"unwrapKey"
																				],
																				"type": "string"
																			},
																			"type": "array",
																			"x-auditable": true,
																			"x-stainless-collection-type": "set"
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"format",
																		"algorithm",
																		"usages"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"class_name": {
																			"description": "Class name of the Workflow. Should only be provided if the Workflow belongs to this script.",
																			"example": "my-workflow",
																			"type": "string"
																		},
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"script_name": {
																			"description": "Script name that contains the Workflow. If not provided, defaults to this script name.",
																			"example": "my-workflow",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"workflow"
																			],
																			"type": "string"
																		},
																		"workflow_name": {
																			"description": "Name of the Workflow to bind to.",
																			"example": "my-workflow",
																			"type": "string"
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"workflow_name"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"name": {
																			"description": "A JavaScript variable name for the binding.",
																			"example": "myBinding",
																			"type": "string",
																			"x-auditable": true
																		},
																		"part": {
																			"description": "The name of the file containing the WebAssembly module content. Only accepted for `service worker syntax` Workers.",
																			"example": "my-module.wasm",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": {
																			"deprecated": true,
																			"description": "The kind of resource that the binding provides.",
																			"enum": [
																				"wasm_module"
																			],
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"name",
																		"type",
																		"part"
																	],
																	"type": "object"
																}
															],
															"type": "object"
														},
														"type": "array"
													},
													"compatibility_date": {
														"description": "Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.",
														"example": "2021-01-01",
														"type": "string",
														"x-auditable": true
													},
													"compatibility_flags": {
														"default": [],
														"description": "Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.",
														"example": [
															"nodejs_compat"
														],
														"items": {
															"description": "Flag that enables or disables a specific feature in the Workers runtime.",
															"example": "nodejs_compat",
															"type": "string",
															"x-auditable": true
														},
														"type": "array",
														"x-stainless-collection-type": "set"
													},
													"created_on": {
														"description": "When the version was created.",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													},
													"id": {
														"description": "Version identifier.",
														"format": "uuid",
														"readOnly": true,
														"type": "string"
													},
													"limits": {
														"description": "Resource limits enforced at runtime.",
														"properties": {
															"cpu_ms": {
																"description": "CPU time limit in milliseconds.",
																"example": 50,
																"type": "integer"
															}
														},
														"required": [
															"cpu_ms"
														],
														"type": "object",
														"x-stainless-terraform-configurability": "computed_optional"
													},
													"main_module": {
														"description": "The name of the main module in the `modules` array (e.g. the name of the module that exports a `fetch` handler).",
														"example": "index.js",
														"type": "string"
													},
													"migrations": {
														"description": "Migrations for Durable Objects associated with the version. Migrations are applied when the version is deployed.",
														"oneOf": [
															{
																"allOf": [
																	{
																		"properties": {
																			"new_tag": {
																				"description": "Tag to set as the latest migration tag.",
																				"example": "v2",
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			},
																			"old_tag": {
																				"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
																				"example": "v1",
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"deleted_classes": {
																				"description": "A list of classes to delete Durable Object namespaces from.",
																				"items": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array",
																				"writeOnly": true
																			},
																			"new_classes": {
																				"description": "A list of classes to create Durable Object namespaces from.",
																				"items": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array",
																				"writeOnly": true
																			},
																			"new_sqlite_classes": {
																				"description": "A list of classes to create Durable Object namespaces with SQLite from.",
																				"items": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array",
																				"writeOnly": true
																			},
																			"renamed_classes": {
																				"description": "A list of classes with Durable Object namespaces that were renamed.",
																				"items": {
																					"properties": {
																						"from": {
																							"type": "string",
																							"writeOnly": true,
																							"x-auditable": true
																						},
																						"to": {
																							"type": "string",
																							"writeOnly": true,
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"type": "array",
																				"writeOnly": true
																			},
																			"transferred_classes": {
																				"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
																				"items": {
																					"properties": {
																						"from": {
																							"type": "string",
																							"writeOnly": true,
																							"x-auditable": true
																						},
																						"from_script": {
																							"type": "string",
																							"writeOnly": true,
																							"x-auditable": true
																						},
																						"to": {
																							"type": "string",
																							"writeOnly": true,
																							"x-auditable": true
																						}
																					},
																					"type": "object"
																				},
																				"type": "array",
																				"writeOnly": true
																			}
																		},
																		"type": "object"
																	}
																],
																"description": "A single set of migrations to apply."
															},
															{
																"allOf": [
																	{
																		"properties": {
																			"new_tag": {
																				"description": "Tag to set as the latest migration tag.",
																				"example": "v2",
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			},
																			"old_tag": {
																				"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
																				"example": "v1",
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	{
																		"properties": {
																			"steps": {
																				"description": "Migrations to apply in order.",
																				"items": {
																					"properties": {
																						"deleted_classes": {
																							"description": "A list of classes to delete Durable Object namespaces from.",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"type": "array",
																							"writeOnly": true
																						},
																						"new_classes": {
																							"description": "A list of classes to create Durable Object namespaces from.",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"type": "array",
																							"writeOnly": true
																						},
																						"new_sqlite_classes": {
																							"description": "A list of classes to create Durable Object namespaces with SQLite from.",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"type": "array",
																							"writeOnly": true
																						},
																						"renamed_classes": {
																							"description": "A list of classes with Durable Object namespaces that were renamed.",
																							"items": {
																								"properties": {
																									"from": {
																										"type": "string",
																										"writeOnly": true,
																										"x-auditable": true
																									},
																									"to": {
																										"type": "string",
																										"writeOnly": true,
																										"x-auditable": true
																									}
																								},
																								"type": "object"
																							},
																							"type": "array",
																							"writeOnly": true
																						},
																						"transferred_classes": {
																							"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
																							"items": {
																								"properties": {
																									"from": {
																										"type": "string",
																										"writeOnly": true,
																										"x-auditable": true
																									},
																									"from_script": {
																										"type": "string",
																										"writeOnly": true,
																										"x-auditable": true
																									},
																									"to": {
																										"type": "string",
																										"writeOnly": true,
																										"x-auditable": true
																									}
																								},
																								"type": "object"
																							},
																							"type": "array",
																							"writeOnly": true
																						}
																					},
																					"type": "object"
																				},
																				"type": "array",
																				"writeOnly": true
																			}
																		},
																		"type": "object"
																	}
																]
															}
														]
													},
													"modules": {
														"description": "Code, sourcemaps, and other content used at runtime.\n\nThis includes [`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files used to configure \n[Static Assets](https://developers.cloudflare.com/workers/static-assets/). `_headers` and `_redirects` files should be \nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
														"items": {
															"properties": {
																"content_base64": {
																	"description": "The base64-encoded module content.",
																	"example": "ZXhwb3J0IGRlZmF1bHQgewogIGFzeW5jIGZldGNoKHJlcXVlc3QsIGVudiwgY3R4KSB7CiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKCdIZWxsbyBXb3JsZCEnKQogIH0KfQ==",
																	"format": "byte",
																	"type": "string"
																},
																"content_type": {
																	"description": "The content type of the module.",
																	"example": "application/javascript+module",
																	"type": "string"
																},
																"name": {
																	"description": "The name of the module.",
																	"example": "index.js",
																	"type": "string"
																}
															},
															"required": [
																"name",
																"content_type",
																"content_base64"
															],
															"type": "object"
														},
														"type": "array",
														"x-stainless-collection-type": "set"
													},
													"number": {
														"description": "The integer version number, starting from one.",
														"readOnly": true,
														"type": "integer"
													},
													"placement": {
														"description": "Placement settings for the version.",
														"properties": {
															"mode": {
																"description": "Placement mode for the version.",
																"enum": [
																	"smart"
																],
																"example": "smart",
																"type": "string"
															}
														},
														"type": "object"
													},
													"source": {
														"description": "The client used to create the version.",
														"example": "wrangler",
														"readOnly": true,
														"type": "string"
													},
													"usage_model": {
														"default": "standard",
														"deprecated": true,
														"description": "Usage model for the version.",
														"enum": [
															"standard",
															"bundled",
															"unbound"
														],
														"example": "standard",
														"type": "string"
													}
												},
												"required": [
													"id",
													"number",
													"created_on"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List versions success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List versions failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Versions",
		"tags": [
			"Versions"
		],
		"x-api-token-group": [
			"Workers Tail Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		]
	},
	"GET /accounts/{account_id}/workers/workers/{worker_id}/versions/{version_id}": {
		"description": "Get details about a specific version.",
		"operationId": "getWorkerVersion",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "version_id",
				"required": true,
				"schema": {
					"description": "Identifier for the version, which can be ID or the literal \"latest\" to operate on the most recently created version.",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "include",
				"schema": {
					"description": "Whether to include the `modules` property of the version in the response, which contains code and sourcemap content and may add several megabytes to the response size.",
					"enum": [
						"modules"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"annotations": {
													"description": "Metadata about the version.",
													"properties": {
														"workers/message": {
															"description": "Human-readable message about the version.",
															"example": "Fixed bug.",
															"maxLength": 100,
															"type": "string"
														},
														"workers/tag": {
															"description": "User-provided identifier for the version.",
															"example": "v1.0.1",
															"maxLength": 25,
															"type": "string"
														},
														"workers/triggered_by": {
															"description": "Operation that triggered the creation of the version.",
															"example": "upload",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												},
												"assets": {
													"description": "Configuration for assets within a Worker.\n\n[`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files should be\nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
													"properties": {
														"config": {
															"description": "Configuration for assets within a Worker.",
															"properties": {
																"html_handling": {
																	"default": "auto-trailing-slash",
																	"description": "Determines the redirects and rewrites of requests for HTML content.",
																	"enum": [
																		"auto-trailing-slash",
																		"force-trailing-slash",
																		"drop-trailing-slash",
																		"none"
																	],
																	"example": "auto-trailing-slash",
																	"type": "string"
																},
																"not_found_handling": {
																	"default": "none",
																	"description": "Determines the response when a request does not match a static asset, and there is no Worker script.",
																	"enum": [
																		"none",
																		"404-page",
																		"single-page-application"
																	],
																	"example": "404-page",
																	"type": "string"
																},
																"run_worker_first": {
																	"default": false,
																	"oneOf": [
																		{
																			"description": "Contains a list path rules to control routing to either the Worker or assets. Glob (*) and negative (!) rules are supported. Rules must start with either '/' or '!/'. At least one non-negative rule must be provided, and negative rules have higher precedence than non-negative rules.",
																			"example": "[\"/api/*\", \"/oauth/callback\", \"!/api/assets/*\"]",
																			"items": {
																				"type": "string"
																			},
																			"type": "array"
																		},
																		{
																			"description": "Enables routing to always invoke the Worker script ahead of all requests. When true, this is equivalent to `[\"/*\"]` in the string array version of this field.",
																			"example": true,
																			"type": "boolean"
																		}
																	]
																}
															},
															"type": "object"
														},
														"jwt": {
															"description": "Token provided upon successful upload of all files from a registered manifest.",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"bindings": {
													"description": "List of bindings attached to a Worker. You can find more about bindings on our docs: https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/#bindings.",
													"example": [
														{
															"name": "MY_ENV_VAR",
															"text": "my_data",
															"type": "plain_text"
														}
													],
													"items": {
														"description": "A binding to allow the Worker to communicate with resources.",
														"discriminator": {
															"mapping": {
																"ai": "#/components/schemas/workers_binding_kind_ai",
																"analytics_engine": "#/components/schemas/workers_binding_kind_analytics_engine",
																"assets": "#/components/schemas/workers_binding_kind_assets",
																"browser": "#/components/schemas/workers_binding_kind_browser",
																"d1": "#/components/schemas/workers_binding_kind_d1",
																"data_blob": "#/components/schemas/workers_binding_kind_data_blob",
																"dispatch_namespace": "#/components/schemas/workers_binding_kind_dispatch_namespace",
																"durable_object_namespace": "#/components/schemas/workers_binding_kind_durable_object_namespace",
																"hyperdrive": "#/components/schemas/workers_binding_kind_hyperdrive",
																"images": "#/components/schemas/workers_binding_kind_images",
																"inherit": "#/components/schemas/workers_binding_kind_inherit",
																"json": "#/components/schemas/workers_binding_kind_json",
																"kv_namespace": "#/components/schemas/workers_binding_kind_kv_namespace",
																"mtls_certificate": "#/components/schemas/workers_binding_kind_mtls_certificate",
																"pipelines": "#/components/schemas/workers_binding_kind_pipelines",
																"plain_text": "#/components/schemas/workers_binding_kind_plain_text",
																"queue": "#/components/schemas/workers_binding_kind_queue",
																"r2_bucket": "#/components/schemas/workers_binding_kind_r2_bucket",
																"secret_key": "#/components/schemas/workers_binding_kind_secret_key",
																"secret_text": "#/components/schemas/workers_binding_kind_secret_text",
																"secrets_store_secret": "#/components/schemas/workers_binding_kind_secrets_store_secret",
																"send_email": "#/components/schemas/workers_binding_kind_send_email",
																"service": "#/components/schemas/workers_binding_kind_service",
																"tail_consumer": "#/components/schemas/workers_binding_kind_tail_consumer",
																"text_blob": "#/components/schemas/workers_binding_kind_text_blob",
																"vectorize": "#/components/schemas/workers_binding_kind_vectorize",
																"version_metadata": "#/components/schemas/workers_binding_kind_version_metadata",
																"wasm_module": "#/components/schemas/workers_binding_kind_wasm_module",
																"workflow": "#/components/schemas/workers_binding_kind_workflow"
															},
															"propertyName": "type"
														},
														"oneOf": [
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"ai"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"dataset": {
																		"description": "The name of the dataset to bind to.",
																		"example": "some_dataset",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"analytics_engine"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"dataset"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"assets"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"browser"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the D1 database to bind to.",
																		"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"d1"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"part": {
																		"description": "The name of the file containing the data content. Only accepted for `service worker syntax` Workers.",
																		"example": "my-module.bin",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"deprecated": true,
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"data_blob"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"part"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"namespace": {
																		"description": "Namespace to bind to.",
																		"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
																		"type": "string",
																		"x-auditable": true
																	},
																	"outbound": {
																		"description": "Outbound worker.",
																		"properties": {
																			"params": {
																				"description": "Pass information from the Dispatch Worker to the Outbound Worker through the parameters.",
																				"items": {
																					"example": "url",
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array"
																			},
																			"worker": {
																				"description": "Outbound worker.",
																				"properties": {
																					"environment": {
																						"description": "Environment of the outbound worker.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"service": {
																						"description": "Name of the outbound worker.",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"type": "object"
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"dispatch_namespace"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"namespace"
																],
																"type": "object"
															},
															{
																"properties": {
																	"class_name": {
																		"description": "The exported class name of the Durable Object.",
																		"example": "MyDurableObject",
																		"type": "string",
																		"x-auditable": true,
																		"x-stainless-terraform-configurability": "computed_optional"
																	},
																	"environment": {
																		"description": "The environment of the script_name to bind to.",
																		"example": "production",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"namespace_id": {
																		"allOf": [
																			{
																				"description": "Namespace identifier tag.",
																				"example": "0f2ac74b498b48028cb68387c421e279",
																				"maxLength": 32,
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"type": "string",
																				"x-auditable": true,
																				"x-stainless-terraform-configurability": "computed_optional"
																			}
																		]
																	},
																	"script_name": {
																		"description": "The script where the Durable Object is defined, if it is external to this Worker.",
																		"example": "my-other-worker",
																		"type": "string",
																		"x-auditable": true,
																		"x-stainless-terraform-configurability": "computed_optional"
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"durable_object_namespace"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the Hyperdrive connection to bind to.",
																		"example": "57b7076f58be42419276f058a8968187",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"hyperdrive"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "The name of the inherited binding.",
																		"example": "MY_BINDING",
																		"type": "string",
																		"x-auditable": true
																	},
																	"old_name": {
																		"description": "The old name of the inherited binding. If set, the binding will be renamed from `old_name` to `name` in the new version. If not set, the binding will keep the same name between versions.",
																		"example": "MY_OLD_BINDING",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"inherit"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"version_id": {
																		"default": "latest",
																		"description": "Identifier for the version to inherit the binding from, which can be the version ID or the literal \"latest\" to inherit from the latest version. Defaults to inheriting the binding from the latest version.",
																		"example": "8969331f-7192-434c-9938-6aea24ed58bf",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"images"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"json": {
																		"description": "JSON data to use.",
																		"example": "{ \"message\": \"Hello, world!\" }",
																		"type": "string"
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"json"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"json"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"namespace_id": {
																		"description": "Namespace identifier tag.",
																		"example": "0f2ac74b498b48028cb68387c421e279",
																		"maxLength": 32,
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"kv_namespace"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"namespace_id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"certificate_id": {
																		"description": "Identifier of the certificate to bind to.",
																		"example": "efwu2n6s-q69d-2kr9-184j-4913e8h391k6",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"mtls_certificate"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"certificate_id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"text": {
																		"description": "The text value to use.",
																		"example": "Hello, world!",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"plain_text"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"text"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"pipeline": {
																		"description": "Name of the Pipeline to bind to.",
																		"example": "my-pipeline",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"pipelines"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"pipeline"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"queue_name": {
																		"description": "Name of the Queue to bind to.",
																		"example": "my-queue",
																		"type": "string"
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"queue"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"queue_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"bucket_name": {
																		"description": "R2 bucket to bind to.",
																		"example": "my-r2-bucket",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"r2_bucket"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"bucket_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"text": {
																		"description": "The secret value to use.",
																		"example": "My secret.",
																		"type": "string",
																		"writeOnly": true,
																		"x-sensitive": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"secret_text"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"text"
																],
																"type": "object"
															},
															{
																"properties": {
																	"allowed_destination_addresses": {
																		"description": "List of allowed destination addresses.",
																		"example": [
																			"user1@example.com",
																			"user2@example.com"
																		],
																		"items": {
																			"format": "email",
																			"type": "string"
																		},
																		"type": "array",
																		"x-auditable": true
																	},
																	"allowed_sender_addresses": {
																		"description": "List of allowed sender addresses.",
																		"example": [
																			"user1@example.com",
																			"user2@example.com"
																		],
																		"items": {
																			"format": "email",
																			"type": "string"
																		},
																		"type": "array",
																		"x-auditable": true
																	},
																	"destination_address": {
																		"description": "Destination address for the email.",
																		"example": "user@example.com",
																		"format": "email",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"send_email"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"environment": {
																		"default": "production",
																		"description": "Optional environment if the Worker utilizes one.",
																		"example": "production",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"service": {
																		"description": "Name of Worker to bind to.",
																		"example": "my-worker",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"service"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"service"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"service": {
																		"description": "Name of Tail Worker to bind to.",
																		"example": "my-worker",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"tail_consumer"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"service"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"part": {
																		"description": "The name of the file containing the text content. Only accepted for `service worker syntax` Workers.",
																		"example": "my-module.txt",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"deprecated": true,
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"text_blob"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"part"
																],
																"type": "object"
															},
															{
																"properties": {
																	"index_name": {
																		"description": "Name of the Vectorize index to bind to.",
																		"example": "my-index-name",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"vectorize"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"index_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"version_metadata"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"secret_name": {
																		"description": "Name of the secret in the store.",
																		"example": "my_secret",
																		"type": "string",
																		"x-auditable": true
																	},
																	"store_id": {
																		"description": "ID of the store containing the secret.",
																		"example": "8c8b1387108e49be85669169793e7bd2",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"secrets_store_secret"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"store_id",
																	"secret_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"algorithm": {
																		"description": "Algorithm-specific key parameters. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#algorithm).",
																		"type": "object",
																		"x-auditable": true
																	},
																	"format": {
																		"description": "Data format of the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#format).",
																		"enum": [
																			"raw",
																			"pkcs8",
																			"spki",
																			"jwk"
																		],
																		"example": "raw",
																		"type": "string",
																		"x-auditable": true
																	},
																	"key_base64": {
																		"description": "Base64-encoded key data. Required if `format` is \"raw\", \"pkcs8\", or \"spki\".",
																		"type": "string",
																		"writeOnly": true,
																		"x-sensitive": true
																	},
																	"key_jwk": {
																		"description": "Key data in [JSON Web Key](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#json_web_key) format. Required if `format` is \"jwk\".",
																		"type": "object",
																		"writeOnly": true,
																		"x-sensitive": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"secret_key"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"usages": {
																		"description": "Allowed operations with the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#keyUsages).",
																		"example": [
																			"encrypt",
																			"decrypt"
																		],
																		"items": {
																			"enum": [
																				"encrypt",
																				"decrypt",
																				"sign",
																				"verify",
																				"deriveKey",
																				"deriveBits",
																				"wrapKey",
																				"unwrapKey"
																			],
																			"type": "string"
																		},
																		"type": "array",
																		"x-auditable": true,
																		"x-stainless-collection-type": "set"
																	}
																},
																"required": [
																	"name",
																	"type",
																	"format",
																	"algorithm",
																	"usages"
																],
																"type": "object"
															},
															{
																"properties": {
																	"class_name": {
																		"description": "Class name of the Workflow. Should only be provided if the Workflow belongs to this script.",
																		"example": "my-workflow",
																		"type": "string"
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"script_name": {
																		"description": "Script name that contains the Workflow. If not provided, defaults to this script name.",
																		"example": "my-workflow",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"workflow"
																		],
																		"type": "string"
																	},
																	"workflow_name": {
																		"description": "Name of the Workflow to bind to.",
																		"example": "my-workflow",
																		"type": "string"
																	}
																},
																"required": [
																	"name",
																	"type",
																	"workflow_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"part": {
																		"description": "The name of the file containing the WebAssembly module content. Only accepted for `service worker syntax` Workers.",
																		"example": "my-module.wasm",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"deprecated": true,
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"wasm_module"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"part"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"compatibility_date": {
													"description": "Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.",
													"example": "2021-01-01",
													"type": "string",
													"x-auditable": true
												},
												"compatibility_flags": {
													"default": [],
													"description": "Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.",
													"example": [
														"nodejs_compat"
													],
													"items": {
														"description": "Flag that enables or disables a specific feature in the Workers runtime.",
														"example": "nodejs_compat",
														"type": "string",
														"x-auditable": true
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"created_on": {
													"description": "When the version was created.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"description": "Version identifier.",
													"format": "uuid",
													"readOnly": true,
													"type": "string"
												},
												"limits": {
													"description": "Resource limits enforced at runtime.",
													"properties": {
														"cpu_ms": {
															"description": "CPU time limit in milliseconds.",
															"example": 50,
															"type": "integer"
														}
													},
													"required": [
														"cpu_ms"
													],
													"type": "object",
													"x-stainless-terraform-configurability": "computed_optional"
												},
												"main_module": {
													"description": "The name of the main module in the `modules` array (e.g. the name of the module that exports a `fetch` handler).",
													"example": "index.js",
													"type": "string"
												},
												"migrations": {
													"description": "Migrations for Durable Objects associated with the version. Migrations are applied when the version is deployed.",
													"oneOf": [
														{
															"allOf": [
																{
																	"properties": {
																		"new_tag": {
																			"description": "Tag to set as the latest migration tag.",
																			"example": "v2",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		},
																		"old_tag": {
																			"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
																			"example": "v1",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"deleted_classes": {
																			"description": "A list of classes to delete Durable Object namespaces from.",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"new_classes": {
																			"description": "A list of classes to create Durable Object namespaces from.",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"new_sqlite_classes": {
																			"description": "A list of classes to create Durable Object namespaces with SQLite from.",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"renamed_classes": {
																			"description": "A list of classes with Durable Object namespaces that were renamed.",
																			"items": {
																				"properties": {
																					"from": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					},
																					"to": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"transferred_classes": {
																			"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
																			"items": {
																				"properties": {
																					"from": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					},
																					"from_script": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					},
																					"to": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": "array",
																			"writeOnly": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "A single set of migrations to apply."
														},
														{
															"allOf": [
																{
																	"properties": {
																		"new_tag": {
																			"description": "Tag to set as the latest migration tag.",
																			"example": "v2",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		},
																		"old_tag": {
																			"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
																			"example": "v1",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"steps": {
																			"description": "Migrations to apply in order.",
																			"items": {
																				"properties": {
																					"deleted_classes": {
																						"description": "A list of classes to delete Durable Object namespaces from.",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"new_classes": {
																						"description": "A list of classes to create Durable Object namespaces from.",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"new_sqlite_classes": {
																						"description": "A list of classes to create Durable Object namespaces with SQLite from.",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"renamed_classes": {
																						"description": "A list of classes with Durable Object namespaces that were renamed.",
																						"items": {
																							"properties": {
																								"from": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								},
																								"to": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"transferred_classes": {
																						"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
																						"items": {
																							"properties": {
																								"from": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								},
																								"from_script": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								},
																								"to": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						"type": "array",
																						"writeOnly": true
																					}
																				},
																				"type": "object"
																			},
																			"type": "array",
																			"writeOnly": true
																		}
																	},
																	"type": "object"
																}
															]
														}
													]
												},
												"modules": {
													"description": "Code, sourcemaps, and other content used at runtime.\n\nThis includes [`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files used to configure \n[Static Assets](https://developers.cloudflare.com/workers/static-assets/). `_headers` and `_redirects` files should be \nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
													"items": {
														"properties": {
															"content_base64": {
																"description": "The base64-encoded module content.",
																"example": "ZXhwb3J0IGRlZmF1bHQgewogIGFzeW5jIGZldGNoKHJlcXVlc3QsIGVudiwgY3R4KSB7CiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKCdIZWxsbyBXb3JsZCEnKQogIH0KfQ==",
																"format": "byte",
																"type": "string"
															},
															"content_type": {
																"description": "The content type of the module.",
																"example": "application/javascript+module",
																"type": "string"
															},
															"name": {
																"description": "The name of the module.",
																"example": "index.js",
																"type": "string"
															}
														},
														"required": [
															"name",
															"content_type",
															"content_base64"
														],
														"type": "object"
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"number": {
													"description": "The integer version number, starting from one.",
													"readOnly": true,
													"type": "integer"
												},
												"placement": {
													"description": "Placement settings for the version.",
													"properties": {
														"mode": {
															"description": "Placement mode for the version.",
															"enum": [
																"smart"
															],
															"example": "smart",
															"type": "string"
														}
													},
													"type": "object"
												},
												"source": {
													"description": "The client used to create the version.",
													"example": "wrangler",
													"readOnly": true,
													"type": "string"
												},
												"usage_model": {
													"default": "standard",
													"deprecated": true,
													"description": "Usage model for the version.",
													"enum": [
														"standard",
														"bundled",
														"unbound"
													],
													"example": "standard",
													"type": "string"
												}
											},
											"required": [
												"id",
												"number",
												"created_on"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get version success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get version failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Version",
		"tags": [
			"Versions"
		],
		"x-api-token-group": [
			"Workers Tail Read",
			"Workers Scripts Write",
			"Workers Scripts Read"
		]
	},
	"POST /accounts/{account_id}/workers/workers/{worker_id}/versions": {
		"description": "Create a new version.",
		"operationId": "createWorkerVersion",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "worker_id",
				"required": true,
				"schema": {
					"description": "Identifier for the Worker, which can be ID or name.",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "deploy",
				"schema": {
					"description": "If true, a deployment will be created that sends 100% of traffic to the new version.",
					"type": "boolean"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"annotations": {
								"description": "Metadata about the version.",
								"properties": {
									"workers/message": {
										"description": "Human-readable message about the version.",
										"example": "Fixed bug.",
										"maxLength": 100,
										"type": "string"
									},
									"workers/tag": {
										"description": "User-provided identifier for the version.",
										"example": "v1.0.1",
										"maxLength": 25,
										"type": "string"
									},
									"workers/triggered_by": {
										"description": "Operation that triggered the creation of the version.",
										"example": "upload",
										"readOnly": true,
										"type": "string"
									}
								},
								"type": "object"
							},
							"assets": {
								"description": "Configuration for assets within a Worker.\n\n[`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files should be\nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
								"properties": {
									"config": {
										"description": "Configuration for assets within a Worker.",
										"properties": {
											"html_handling": {
												"default": "auto-trailing-slash",
												"description": "Determines the redirects and rewrites of requests for HTML content.",
												"enum": [
													"auto-trailing-slash",
													"force-trailing-slash",
													"drop-trailing-slash",
													"none"
												],
												"example": "auto-trailing-slash",
												"type": "string"
											},
											"not_found_handling": {
												"default": "none",
												"description": "Determines the response when a request does not match a static asset, and there is no Worker script.",
												"enum": [
													"none",
													"404-page",
													"single-page-application"
												],
												"example": "404-page",
												"type": "string"
											},
											"run_worker_first": {
												"default": false,
												"oneOf": [
													{
														"description": "Contains a list path rules to control routing to either the Worker or assets. Glob (*) and negative (!) rules are supported. Rules must start with either '/' or '!/'. At least one non-negative rule must be provided, and negative rules have higher precedence than non-negative rules.",
														"example": "[\"/api/*\", \"/oauth/callback\", \"!/api/assets/*\"]",
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													{
														"description": "Enables routing to always invoke the Worker script ahead of all requests. When true, this is equivalent to `[\"/*\"]` in the string array version of this field.",
														"example": true,
														"type": "boolean"
													}
												]
											}
										},
										"type": "object"
									},
									"jwt": {
										"description": "Token provided upon successful upload of all files from a registered manifest.",
										"type": "string",
										"x-sensitive": true
									}
								},
								"type": "object"
							},
							"bindings": {
								"description": "List of bindings attached to a Worker. You can find more about bindings on our docs: https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/#bindings.",
								"example": [
									{
										"name": "MY_ENV_VAR",
										"text": "my_data",
										"type": "plain_text"
									}
								],
								"items": {
									"description": "A binding to allow the Worker to communicate with resources.",
									"discriminator": {
										"mapping": {
											"ai": "#/components/schemas/workers_binding_kind_ai",
											"analytics_engine": "#/components/schemas/workers_binding_kind_analytics_engine",
											"assets": "#/components/schemas/workers_binding_kind_assets",
											"browser": "#/components/schemas/workers_binding_kind_browser",
											"d1": "#/components/schemas/workers_binding_kind_d1",
											"data_blob": "#/components/schemas/workers_binding_kind_data_blob",
											"dispatch_namespace": "#/components/schemas/workers_binding_kind_dispatch_namespace",
											"durable_object_namespace": "#/components/schemas/workers_binding_kind_durable_object_namespace",
											"hyperdrive": "#/components/schemas/workers_binding_kind_hyperdrive",
											"images": "#/components/schemas/workers_binding_kind_images",
											"inherit": "#/components/schemas/workers_binding_kind_inherit",
											"json": "#/components/schemas/workers_binding_kind_json",
											"kv_namespace": "#/components/schemas/workers_binding_kind_kv_namespace",
											"mtls_certificate": "#/components/schemas/workers_binding_kind_mtls_certificate",
											"pipelines": "#/components/schemas/workers_binding_kind_pipelines",
											"plain_text": "#/components/schemas/workers_binding_kind_plain_text",
											"queue": "#/components/schemas/workers_binding_kind_queue",
											"r2_bucket": "#/components/schemas/workers_binding_kind_r2_bucket",
											"secret_key": "#/components/schemas/workers_binding_kind_secret_key",
											"secret_text": "#/components/schemas/workers_binding_kind_secret_text",
											"secrets_store_secret": "#/components/schemas/workers_binding_kind_secrets_store_secret",
											"send_email": "#/components/schemas/workers_binding_kind_send_email",
											"service": "#/components/schemas/workers_binding_kind_service",
											"tail_consumer": "#/components/schemas/workers_binding_kind_tail_consumer",
											"text_blob": "#/components/schemas/workers_binding_kind_text_blob",
											"vectorize": "#/components/schemas/workers_binding_kind_vectorize",
											"version_metadata": "#/components/schemas/workers_binding_kind_version_metadata",
											"wasm_module": "#/components/schemas/workers_binding_kind_wasm_module",
											"workflow": "#/components/schemas/workers_binding_kind_workflow"
										},
										"propertyName": "type"
									},
									"oneOf": [
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"ai"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"dataset": {
													"description": "The name of the dataset to bind to.",
													"example": "some_dataset",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"analytics_engine"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"dataset"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"assets"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"browser"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"id": {
													"description": "Identifier of the D1 database to bind to.",
													"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"d1"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"id"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"part": {
													"description": "The name of the file containing the data content. Only accepted for `service worker syntax` Workers.",
													"example": "my-module.bin",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"deprecated": true,
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"data_blob"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"part"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"namespace": {
													"description": "Namespace to bind to.",
													"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
													"type": "string",
													"x-auditable": true
												},
												"outbound": {
													"description": "Outbound worker.",
													"properties": {
														"params": {
															"description": "Pass information from the Dispatch Worker to the Outbound Worker through the parameters.",
															"items": {
																"example": "url",
																"type": "string",
																"x-auditable": true
															},
															"type": "array"
														},
														"worker": {
															"description": "Outbound worker.",
															"properties": {
																"environment": {
																	"description": "Environment of the outbound worker.",
																	"type": "string",
																	"x-auditable": true
																},
																"service": {
																	"description": "Name of the outbound worker.",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"dispatch_namespace"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"namespace"
											],
											"type": "object"
										},
										{
											"properties": {
												"class_name": {
													"description": "The exported class name of the Durable Object.",
													"example": "MyDurableObject",
													"type": "string",
													"x-auditable": true,
													"x-stainless-terraform-configurability": "computed_optional"
												},
												"environment": {
													"description": "The environment of the script_name to bind to.",
													"example": "production",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"namespace_id": {
													"allOf": [
														{
															"description": "Namespace identifier tag.",
															"example": "0f2ac74b498b48028cb68387c421e279",
															"maxLength": 32,
															"type": "string",
															"x-auditable": true
														},
														{
															"type": "string",
															"x-auditable": true,
															"x-stainless-terraform-configurability": "computed_optional"
														}
													]
												},
												"script_name": {
													"description": "The script where the Durable Object is defined, if it is external to this Worker.",
													"example": "my-other-worker",
													"type": "string",
													"x-auditable": true,
													"x-stainless-terraform-configurability": "computed_optional"
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"durable_object_namespace"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"id": {
													"description": "Identifier of the Hyperdrive connection to bind to.",
													"example": "57b7076f58be42419276f058a8968187",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"hyperdrive"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"id"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "The name of the inherited binding.",
													"example": "MY_BINDING",
													"type": "string",
													"x-auditable": true
												},
												"old_name": {
													"description": "The old name of the inherited binding. If set, the binding will be renamed from `old_name` to `name` in the new version. If not set, the binding will keep the same name between versions.",
													"example": "MY_OLD_BINDING",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"inherit"
													],
													"type": "string",
													"x-auditable": true
												},
												"version_id": {
													"default": "latest",
													"description": "Identifier for the version to inherit the binding from, which can be the version ID or the literal \"latest\" to inherit from the latest version. Defaults to inheriting the binding from the latest version.",
													"example": "8969331f-7192-434c-9938-6aea24ed58bf",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"images"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"json": {
													"description": "JSON data to use.",
													"example": "{ \"message\": \"Hello, world!\" }",
													"type": "string"
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"json"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"json"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"namespace_id": {
													"description": "Namespace identifier tag.",
													"example": "0f2ac74b498b48028cb68387c421e279",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"kv_namespace"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"namespace_id"
											],
											"type": "object"
										},
										{
											"properties": {
												"certificate_id": {
													"description": "Identifier of the certificate to bind to.",
													"example": "efwu2n6s-q69d-2kr9-184j-4913e8h391k6",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"mtls_certificate"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"certificate_id"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"text": {
													"description": "The text value to use.",
													"example": "Hello, world!",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"plain_text"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"text"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"pipeline": {
													"description": "Name of the Pipeline to bind to.",
													"example": "my-pipeline",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"pipelines"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"pipeline"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"queue_name": {
													"description": "Name of the Queue to bind to.",
													"example": "my-queue",
													"type": "string"
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"queue"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"queue_name"
											],
											"type": "object"
										},
										{
											"properties": {
												"bucket_name": {
													"description": "R2 bucket to bind to.",
													"example": "my-r2-bucket",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"r2_bucket"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"bucket_name"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"text": {
													"description": "The secret value to use.",
													"example": "My secret.",
													"type": "string",
													"writeOnly": true,
													"x-sensitive": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"secret_text"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"text"
											],
											"type": "object"
										},
										{
											"properties": {
												"allowed_destination_addresses": {
													"description": "List of allowed destination addresses.",
													"example": [
														"user1@example.com",
														"user2@example.com"
													],
													"items": {
														"format": "email",
														"type": "string"
													},
													"type": "array",
													"x-auditable": true
												},
												"allowed_sender_addresses": {
													"description": "List of allowed sender addresses.",
													"example": [
														"user1@example.com",
														"user2@example.com"
													],
													"items": {
														"format": "email",
														"type": "string"
													},
													"type": "array",
													"x-auditable": true
												},
												"destination_address": {
													"description": "Destination address for the email.",
													"example": "user@example.com",
													"format": "email",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"send_email"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"environment": {
													"default": "production",
													"description": "Optional environment if the Worker utilizes one.",
													"example": "production",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"service": {
													"description": "Name of Worker to bind to.",
													"example": "my-worker",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"service"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"service"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"service": {
													"description": "Name of Tail Worker to bind to.",
													"example": "my-worker",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"tail_consumer"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"service"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"part": {
													"description": "The name of the file containing the text content. Only accepted for `service worker syntax` Workers.",
													"example": "my-module.txt",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"deprecated": true,
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"text_blob"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"part"
											],
											"type": "object"
										},
										{
											"properties": {
												"index_name": {
													"description": "Name of the Vectorize index to bind to.",
													"example": "my-index-name",
													"type": "string",
													"x-auditable": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"vectorize"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"index_name"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"version_metadata"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"secret_name": {
													"description": "Name of the secret in the store.",
													"example": "my_secret",
													"type": "string",
													"x-auditable": true
												},
												"store_id": {
													"description": "ID of the store containing the secret.",
													"example": "8c8b1387108e49be85669169793e7bd2",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"secrets_store_secret"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"store_id",
												"secret_name"
											],
											"type": "object"
										},
										{
											"properties": {
												"algorithm": {
													"description": "Algorithm-specific key parameters. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#algorithm).",
													"type": "object",
													"x-auditable": true
												},
												"format": {
													"description": "Data format of the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#format).",
													"enum": [
														"raw",
														"pkcs8",
														"spki",
														"jwk"
													],
													"example": "raw",
													"type": "string",
													"x-auditable": true
												},
												"key_base64": {
													"description": "Base64-encoded key data. Required if `format` is \"raw\", \"pkcs8\", or \"spki\".",
													"type": "string",
													"writeOnly": true,
													"x-sensitive": true
												},
												"key_jwk": {
													"description": "Key data in [JSON Web Key](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#json_web_key) format. Required if `format` is \"jwk\".",
													"type": "object",
													"writeOnly": true,
													"x-sensitive": true
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"secret_key"
													],
													"type": "string",
													"x-auditable": true
												},
												"usages": {
													"description": "Allowed operations with the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#keyUsages).",
													"example": [
														"encrypt",
														"decrypt"
													],
													"items": {
														"enum": [
															"encrypt",
															"decrypt",
															"sign",
															"verify",
															"deriveKey",
															"deriveBits",
															"wrapKey",
															"unwrapKey"
														],
														"type": "string"
													},
													"type": "array",
													"x-auditable": true,
													"x-stainless-collection-type": "set"
												}
											},
											"required": [
												"name",
												"type",
												"format",
												"algorithm",
												"usages"
											],
											"type": "object"
										},
										{
											"properties": {
												"class_name": {
													"description": "Class name of the Workflow. Should only be provided if the Workflow belongs to this script.",
													"example": "my-workflow",
													"type": "string"
												},
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"script_name": {
													"description": "Script name that contains the Workflow. If not provided, defaults to this script name.",
													"example": "my-workflow",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"workflow"
													],
													"type": "string"
												},
												"workflow_name": {
													"description": "Name of the Workflow to bind to.",
													"example": "my-workflow",
													"type": "string"
												}
											},
											"required": [
												"name",
												"type",
												"workflow_name"
											],
											"type": "object"
										},
										{
											"properties": {
												"name": {
													"description": "A JavaScript variable name for the binding.",
													"example": "myBinding",
													"type": "string",
													"x-auditable": true
												},
												"part": {
													"description": "The name of the file containing the WebAssembly module content. Only accepted for `service worker syntax` Workers.",
													"example": "my-module.wasm",
													"type": "string",
													"x-auditable": true
												},
												"type": {
													"deprecated": true,
													"description": "The kind of resource that the binding provides.",
													"enum": [
														"wasm_module"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"type",
												"part"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"compatibility_date": {
								"description": "Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.",
								"example": "2021-01-01",
								"type": "string",
								"x-auditable": true
							},
							"compatibility_flags": {
								"default": [],
								"description": "Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.",
								"example": [
									"nodejs_compat"
								],
								"items": {
									"description": "Flag that enables or disables a specific feature in the Workers runtime.",
									"example": "nodejs_compat",
									"type": "string",
									"x-auditable": true
								},
								"type": "array",
								"x-stainless-collection-type": "set"
							},
							"created_on": {
								"description": "When the version was created.",
								"format": "date-time",
								"readOnly": true,
								"type": "string"
							},
							"id": {
								"description": "Version identifier.",
								"format": "uuid",
								"readOnly": true,
								"type": "string"
							},
							"limits": {
								"description": "Resource limits enforced at runtime.",
								"properties": {
									"cpu_ms": {
										"description": "CPU time limit in milliseconds.",
										"example": 50,
										"type": "integer"
									}
								},
								"required": [
									"cpu_ms"
								],
								"type": "object",
								"x-stainless-terraform-configurability": "computed_optional"
							},
							"main_module": {
								"description": "The name of the main module in the `modules` array (e.g. the name of the module that exports a `fetch` handler).",
								"example": "index.js",
								"type": "string"
							},
							"migrations": {
								"description": "Migrations for Durable Objects associated with the version. Migrations are applied when the version is deployed.",
								"oneOf": [
									{
										"allOf": [
											{
												"properties": {
													"new_tag": {
														"description": "Tag to set as the latest migration tag.",
														"example": "v2",
														"type": "string",
														"writeOnly": true,
														"x-auditable": true
													},
													"old_tag": {
														"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
														"example": "v1",
														"type": "string",
														"writeOnly": true,
														"x-auditable": true
													}
												},
												"type": "object"
											},
											{
												"properties": {
													"deleted_classes": {
														"description": "A list of classes to delete Durable Object namespaces from.",
														"items": {
															"type": "string",
															"x-auditable": true
														},
														"type": "array",
														"writeOnly": true
													},
													"new_classes": {
														"description": "A list of classes to create Durable Object namespaces from.",
														"items": {
															"type": "string",
															"x-auditable": true
														},
														"type": "array",
														"writeOnly": true
													},
													"new_sqlite_classes": {
														"description": "A list of classes to create Durable Object namespaces with SQLite from.",
														"items": {
															"type": "string",
															"x-auditable": true
														},
														"type": "array",
														"writeOnly": true
													},
													"renamed_classes": {
														"description": "A list of classes with Durable Object namespaces that were renamed.",
														"items": {
															"properties": {
																"from": {
																	"type": "string",
																	"writeOnly": true,
																	"x-auditable": true
																},
																"to": {
																	"type": "string",
																	"writeOnly": true,
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": "array",
														"writeOnly": true
													},
													"transferred_classes": {
														"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
														"items": {
															"properties": {
																"from": {
																	"type": "string",
																	"writeOnly": true,
																	"x-auditable": true
																},
																"from_script": {
																	"type": "string",
																	"writeOnly": true,
																	"x-auditable": true
																},
																"to": {
																	"type": "string",
																	"writeOnly": true,
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"type": "array",
														"writeOnly": true
													}
												},
												"type": "object"
											}
										],
										"description": "A single set of migrations to apply."
									},
									{
										"allOf": [
											{
												"properties": {
													"new_tag": {
														"description": "Tag to set as the latest migration tag.",
														"example": "v2",
														"type": "string",
														"writeOnly": true,
														"x-auditable": true
													},
													"old_tag": {
														"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
														"example": "v1",
														"type": "string",
														"writeOnly": true,
														"x-auditable": true
													}
												},
												"type": "object"
											},
											{
												"properties": {
													"steps": {
														"description": "Migrations to apply in order.",
														"items": {
															"properties": {
																"deleted_classes": {
																	"description": "A list of classes to delete Durable Object namespaces from.",
																	"items": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array",
																	"writeOnly": true
																},
																"new_classes": {
																	"description": "A list of classes to create Durable Object namespaces from.",
																	"items": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array",
																	"writeOnly": true
																},
																"new_sqlite_classes": {
																	"description": "A list of classes to create Durable Object namespaces with SQLite from.",
																	"items": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array",
																	"writeOnly": true
																},
																"renamed_classes": {
																	"description": "A list of classes with Durable Object namespaces that were renamed.",
																	"items": {
																		"properties": {
																			"from": {
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			},
																			"to": {
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"type": "array",
																	"writeOnly": true
																},
																"transferred_classes": {
																	"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
																	"items": {
																		"properties": {
																			"from": {
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			},
																			"from_script": {
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			},
																			"to": {
																				"type": "string",
																				"writeOnly": true,
																				"x-auditable": true
																			}
																		},
																		"type": "object"
																	},
																	"type": "array",
																	"writeOnly": true
																}
															},
															"type": "object"
														},
														"type": "array",
														"writeOnly": true
													}
												},
												"type": "object"
											}
										]
									}
								]
							},
							"modules": {
								"description": "Code, sourcemaps, and other content used at runtime.\n\nThis includes [`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files used to configure \n[Static Assets](https://developers.cloudflare.com/workers/static-assets/). `_headers` and `_redirects` files should be \nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
								"items": {
									"properties": {
										"content_base64": {
											"description": "The base64-encoded module content.",
											"example": "ZXhwb3J0IGRlZmF1bHQgewogIGFzeW5jIGZldGNoKHJlcXVlc3QsIGVudiwgY3R4KSB7CiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKCdIZWxsbyBXb3JsZCEnKQogIH0KfQ==",
											"format": "byte",
											"type": "string"
										},
										"content_type": {
											"description": "The content type of the module.",
											"example": "application/javascript+module",
											"type": "string"
										},
										"name": {
											"description": "The name of the module.",
											"example": "index.js",
											"type": "string"
										}
									},
									"required": [
										"name",
										"content_type",
										"content_base64"
									],
									"type": "object"
								},
								"type": "array",
								"x-stainless-collection-type": "set"
							},
							"number": {
								"description": "The integer version number, starting from one.",
								"readOnly": true,
								"type": "integer"
							},
							"placement": {
								"description": "Placement settings for the version.",
								"properties": {
									"mode": {
										"description": "Placement mode for the version.",
										"enum": [
											"smart"
										],
										"example": "smart",
										"type": "string"
									}
								},
								"type": "object"
							},
							"source": {
								"description": "The client used to create the version.",
								"example": "wrangler",
								"readOnly": true,
								"type": "string"
							},
							"usage_model": {
								"default": "standard",
								"deprecated": true,
								"description": "Usage model for the version.",
								"enum": [
									"standard",
									"bundled",
									"unbound"
								],
								"example": "standard",
								"type": "string"
							}
						},
						"required": [
							"id",
							"number",
							"created_on"
						],
						"type": "object"
					}
				}
			},
			"description": "Version creation parameters.",
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"annotations": {
													"description": "Metadata about the version.",
													"properties": {
														"workers/message": {
															"description": "Human-readable message about the version.",
															"example": "Fixed bug.",
															"maxLength": 100,
															"type": "string"
														},
														"workers/tag": {
															"description": "User-provided identifier for the version.",
															"example": "v1.0.1",
															"maxLength": 25,
															"type": "string"
														},
														"workers/triggered_by": {
															"description": "Operation that triggered the creation of the version.",
															"example": "upload",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												},
												"assets": {
													"description": "Configuration for assets within a Worker.\n\n[`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files should be\nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
													"properties": {
														"config": {
															"description": "Configuration for assets within a Worker.",
															"properties": {
																"html_handling": {
																	"default": "auto-trailing-slash",
																	"description": "Determines the redirects and rewrites of requests for HTML content.",
																	"enum": [
																		"auto-trailing-slash",
																		"force-trailing-slash",
																		"drop-trailing-slash",
																		"none"
																	],
																	"example": "auto-trailing-slash",
																	"type": "string"
																},
																"not_found_handling": {
																	"default": "none",
																	"description": "Determines the response when a request does not match a static asset, and there is no Worker script.",
																	"enum": [
																		"none",
																		"404-page",
																		"single-page-application"
																	],
																	"example": "404-page",
																	"type": "string"
																},
																"run_worker_first": {
																	"default": false,
																	"oneOf": [
																		{
																			"description": "Contains a list path rules to control routing to either the Worker or assets. Glob (*) and negative (!) rules are supported. Rules must start with either '/' or '!/'. At least one non-negative rule must be provided, and negative rules have higher precedence than non-negative rules.",
																			"example": "[\"/api/*\", \"/oauth/callback\", \"!/api/assets/*\"]",
																			"items": {
																				"type": "string"
																			},
																			"type": "array"
																		},
																		{
																			"description": "Enables routing to always invoke the Worker script ahead of all requests. When true, this is equivalent to `[\"/*\"]` in the string array version of this field.",
																			"example": true,
																			"type": "boolean"
																		}
																	]
																}
															},
															"type": "object"
														},
														"jwt": {
															"description": "Token provided upon successful upload of all files from a registered manifest.",
															"type": "string",
															"x-sensitive": true
														}
													},
													"type": "object"
												},
												"bindings": {
													"description": "List of bindings attached to a Worker. You can find more about bindings on our docs: https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/#bindings.",
													"example": [
														{
															"name": "MY_ENV_VAR",
															"text": "my_data",
															"type": "plain_text"
														}
													],
													"items": {
														"description": "A binding to allow the Worker to communicate with resources.",
														"discriminator": {
															"mapping": {
																"ai": "#/components/schemas/workers_binding_kind_ai",
																"analytics_engine": "#/components/schemas/workers_binding_kind_analytics_engine",
																"assets": "#/components/schemas/workers_binding_kind_assets",
																"browser": "#/components/schemas/workers_binding_kind_browser",
																"d1": "#/components/schemas/workers_binding_kind_d1",
																"data_blob": "#/components/schemas/workers_binding_kind_data_blob",
																"dispatch_namespace": "#/components/schemas/workers_binding_kind_dispatch_namespace",
																"durable_object_namespace": "#/components/schemas/workers_binding_kind_durable_object_namespace",
																"hyperdrive": "#/components/schemas/workers_binding_kind_hyperdrive",
																"images": "#/components/schemas/workers_binding_kind_images",
																"inherit": "#/components/schemas/workers_binding_kind_inherit",
																"json": "#/components/schemas/workers_binding_kind_json",
																"kv_namespace": "#/components/schemas/workers_binding_kind_kv_namespace",
																"mtls_certificate": "#/components/schemas/workers_binding_kind_mtls_certificate",
																"pipelines": "#/components/schemas/workers_binding_kind_pipelines",
																"plain_text": "#/components/schemas/workers_binding_kind_plain_text",
																"queue": "#/components/schemas/workers_binding_kind_queue",
																"r2_bucket": "#/components/schemas/workers_binding_kind_r2_bucket",
																"secret_key": "#/components/schemas/workers_binding_kind_secret_key",
																"secret_text": "#/components/schemas/workers_binding_kind_secret_text",
																"secrets_store_secret": "#/components/schemas/workers_binding_kind_secrets_store_secret",
																"send_email": "#/components/schemas/workers_binding_kind_send_email",
																"service": "#/components/schemas/workers_binding_kind_service",
																"tail_consumer": "#/components/schemas/workers_binding_kind_tail_consumer",
																"text_blob": "#/components/schemas/workers_binding_kind_text_blob",
																"vectorize": "#/components/schemas/workers_binding_kind_vectorize",
																"version_metadata": "#/components/schemas/workers_binding_kind_version_metadata",
																"wasm_module": "#/components/schemas/workers_binding_kind_wasm_module",
																"workflow": "#/components/schemas/workers_binding_kind_workflow"
															},
															"propertyName": "type"
														},
														"oneOf": [
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"ai"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"dataset": {
																		"description": "The name of the dataset to bind to.",
																		"example": "some_dataset",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"analytics_engine"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"dataset"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"assets"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"browser"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the D1 database to bind to.",
																		"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"d1"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"part": {
																		"description": "The name of the file containing the data content. Only accepted for `service worker syntax` Workers.",
																		"example": "my-module.bin",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"deprecated": true,
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"data_blob"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"part"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"namespace": {
																		"description": "Namespace to bind to.",
																		"example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
																		"type": "string",
																		"x-auditable": true
																	},
																	"outbound": {
																		"description": "Outbound worker.",
																		"properties": {
																			"params": {
																				"description": "Pass information from the Dispatch Worker to the Outbound Worker through the parameters.",
																				"items": {
																					"example": "url",
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array"
																			},
																			"worker": {
																				"description": "Outbound worker.",
																				"properties": {
																					"environment": {
																						"description": "Environment of the outbound worker.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"service": {
																						"description": "Name of the outbound worker.",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			}
																		},
																		"type": "object"
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"dispatch_namespace"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"namespace"
																],
																"type": "object"
															},
															{
																"properties": {
																	"class_name": {
																		"description": "The exported class name of the Durable Object.",
																		"example": "MyDurableObject",
																		"type": "string",
																		"x-auditable": true,
																		"x-stainless-terraform-configurability": "computed_optional"
																	},
																	"environment": {
																		"description": "The environment of the script_name to bind to.",
																		"example": "production",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"namespace_id": {
																		"allOf": [
																			{
																				"description": "Namespace identifier tag.",
																				"example": "0f2ac74b498b48028cb68387c421e279",
																				"maxLength": 32,
																				"type": "string",
																				"x-auditable": true
																			},
																			{
																				"type": "string",
																				"x-auditable": true,
																				"x-stainless-terraform-configurability": "computed_optional"
																			}
																		]
																	},
																	"script_name": {
																		"description": "The script where the Durable Object is defined, if it is external to this Worker.",
																		"example": "my-other-worker",
																		"type": "string",
																		"x-auditable": true,
																		"x-stainless-terraform-configurability": "computed_optional"
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"durable_object_namespace"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the Hyperdrive connection to bind to.",
																		"example": "57b7076f58be42419276f058a8968187",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"hyperdrive"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "The name of the inherited binding.",
																		"example": "MY_BINDING",
																		"type": "string",
																		"x-auditable": true
																	},
																	"old_name": {
																		"description": "The old name of the inherited binding. If set, the binding will be renamed from `old_name` to `name` in the new version. If not set, the binding will keep the same name between versions.",
																		"example": "MY_OLD_BINDING",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"inherit"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"version_id": {
																		"default": "latest",
																		"description": "Identifier for the version to inherit the binding from, which can be the version ID or the literal \"latest\" to inherit from the latest version. Defaults to inheriting the binding from the latest version.",
																		"example": "8969331f-7192-434c-9938-6aea24ed58bf",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"images"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"json": {
																		"description": "JSON data to use.",
																		"example": "{ \"message\": \"Hello, world!\" }",
																		"type": "string"
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"json"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"json"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"namespace_id": {
																		"description": "Namespace identifier tag.",
																		"example": "0f2ac74b498b48028cb68387c421e279",
																		"maxLength": 32,
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"kv_namespace"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"namespace_id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"certificate_id": {
																		"description": "Identifier of the certificate to bind to.",
																		"example": "efwu2n6s-q69d-2kr9-184j-4913e8h391k6",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"mtls_certificate"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"certificate_id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"text": {
																		"description": "The text value to use.",
																		"example": "Hello, world!",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"plain_text"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"text"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"pipeline": {
																		"description": "Name of the Pipeline to bind to.",
																		"example": "my-pipeline",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"pipelines"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"pipeline"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"queue_name": {
																		"description": "Name of the Queue to bind to.",
																		"example": "my-queue",
																		"type": "string"
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"queue"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"queue_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"bucket_name": {
																		"description": "R2 bucket to bind to.",
																		"example": "my-r2-bucket",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"r2_bucket"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"bucket_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"text": {
																		"description": "The secret value to use.",
																		"example": "My secret.",
																		"type": "string",
																		"writeOnly": true,
																		"x-sensitive": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"secret_text"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"text"
																],
																"type": "object"
															},
															{
																"properties": {
																	"allowed_destination_addresses": {
																		"description": "List of allowed destination addresses.",
																		"example": [
																			"user1@example.com",
																			"user2@example.com"
																		],
																		"items": {
																			"format": "email",
																			"type": "string"
																		},
																		"type": "array",
																		"x-auditable": true
																	},
																	"allowed_sender_addresses": {
																		"description": "List of allowed sender addresses.",
																		"example": [
																			"user1@example.com",
																			"user2@example.com"
																		],
																		"items": {
																			"format": "email",
																			"type": "string"
																		},
																		"type": "array",
																		"x-auditable": true
																	},
																	"destination_address": {
																		"description": "Destination address for the email.",
																		"example": "user@example.com",
																		"format": "email",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"send_email"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"environment": {
																		"default": "production",
																		"description": "Optional environment if the Worker utilizes one.",
																		"example": "production",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"service": {
																		"description": "Name of Worker to bind to.",
																		"example": "my-worker",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"service"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"service"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"service": {
																		"description": "Name of Tail Worker to bind to.",
																		"example": "my-worker",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"tail_consumer"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"service"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"part": {
																		"description": "The name of the file containing the text content. Only accepted for `service worker syntax` Workers.",
																		"example": "my-module.txt",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"deprecated": true,
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"text_blob"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"part"
																],
																"type": "object"
															},
															{
																"properties": {
																	"index_name": {
																		"description": "Name of the Vectorize index to bind to.",
																		"example": "my-index-name",
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"vectorize"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"index_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"version_metadata"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"secret_name": {
																		"description": "Name of the secret in the store.",
																		"example": "my_secret",
																		"type": "string",
																		"x-auditable": true
																	},
																	"store_id": {
																		"description": "ID of the store containing the secret.",
																		"example": "8c8b1387108e49be85669169793e7bd2",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"secrets_store_secret"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"store_id",
																	"secret_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"algorithm": {
																		"description": "Algorithm-specific key parameters. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#algorithm).",
																		"type": "object",
																		"x-auditable": true
																	},
																	"format": {
																		"description": "Data format of the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#format).",
																		"enum": [
																			"raw",
																			"pkcs8",
																			"spki",
																			"jwk"
																		],
																		"example": "raw",
																		"type": "string",
																		"x-auditable": true
																	},
																	"key_base64": {
																		"description": "Base64-encoded key data. Required if `format` is \"raw\", \"pkcs8\", or \"spki\".",
																		"type": "string",
																		"writeOnly": true,
																		"x-sensitive": true
																	},
																	"key_jwk": {
																		"description": "Key data in [JSON Web Key](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#json_web_key) format. Required if `format` is \"jwk\".",
																		"type": "object",
																		"writeOnly": true,
																		"x-sensitive": true
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"secret_key"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"usages": {
																		"description": "Allowed operations with the key. [Learn more](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#keyUsages).",
																		"example": [
																			"encrypt",
																			"decrypt"
																		],
																		"items": {
																			"enum": [
																				"encrypt",
																				"decrypt",
																				"sign",
																				"verify",
																				"deriveKey",
																				"deriveBits",
																				"wrapKey",
																				"unwrapKey"
																			],
																			"type": "string"
																		},
																		"type": "array",
																		"x-auditable": true,
																		"x-stainless-collection-type": "set"
																	}
																},
																"required": [
																	"name",
																	"type",
																	"format",
																	"algorithm",
																	"usages"
																],
																"type": "object"
															},
															{
																"properties": {
																	"class_name": {
																		"description": "Class name of the Workflow. Should only be provided if the Workflow belongs to this script.",
																		"example": "my-workflow",
																		"type": "string"
																	},
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"script_name": {
																		"description": "Script name that contains the Workflow. If not provided, defaults to this script name.",
																		"example": "my-workflow",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"workflow"
																		],
																		"type": "string"
																	},
																	"workflow_name": {
																		"description": "Name of the Workflow to bind to.",
																		"example": "my-workflow",
																		"type": "string"
																	}
																},
																"required": [
																	"name",
																	"type",
																	"workflow_name"
																],
																"type": "object"
															},
															{
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"example": "myBinding",
																		"type": "string",
																		"x-auditable": true
																	},
																	"part": {
																		"description": "The name of the file containing the WebAssembly module content. Only accepted for `service worker syntax` Workers.",
																		"example": "my-module.wasm",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": {
																		"deprecated": true,
																		"description": "The kind of resource that the binding provides.",
																		"enum": [
																			"wasm_module"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"type",
																	"part"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"compatibility_date": {
													"description": "Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.",
													"example": "2021-01-01",
													"type": "string",
													"x-auditable": true
												},
												"compatibility_flags": {
													"default": [],
													"description": "Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.",
													"example": [
														"nodejs_compat"
													],
													"items": {
														"description": "Flag that enables or disables a specific feature in the Workers runtime.",
														"example": "nodejs_compat",
														"type": "string",
														"x-auditable": true
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"created_on": {
													"description": "When the version was created.",
													"format": "date-time",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"description": "Version identifier.",
													"format": "uuid",
													"readOnly": true,
													"type": "string"
												},
												"limits": {
													"description": "Resource limits enforced at runtime.",
													"properties": {
														"cpu_ms": {
															"description": "CPU time limit in milliseconds.",
															"example": 50,
															"type": "integer"
														}
													},
													"required": [
														"cpu_ms"
													],
													"type": "object",
													"x-stainless-terraform-configurability": "computed_optional"
												},
												"main_module": {
													"description": "The name of the main module in the `modules` array (e.g. the name of the module that exports a `fetch` handler).",
													"example": "index.js",
													"type": "string"
												},
												"migrations": {
													"description": "Migrations for Durable Objects associated with the version. Migrations are applied when the version is deployed.",
													"oneOf": [
														{
															"allOf": [
																{
																	"properties": {
																		"new_tag": {
																			"description": "Tag to set as the latest migration tag.",
																			"example": "v2",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		},
																		"old_tag": {
																			"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
																			"example": "v1",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"deleted_classes": {
																			"description": "A list of classes to delete Durable Object namespaces from.",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"new_classes": {
																			"description": "A list of classes to create Durable Object namespaces from.",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"new_sqlite_classes": {
																			"description": "A list of classes to create Durable Object namespaces with SQLite from.",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"renamed_classes": {
																			"description": "A list of classes with Durable Object namespaces that were renamed.",
																			"items": {
																				"properties": {
																					"from": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					},
																					"to": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": "array",
																			"writeOnly": true
																		},
																		"transferred_classes": {
																			"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
																			"items": {
																				"properties": {
																					"from": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					},
																					"from_script": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					},
																					"to": {
																						"type": "string",
																						"writeOnly": true,
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"type": "array",
																			"writeOnly": true
																		}
																	},
																	"type": "object"
																}
															],
															"description": "A single set of migrations to apply."
														},
														{
															"allOf": [
																{
																	"properties": {
																		"new_tag": {
																			"description": "Tag to set as the latest migration tag.",
																			"example": "v2",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		},
																		"old_tag": {
																			"description": "Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.",
																			"example": "v1",
																			"type": "string",
																			"writeOnly": true,
																			"x-auditable": true
																		}
																	},
																	"type": "object"
																},
																{
																	"properties": {
																		"steps": {
																			"description": "Migrations to apply in order.",
																			"items": {
																				"properties": {
																					"deleted_classes": {
																						"description": "A list of classes to delete Durable Object namespaces from.",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"new_classes": {
																						"description": "A list of classes to create Durable Object namespaces from.",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"new_sqlite_classes": {
																						"description": "A list of classes to create Durable Object namespaces with SQLite from.",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"renamed_classes": {
																						"description": "A list of classes with Durable Object namespaces that were renamed.",
																						"items": {
																							"properties": {
																								"from": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								},
																								"to": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						"type": "array",
																						"writeOnly": true
																					},
																					"transferred_classes": {
																						"description": "A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker.",
																						"items": {
																							"properties": {
																								"from": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								},
																								"from_script": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								},
																								"to": {
																									"type": "string",
																									"writeOnly": true,
																									"x-auditable": true
																								}
																							},
																							"type": "object"
																						},
																						"type": "array",
																						"writeOnly": true
																					}
																				},
																				"type": "object"
																			},
																			"type": "array",
																			"writeOnly": true
																		}
																	},
																	"type": "object"
																}
															]
														}
													]
												},
												"modules": {
													"description": "Code, sourcemaps, and other content used at runtime.\n\nThis includes [`_headers`](https://developers.cloudflare.com/workers/static-assets/headers/#custom-headers) and\n[`_redirects`](https://developers.cloudflare.com/workers/static-assets/redirects/) files used to configure \n[Static Assets](https://developers.cloudflare.com/workers/static-assets/). `_headers` and `_redirects` files should be \nincluded as modules named `_headers` and `_redirects` with content type `text/plain`.\n",
													"items": {
														"properties": {
															"content_base64": {
																"description": "The base64-encoded module content.",
																"example": "ZXhwb3J0IGRlZmF1bHQgewogIGFzeW5jIGZldGNoKHJlcXVlc3QsIGVudiwgY3R4KSB7CiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKCdIZWxsbyBXb3JsZCEnKQogIH0KfQ==",
																"format": "byte",
																"type": "string"
															},
															"content_type": {
																"description": "The content type of the module.",
																"example": "application/javascript+module",
																"type": "string"
															},
															"name": {
																"description": "The name of the module.",
																"example": "index.js",
																"type": "string"
															}
														},
														"required": [
															"name",
															"content_type",
															"content_base64"
														],
														"type": "object"
													},
													"type": "array",
													"x-stainless-collection-type": "set"
												},
												"number": {
													"description": "The integer version number, starting from one.",
													"readOnly": true,
													"type": "integer"
												},
												"placement": {
													"description": "Placement settings for the version.",
													"properties": {
														"mode": {
															"description": "Placement mode for the version.",
															"enum": [
																"smart"
															],
															"example": "smart",
															"type": "string"
														}
													},
													"type": "object"
												},
												"source": {
													"description": "The client used to create the version.",
													"example": "wrangler",
													"readOnly": true,
													"type": "string"
												},
												"usage_model": {
													"default": "standard",
													"deprecated": true,
													"description": "Usage model for the version.",
													"enum": [
														"standard",
														"bundled",
														"unbound"
													],
													"example": "standard",
													"type": "string"
												}
											},
											"required": [
												"id",
												"number",
												"created_on"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create version success."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"documentation_url": {
														"type": "string"
													},
													"message": {
														"type": "string"
													},
													"source": {
														"properties": {
															"pointer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Create version failure."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Version",
		"tags": [
			"Versions"
		],
		"x-api-token-group": [
			"Workers Scripts Write"
		]
	}
}