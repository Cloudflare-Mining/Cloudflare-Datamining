{
	"DELETE /accounts/{account_id}/devices/policy/{policy_id}": {
		"description": "Deletes a device settings profile and fetches a list of the remaining profiles for an account.",
		"operationId": "devices-delete-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"allow_mode_switch": {
														"description": "Whether to allow the user to switch WARP between modes.",
														"example": true,
														"type": "boolean"
													},
													"allow_updates": {
														"description": "Whether to receive update notifications when a new version of the client is available.",
														"example": true,
														"type": "boolean"
													},
													"allowed_to_leave": {
														"description": "Whether to allow devices to leave the organization.",
														"example": true,
														"type": "boolean"
													},
													"auto_connect": {
														"description": "The amount of time in seconds to reconnect after having been disabled.",
														"example": 0,
														"type": "number"
													},
													"captive_portal": {
														"description": "Turn on the captive portal after the specified amount of time.",
														"example": 180,
														"type": "number"
													},
													"default": {
														"description": "Whether the policy is the default policy for an account.",
														"example": false,
														"type": "boolean"
													},
													"description": {
														"description": "A description of the policy.",
														"example": "Policy for test teams.",
														"maxLength": 500,
														"type": "string"
													},
													"disable_auto_fallback": {
														"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"enabled": {
														"description": "Whether the policy will be applied to matching devices.",
														"example": true,
														"type": "boolean"
													},
													"exclude": {
														"description": "List of routes excluded in the WARP client's tunnel.",
														"items": {
															"oneOf": [
																{
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Exclude testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		}
																	},
																	"required": [
																		"address"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Exclude testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"host"
																	],
																	"type": "object"
																}
															],
															"type": "object"
														},
														"type": "array"
													},
													"exclude_office_ips": {
														"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
														"example": true,
														"type": "boolean"
													},
													"fallback_domains": {
														"items": {
															"properties": {
																"description": {
																	"description": "A description of the fallback domain, displayed in the client UI.",
																	"example": "Domain bypass for local development",
																	"maxLength": 100,
																	"type": "string",
																	"x-auditable": true
																},
																"dns_server": {
																	"description": "A list of IP addresses to handle domain resolution.",
																	"items": {
																		"description": "IPv4 or IPv6 address.",
																		"example": "1.1.1.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array"
																},
																"suffix": {
																	"description": "The domain suffix to match when resolving locally.",
																	"example": "example.com",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"suffix"
															],
															"type": "object"
														},
														"type": "array"
													},
													"gateway_unique_id": {
														"example": "699d98642c564d2e855e9661899b7252",
														"type": "string"
													},
													"include": {
														"description": "List of routes included in the WARP client's tunnel.",
														"items": {
															"oneOf": [
																{
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Include testing domains in the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		}
																	},
																	"required": [
																		"address"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Include testing domains in the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"host"
																	],
																	"type": "object"
																}
															],
															"type": "object"
														},
														"type": "array"
													},
													"lan_allow_minutes": {
														"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
														"example": 30,
														"type": "number"
													},
													"lan_allow_subnet_size": {
														"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
														"example": 24,
														"type": "number"
													},
													"match": {
														"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
														"example": "identity.email == \"test@cloudflare.com\"",
														"maxLength": 500,
														"type": "string"
													},
													"name": {
														"description": "The name of the device settings profile.",
														"example": "Allow Developers",
														"maxLength": 100,
														"type": "string"
													},
													"policy_id": {
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string",
														"x-auditable": true
													},
													"precedence": {
														"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
														"example": 100,
														"type": "number"
													},
													"register_interface_ip_with_dns": {
														"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
														"example": true,
														"type": "boolean"
													},
													"sccm_vpn_boundary_support": {
														"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
														"example": false,
														"type": "boolean"
													},
													"service_mode_v2": {
														"properties": {
															"mode": {
																"description": "The mode to run the WARP client under.",
																"example": "proxy",
																"type": "string",
																"x-auditable": true
															},
															"port": {
																"description": "The port number when used with proxy mode.",
																"example": 3000,
																"type": "number",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"support_url": {
														"description": "The URL to launch when the Send Feedback button is clicked.",
														"example": "https://1.1.1.1/help",
														"type": "string"
													},
													"switch_locked": {
														"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
														"example": true,
														"type": "boolean"
													},
													"target_tests": {
														"items": {
															"properties": {
																"id": {
																	"description": "The id of the DEX test targeting this policy.",
																	"type": "string"
																},
																"name": {
																	"description": "The name of the DEX test targeting this policy.",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"type": "array"
													},
													"tunnel_protocol": {
														"description": "Determines which tunnel protocol to use.",
														"example": "wireguard",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"allow_mode_switch": {
																"description": "Whether to allow the user to switch WARP between modes.",
																"example": true,
																"type": "boolean"
															},
															"allow_updates": {
																"description": "Whether to receive update notifications when a new version of the client is available.",
																"example": true,
																"type": "boolean"
															},
															"allowed_to_leave": {
																"description": "Whether to allow devices to leave the organization.",
																"example": true,
																"type": "boolean"
															},
															"auto_connect": {
																"description": "The amount of time in seconds to reconnect after having been disabled.",
																"example": 0,
																"type": "number"
															},
															"captive_portal": {
																"description": "Turn on the captive portal after the specified amount of time.",
																"example": 180,
																"type": "number"
															},
															"default": {
																"description": "Whether the policy is the default policy for an account.",
																"example": false,
																"type": "boolean"
															},
															"description": {
																"description": "A description of the policy.",
																"example": "Policy for test teams.",
																"maxLength": 500,
																"type": "string"
															},
															"disable_auto_fallback": {
																"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"enabled": {
																"description": "Whether the policy will be applied to matching devices.",
																"example": true,
																"type": "boolean"
															},
															"exclude": {
																"description": "List of routes excluded in the WARP client's tunnel.",
																"items": {
																	"oneOf": [
																		{
																			"properties": {
																				"address": {
																					"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																					"example": "192.0.2.0/24",
																					"type": "string"
																				},
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Exclude testing domains from the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				}
																			},
																			"required": [
																				"address"
																			],
																			"type": "object"
																		},
																		{
																			"properties": {
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Exclude testing domains from the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				},
																				"host": {
																					"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																					"example": "*.example.com",
																					"type": "string"
																				}
																			},
																			"required": [
																				"host"
																			],
																			"type": "object"
																		}
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"exclude_office_ips": {
																"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
																"example": true,
																"type": "boolean"
															},
															"fallback_domains": {
																"items": {
																	"properties": {
																		"description": {
																			"description": "A description of the fallback domain, displayed in the client UI.",
																			"example": "Domain bypass for local development",
																			"maxLength": 100,
																			"type": "string",
																			"x-auditable": true
																		},
																		"dns_server": {
																			"description": "A list of IP addresses to handle domain resolution.",
																			"items": {
																				"description": "IPv4 or IPv6 address.",
																				"example": "1.1.1.1",
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		},
																		"suffix": {
																			"description": "The domain suffix to match when resolving locally.",
																			"example": "example.com",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"suffix"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"gateway_unique_id": {
																"example": "699d98642c564d2e855e9661899b7252",
																"type": "string"
															},
															"include": {
																"description": "List of routes included in the WARP client's tunnel.",
																"items": {
																	"oneOf": [
																		{
																			"properties": {
																				"address": {
																					"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																					"example": "192.0.2.0/24",
																					"type": "string"
																				},
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Include testing domains in the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				}
																			},
																			"required": [
																				"address"
																			],
																			"type": "object"
																		},
																		{
																			"properties": {
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Include testing domains in the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				},
																				"host": {
																					"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																					"example": "*.example.com",
																					"type": "string"
																				}
																			},
																			"required": [
																				"host"
																			],
																			"type": "object"
																		}
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"lan_allow_minutes": {
																"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
																"example": 30,
																"type": "number"
															},
															"lan_allow_subnet_size": {
																"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
																"example": 24,
																"type": "number"
															},
															"match": {
																"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
																"example": "identity.email == \"test@cloudflare.com\"",
																"maxLength": 500,
																"type": "string"
															},
															"name": {
																"description": "The name of the device settings profile.",
																"example": "Allow Developers",
																"maxLength": 100,
																"type": "string"
															},
															"policy_id": {
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"type": "string",
																"x-auditable": true
															},
															"precedence": {
																"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
																"example": 100,
																"type": "number"
															},
															"register_interface_ip_with_dns": {
																"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
																"example": true,
																"type": "boolean"
															},
															"sccm_vpn_boundary_support": {
																"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
																"example": false,
																"type": "boolean"
															},
															"service_mode_v2": {
																"properties": {
																	"mode": {
																		"description": "The mode to run the WARP client under.",
																		"example": "proxy",
																		"type": "string",
																		"x-auditable": true
																	},
																	"port": {
																		"description": "The port number when used with proxy mode.",
																		"example": 3000,
																		"type": "number",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"support_url": {
																"description": "The URL to launch when the Send Feedback button is clicked.",
																"example": "https://1.1.1.1/help",
																"type": "string"
															},
															"switch_locked": {
																"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
																"example": true,
																"type": "boolean"
															},
															"target_tests": {
																"items": {
																	"properties": {
																		"id": {
																			"description": "The id of the DEX test targeting this policy.",
																			"type": "string"
																		},
																		"name": {
																			"description": "The name of the DEX test targeting this policy.",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"type": "array"
															},
															"tunnel_protocol": {
																"description": "Determines which tunnel protocol to use.",
																"example": "wireguard",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Delete a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices": {
		"deprecated": true,
		"description": "List WARP devices. Not supported when [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/) is enabled for the account.\n\n**Deprecated**: please use one of the following endpoints instead:\n- GET /accounts/{account_id}/devices/physical-devices\n- GET /accounts/{account_id}/devices/registrations\n",
		"operationId": "devices-list-devices",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created": {
														"description": "When the device was created.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"deleted": {
														"description": "True if the device was deleted.",
														"example": true,
														"type": "boolean"
													},
													"device_type": {
														"enum": [
															"windows",
															"mac",
															"linux",
															"android",
															"ios",
															"chromeos"
														],
														"example": "windows",
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string",
														"x-auditable": true
													},
													"ip": {
														"description": "IPv4 or IPv6 address.",
														"example": "1.1.1.1",
														"type": "string",
														"x-auditable": true
													},
													"key": {
														"description": "The device's public key.",
														"example": "yek0SUYoOQ10vMGsIYAevozXUQpQtNFJFfFGqER/BGc=",
														"type": "string"
													},
													"last_seen": {
														"description": "When the device last connected to Cloudflare services.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"mac_address": {
														"description": "The device mac address.",
														"example": "00-00-5E-00-53-00",
														"type": "string",
														"x-auditable": true
													},
													"manufacturer": {
														"description": "The device manufacturer name.",
														"example": "My phone corp",
														"type": "string"
													},
													"model": {
														"description": "The device model name.",
														"example": "MyPhone(pro-X)",
														"type": "string"
													},
													"name": {
														"description": "The device name.",
														"example": "My mobile device",
														"type": "string"
													},
													"os_distro_name": {
														"description": "The Linux distro name.",
														"example": "ubuntu",
														"type": "string",
														"x-auditable": true
													},
													"os_distro_revision": {
														"description": "The Linux distro revision.",
														"example": "1.0.0",
														"type": "string",
														"x-auditable": true
													},
													"os_version": {
														"description": "The operating system version.",
														"example": "10.0.0",
														"type": "string"
													},
													"os_version_extra": {
														"description": "The operating system version extra parameter.",
														"example": "(a)",
														"type": "string"
													},
													"revoked_at": {
														"description": "When the device was revoked.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"serial_number": {
														"description": "The device serial number.",
														"example": "EXAMPLEHMD6R",
														"type": "string"
													},
													"updated": {
														"description": "When the device was updated.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string",
														"x-auditable": true
													},
													"user": {
														"properties": {
															"email": {
																"description": "The contact email address of the user.",
																"example": "user@example.com",
																"maxLength": 90,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "UUID.",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"description": "The enrolled device user's name.",
																"example": "John Appleseed",
																"type": "string"
															}
														},
														"type": "object"
													},
													"version": {
														"description": "The WARP client version.",
														"example": "1.0.0",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List devices response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"created": {
																"description": "When the device was created.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"deleted": {
																"description": "True if the device was deleted.",
																"example": true,
																"type": "boolean"
															},
															"device_type": {
																"enum": [
																	"windows",
																	"mac",
																	"linux",
																	"android",
																	"ios",
																	"chromeos"
																],
																"example": "windows",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"type": "string",
																"x-auditable": true
															},
															"ip": {
																"description": "IPv4 or IPv6 address.",
																"example": "1.1.1.1",
																"type": "string",
																"x-auditable": true
															},
															"key": {
																"description": "The device's public key.",
																"example": "yek0SUYoOQ10vMGsIYAevozXUQpQtNFJFfFGqER/BGc=",
																"type": "string"
															},
															"last_seen": {
																"description": "When the device last connected to Cloudflare services.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"mac_address": {
																"description": "The device mac address.",
																"example": "00-00-5E-00-53-00",
																"type": "string",
																"x-auditable": true
															},
															"manufacturer": {
																"description": "The device manufacturer name.",
																"example": "My phone corp",
																"type": "string"
															},
															"model": {
																"description": "The device model name.",
																"example": "MyPhone(pro-X)",
																"type": "string"
															},
															"name": {
																"description": "The device name.",
																"example": "My mobile device",
																"type": "string"
															},
															"os_distro_name": {
																"description": "The Linux distro name.",
																"example": "ubuntu",
																"type": "string",
																"x-auditable": true
															},
															"os_distro_revision": {
																"description": "The Linux distro revision.",
																"example": "1.0.0",
																"type": "string",
																"x-auditable": true
															},
															"os_version": {
																"description": "The operating system version.",
																"example": "10.0.0",
																"type": "string"
															},
															"os_version_extra": {
																"description": "The operating system version extra parameter.",
																"example": "(a)",
																"type": "string"
															},
															"revoked_at": {
																"description": "When the device was revoked.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"serial_number": {
																"description": "The device serial number.",
																"example": "EXAMPLEHMD6R",
																"type": "string"
															},
															"updated": {
																"description": "When the device was updated.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"user": {
																"properties": {
																	"email": {
																		"description": "The contact email address of the user.",
																		"example": "user@example.com",
																		"maxLength": 90,
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"description": "UUID.",
																		"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																		"maxLength": 36,
																		"readOnly": true,
																		"type": "string",
																		"x-auditable": true
																	},
																	"name": {
																		"description": "The enrolled device user's name.",
																		"example": "John Appleseed",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"version": {
																"description": "The WARP client version.",
																"example": "1.0.0",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List devices response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List devices (deprecated)",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/{device_id}": {
		"deprecated": true,
		"description": "Fetches a single WARP device. Not supported when [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/) is enabled for the account.\n\n**Deprecated**: please use one of the following endpoints instead:\n- GET /accounts/{account_id}/devices/physical-devices/{device_id}\n- GET /accounts/{account_id}/devices/registrations/{registration_id}\n",
		"operationId": "devices-device-details",
		"parameters": [
			{
				"in": "path",
				"name": "device_id",
				"required": true,
				"schema": {
					"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"account": {
													"properties": {
														"account_type": {
															"deprecated": true,
															"type": "string"
														},
														"id": {
															"deprecated": true,
															"type": "string"
														},
														"name": {
															"description": "The name of the enrolled account.",
															"example": "Company",
															"type": "string",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"created": {
													"description": "When the device was created.",
													"example": "2017-06-14T00:00:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"deleted": {
													"description": "True if the device was deleted.",
													"example": true,
													"type": "boolean"
												},
												"device_type": {
													"example": "windows",
													"type": "string",
													"x-auditable": true
												},
												"gateway_device_id": {
													"deprecated": true,
													"example": "PD33E90AXfafe14643cbbbc-4a0ed4fc8415Q",
													"type": "string"
												},
												"id": {
													"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string",
													"x-auditable": true
												},
												"ip": {
													"description": "IPv4 or IPv6 address.",
													"example": "1.1.1.1",
													"type": "string",
													"x-auditable": true
												},
												"key": {
													"description": "The device's public key.",
													"example": "yek0SUYoOQ10vMGsIYAevozXUQpQtNFJFfFGqER/BGc=",
													"type": "string"
												},
												"key_type": {
													"description": "Type of the key.",
													"example": "curve25519",
													"type": "string",
													"x-auditable": true
												},
												"last_seen": {
													"description": "When the device last connected to Cloudflare services.",
													"example": "2017-06-14T00:00:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"mac_address": {
													"description": "The device mac address.",
													"example": "00-00-5E-00-53-00",
													"type": "string",
													"x-auditable": true
												},
												"model": {
													"description": "The device model name.",
													"example": "MyPhone(pro-X)",
													"type": "string"
												},
												"name": {
													"description": "The device name.",
													"example": "My mobile device",
													"type": "string"
												},
												"os_version": {
													"description": "The operating system version.",
													"example": "10.0.0",
													"type": "string"
												},
												"serial_number": {
													"description": "The device serial number.",
													"example": "EXAMPLEHMD6R",
													"type": "string"
												},
												"tunnel_type": {
													"description": "Type of the tunnel connection used.",
													"example": "masque",
													"type": "string",
													"x-auditable": true
												},
												"updated": {
													"description": "When the device was updated.",
													"example": "2017-06-14T00:00:00Z",
													"format": "date-time",
													"type": "string",
													"x-auditable": true
												},
												"user": {
													"properties": {
														"email": {
															"description": "The contact email address of the user.",
															"example": "user@example.com",
															"maxLength": 90,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "UUID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"description": "The enrolled device user's name.",
															"example": "John Appleseed",
															"type": "string"
														}
													},
													"type": "object"
												},
												"version": {
													"description": "The WARP client version.",
													"example": "1.0.0",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get device details response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"account": {
															"properties": {
																"account_type": {
																	"deprecated": true,
																	"type": "string"
																},
																"id": {
																	"deprecated": true,
																	"type": "string"
																},
																"name": {
																	"description": "The name of the enrolled account.",
																	"example": "Company",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"created": {
															"description": "When the device was created.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														},
														"deleted": {
															"description": "True if the device was deleted.",
															"example": true,
															"type": "boolean"
														},
														"device_type": {
															"example": "windows",
															"type": "string",
															"x-auditable": true
														},
														"gateway_device_id": {
															"deprecated": true,
															"example": "PD33E90AXfafe14643cbbbc-4a0ed4fc8415Q",
															"type": "string"
														},
														"id": {
															"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														},
														"ip": {
															"description": "IPv4 or IPv6 address.",
															"example": "1.1.1.1",
															"type": "string",
															"x-auditable": true
														},
														"key": {
															"description": "The device's public key.",
															"example": "yek0SUYoOQ10vMGsIYAevozXUQpQtNFJFfFGqER/BGc=",
															"type": "string"
														},
														"key_type": {
															"description": "Type of the key.",
															"example": "curve25519",
															"type": "string",
															"x-auditable": true
														},
														"last_seen": {
															"description": "When the device last connected to Cloudflare services.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														},
														"mac_address": {
															"description": "The device mac address.",
															"example": "00-00-5E-00-53-00",
															"type": "string",
															"x-auditable": true
														},
														"model": {
															"description": "The device model name.",
															"example": "MyPhone(pro-X)",
															"type": "string"
														},
														"name": {
															"description": "The device name.",
															"example": "My mobile device",
															"type": "string"
														},
														"os_version": {
															"description": "The operating system version.",
															"example": "10.0.0",
															"type": "string"
														},
														"serial_number": {
															"description": "The device serial number.",
															"example": "EXAMPLEHMD6R",
															"type": "string"
														},
														"tunnel_type": {
															"description": "Type of the tunnel connection used.",
															"example": "masque",
															"type": "string",
															"x-auditable": true
														},
														"updated": {
															"description": "When the device was updated.",
															"example": "2017-06-14T00:00:00Z",
															"format": "date-time",
															"type": "string",
															"x-auditable": true
														},
														"user": {
															"properties": {
																"email": {
																	"description": "The contact email address of the user.",
																	"example": "user@example.com",
																	"maxLength": 90,
																	"type": "string",
																	"x-auditable": true
																},
																"id": {
																	"description": "UUID.",
																	"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																	"maxLength": 36,
																	"readOnly": true,
																	"type": "string",
																	"x-auditable": true
																},
																"name": {
																	"description": "The enrolled device user's name.",
																	"example": "John Appleseed",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"version": {
															"description": "The WARP client version.",
															"example": "1.0.0",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get device details response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get device (deprecated)",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/{device_id}/override_codes": {
		"deprecated": true,
		"description": "Fetches a one-time use admin override code for a device. This relies on the **Admin Override** setting being enabled in your device configuration. Not supported when [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/) is enabled for the account.\n**Deprecated:** please use GET /accounts/{account_id}/devices/registrations/{registration_id}/override_codes instead.\n",
		"operationId": "devices-list-admin-override-code-for-device",
		"parameters": [
			{
				"in": "path",
				"name": "device_id",
				"required": true,
				"schema": {
					"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"properties": {
														"1": {
															"description": "Override code that is valid for 1 hour.",
															"example": "9106681",
															"type": "string"
														},
														"3": {
															"description": "Override code that is valid for 3 hours.",
															"example": "5356247",
															"type": "string"
														},
														"6": {
															"description": "Override code that is valid for 6 hours.",
															"example": "9478972",
															"type": "string"
														},
														"12": {
															"description": "Override code that is valid for 12 hour2.",
															"example": "3424359",
															"type": "string"
														},
														"24": {
															"description": "Override code that is valid for 24 hour.2.",
															"example": "2887634",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get an admin override code for a device response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"properties": {
																"1": {
																	"description": "Override code that is valid for 1 hour.",
																	"example": "9106681",
																	"type": "string"
																},
																"3": {
																	"description": "Override code that is valid for 3 hours.",
																	"example": "5356247",
																	"type": "string"
																},
																"6": {
																	"description": "Override code that is valid for 6 hours.",
																	"example": "9478972",
																	"type": "string"
																},
																"12": {
																	"description": "Override code that is valid for 12 hour2.",
																	"example": "3424359",
																	"type": "string"
																},
																"24": {
																	"description": "Override code that is valid for 24 hour.2.",
																	"example": "2887634",
																	"type": "string"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get an admin override code for a device response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get override codes (deprecated)\n",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policies": {
		"description": "Fetches a list of the device settings profiles for an account.",
		"operationId": "devices-list-device-settings-policies",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"allow_mode_switch": {
														"description": "Whether to allow the user to switch WARP between modes.",
														"example": true,
														"type": "boolean"
													},
													"allow_updates": {
														"description": "Whether to receive update notifications when a new version of the client is available.",
														"example": true,
														"type": "boolean"
													},
													"allowed_to_leave": {
														"description": "Whether to allow devices to leave the organization.",
														"example": true,
														"type": "boolean"
													},
													"auto_connect": {
														"description": "The amount of time in seconds to reconnect after having been disabled.",
														"example": 0,
														"type": "number"
													},
													"captive_portal": {
														"description": "Turn on the captive portal after the specified amount of time.",
														"example": 180,
														"type": "number"
													},
													"default": {
														"description": "Whether the policy is the default policy for an account.",
														"example": false,
														"type": "boolean"
													},
													"description": {
														"description": "A description of the policy.",
														"example": "Policy for test teams.",
														"maxLength": 500,
														"type": "string"
													},
													"disable_auto_fallback": {
														"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
														"example": true,
														"type": "boolean",
														"x-auditable": true
													},
													"enabled": {
														"description": "Whether the policy will be applied to matching devices.",
														"example": true,
														"type": "boolean"
													},
													"exclude": {
														"description": "List of routes excluded in the WARP client's tunnel.",
														"items": {
															"oneOf": [
																{
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Exclude testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		}
																	},
																	"required": [
																		"address"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Exclude testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"host"
																	],
																	"type": "object"
																}
															],
															"type": "object"
														},
														"type": "array"
													},
													"exclude_office_ips": {
														"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
														"example": true,
														"type": "boolean"
													},
													"fallback_domains": {
														"items": {
															"properties": {
																"description": {
																	"description": "A description of the fallback domain, displayed in the client UI.",
																	"example": "Domain bypass for local development",
																	"maxLength": 100,
																	"type": "string",
																	"x-auditable": true
																},
																"dns_server": {
																	"description": "A list of IP addresses to handle domain resolution.",
																	"items": {
																		"description": "IPv4 or IPv6 address.",
																		"example": "1.1.1.1",
																		"type": "string",
																		"x-auditable": true
																	},
																	"type": "array"
																},
																"suffix": {
																	"description": "The domain suffix to match when resolving locally.",
																	"example": "example.com",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"suffix"
															],
															"type": "object"
														},
														"type": "array"
													},
													"gateway_unique_id": {
														"example": "699d98642c564d2e855e9661899b7252",
														"type": "string"
													},
													"include": {
														"description": "List of routes included in the WARP client's tunnel.",
														"items": {
															"oneOf": [
																{
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Include testing domains in the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		}
																	},
																	"required": [
																		"address"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"description": {
																			"description": "A description of the Split Tunnel item, displayed in the client UI.",
																			"example": "Include testing domains in the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"host"
																	],
																	"type": "object"
																}
															],
															"type": "object"
														},
														"type": "array"
													},
													"lan_allow_minutes": {
														"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
														"example": 30,
														"type": "number"
													},
													"lan_allow_subnet_size": {
														"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
														"example": 24,
														"type": "number"
													},
													"match": {
														"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
														"example": "identity.email == \"test@cloudflare.com\"",
														"maxLength": 500,
														"type": "string"
													},
													"name": {
														"description": "The name of the device settings profile.",
														"example": "Allow Developers",
														"maxLength": 100,
														"type": "string"
													},
													"policy_id": {
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string",
														"x-auditable": true
													},
													"precedence": {
														"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
														"example": 100,
														"type": "number"
													},
													"register_interface_ip_with_dns": {
														"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
														"example": true,
														"type": "boolean"
													},
													"sccm_vpn_boundary_support": {
														"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
														"example": false,
														"type": "boolean"
													},
													"service_mode_v2": {
														"properties": {
															"mode": {
																"description": "The mode to run the WARP client under.",
																"example": "proxy",
																"type": "string",
																"x-auditable": true
															},
															"port": {
																"description": "The port number when used with proxy mode.",
																"example": 3000,
																"type": "number",
																"x-auditable": true
															}
														},
														"type": "object"
													},
													"support_url": {
														"description": "The URL to launch when the Send Feedback button is clicked.",
														"example": "https://1.1.1.1/help",
														"type": "string"
													},
													"switch_locked": {
														"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
														"example": true,
														"type": "boolean"
													},
													"target_tests": {
														"items": {
															"properties": {
																"id": {
																	"description": "The id of the DEX test targeting this policy.",
																	"type": "string"
																},
																"name": {
																	"description": "The name of the DEX test targeting this policy.",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"type": "array"
													},
													"tunnel_protocol": {
														"description": "Determines which tunnel protocol to use.",
														"example": "wireguard",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List device settings profiles response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"allow_mode_switch": {
																"description": "Whether to allow the user to switch WARP between modes.",
																"example": true,
																"type": "boolean"
															},
															"allow_updates": {
																"description": "Whether to receive update notifications when a new version of the client is available.",
																"example": true,
																"type": "boolean"
															},
															"allowed_to_leave": {
																"description": "Whether to allow devices to leave the organization.",
																"example": true,
																"type": "boolean"
															},
															"auto_connect": {
																"description": "The amount of time in seconds to reconnect after having been disabled.",
																"example": 0,
																"type": "number"
															},
															"captive_portal": {
																"description": "Turn on the captive portal after the specified amount of time.",
																"example": 180,
																"type": "number"
															},
															"default": {
																"description": "Whether the policy is the default policy for an account.",
																"example": false,
																"type": "boolean"
															},
															"description": {
																"description": "A description of the policy.",
																"example": "Policy for test teams.",
																"maxLength": 500,
																"type": "string"
															},
															"disable_auto_fallback": {
																"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
																"example": true,
																"type": "boolean",
																"x-auditable": true
															},
															"enabled": {
																"description": "Whether the policy will be applied to matching devices.",
																"example": true,
																"type": "boolean"
															},
															"exclude": {
																"description": "List of routes excluded in the WARP client's tunnel.",
																"items": {
																	"oneOf": [
																		{
																			"properties": {
																				"address": {
																					"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																					"example": "192.0.2.0/24",
																					"type": "string"
																				},
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Exclude testing domains from the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				}
																			},
																			"required": [
																				"address"
																			],
																			"type": "object"
																		},
																		{
																			"properties": {
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Exclude testing domains from the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				},
																				"host": {
																					"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																					"example": "*.example.com",
																					"type": "string"
																				}
																			},
																			"required": [
																				"host"
																			],
																			"type": "object"
																		}
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"exclude_office_ips": {
																"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
																"example": true,
																"type": "boolean"
															},
															"fallback_domains": {
																"items": {
																	"properties": {
																		"description": {
																			"description": "A description of the fallback domain, displayed in the client UI.",
																			"example": "Domain bypass for local development",
																			"maxLength": 100,
																			"type": "string",
																			"x-auditable": true
																		},
																		"dns_server": {
																			"description": "A list of IP addresses to handle domain resolution.",
																			"items": {
																				"description": "IPv4 or IPv6 address.",
																				"example": "1.1.1.1",
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		},
																		"suffix": {
																			"description": "The domain suffix to match when resolving locally.",
																			"example": "example.com",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"suffix"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"gateway_unique_id": {
																"example": "699d98642c564d2e855e9661899b7252",
																"type": "string"
															},
															"include": {
																"description": "List of routes included in the WARP client's tunnel.",
																"items": {
																	"oneOf": [
																		{
																			"properties": {
																				"address": {
																					"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																					"example": "192.0.2.0/24",
																					"type": "string"
																				},
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Include testing domains in the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				}
																			},
																			"required": [
																				"address"
																			],
																			"type": "object"
																		},
																		{
																			"properties": {
																				"description": {
																					"description": "A description of the Split Tunnel item, displayed in the client UI.",
																					"example": "Include testing domains in the tunnel",
																					"maxLength": 100,
																					"type": "string"
																				},
																				"host": {
																					"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																					"example": "*.example.com",
																					"type": "string"
																				}
																			},
																			"required": [
																				"host"
																			],
																			"type": "object"
																		}
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"lan_allow_minutes": {
																"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
																"example": 30,
																"type": "number"
															},
															"lan_allow_subnet_size": {
																"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
																"example": 24,
																"type": "number"
															},
															"match": {
																"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
																"example": "identity.email == \"test@cloudflare.com\"",
																"maxLength": 500,
																"type": "string"
															},
															"name": {
																"description": "The name of the device settings profile.",
																"example": "Allow Developers",
																"maxLength": 100,
																"type": "string"
															},
															"policy_id": {
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"type": "string",
																"x-auditable": true
															},
															"precedence": {
																"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
																"example": 100,
																"type": "number"
															},
															"register_interface_ip_with_dns": {
																"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
																"example": true,
																"type": "boolean"
															},
															"sccm_vpn_boundary_support": {
																"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
																"example": false,
																"type": "boolean"
															},
															"service_mode_v2": {
																"properties": {
																	"mode": {
																		"description": "The mode to run the WARP client under.",
																		"example": "proxy",
																		"type": "string",
																		"x-auditable": true
																	},
																	"port": {
																		"description": "The port number when used with proxy mode.",
																		"example": 3000,
																		"type": "number",
																		"x-auditable": true
																	}
																},
																"type": "object"
															},
															"support_url": {
																"description": "The URL to launch when the Send Feedback button is clicked.",
																"example": "https://1.1.1.1/help",
																"type": "string"
															},
															"switch_locked": {
																"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
																"example": true,
																"type": "boolean"
															},
															"target_tests": {
																"items": {
																	"properties": {
																		"id": {
																			"description": "The id of the DEX test targeting this policy.",
																			"type": "string"
																		},
																		"name": {
																			"description": "The name of the DEX test targeting this policy.",
																			"type": "string"
																		}
																	},
																	"type": "object"
																},
																"type": "array"
															},
															"tunnel_protocol": {
																"description": "Determines which tunnel protocol to use.",
																"example": "wireguard",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List device settings profiles response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "List device settings profiles",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy": {
		"description": "Fetches the default device settings profile for an account.",
		"operationId": "devices-get-default-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in seconds to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"disable_auto_fallback": {
													"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"description": "List of routes excluded in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"description": "List of routes included in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"register_interface_ip_with_dns": {
													"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
													"example": true,
													"type": "boolean"
												},
												"sccm_vpn_boundary_support": {
													"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
													"example": false,
													"type": "boolean"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string",
															"x-auditable": true
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												},
												"tunnel_protocol": {
													"description": "Determines which tunnel protocol to use.",
													"example": "wireguard",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the default device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in seconds to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"disable_auto_fallback": {
															"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"description": "List of routes excluded in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string",
																		"x-auditable": true
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {
																			"description": "IPv4 or IPv6 address.",
																			"example": "1.1.1.1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"description": "List of routes included in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"register_interface_ip_with_dns": {
															"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
															"example": true,
															"type": "boolean"
														},
														"sccm_vpn_boundary_support": {
															"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
															"example": false,
															"type": "boolean"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string",
																	"x-auditable": true
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														},
														"tunnel_protocol": {
															"description": "Determines which tunnel protocol to use.",
															"example": "wireguard",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the default device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get the default device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy/{policy_id}": {
		"description": "Fetches a device settings profile by ID.",
		"operationId": "devices-get-device-settings-policy-by-id",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in seconds to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy is the default policy for an account.",
													"example": false,
													"type": "boolean"
												},
												"description": {
													"description": "A description of the policy.",
													"example": "Policy for test teams.",
													"maxLength": 500,
													"type": "string"
												},
												"disable_auto_fallback": {
													"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"description": "List of routes excluded in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"description": "List of routes included in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"lan_allow_minutes": {
													"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
													"example": 30,
													"type": "number"
												},
												"lan_allow_subnet_size": {
													"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
													"example": 24,
													"type": "number"
												},
												"match": {
													"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
													"example": "identity.email == \"test@cloudflare.com\"",
													"maxLength": 500,
													"type": "string"
												},
												"name": {
													"description": "The name of the device settings profile.",
													"example": "Allow Developers",
													"maxLength": 100,
													"type": "string"
												},
												"policy_id": {
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string",
													"x-auditable": true
												},
												"precedence": {
													"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
													"example": 100,
													"type": "number"
												},
												"register_interface_ip_with_dns": {
													"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
													"example": true,
													"type": "boolean"
												},
												"sccm_vpn_boundary_support": {
													"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
													"example": false,
													"type": "boolean"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string",
															"x-auditable": true
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												},
												"target_tests": {
													"items": {
														"properties": {
															"id": {
																"description": "The id of the DEX test targeting this policy.",
																"type": "string"
															},
															"name": {
																"description": "The name of the DEX test targeting this policy.",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"tunnel_protocol": {
													"description": "Determines which tunnel protocol to use.",
													"example": "wireguard",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get device settings profile by ID response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in seconds to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy is the default policy for an account.",
															"example": false,
															"type": "boolean"
														},
														"description": {
															"description": "A description of the policy.",
															"example": "Policy for test teams.",
															"maxLength": 500,
															"type": "string"
														},
														"disable_auto_fallback": {
															"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"description": "List of routes excluded in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string",
																		"x-auditable": true
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {
																			"description": "IPv4 or IPv6 address.",
																			"example": "1.1.1.1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"description": "List of routes included in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"lan_allow_minutes": {
															"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
															"example": 30,
															"type": "number"
														},
														"lan_allow_subnet_size": {
															"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
															"example": 24,
															"type": "number"
														},
														"match": {
															"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
															"example": "identity.email == \"test@cloudflare.com\"",
															"maxLength": 500,
															"type": "string"
														},
														"name": {
															"description": "The name of the device settings profile.",
															"example": "Allow Developers",
															"maxLength": 100,
															"type": "string"
														},
														"policy_id": {
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														},
														"precedence": {
															"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
															"example": 100,
															"type": "number"
														},
														"register_interface_ip_with_dns": {
															"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
															"example": true,
															"type": "boolean"
														},
														"sccm_vpn_boundary_support": {
															"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
															"example": false,
															"type": "boolean"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string",
																	"x-auditable": true
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														},
														"target_tests": {
															"items": {
																"properties": {
																	"id": {
																		"description": "The id of the DEX test targeting this policy.",
																		"type": "string"
																	},
																	"name": {
																		"description": "The name of the DEX test targeting this policy.",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"tunnel_protocol": {
															"description": "Determines which tunnel protocol to use.",
															"example": "wireguard",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get device settings profile by ID response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get device settings profile by ID",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy/{policy_id}/exclude": {
		"description": "Fetches the list of routes excluded from the WARP client's tunnel for a specific device settings profile.",
		"operationId": "devices-get-split-tunnel-exclude-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel exclude list for a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel exclude list for a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get the Split Tunnel exclude list for a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy/{policy_id}/fallback_domains": {
		"description": "Fetches the list of domains to bypass Gateway DNS resolution from a specified device settings profile. These domains will use the specified local DNS resolver instead.",
		"operationId": "devices-get-local-domain-fallback-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string",
														"x-auditable": true
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {
															"description": "IPv4 or IPv6 address.",
															"example": "1.1.1.1",
															"type": "string",
															"x-auditable": true
														},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Local Domain Fallback list for a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Local Domain Fallback list for a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get the Local Domain Fallback list for a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy/{policy_id}/include": {
		"description": "Fetches the list of routes included in the WARP client's tunnel for a specific device settings profile.",
		"operationId": "devices-get-split-tunnel-include-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel include list for a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel include list for a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get the Split Tunnel include list for a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy/exclude": {
		"description": "Fetches the list of routes excluded from the WARP client's tunnel.",
		"operationId": "devices-get-split-tunnel-exclude-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel exclude list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel exclude list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get the Split Tunnel exclude list",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy/fallback_domains": {
		"description": "Fetches a list of domains to bypass Gateway DNS resolution. These domains will use the specified local DNS resolver instead.",
		"operationId": "devices-get-local-domain-fallback-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string",
														"x-auditable": true
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {
															"description": "IPv4 or IPv6 address.",
															"example": "1.1.1.1",
															"type": "string",
															"x-auditable": true
														},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get your Local Domain Fallback list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get your Local Domain Fallback list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get your Local Domain Fallback list",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /accounts/{account_id}/devices/policy/include": {
		"description": "Fetches the list of routes included in the WARP client's tunnel.",
		"operationId": "devices-get-split-tunnel-include-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel include list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get the Split Tunnel include list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get the Split Tunnel include list",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Read",
			"Zero Trust Write"
		]
	},
	"GET /zones/{zone_id}/devices/policy/certificates": {
		"description": "Fetches device certificate provisioning.",
		"operationId": "devices-get-policy-certificates",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"enabled": {
													"description": "The current status of the device policy certificate provisioning feature for WARP clients.",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"enabled"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get WARP client provision certificates enabled status response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"enabled": {
															"description": "The current status of the device policy certificate provisioning feature for WARP clients.",
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"enabled"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get WARP client provision certificates enabled status failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get device certificate provisioning status",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"SSL and Certificates Write",
			"SSL and Certificates Read"
		]
	},
	"PATCH /accounts/{account_id}/devices/policy": {
		"description": "Updates the default device settings profile for an account.",
		"operationId": "devices-update-default-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in seconds to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"disable_auto_fallback": {
								"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"exclude": {
								"description": "List of routes excluded in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.",
								"items": {
									"oneOf": [
										{
											"properties": {
												"address": {
													"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
													"example": "192.0.2.0/24",
													"type": "string"
												},
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Exclude testing domains from the tunnel",
													"maxLength": 100,
													"type": "string"
												}
											},
											"required": [
												"address"
											],
											"type": "object"
										},
										{
											"properties": {
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Exclude testing domains from the tunnel",
													"maxLength": 100,
													"type": "string"
												},
												"host": {
													"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
													"example": "*.example.com",
													"type": "string"
												}
											},
											"required": [
												"host"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"include": {
								"description": "List of routes included in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.",
								"items": {
									"oneOf": [
										{
											"properties": {
												"address": {
													"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
													"example": "192.0.2.0/24",
													"type": "string"
												},
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Include testing domains in the tunnel",
													"maxLength": 100,
													"type": "string"
												}
											},
											"required": [
												"address"
											],
											"type": "object"
										},
										{
											"properties": {
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Include testing domains in the tunnel",
													"maxLength": 100,
													"type": "string"
												},
												"host": {
													"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
													"example": "*.example.com",
													"type": "string"
												}
											},
											"required": [
												"host"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"lan_allow_minutes": {
								"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
								"example": 30,
								"type": "number"
							},
							"lan_allow_subnet_size": {
								"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
								"example": 24,
								"type": "number"
							},
							"register_interface_ip_with_dns": {
								"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
								"example": true,
								"type": "boolean"
							},
							"sccm_vpn_boundary_support": {
								"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
								"example": false,
								"type": "boolean"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string",
										"x-auditable": true
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							},
							"tunnel_protocol": {
								"description": "Determines which tunnel protocol to use.",
								"example": "wireguard",
								"type": "string"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in seconds to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"disable_auto_fallback": {
													"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"description": "List of routes excluded in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"description": "List of routes included in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"register_interface_ip_with_dns": {
													"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
													"example": true,
													"type": "boolean"
												},
												"sccm_vpn_boundary_support": {
													"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
													"example": false,
													"type": "boolean"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string",
															"x-auditable": true
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												},
												"tunnel_protocol": {
													"description": "Determines which tunnel protocol to use.",
													"example": "wireguard",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update the default device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in seconds to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"disable_auto_fallback": {
															"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"description": "List of routes excluded in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string",
																		"x-auditable": true
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {
																			"description": "IPv4 or IPv6 address.",
																			"example": "1.1.1.1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"description": "List of routes included in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"register_interface_ip_with_dns": {
															"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
															"example": true,
															"type": "boolean"
														},
														"sccm_vpn_boundary_support": {
															"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
															"example": false,
															"type": "boolean"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string",
																	"x-auditable": true
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														},
														"tunnel_protocol": {
															"description": "Determines which tunnel protocol to use.",
															"example": "wireguard",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update the default device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update the default device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PATCH /accounts/{account_id}/devices/policy/{policy_id}": {
		"description": "Updates a configured device settings profile.",
		"operationId": "devices-update-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in seconds to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"description": {
								"description": "A description of the policy.",
								"example": "Policy for test teams.",
								"maxLength": 500,
								"type": "string"
							},
							"disable_auto_fallback": {
								"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"enabled": {
								"description": "Whether the policy will be applied to matching devices.",
								"example": true,
								"type": "boolean"
							},
							"exclude": {
								"description": "List of routes excluded in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.",
								"items": {
									"oneOf": [
										{
											"properties": {
												"address": {
													"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
													"example": "192.0.2.0/24",
													"type": "string"
												},
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Exclude testing domains from the tunnel",
													"maxLength": 100,
													"type": "string"
												}
											},
											"required": [
												"address"
											],
											"type": "object"
										},
										{
											"properties": {
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Exclude testing domains from the tunnel",
													"maxLength": 100,
													"type": "string"
												},
												"host": {
													"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
													"example": "*.example.com",
													"type": "string"
												}
											},
											"required": [
												"host"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"include": {
								"description": "List of routes included in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.",
								"items": {
									"oneOf": [
										{
											"properties": {
												"address": {
													"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
													"example": "192.0.2.0/24",
													"type": "string"
												},
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Include testing domains in the tunnel",
													"maxLength": 100,
													"type": "string"
												}
											},
											"required": [
												"address"
											],
											"type": "object"
										},
										{
											"properties": {
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Include testing domains in the tunnel",
													"maxLength": 100,
													"type": "string"
												},
												"host": {
													"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
													"example": "*.example.com",
													"type": "string"
												}
											},
											"required": [
												"host"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"lan_allow_minutes": {
								"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
								"example": 30,
								"type": "number"
							},
							"lan_allow_subnet_size": {
								"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
								"example": 24,
								"type": "number"
							},
							"match": {
								"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
								"example": "identity.email == \"test@cloudflare.com\"",
								"maxLength": 500,
								"type": "string"
							},
							"name": {
								"description": "The name of the device settings profile.",
								"example": "Allow Developers",
								"maxLength": 100,
								"type": "string"
							},
							"precedence": {
								"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
								"example": 100,
								"type": "number"
							},
							"register_interface_ip_with_dns": {
								"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
								"example": true,
								"type": "boolean"
							},
							"sccm_vpn_boundary_support": {
								"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
								"example": false,
								"type": "boolean"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string",
										"x-auditable": true
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							},
							"tunnel_protocol": {
								"description": "Determines which tunnel protocol to use.",
								"example": "wireguard",
								"type": "string"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in seconds to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy is the default policy for an account.",
													"example": false,
													"type": "boolean"
												},
												"description": {
													"description": "A description of the policy.",
													"example": "Policy for test teams.",
													"maxLength": 500,
													"type": "string"
												},
												"disable_auto_fallback": {
													"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"description": "List of routes excluded in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"description": "List of routes included in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"lan_allow_minutes": {
													"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
													"example": 30,
													"type": "number"
												},
												"lan_allow_subnet_size": {
													"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
													"example": 24,
													"type": "number"
												},
												"match": {
													"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
													"example": "identity.email == \"test@cloudflare.com\"",
													"maxLength": 500,
													"type": "string"
												},
												"name": {
													"description": "The name of the device settings profile.",
													"example": "Allow Developers",
													"maxLength": 100,
													"type": "string"
												},
												"policy_id": {
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string",
													"x-auditable": true
												},
												"precedence": {
													"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
													"example": 100,
													"type": "number"
												},
												"register_interface_ip_with_dns": {
													"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
													"example": true,
													"type": "boolean"
												},
												"sccm_vpn_boundary_support": {
													"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
													"example": false,
													"type": "boolean"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string",
															"x-auditable": true
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												},
												"target_tests": {
													"items": {
														"properties": {
															"id": {
																"description": "The id of the DEX test targeting this policy.",
																"type": "string"
															},
															"name": {
																"description": "The name of the DEX test targeting this policy.",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"tunnel_protocol": {
													"description": "Determines which tunnel protocol to use.",
													"example": "wireguard",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a device settings profile Policy response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in seconds to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy is the default policy for an account.",
															"example": false,
															"type": "boolean"
														},
														"description": {
															"description": "A description of the policy.",
															"example": "Policy for test teams.",
															"maxLength": 500,
															"type": "string"
														},
														"disable_auto_fallback": {
															"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"description": "List of routes excluded in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string",
																		"x-auditable": true
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {
																			"description": "IPv4 or IPv6 address.",
																			"example": "1.1.1.1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"description": "List of routes included in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"lan_allow_minutes": {
															"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
															"example": 30,
															"type": "number"
														},
														"lan_allow_subnet_size": {
															"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
															"example": 24,
															"type": "number"
														},
														"match": {
															"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
															"example": "identity.email == \"test@cloudflare.com\"",
															"maxLength": 500,
															"type": "string"
														},
														"name": {
															"description": "The name of the device settings profile.",
															"example": "Allow Developers",
															"maxLength": 100,
															"type": "string"
														},
														"policy_id": {
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														},
														"precedence": {
															"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
															"example": 100,
															"type": "number"
														},
														"register_interface_ip_with_dns": {
															"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
															"example": true,
															"type": "boolean"
														},
														"sccm_vpn_boundary_support": {
															"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
															"example": false,
															"type": "boolean"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string",
																	"x-auditable": true
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														},
														"target_tests": {
															"items": {
																"properties": {
																	"id": {
																		"description": "The id of the DEX test targeting this policy.",
																		"type": "string"
																	},
																	"name": {
																		"description": "The name of the DEX test targeting this policy.",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"tunnel_protocol": {
															"description": "Determines which tunnel protocol to use.",
															"example": "wireguard",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a device settings profile Policy response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PATCH /zones/{zone_id}/devices/policy/certificates": {
		"description": "Enable Zero Trust Clients to provision a certificate, containing a x509 subject, and referenced by Access device posture policies when the client visits MTLS protected domains. This facilitates device posture without a WARP session.",
		"operationId": "devices-update-policy-certificates",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"enabled": {
								"description": "The current status of the device policy certificate provisioning feature for WARP clients.",
								"example": true,
								"type": "boolean"
							}
						},
						"required": [
							"enabled"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"enabled": {
													"description": "The current status of the device policy certificate provisioning feature for WARP clients.",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"enabled"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a zone to toggle permission for devices to provision certificates response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"enabled": {
															"description": "The current status of the device policy certificate provisioning feature for WARP clients.",
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"enabled"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Patch a zone to toggle permission for devices to provision certificates failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Update device certificate provisioning status",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		]
	},
	"POST /accounts/{account_id}/devices/policy": {
		"description": "Creates a device settings profile to be applied to certain devices matching the criteria.",
		"operationId": "devices-create-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in seconds to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"description": {
								"description": "A description of the policy.",
								"example": "Policy for test teams.",
								"maxLength": 500,
								"type": "string"
							},
							"disable_auto_fallback": {
								"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
								"example": true,
								"type": "boolean",
								"x-auditable": true
							},
							"enabled": {
								"description": "Whether the policy will be applied to matching devices.",
								"example": true,
								"type": "boolean"
							},
							"exclude": {
								"description": "List of routes excluded in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.",
								"items": {
									"oneOf": [
										{
											"properties": {
												"address": {
													"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
													"example": "192.0.2.0/24",
													"type": "string"
												},
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Exclude testing domains from the tunnel",
													"maxLength": 100,
													"type": "string"
												}
											},
											"required": [
												"address"
											],
											"type": "object"
										},
										{
											"properties": {
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Exclude testing domains from the tunnel",
													"maxLength": 100,
													"type": "string"
												},
												"host": {
													"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
													"example": "*.example.com",
													"type": "string"
												}
											},
											"required": [
												"host"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"include": {
								"description": "List of routes included in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.",
								"items": {
									"oneOf": [
										{
											"properties": {
												"address": {
													"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
													"example": "192.0.2.0/24",
													"type": "string"
												},
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Include testing domains in the tunnel",
													"maxLength": 100,
													"type": "string"
												}
											},
											"required": [
												"address"
											],
											"type": "object"
										},
										{
											"properties": {
												"description": {
													"description": "A description of the Split Tunnel item, displayed in the client UI.",
													"example": "Include testing domains in the tunnel",
													"maxLength": 100,
													"type": "string"
												},
												"host": {
													"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
													"example": "*.example.com",
													"type": "string"
												}
											},
											"required": [
												"host"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"lan_allow_minutes": {
								"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
								"example": 30,
								"type": "number"
							},
							"lan_allow_subnet_size": {
								"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
								"example": 24,
								"type": "number"
							},
							"match": {
								"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
								"example": "identity.email == \"test@cloudflare.com\"",
								"maxLength": 500,
								"type": "string"
							},
							"name": {
								"description": "The name of the device settings profile.",
								"example": "Allow Developers",
								"maxLength": 100,
								"type": "string"
							},
							"precedence": {
								"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
								"example": 100,
								"type": "number"
							},
							"register_interface_ip_with_dns": {
								"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
								"example": true,
								"type": "boolean"
							},
							"sccm_vpn_boundary_support": {
								"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
								"example": false,
								"type": "boolean"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string",
										"x-auditable": true
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number",
										"x-auditable": true
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							},
							"tunnel_protocol": {
								"description": "Determines which tunnel protocol to use.",
								"example": "wireguard",
								"type": "string"
							}
						},
						"required": [
							"name",
							"precedence",
							"match"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in seconds to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy is the default policy for an account.",
													"example": false,
													"type": "boolean"
												},
												"description": {
													"description": "A description of the policy.",
													"example": "Policy for test teams.",
													"maxLength": 500,
													"type": "string"
												},
												"disable_auto_fallback": {
													"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
													"example": true,
													"type": "boolean",
													"x-auditable": true
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"description": "List of routes excluded in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"description": "List of routes included in the WARP client's tunnel.",
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												},
												"lan_allow_minutes": {
													"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
													"example": 30,
													"type": "number"
												},
												"lan_allow_subnet_size": {
													"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
													"example": 24,
													"type": "number"
												},
												"match": {
													"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
													"example": "identity.email == \"test@cloudflare.com\"",
													"maxLength": 500,
													"type": "string"
												},
												"name": {
													"description": "The name of the device settings profile.",
													"example": "Allow Developers",
													"maxLength": 100,
													"type": "string"
												},
												"policy_id": {
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string",
													"x-auditable": true
												},
												"precedence": {
													"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
													"example": 100,
													"type": "number"
												},
												"register_interface_ip_with_dns": {
													"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
													"example": true,
													"type": "boolean"
												},
												"sccm_vpn_boundary_support": {
													"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
													"example": false,
													"type": "boolean"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string",
															"x-auditable": true
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number",
															"x-auditable": true
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												},
												"target_tests": {
													"items": {
														"properties": {
															"id": {
																"description": "The id of the DEX test targeting this policy.",
																"type": "string"
															},
															"name": {
																"description": "The name of the DEX test targeting this policy.",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												},
												"tunnel_protocol": {
													"description": "Determines which tunnel protocol to use.",
													"example": "wireguard",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in seconds to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy is the default policy for an account.",
															"example": false,
															"type": "boolean"
														},
														"description": {
															"description": "A description of the policy.",
															"example": "Policy for test teams.",
															"maxLength": 500,
															"type": "string"
														},
														"disable_auto_fallback": {
															"description": "If the `dns_server` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.",
															"example": true,
															"type": "boolean",
															"x-auditable": true
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"description": "List of routes excluded in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Exclude testing domains from the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to Split Tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string",
																		"x-auditable": true
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {
																			"description": "IPv4 or IPv6 address.",
																			"example": "1.1.1.1",
																			"type": "string",
																			"x-auditable": true
																		},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"description": "List of routes included in the WARP client's tunnel.",
															"items": {
																"oneOf": [
																	{
																		"properties": {
																			"address": {
																				"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																				"example": "192.0.2.0/24",
																				"type": "string"
																			},
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			}
																		},
																		"required": [
																			"address"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"description": {
																				"description": "A description of the Split Tunnel item, displayed in the client UI.",
																				"example": "Include testing domains in the tunnel",
																				"maxLength": 100,
																				"type": "string"
																			},
																			"host": {
																				"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																				"example": "*.example.com",
																				"type": "string"
																			}
																		},
																		"required": [
																			"host"
																		],
																		"type": "object"
																	}
																],
																"type": "object"
															},
															"type": "array"
														},
														"lan_allow_minutes": {
															"description": "The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.",
															"example": 30,
															"type": "number"
														},
														"lan_allow_subnet_size": {
															"description": "The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.",
															"example": 24,
															"type": "number"
														},
														"match": {
															"description": "The wirefilter expression to match devices. Available values: \"identity.email\", \"identity.groups.id\", \"identity.groups.name\", \"identity.groups.email\", \"identity.service_token_uuid\", \"identity.saml_attributes\", \"network\", \"os.name\", \"os.version\".",
															"example": "identity.email == \"test@cloudflare.com\"",
															"maxLength": 500,
															"type": "string"
														},
														"name": {
															"description": "The name of the device settings profile.",
															"example": "Allow Developers",
															"maxLength": 100,
															"type": "string"
														},
														"policy_id": {
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string",
															"x-auditable": true
														},
														"precedence": {
															"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
															"example": 100,
															"type": "number"
														},
														"register_interface_ip_with_dns": {
															"description": "Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.",
															"example": true,
															"type": "boolean"
														},
														"sccm_vpn_boundary_support": {
															"description": "Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).",
															"example": false,
															"type": "boolean"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string",
																	"x-auditable": true
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														},
														"target_tests": {
															"items": {
																"properties": {
																	"id": {
																		"description": "The id of the DEX test targeting this policy.",
																		"type": "string"
																	},
																	"name": {
																		"description": "The name of the DEX test targeting this policy.",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"type": "array"
														},
														"tunnel_protocol": {
															"description": "Determines which tunnel protocol to use.",
															"example": "wireguard",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Create a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"POST /accounts/{account_id}/devices/revoke": {
		"deprecated": true,
		"description": "Revokes a list of devices. Not supported when [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/) is enabled.\n\n**Deprecated**: please use POST /accounts/{account_id}/devices/registrations/revoke instead.\n",
		"operationId": "devices-revoke-devices",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "A list of Registration IDs to revoke.",
						"items": {
							"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
							"maxLength": 36,
							"type": "string",
							"x-auditable": true
						},
						"maxLength": 200,
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {
														"type": "object"
													},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											],
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Revoke devices response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Revoke devices response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Revoke devices (deprecated)",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"POST /accounts/{account_id}/devices/unrevoke": {
		"deprecated": true,
		"description": "Unrevokes a list of devices. Not supported when [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/) is enabled.\n\n**Deprecated**: please use POST /accounts/{account_id}/devices/registrations/unrevoke instead.\n",
		"operationId": "devices-unrevoke-devices",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "A list of Registration IDs to unrevoke.",
						"items": {
							"description": "Registration ID. Equal to Device ID except for accounts which enabled [multi-user mode](https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/mdm-deployment/windows-multiuser/).",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
							"maxLength": 36,
							"type": "string",
							"x-auditable": true
						},
						"maxLength": 200,
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {
														"type": "object"
													},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											],
											"nullable": true,
											"type": "object"
										}
									},
									"type": "object"
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unrevoke devices response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Unrevoke devices response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Unrevoke devices (deprecated)",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/policy/{policy_id}/exclude": {
		"description": "Sets the list of routes excluded from the WARP client's tunnel for a specific device settings profile.",
		"operationId": "devices-set-split-tunnel-exclude-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"oneOf": [
								{
									"properties": {
										"address": {
											"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
											"example": "192.0.2.0/24",
											"type": "string"
										},
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Exclude testing domains from the tunnel",
											"maxLength": 100,
											"type": "string"
										}
									},
									"required": [
										"address"
									],
									"type": "object"
								},
								{
									"properties": {
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Exclude testing domains from the tunnel",
											"maxLength": 100,
											"type": "string"
										},
										"host": {
											"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
											"example": "*.example.com",
											"type": "string"
										}
									},
									"required": [
										"host"
									],
									"type": "object"
								}
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel exclude list for a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel exclude list for a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Set the Split Tunnel exclude list for a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/policy/{policy_id}/fallback_domains": {
		"description": "Sets the list of domains to bypass Gateway DNS resolution. These domains will use the specified local DNS resolver instead. This will only apply to the specified device settings profile.",
		"operationId": "devices-set-local-domain-fallback-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"description": {
									"description": "A description of the fallback domain, displayed in the client UI.",
									"example": "Domain bypass for local development",
									"maxLength": 100,
									"type": "string",
									"x-auditable": true
								},
								"dns_server": {
									"description": "A list of IP addresses to handle domain resolution.",
									"items": {
										"description": "IPv4 or IPv6 address.",
										"example": "1.1.1.1",
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"suffix": {
									"description": "The domain suffix to match when resolving locally.",
									"example": "example.com",
									"type": "string",
									"x-auditable": true
								}
							},
							"required": [
								"suffix"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string",
														"x-auditable": true
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {
															"description": "IPv4 or IPv6 address.",
															"example": "1.1.1.1",
															"type": "string",
															"x-auditable": true
														},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Local Domain Fallback list for a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Local Domain Fallback list for a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Set the Local Domain Fallback list for a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/policy/{policy_id}/include": {
		"description": "Sets the list of routes included in the WARP client's tunnel for a specific device settings profile.",
		"operationId": "devices-set-split-tunnel-include-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"oneOf": [
								{
									"properties": {
										"address": {
											"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
											"example": "192.0.2.0/24",
											"type": "string"
										},
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Include testing domains in the tunnel",
											"maxLength": 100,
											"type": "string"
										}
									},
									"required": [
										"address"
									],
									"type": "object"
								},
								{
									"properties": {
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Include testing domains in the tunnel",
											"maxLength": 100,
											"type": "string"
										},
										"host": {
											"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
											"example": "*.example.com",
											"type": "string"
										}
									},
									"required": [
										"host"
									],
									"type": "object"
								}
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel include list for a device settings profile response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel include list for a device settings profile response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Set the Split Tunnel include list for a device settings profile",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/policy/exclude": {
		"description": "Sets the list of routes excluded from the WARP client's tunnel.",
		"operationId": "devices-set-split-tunnel-exclude-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"oneOf": [
								{
									"properties": {
										"address": {
											"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
											"example": "192.0.2.0/24",
											"type": "string"
										},
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Exclude testing domains from the tunnel",
											"maxLength": 100,
											"type": "string"
										}
									},
									"required": [
										"address"
									],
									"type": "object"
								},
								{
									"properties": {
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Exclude testing domains from the tunnel",
											"maxLength": 100,
											"type": "string"
										},
										"host": {
											"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
											"example": "*.example.com",
											"type": "string"
										}
									},
									"required": [
										"host"
									],
									"type": "object"
								}
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel exclude list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel exclude list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Set the Split Tunnel exclude list",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/policy/fallback_domains": {
		"description": "Sets the list of domains to bypass Gateway DNS resolution. These domains will use the specified local DNS resolver instead.",
		"operationId": "devices-set-local-domain-fallback-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"description": {
									"description": "A description of the fallback domain, displayed in the client UI.",
									"example": "Domain bypass for local development",
									"maxLength": 100,
									"type": "string",
									"x-auditable": true
								},
								"dns_server": {
									"description": "A list of IP addresses to handle domain resolution.",
									"items": {
										"description": "IPv4 or IPv6 address.",
										"example": "1.1.1.1",
										"type": "string",
										"x-auditable": true
									},
									"type": "array"
								},
								"suffix": {
									"description": "The domain suffix to match when resolving locally.",
									"example": "example.com",
									"type": "string",
									"x-auditable": true
								}
							},
							"required": [
								"suffix"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string",
														"x-auditable": true
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {
															"description": "IPv4 or IPv6 address.",
															"example": "1.1.1.1",
															"type": "string",
															"x-auditable": true
														},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set your Local Domain Fallback list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string",
																"x-auditable": true
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {
																	"description": "IPv4 or IPv6 address.",
																	"example": "1.1.1.1",
																	"type": "string",
																	"x-auditable": true
																},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set your Local Domain Fallback list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Set your Local Domain Fallback list",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	},
	"PUT /accounts/{account_id}/devices/policy/include": {
		"description": "Sets the list of routes included in the WARP client's tunnel.",
		"operationId": "devices-set-split-tunnel-include-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"oneOf": [
								{
									"properties": {
										"address": {
											"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
											"example": "192.0.2.0/24",
											"type": "string"
										},
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Include testing domains in the tunnel",
											"maxLength": 100,
											"type": "string"
										}
									},
									"required": [
										"address"
									],
									"type": "object"
								},
								{
									"properties": {
										"description": {
											"description": "A description of the Split Tunnel item, displayed in the client UI.",
											"example": "Include testing domains in the tunnel",
											"maxLength": 100,
											"type": "string"
										},
										"host": {
											"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
											"example": "*.example.com",
											"type": "string"
										}
									},
									"required": [
										"host"
									],
									"type": "object"
								}
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {
																"type": "object"
															},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"oneOf": [
													{
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															}
														},
														"required": [
															"address"
														],
														"type": "object"
													},
													{
														"properties": {
															"description": {
																"description": "A description of the Split Tunnel item, displayed in the client UI.",
																"example": "Include testing domains in the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"host"
														],
														"type": "object"
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel include list response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {
																		"type": "object"
																	},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {
																"type": "object"
															},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"oneOf": [
															{
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If `address` is present, `host` must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	}
																},
																"required": [
																	"address"
																],
																"type": "object"
															},
															{
																"properties": {
																	"description": {
																		"description": "A description of the Split Tunnel item, displayed in the client UI.",
																		"example": "Include testing domains in the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If `host` is present, `address` must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"host"
																],
																"type": "object"
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set the Split Tunnel include list response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Set the Split Tunnel include list",
		"tags": [
			"Devices"
		],
		"x-api-token-group": [
			"Zero Trust Write"
		]
	}
}