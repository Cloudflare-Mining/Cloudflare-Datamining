{
	"GET /zones/{zone_id}/acm/custom_trust_store": {
		"description": "Get Custom Origin Trust Store for a Zone.",
		"operationId": "custom-origin-trust-store-list-details",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Number of records per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit to the number of records returned.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "offset",
				"schema": {
					"description": "Offset the results",
					"example": 10,
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service.",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results.",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results.",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters.",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"certificate": {
														"description": "The zone's SSL certificate or certificate and the intermediate(s).",
														"example": "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n-----END CERTIFICATE-----\n",
														"type": "string"
													},
													"expires_on": {
														"description": "When the certificate expires.",
														"example": "2122-10-29T16:59:47Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"id": {
														"description": "Identifier.",
														"example": "023e105f4ecef8ad9ca31a8372d0c353",
														"maxLength": 32,
														"type": "string",
														"x-auditable": true
													},
													"issuer": {
														"description": "The certificate authority that issued the certificate.",
														"example": "GlobalSign",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"signature": {
														"description": "The type of hash used for the certificate.",
														"example": "SHA256WithRSA",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"status": {
														"description": "Status of the zone's custom SSL.",
														"enum": [
															"initializing",
															"pending_deployment",
															"active",
															"pending_deletion",
															"deleted",
															"expired"
														],
														"example": "active",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"updated_at": {
														"description": "When the certificate was last modified.",
														"example": "2014-01-01T05:20:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													},
													"uploaded_on": {
														"description": "When the certificate was uploaded to Cloudflare.",
														"example": "2014-01-01T05:20:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"id",
													"status",
													"issuer",
													"signature",
													"certificate",
													"expires_on",
													"uploaded_on",
													"updated_at"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Custom Origin Trust Store Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												},
												{
													"properties": {
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service.",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results.",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results.",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters.",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"certificate": {
																"description": "The zone's SSL certificate or certificate and the intermediate(s).",
																"example": "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n-----END CERTIFICATE-----\n",
																"type": "string"
															},
															"expires_on": {
																"description": "When the certificate expires.",
																"example": "2122-10-29T16:59:47Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "Identifier.",
																"example": "023e105f4ecef8ad9ca31a8372d0c353",
																"maxLength": 32,
																"type": "string",
																"x-auditable": true
															},
															"issuer": {
																"description": "The certificate authority that issued the certificate.",
																"example": "GlobalSign",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"signature": {
																"description": "The type of hash used for the certificate.",
																"example": "SHA256WithRSA",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"status": {
																"description": "Status of the zone's custom SSL.",
																"enum": [
																	"initializing",
																	"pending_deployment",
																	"active",
																	"pending_deletion",
																	"deleted",
																	"expired"
																],
																"example": "active",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"updated_at": {
																"description": "When the certificate was last modified.",
																"example": "2014-01-01T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															},
															"uploaded_on": {
																"description": "When the certificate was uploaded to Cloudflare.",
																"example": "2014-01-01T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id",
															"status",
															"issuer",
															"signature",
															"certificate",
															"expires_on",
															"uploaded_on",
															"updated_at"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Custom Origin Trust Store response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "List Custom Origin Trust Store Details",
		"tags": [
			"Custom Origin Trust Store"
		],
		"x-api-token-group": [
			"SSL and Certificates Write",
			"SSL and Certificates Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/acm/custom_trust_store/{custom_origin_trust_store_id}": {
		"operationId": "custom-origin-trust-store-details",
		"parameters": [
			{
				"in": "path",
				"name": "custom_origin_trust_store_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"certificate": {
													"description": "The zone's SSL certificate or certificate and the intermediate(s).",
													"example": "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n-----END CERTIFICATE-----\n",
													"type": "string"
												},
												"expires_on": {
													"description": "When the certificate expires.",
													"example": "2122-10-29T16:59:47Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"issuer": {
													"description": "The certificate authority that issued the certificate.",
													"example": "GlobalSign",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"signature": {
													"description": "The type of hash used for the certificate.",
													"example": "SHA256WithRSA",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Status of the zone's custom SSL.",
													"enum": [
														"initializing",
														"pending_deployment",
														"active",
														"pending_deletion",
														"deleted",
														"expired"
													],
													"example": "active",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"description": "When the certificate was last modified.",
													"example": "2014-01-01T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"uploaded_on": {
													"description": "When the certificate was uploaded to Cloudflare.",
													"example": "2014-01-01T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"status",
												"issuer",
												"signature",
												"certificate",
												"expires_on",
												"uploaded_on",
												"updated_at"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Custom Origin Trust Store Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"certificate": {
															"description": "The zone's SSL certificate or certificate and the intermediate(s).",
															"example": "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n-----END CERTIFICATE-----\n",
															"type": "string"
														},
														"expires_on": {
															"description": "When the certificate expires.",
															"example": "2122-10-29T16:59:47Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string",
															"x-auditable": true
														},
														"issuer": {
															"description": "The certificate authority that issued the certificate.",
															"example": "GlobalSign",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"signature": {
															"description": "The type of hash used for the certificate.",
															"example": "SHA256WithRSA",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"description": "Status of the zone's custom SSL.",
															"enum": [
																"initializing",
																"pending_deployment",
																"active",
																"pending_deletion",
																"deleted",
																"expired"
															],
															"example": "active",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"updated_at": {
															"description": "When the certificate was last modified.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"uploaded_on": {
															"description": "When the certificate was uploaded to Cloudflare.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"status",
														"issuer",
														"signature",
														"certificate",
														"expires_on",
														"uploaded_on",
														"updated_at"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Custom Origin Trust Store Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Custom Origin Trust Store Details",
		"tags": [
			"Custom Origin Trust Store"
		],
		"x-api-token-group": [
			"SSL and Certificates Write",
			"SSL and Certificates Read"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/acm/custom_trust_store": {
		"description": "Add Custom Origin Trust Store for a Zone.",
		"operationId": "custom-origin-trust-store-create",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier.",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string",
					"x-auditable": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"certificate": {
								"description": "The zone's SSL certificate or certificate and the intermediate(s).",
								"example": "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n-----END CERTIFICATE-----\n",
								"type": "string"
							}
						},
						"required": [
							"certificate"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"success": {
													"description": "Whether the API call was successful.",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"certificate": {
													"description": "The zone's SSL certificate or certificate and the intermediate(s).",
													"example": "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n-----END CERTIFICATE-----\n",
													"type": "string"
												},
												"expires_on": {
													"description": "When the certificate expires.",
													"example": "2122-10-29T16:59:47Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"id": {
													"description": "Identifier.",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"type": "string",
													"x-auditable": true
												},
												"issuer": {
													"description": "The certificate authority that issued the certificate.",
													"example": "GlobalSign",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"signature": {
													"description": "The type of hash used for the certificate.",
													"example": "SHA256WithRSA",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"status": {
													"description": "Status of the zone's custom SSL.",
													"enum": [
														"initializing",
														"pending_deployment",
														"active",
														"pending_deletion",
														"deleted",
														"expired"
													],
													"example": "active",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"updated_at": {
													"description": "When the certificate was last modified.",
													"example": "2014-01-01T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												},
												"uploaded_on": {
													"description": "When the certificate was uploaded to Cloudflare.",
													"example": "2014-01-01T05:20:00Z",
													"format": "date-time",
													"readOnly": true,
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"id",
												"status",
												"issuer",
												"signature",
												"certificate",
												"expires_on",
												"uploaded_on",
												"updated_at"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Upload Custom Origin Trust Store response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"documentation_url": {
																		"type": "string"
																	},
																	"message": {
																		"type": "string"
																	},
																	"source": {
																		"properties": {
																			"pointer": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"success": {
															"description": "Whether the API call was successful.",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages"
													],
													"type": "object"
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"certificate": {
															"description": "The zone's SSL certificate or certificate and the intermediate(s).",
															"example": "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n-----END CERTIFICATE-----\n",
															"type": "string"
														},
														"expires_on": {
															"description": "When the certificate expires.",
															"example": "2122-10-29T16:59:47Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"id": {
															"description": "Identifier.",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"type": "string",
															"x-auditable": true
														},
														"issuer": {
															"description": "The certificate authority that issued the certificate.",
															"example": "GlobalSign",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"signature": {
															"description": "The type of hash used for the certificate.",
															"example": "SHA256WithRSA",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"status": {
															"description": "Status of the zone's custom SSL.",
															"enum": [
																"initializing",
																"pending_deployment",
																"active",
																"pending_deletion",
																"deleted",
																"expired"
															],
															"example": "active",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"updated_at": {
															"description": "When the certificate was last modified.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														},
														"uploaded_on": {
															"description": "When the certificate was uploaded to Cloudflare.",
															"example": "2014-01-01T05:20:00Z",
															"format": "date-time",
															"readOnly": true,
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"id",
														"status",
														"issuer",
														"signature",
														"certificate",
														"expires_on",
														"uploaded_on",
														"updated_at"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"documentation_url": {
																"type": "string"
															},
															"message": {
																"type": "string"
															},
															"source": {
																"properties": {
																	"pointer": {
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Upload Custom Origin Trust Store response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Upload Custom Origin Trust Store",
		"tags": [
			"Custom Origin Trust Store"
		],
		"x-api-token-group": [
			"SSL and Certificates Write"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#ssl:read",
				"#ssl:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}