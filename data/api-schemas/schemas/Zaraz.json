{
	"GET /zones/{zone_id}/settings/zaraz/config": {
		"description": "Gets latest Zaraz configuration for a zone. It can be preview or published configuration, whichever was the last updated. Secret variables values will not be included.",
		"operationId": "get-zones-zone_identifier-zaraz-config",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Zaraz configuration",
													"example": {
														"consent": {
															"cookieName": "zaraz-consent",
															"customIntroDisclaimerDismissed": true,
															"enabled": false
														},
														"dataLayer": true,
														"debugKey": "my-debug-key",
														"settings": {
															"autoInjectScript": true,
															"ecommerce": true,
															"initPath": "/i"
														},
														"tools": {
															"aJvt": {
																"actions": {
																	"hrnc": {
																		"actionType": "pageview",
																		"blockingTriggers": [],
																		"data": {
																			"__zaraz_setting_name": "Page view",
																			"ev": "PageView"
																		},
																		"firingTriggers": [
																			"Pageview"
																		]
																	}
																},
																"component": "facebook-pixel",
																"defaultFields": {
																	"testKey": "TEST123456"
																},
																"enabled": true,
																"name": "Facebook Pixel",
																"permissions": [
																	"access_client_kv"
																],
																"settings": {
																	"accessToken": "ABcdEFg",
																	"ecommerce": true,
																	"property": "12345"
																},
																"type": "component"
															}
														},
														"triggers": {
															"ktBn": {
																"Pageview": {
																	"clientRules": [],
																	"description": "All page loads",
																	"excludeRules": [],
																	"loadRules": [
																		{
																			"match": "{{ client.__zarazTrack }}",
																			"op": "EQUALS",
																			"value": "Pageview"
																		}
																	],
																	"name": "Pageview",
																	"system": "pageload"
																}
															}
														},
														"variables": {
															"Autd": {
																"name": "ip",
																"type": "string",
																"value": "{{ system.device.ip }}"
															}
														},
														"zarazVersion": 43
													},
													"properties": {
														"analytics": {
															"description": "Cloudflare Monitoring settings.",
															"properties": {
																"defaultPurpose": {
																	"description": "Consent purpose assigned to Monitoring.",
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"description": "Whether Advanced Monitoring reports are enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"sessionExpTime": {
																	"description": "Session expiration time (seconds).",
																	"maximum": 86400,
																	"minimum": 60,
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"consent": {
															"description": "Consent management configuration.",
															"properties": {
																"buttonTextTranslations": {
																	"properties": {
																		"accept_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"confirm_my_choices": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"reject_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		}
																	},
																	"required": [
																		"accept_all",
																		"reject_all",
																		"confirm_my_choices"
																	],
																	"type": "object"
																},
																"companyEmail": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyName": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyStreetAddress": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTML": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTMLWithTranslations": {
																	"additionalProperties": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": "Object where keys are language codes",
																	"type": "object"
																},
																"cookieName": {
																	"type": "string",
																	"x-auditable": true
																},
																"customCSS": {
																	"type": "string",
																	"x-auditable": true
																},
																"customIntroDisclaimerDismissed": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"defaultLanguage": {
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"type": "boolean"
																},
																"hideModal": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"purposes": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"purposesWithTranslations": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"name": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"order": {
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description",
																			"order"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"tcfCompliant": {
																	"type": "boolean"
																}
															},
															"required": [
																"enabled"
															],
															"type": "object"
														},
														"dataLayer": {
															"description": "Data layer compatibility mode enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"debugKey": {
															"description": "The key for Zaraz debug mode.",
															"type": "string",
															"x-auditable": true
														},
														"historyChange": {
															"description": "Single Page Application support enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"settings": {
															"description": "General Zaraz settings.",
															"properties": {
																"autoInjectScript": {
																	"description": "Automatic injection of Zaraz scripts enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"contextEnricher": {
																	"description": "Details of the worker that receives and edits Zaraz Context object.",
																	"properties": {
																		"escapedWorkerName": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"workerTag": {
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"escapedWorkerName",
																		"workerTag"
																	],
																	"type": "object"
																},
																"cookieDomain": {
																	"description": "The domain Zaraz will use for writing and reading its cookies.",
																	"type": "string",
																	"x-auditable": true
																},
																"ecommerce": {
																	"description": "Ecommerce API enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"eventsApiPath": {
																	"description": "Custom endpoint for server-side track events.",
																	"type": "string",
																	"x-auditable": true
																},
																"hideExternalReferer": {
																	"description": "Hiding external referrer URL enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideIPAddress": {
																	"description": "Trimming IP address enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideQueryParams": {
																	"description": "Removing URL query params enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideUserAgent": {
																	"description": "Removing sensitive data from User Aagent string enabled.",
																	"type": "boolean"
																},
																"initPath": {
																	"description": "Custom endpoint for Zaraz init script.",
																	"type": "string",
																	"x-auditable": true
																},
																"injectIframes": {
																	"description": "Injection of Zaraz scripts into iframes enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"mcRootPath": {
																	"description": "Custom path for Managed Components server functionalities.",
																	"type": "string",
																	"x-auditable": true
																},
																"scriptPath": {
																	"description": "Custom endpoint for Zaraz main script.",
																	"type": "string",
																	"x-auditable": true
																},
																"trackPath": {
																	"description": "Custom endpoint for Zaraz tracking requests.",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"autoInjectScript"
															],
															"type": "object"
														},
														"triggers": {
															"additionalProperties": {
																"properties": {
																	"description": {
																		"description": "Trigger description.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"excludeRules": {
																		"description": "Rules defining when the trigger is not fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"loadRules": {
																		"description": "Rules defining when the trigger is fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"name": {
																		"description": "Trigger name.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"system": {
																		"enum": [
																			"pageload"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"loadRules",
																	"excludeRules"
																],
																"type": "object"
															},
															"description": "Triggers set up under Zaraz configuration, where key is the trigger alpha-numeric ID and value is the trigger configuration.",
															"type": "object"
														},
														"variables": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"string"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"secret"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true,
																				"x-sensitive": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"properties": {
																					"escapedWorkerName": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"workerTag": {
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"required": [
																					"escapedWorkerName",
																					"workerTag"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	}
																],
																"discriminator": {
																	"mapping": {
																		"secret": "#/components/schemas/zaraz_secret_variable",
																		"string": "#/components/schemas/zaraz_string_variable",
																		"worker": "#/components/schemas/zaraz_worker_variable"
																	},
																	"propertyName": "type"
																}
															},
															"description": "Variables set up under Zaraz configuration, where key is the variable alpha-numeric ID and value is the variable configuration. Values of variables of type secret are not included.",
															"type": "object"
														},
														"zarazVersion": {
															"description": "Zaraz internal version of the config.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"tools",
														"triggers",
														"variables",
														"settings",
														"dataLayer",
														"debugKey",
														"zarazVersion"
													],
													"type": "object"
												},
												{
													"properties": {
														"tools": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"component"
																						],
																						"type": "string"
																					}
																				},
																				"required": [
																					"type"
																				]
																			}
																		]
																	},
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"custom-mc"
																						],
																						"type": "string"
																					},
																					"worker": {
																						"description": "Cloudflare worker that acts as a managed component",
																						"properties": {
																							"escapedWorkerName": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"workerTag": {
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"workerTag",
																							"escapedWorkerName"
																						],
																						"type": "object"
																					}
																				},
																				"required": [
																					"worker",
																					"type"
																				]
																			}
																		]
																	}
																]
															},
															"description": "Tools set up under Zaraz configuration, where key is the alpha-numeric tool ID and value is the tool configuration object.",
															"type": "object"
														}
													}
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Zaraz configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zaraz configuration response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Zaraz configuration",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin"
		]
	},
	"GET /zones/{zone_id}/settings/zaraz/default": {
		"description": "Gets default Zaraz configuration for a zone.",
		"operationId": "get-zones-zone_identifier-zaraz-default",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Zaraz configuration",
													"example": {
														"consent": {
															"cookieName": "zaraz-consent",
															"customIntroDisclaimerDismissed": true,
															"enabled": false
														},
														"dataLayer": true,
														"debugKey": "my-debug-key",
														"settings": {
															"autoInjectScript": true,
															"ecommerce": true,
															"initPath": "/i"
														},
														"tools": {
															"aJvt": {
																"actions": {
																	"hrnc": {
																		"actionType": "pageview",
																		"blockingTriggers": [],
																		"data": {
																			"__zaraz_setting_name": "Page view",
																			"ev": "PageView"
																		},
																		"firingTriggers": [
																			"Pageview"
																		]
																	}
																},
																"component": "facebook-pixel",
																"defaultFields": {
																	"testKey": "TEST123456"
																},
																"enabled": true,
																"name": "Facebook Pixel",
																"permissions": [
																	"access_client_kv"
																],
																"settings": {
																	"accessToken": "ABcdEFg",
																	"ecommerce": true,
																	"property": "12345"
																},
																"type": "component"
															}
														},
														"triggers": {
															"ktBn": {
																"Pageview": {
																	"clientRules": [],
																	"description": "All page loads",
																	"excludeRules": [],
																	"loadRules": [
																		{
																			"match": "{{ client.__zarazTrack }}",
																			"op": "EQUALS",
																			"value": "Pageview"
																		}
																	],
																	"name": "Pageview",
																	"system": "pageload"
																}
															}
														},
														"variables": {
															"Autd": {
																"name": "ip",
																"type": "string",
																"value": "{{ system.device.ip }}"
															}
														},
														"zarazVersion": 43
													},
													"properties": {
														"analytics": {
															"description": "Cloudflare Monitoring settings.",
															"properties": {
																"defaultPurpose": {
																	"description": "Consent purpose assigned to Monitoring.",
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"description": "Whether Advanced Monitoring reports are enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"sessionExpTime": {
																	"description": "Session expiration time (seconds).",
																	"maximum": 86400,
																	"minimum": 60,
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"consent": {
															"description": "Consent management configuration.",
															"properties": {
																"buttonTextTranslations": {
																	"properties": {
																		"accept_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"confirm_my_choices": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"reject_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		}
																	},
																	"required": [
																		"accept_all",
																		"reject_all",
																		"confirm_my_choices"
																	],
																	"type": "object"
																},
																"companyEmail": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyName": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyStreetAddress": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTML": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTMLWithTranslations": {
																	"additionalProperties": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": "Object where keys are language codes",
																	"type": "object"
																},
																"cookieName": {
																	"type": "string",
																	"x-auditable": true
																},
																"customCSS": {
																	"type": "string",
																	"x-auditable": true
																},
																"customIntroDisclaimerDismissed": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"defaultLanguage": {
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"type": "boolean"
																},
																"hideModal": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"purposes": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"purposesWithTranslations": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"name": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"order": {
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description",
																			"order"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"tcfCompliant": {
																	"type": "boolean"
																}
															},
															"required": [
																"enabled"
															],
															"type": "object"
														},
														"dataLayer": {
															"description": "Data layer compatibility mode enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"debugKey": {
															"description": "The key for Zaraz debug mode.",
															"type": "string",
															"x-auditable": true
														},
														"historyChange": {
															"description": "Single Page Application support enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"settings": {
															"description": "General Zaraz settings.",
															"properties": {
																"autoInjectScript": {
																	"description": "Automatic injection of Zaraz scripts enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"contextEnricher": {
																	"description": "Details of the worker that receives and edits Zaraz Context object.",
																	"properties": {
																		"escapedWorkerName": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"workerTag": {
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"escapedWorkerName",
																		"workerTag"
																	],
																	"type": "object"
																},
																"cookieDomain": {
																	"description": "The domain Zaraz will use for writing and reading its cookies.",
																	"type": "string",
																	"x-auditable": true
																},
																"ecommerce": {
																	"description": "Ecommerce API enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"eventsApiPath": {
																	"description": "Custom endpoint for server-side track events.",
																	"type": "string",
																	"x-auditable": true
																},
																"hideExternalReferer": {
																	"description": "Hiding external referrer URL enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideIPAddress": {
																	"description": "Trimming IP address enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideQueryParams": {
																	"description": "Removing URL query params enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideUserAgent": {
																	"description": "Removing sensitive data from User Aagent string enabled.",
																	"type": "boolean"
																},
																"initPath": {
																	"description": "Custom endpoint for Zaraz init script.",
																	"type": "string",
																	"x-auditable": true
																},
																"injectIframes": {
																	"description": "Injection of Zaraz scripts into iframes enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"mcRootPath": {
																	"description": "Custom path for Managed Components server functionalities.",
																	"type": "string",
																	"x-auditable": true
																},
																"scriptPath": {
																	"description": "Custom endpoint for Zaraz main script.",
																	"type": "string",
																	"x-auditable": true
																},
																"trackPath": {
																	"description": "Custom endpoint for Zaraz tracking requests.",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"autoInjectScript"
															],
															"type": "object"
														},
														"triggers": {
															"additionalProperties": {
																"properties": {
																	"description": {
																		"description": "Trigger description.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"excludeRules": {
																		"description": "Rules defining when the trigger is not fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"loadRules": {
																		"description": "Rules defining when the trigger is fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"name": {
																		"description": "Trigger name.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"system": {
																		"enum": [
																			"pageload"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"loadRules",
																	"excludeRules"
																],
																"type": "object"
															},
															"description": "Triggers set up under Zaraz configuration, where key is the trigger alpha-numeric ID and value is the trigger configuration.",
															"type": "object"
														},
														"variables": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"string"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"secret"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true,
																				"x-sensitive": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"properties": {
																					"escapedWorkerName": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"workerTag": {
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"required": [
																					"escapedWorkerName",
																					"workerTag"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	}
																],
																"discriminator": {
																	"mapping": {
																		"secret": "#/components/schemas/zaraz_secret_variable",
																		"string": "#/components/schemas/zaraz_string_variable",
																		"worker": "#/components/schemas/zaraz_worker_variable"
																	},
																	"propertyName": "type"
																}
															},
															"description": "Variables set up under Zaraz configuration, where key is the variable alpha-numeric ID and value is the variable configuration. Values of variables of type secret are not included.",
															"type": "object"
														},
														"zarazVersion": {
															"description": "Zaraz internal version of the config.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"tools",
														"triggers",
														"variables",
														"settings",
														"dataLayer",
														"debugKey",
														"zarazVersion"
													],
													"type": "object"
												},
												{
													"properties": {
														"tools": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"component"
																						],
																						"type": "string"
																					}
																				},
																				"required": [
																					"type"
																				]
																			}
																		]
																	},
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"custom-mc"
																						],
																						"type": "string"
																					},
																					"worker": {
																						"description": "Cloudflare worker that acts as a managed component",
																						"properties": {
																							"escapedWorkerName": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"workerTag": {
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"workerTag",
																							"escapedWorkerName"
																						],
																						"type": "object"
																					}
																				},
																				"required": [
																					"worker",
																					"type"
																				]
																			}
																		]
																	}
																]
															},
															"description": "Tools set up under Zaraz configuration, where key is the alpha-numeric tool ID and value is the tool configuration object.",
															"type": "object"
														}
													}
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Zaraz default configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zaraz default configuration response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get default Zaraz configuration",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin"
		]
	},
	"GET /zones/{zone_id}/settings/zaraz/export": {
		"description": "Exports full current published Zaraz configuration for a zone, secret variables included.",
		"operationId": "get-zones-zone_identifier-zaraz-export",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "Zaraz configuration",
									"example": {
										"consent": {
											"cookieName": "zaraz-consent",
											"customIntroDisclaimerDismissed": true,
											"enabled": false
										},
										"dataLayer": true,
										"debugKey": "my-debug-key",
										"settings": {
											"autoInjectScript": true,
											"ecommerce": true,
											"initPath": "/i"
										},
										"tools": {
											"aJvt": {
												"actions": {
													"hrnc": {
														"actionType": "pageview",
														"blockingTriggers": [],
														"data": {
															"__zaraz_setting_name": "Page view",
															"ev": "PageView"
														},
														"firingTriggers": [
															"Pageview"
														]
													}
												},
												"component": "facebook-pixel",
												"defaultFields": {
													"testKey": "TEST123456"
												},
												"enabled": true,
												"name": "Facebook Pixel",
												"permissions": [
													"access_client_kv"
												],
												"settings": {
													"accessToken": "ABcdEFg",
													"ecommerce": true,
													"property": "12345"
												},
												"type": "component"
											}
										},
										"triggers": {
											"ktBn": {
												"Pageview": {
													"clientRules": [],
													"description": "All page loads",
													"excludeRules": [],
													"loadRules": [
														{
															"match": "{{ client.__zarazTrack }}",
															"op": "EQUALS",
															"value": "Pageview"
														}
													],
													"name": "Pageview",
													"system": "pageload"
												}
											}
										},
										"variables": {
											"Autd": {
												"name": "ip",
												"type": "string",
												"value": "{{ system.device.ip }}"
											}
										},
										"zarazVersion": 43
									},
									"properties": {
										"analytics": {
											"description": "Cloudflare Monitoring settings.",
											"properties": {
												"defaultPurpose": {
													"description": "Consent purpose assigned to Monitoring.",
													"type": "string",
													"x-auditable": true
												},
												"enabled": {
													"description": "Whether Advanced Monitoring reports are enabled.",
													"type": "boolean",
													"x-auditable": true
												},
												"sessionExpTime": {
													"description": "Session expiration time (seconds).",
													"maximum": 86400,
													"minimum": 60,
													"type": "integer",
													"x-auditable": true
												}
											},
											"type": "object"
										},
										"consent": {
											"description": "Consent management configuration.",
											"properties": {
												"buttonTextTranslations": {
													"properties": {
														"accept_all": {
															"additionalProperties": {
																"type": "string",
																"x-auditable": true
															},
															"description": "Object where keys are language codes",
															"type": "object"
														},
														"confirm_my_choices": {
															"additionalProperties": {
																"type": "string",
																"x-auditable": true
															},
															"description": "Object where keys are language codes",
															"type": "object"
														},
														"reject_all": {
															"additionalProperties": {
																"type": "string",
																"x-auditable": true
															},
															"description": "Object where keys are language codes",
															"type": "object"
														}
													},
													"required": [
														"accept_all",
														"reject_all",
														"confirm_my_choices"
													],
													"type": "object"
												},
												"companyEmail": {
													"type": "string",
													"x-auditable": true
												},
												"companyName": {
													"type": "string",
													"x-auditable": true
												},
												"companyStreetAddress": {
													"type": "string",
													"x-auditable": true
												},
												"consentModalIntroHTML": {
													"type": "string",
													"x-auditable": true
												},
												"consentModalIntroHTMLWithTranslations": {
													"additionalProperties": {
														"type": "string",
														"x-auditable": true
													},
													"description": "Object where keys are language codes",
													"type": "object"
												},
												"cookieName": {
													"type": "string",
													"x-auditable": true
												},
												"customCSS": {
													"type": "string",
													"x-auditable": true
												},
												"customIntroDisclaimerDismissed": {
													"type": "boolean",
													"x-auditable": true
												},
												"defaultLanguage": {
													"type": "string",
													"x-auditable": true
												},
												"enabled": {
													"type": "boolean"
												},
												"hideModal": {
													"type": "boolean",
													"x-auditable": true
												},
												"purposes": {
													"additionalProperties": {
														"properties": {
															"description": {
																"type": "string",
																"x-auditable": true
															},
															"name": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"name",
															"description"
														],
														"type": "object"
													},
													"description": "Object where keys are purpose alpha-numeric IDs",
													"type": "object"
												},
												"purposesWithTranslations": {
													"additionalProperties": {
														"properties": {
															"description": {
																"additionalProperties": {
																	"type": "string",
																	"x-auditable": true
																},
																"description": "Object where keys are language codes",
																"type": "object"
															},
															"name": {
																"additionalProperties": {
																	"type": "string",
																	"x-auditable": true
																},
																"description": "Object where keys are language codes",
																"type": "object"
															},
															"order": {
																"type": "integer",
																"x-auditable": true
															}
														},
														"required": [
															"name",
															"description",
															"order"
														],
														"type": "object"
													},
													"description": "Object where keys are purpose alpha-numeric IDs",
													"type": "object"
												},
												"tcfCompliant": {
													"type": "boolean"
												}
											},
											"required": [
												"enabled"
											],
											"type": "object"
										},
										"dataLayer": {
											"description": "Data layer compatibility mode enabled.",
											"type": "boolean",
											"x-auditable": true
										},
										"debugKey": {
											"description": "The key for Zaraz debug mode.",
											"type": "string",
											"x-auditable": true
										},
										"historyChange": {
											"description": "Single Page Application support enabled.",
											"type": "boolean",
											"x-auditable": true
										},
										"settings": {
											"description": "General Zaraz settings.",
											"properties": {
												"autoInjectScript": {
													"description": "Automatic injection of Zaraz scripts enabled.",
													"type": "boolean",
													"x-auditable": true
												},
												"contextEnricher": {
													"description": "Details of the worker that receives and edits Zaraz Context object.",
													"properties": {
														"escapedWorkerName": {
															"type": "string",
															"x-auditable": true
														},
														"workerTag": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"escapedWorkerName",
														"workerTag"
													],
													"type": "object"
												},
												"cookieDomain": {
													"description": "The domain Zaraz will use for writing and reading its cookies.",
													"type": "string",
													"x-auditable": true
												},
												"ecommerce": {
													"description": "Ecommerce API enabled.",
													"type": "boolean",
													"x-auditable": true
												},
												"eventsApiPath": {
													"description": "Custom endpoint for server-side track events.",
													"type": "string",
													"x-auditable": true
												},
												"hideExternalReferer": {
													"description": "Hiding external referrer URL enabled.",
													"type": "boolean",
													"x-auditable": true
												},
												"hideIPAddress": {
													"description": "Trimming IP address enabled.",
													"type": "boolean",
													"x-auditable": true
												},
												"hideQueryParams": {
													"description": "Removing URL query params enabled.",
													"type": "boolean",
													"x-auditable": true
												},
												"hideUserAgent": {
													"description": "Removing sensitive data from User Aagent string enabled.",
													"type": "boolean"
												},
												"initPath": {
													"description": "Custom endpoint for Zaraz init script.",
													"type": "string",
													"x-auditable": true
												},
												"injectIframes": {
													"description": "Injection of Zaraz scripts into iframes enabled.",
													"type": "boolean",
													"x-auditable": true
												},
												"mcRootPath": {
													"description": "Custom path for Managed Components server functionalities.",
													"type": "string",
													"x-auditable": true
												},
												"scriptPath": {
													"description": "Custom endpoint for Zaraz main script.",
													"type": "string",
													"x-auditable": true
												},
												"trackPath": {
													"description": "Custom endpoint for Zaraz tracking requests.",
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"autoInjectScript"
											],
											"type": "object"
										},
										"triggers": {
											"additionalProperties": {
												"properties": {
													"description": {
														"description": "Trigger description.",
														"type": "string",
														"x-auditable": true
													},
													"excludeRules": {
														"description": "Rules defining when the trigger is not fired.",
														"items": {
															"anyOf": [
																{
																	"properties": {
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"match": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"op": {
																			"enum": [
																				"CONTAINS",
																				"EQUALS",
																				"STARTS_WITH",
																				"ENDS_WITH",
																				"MATCH_REGEX",
																				"NOT_MATCH_REGEX",
																				"GREATER_THAN",
																				"GREATER_THAN_OR_EQUAL",
																				"LESS_THAN",
																				"LESS_THAN_OR_EQUAL"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"value": {
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id",
																		"match",
																		"op",
																		"value"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"clickListener"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"selector": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": {
																					"enum": [
																						"xpath",
																						"css"
																					],
																					"type": "string",
																					"x-auditable": true
																				},
																				"waitForTags": {
																					"minimum": 0,
																					"type": "integer",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"type",
																				"selector",
																				"waitForTags"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"timer"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"interval": {
																					"minimum": 50,
																					"type": "integer",
																					"x-auditable": true
																				},
																				"limit": {
																					"minimum": 0,
																					"type": "integer",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"interval",
																				"limit"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"formSubmission"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"selector": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"validate": {
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"selector",
																				"validate"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"variableMatch"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"match": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"variable": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"variable",
																				"match"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"scrollDepth"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"positions": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"positions"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"elementVisibility"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"selector": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"selector"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																}
															]
														},
														"type": "array"
													},
													"loadRules": {
														"description": "Rules defining when the trigger is fired.",
														"items": {
															"anyOf": [
																{
																	"properties": {
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"match": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"op": {
																			"enum": [
																				"CONTAINS",
																				"EQUALS",
																				"STARTS_WITH",
																				"ENDS_WITH",
																				"MATCH_REGEX",
																				"NOT_MATCH_REGEX",
																				"GREATER_THAN",
																				"GREATER_THAN_OR_EQUAL",
																				"LESS_THAN",
																				"LESS_THAN_OR_EQUAL"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"value": {
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"id",
																		"match",
																		"op",
																		"value"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"clickListener"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"selector": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": {
																					"enum": [
																						"xpath",
																						"css"
																					],
																					"type": "string",
																					"x-auditable": true
																				},
																				"waitForTags": {
																					"minimum": 0,
																					"type": "integer",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"type",
																				"selector",
																				"waitForTags"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"timer"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"interval": {
																					"minimum": 50,
																					"type": "integer",
																					"x-auditable": true
																				},
																				"limit": {
																					"minimum": 0,
																					"type": "integer",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"interval",
																				"limit"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"formSubmission"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"selector": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"validate": {
																					"type": "boolean",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"selector",
																				"validate"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"variableMatch"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"match": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"variable": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"variable",
																				"match"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"scrollDepth"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"positions": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"positions"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"action": {
																			"enum": [
																				"elementVisibility"
																			],
																			"type": "string",
																			"x-auditable": true
																		},
																		"id": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"settings": {
																			"properties": {
																				"selector": {
																					"type": "string",
																					"x-auditable": true
																				}
																			},
																			"required": [
																				"selector"
																			],
																			"type": "object"
																		}
																	},
																	"required": [
																		"id",
																		"action",
																		"settings"
																	],
																	"type": "object"
																}
															]
														},
														"type": "array"
													},
													"name": {
														"description": "Trigger name.",
														"type": "string",
														"x-auditable": true
													},
													"system": {
														"enum": [
															"pageload"
														],
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"name",
													"loadRules",
													"excludeRules"
												],
												"type": "object"
											},
											"description": "Triggers set up under Zaraz configuration, where key is the trigger alpha-numeric ID and value is the trigger configuration.",
											"type": "object"
										},
										"variables": {
											"additionalProperties": {
												"anyOf": [
													{
														"properties": {
															"name": {
																"type": "string",
																"x-auditable": true
															},
															"type": {
																"enum": [
																	"string"
																],
																"type": "string",
																"x-auditable": true
															},
															"value": {
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"name",
															"type",
															"value"
														],
														"type": "object"
													},
													{
														"properties": {
															"name": {
																"type": "string",
																"x-auditable": true
															},
															"type": {
																"enum": [
																	"secret"
																],
																"type": "string",
																"x-auditable": true
															},
															"value": {
																"type": "string",
																"x-auditable": true,
																"x-sensitive": true
															}
														},
														"required": [
															"name",
															"type",
															"value"
														],
														"type": "object"
													},
													{
														"properties": {
															"name": {
																"type": "string",
																"x-auditable": true
															},
															"type": {
																"enum": [
																	"worker"
																],
																"type": "string",
																"x-auditable": true
															},
															"value": {
																"properties": {
																	"escapedWorkerName": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"workerTag": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"escapedWorkerName",
																	"workerTag"
																],
																"type": "object"
															}
														},
														"required": [
															"name",
															"type",
															"value"
														],
														"type": "object"
													}
												],
												"discriminator": {
													"mapping": {
														"secret": "#/components/schemas/zaraz_secret_variable",
														"string": "#/components/schemas/zaraz_string_variable",
														"worker": "#/components/schemas/zaraz_worker_variable"
													},
													"propertyName": "type"
												}
											},
											"description": "Variables set up under Zaraz configuration, where key is the variable alpha-numeric ID and value is the variable configuration. Values of variables of type secret are not included.",
											"type": "object"
										},
										"zarazVersion": {
											"description": "Zaraz internal version of the config.",
											"type": "integer",
											"x-auditable": true
										}
									},
									"required": [
										"tools",
										"triggers",
										"variables",
										"settings",
										"dataLayer",
										"debugKey",
										"zarazVersion"
									],
									"type": "object"
								},
								{
									"properties": {
										"tools": {
											"additionalProperties": {
												"anyOf": [
													{
														"allOf": [
															{
																"allOf": [
																	{
																		"properties": {
																			"blockingTriggers": {
																				"description": "List of blocking trigger IDs",
																				"items": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array"
																			},
																			"defaultFields": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"type": "string"
																						},
																						{
																							"type": "boolean"
																						}
																					],
																					"x-auditable": true
																				},
																				"description": "Default fields for tool's actions",
																				"type": "object"
																			},
																			"defaultPurpose": {
																				"description": "Default consent purpose ID",
																				"type": "string",
																				"x-auditable": true
																			},
																			"enabled": {
																				"description": "Whether tool is enabled",
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"name": {
																				"description": "Tool's name defined by the user",
																				"type": "string",
																				"x-auditable": true
																			},
																			"vendorName": {
																				"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																				"type": "string",
																				"x-auditable": true
																			},
																			"vendorPolicyUrl": {
																				"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"enabled",
																			"blockingTriggers",
																			"name",
																			"defaultFields"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"actions": {
																				"additionalProperties": {
																					"properties": {
																						"actionType": {
																							"description": "Tool event type",
																							"type": "string",
																							"x-auditable": true
																						},
																						"blockingTriggers": {
																							"description": "List of blocking triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"type": "array"
																						},
																						"data": {
																							"description": "Event payload",
																							"type": "object"
																						},
																						"firingTriggers": {
																							"description": "List of firing triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"minItems": 1,
																							"type": "array"
																						}
																					},
																					"required": [
																						"actionType",
																						"blockingTriggers",
																						"firingTriggers",
																						"data"
																					],
																					"type": "object"
																				},
																				"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																				"type": "object"
																			},
																			"component": {
																				"description": "Tool's internal name",
																				"type": "string",
																				"x-auditable": true
																			},
																			"neoEvents": {
																				"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																				"items": {
																					"properties": {
																						"actionType": {
																							"description": "Tool event type",
																							"type": "string",
																							"x-auditable": true
																						},
																						"blockingTriggers": {
																							"description": "List of blocking triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"type": "array"
																						},
																						"data": {
																							"description": "Event payload",
																							"type": "object"
																						},
																						"firingTriggers": {
																							"description": "List of firing triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"minItems": 1,
																							"type": "array"
																						}
																					},
																					"required": [
																						"actionType",
																						"blockingTriggers",
																						"firingTriggers",
																						"data"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"permissions": {
																				"description": "List of permissions granted to the component",
																				"items": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array"
																			},
																			"settings": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"type": "string"
																						},
																						{
																							"type": "boolean"
																						}
																					],
																					"x-auditable": true
																				},
																				"description": "Tool's settings",
																				"type": "object"
																			}
																		},
																		"required": [
																			"component",
																			"settings",
																			"permissions"
																		]
																	}
																]
															},
															{
																"properties": {
																	"type": {
																		"enum": [
																			"component"
																		],
																		"type": "string"
																	}
																},
																"required": [
																	"type"
																]
															}
														]
													},
													{
														"allOf": [
															{
																"allOf": [
																	{
																		"properties": {
																			"blockingTriggers": {
																				"description": "List of blocking trigger IDs",
																				"items": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array"
																			},
																			"defaultFields": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"type": "string"
																						},
																						{
																							"type": "boolean"
																						}
																					],
																					"x-auditable": true
																				},
																				"description": "Default fields for tool's actions",
																				"type": "object"
																			},
																			"defaultPurpose": {
																				"description": "Default consent purpose ID",
																				"type": "string",
																				"x-auditable": true
																			},
																			"enabled": {
																				"description": "Whether tool is enabled",
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"name": {
																				"description": "Tool's name defined by the user",
																				"type": "string",
																				"x-auditable": true
																			},
																			"vendorName": {
																				"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																				"type": "string",
																				"x-auditable": true
																			},
																			"vendorPolicyUrl": {
																				"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"enabled",
																			"blockingTriggers",
																			"name",
																			"defaultFields"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"actions": {
																				"additionalProperties": {
																					"properties": {
																						"actionType": {
																							"description": "Tool event type",
																							"type": "string",
																							"x-auditable": true
																						},
																						"blockingTriggers": {
																							"description": "List of blocking triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"type": "array"
																						},
																						"data": {
																							"description": "Event payload",
																							"type": "object"
																						},
																						"firingTriggers": {
																							"description": "List of firing triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"minItems": 1,
																							"type": "array"
																						}
																					},
																					"required": [
																						"actionType",
																						"blockingTriggers",
																						"firingTriggers",
																						"data"
																					],
																					"type": "object"
																				},
																				"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																				"type": "object"
																			},
																			"component": {
																				"description": "Tool's internal name",
																				"type": "string",
																				"x-auditable": true
																			},
																			"neoEvents": {
																				"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																				"items": {
																					"properties": {
																						"actionType": {
																							"description": "Tool event type",
																							"type": "string",
																							"x-auditable": true
																						},
																						"blockingTriggers": {
																							"description": "List of blocking triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"type": "array"
																						},
																						"data": {
																							"description": "Event payload",
																							"type": "object"
																						},
																						"firingTriggers": {
																							"description": "List of firing triggers IDs",
																							"items": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"minItems": 1,
																							"type": "array"
																						}
																					},
																					"required": [
																						"actionType",
																						"blockingTriggers",
																						"firingTriggers",
																						"data"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			},
																			"permissions": {
																				"description": "List of permissions granted to the component",
																				"items": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"type": "array"
																			},
																			"settings": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"type": "string"
																						},
																						{
																							"type": "boolean"
																						}
																					],
																					"x-auditable": true
																				},
																				"description": "Tool's settings",
																				"type": "object"
																			}
																		},
																		"required": [
																			"component",
																			"settings",
																			"permissions"
																		]
																	}
																]
															},
															{
																"properties": {
																	"type": {
																		"enum": [
																			"custom-mc"
																		],
																		"type": "string"
																	},
																	"worker": {
																		"description": "Cloudflare worker that acts as a managed component",
																		"properties": {
																			"escapedWorkerName": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"workerTag": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"workerTag",
																			"escapedWorkerName"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"worker",
																	"type"
																]
															}
														]
													}
												]
											},
											"description": "Tools set up under Zaraz configuration, where key is the alpha-numeric tool ID and value is the tool configuration object.",
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Zaraz configuration response",
				"headers": {
					"Content-Disposition": {
						"example": "attachment; filename=zaraz-2023-11-10-23-00.json",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zaraz configuration response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Export Zaraz configuration",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin"
		]
	},
	"GET /zones/{zone_id}/settings/zaraz/history": {
		"description": "Lists a history of published Zaraz configuration records for a zone.",
		"operationId": "get-zones-zone_identifier-zaraz-history",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"description": "Ordinal number to start listing the results with. Default value is 0.",
				"example": 0,
				"in": "query",
				"name": "offset",
				"schema": {
					"minimum": 0,
					"type": "integer"
				}
			},
			{
				"description": "Maximum amount of results to list. Default value is 10.",
				"example": 10,
				"in": "query",
				"name": "limit",
				"schema": {
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The field to sort by. Default is updated_at.",
				"example": "updated_at",
				"in": "query",
				"name": "sortField",
				"schema": {
					"enum": [
						"id",
						"user_id",
						"description",
						"created_at",
						"updated_at"
					],
					"type": "string"
				}
			},
			{
				"description": "Sorting order. Default is DESC.",
				"example": "DESC",
				"in": "query",
				"name": "sortOrder",
				"schema": {
					"enum": [
						"DESC",
						"ASC"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"createdAt": {
																"description": "Date and time the configuration was created",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "ID of the configuration",
																"type": "integer",
																"x-auditable": true
															},
															"updatedAt": {
																"description": "Date and time the configuration was last updated",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"userId": {
																"description": "Alpha-numeric ID of the account user who published the configuration",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id",
															"createdAt",
															"updatedAt",
															"userId"
														]
													},
													{
														"example": {
															"createdAt": "2023-02-23T05:05:55.155273Z",
															"description": "Config with enabled ecommerce tracking",
															"id": 12345,
															"updatedAt": "2023-02-23T05:05:55.155273Z",
															"userId": "278d0d0g123cd8e49d45ea64f12faa37"
														},
														"properties": {
															"description": {
																"description": "Configuration description provided by the user who published this configuration",
																"type": "string"
															}
														},
														"required": [
															"description"
														],
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Zaraz historical configuration records response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "List Zaraz historical configuration records failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Zaraz historical configuration records",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin"
		]
	},
	"GET /zones/{zone_id}/settings/zaraz/history/configs": {
		"description": "Gets a history of published Zaraz configurations by ID(s) for a zone.",
		"operationId": "get-zones-zone_identifier-zaraz-config-history",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			},
			{
				"description": "Comma separated list of Zaraz configuration IDs",
				"example": [
					12345,
					23456
				],
				"explode": false,
				"in": "query",
				"name": "ids",
				"required": true,
				"schema": {
					"items": {
						"type": "integer"
					},
					"type": "array"
				},
				"style": "form"
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"additionalProperties": {
												"allOf": [
													{
														"properties": {
															"createdAt": {
																"description": "Date and time the configuration was created",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"id": {
																"description": "ID of the configuration",
																"type": "integer",
																"x-auditable": true
															},
															"updatedAt": {
																"description": "Date and time the configuration was last updated",
																"format": "date-time",
																"type": "string",
																"x-auditable": true
															},
															"userId": {
																"description": "Alpha-numeric ID of the account user who published the configuration",
																"type": "string",
																"x-auditable": true
															}
														},
														"required": [
															"id",
															"createdAt",
															"updatedAt",
															"userId"
														]
													},
													{
														"description": "Configuration record correspoding to an ID provided in query params",
														"nullable": true,
														"properties": {
															"config": {
																"allOf": [
																	{
																		"description": "Zaraz configuration",
																		"example": {
																			"consent": {
																				"cookieName": "zaraz-consent",
																				"customIntroDisclaimerDismissed": true,
																				"enabled": false
																			},
																			"dataLayer": true,
																			"debugKey": "my-debug-key",
																			"settings": {
																				"autoInjectScript": true,
																				"ecommerce": true,
																				"initPath": "/i"
																			},
																			"tools": {
																				"aJvt": {
																					"actions": {
																						"hrnc": {
																							"actionType": "pageview",
																							"blockingTriggers": [],
																							"data": {
																								"__zaraz_setting_name": "Page view",
																								"ev": "PageView"
																							},
																							"firingTriggers": [
																								"Pageview"
																							]
																						}
																					},
																					"component": "facebook-pixel",
																					"defaultFields": {
																						"testKey": "TEST123456"
																					},
																					"enabled": true,
																					"name": "Facebook Pixel",
																					"permissions": [
																						"access_client_kv"
																					],
																					"settings": {
																						"accessToken": "ABcdEFg",
																						"ecommerce": true,
																						"property": "12345"
																					},
																					"type": "component"
																				}
																			},
																			"triggers": {
																				"ktBn": {
																					"Pageview": {
																						"clientRules": [],
																						"description": "All page loads",
																						"excludeRules": [],
																						"loadRules": [
																							{
																								"match": "{{ client.__zarazTrack }}",
																								"op": "EQUALS",
																								"value": "Pageview"
																							}
																						],
																						"name": "Pageview",
																						"system": "pageload"
																					}
																				}
																			},
																			"variables": {
																				"Autd": {
																					"name": "ip",
																					"type": "string",
																					"value": "{{ system.device.ip }}"
																				}
																			},
																			"zarazVersion": 43
																		},
																		"properties": {
																			"analytics": {
																				"description": "Cloudflare Monitoring settings.",
																				"properties": {
																					"defaultPurpose": {
																						"description": "Consent purpose assigned to Monitoring.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"enabled": {
																						"description": "Whether Advanced Monitoring reports are enabled.",
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"sessionExpTime": {
																						"description": "Session expiration time (seconds).",
																						"maximum": 86400,
																						"minimum": 60,
																						"type": "integer",
																						"x-auditable": true
																					}
																				},
																				"type": "object"
																			},
																			"consent": {
																				"description": "Consent management configuration.",
																				"properties": {
																					"buttonTextTranslations": {
																						"properties": {
																							"accept_all": {
																								"additionalProperties": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"description": "Object where keys are language codes",
																								"type": "object"
																							},
																							"confirm_my_choices": {
																								"additionalProperties": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"description": "Object where keys are language codes",
																								"type": "object"
																							},
																							"reject_all": {
																								"additionalProperties": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"description": "Object where keys are language codes",
																								"type": "object"
																							}
																						},
																						"required": [
																							"accept_all",
																							"reject_all",
																							"confirm_my_choices"
																						],
																						"type": "object"
																					},
																					"companyEmail": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"companyName": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"companyStreetAddress": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"consentModalIntroHTML": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"consentModalIntroHTMLWithTranslations": {
																						"additionalProperties": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"description": "Object where keys are language codes",
																						"type": "object"
																					},
																					"cookieName": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"customCSS": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"customIntroDisclaimerDismissed": {
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"defaultLanguage": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"enabled": {
																						"type": "boolean"
																					},
																					"hideModal": {
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"purposes": {
																						"additionalProperties": {
																							"properties": {
																								"description": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"name": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"name",
																								"description"
																							],
																							"type": "object"
																						},
																						"description": "Object where keys are purpose alpha-numeric IDs",
																						"type": "object"
																					},
																					"purposesWithTranslations": {
																						"additionalProperties": {
																							"properties": {
																								"description": {
																									"additionalProperties": {
																										"type": "string",
																										"x-auditable": true
																									},
																									"description": "Object where keys are language codes",
																									"type": "object"
																								},
																								"name": {
																									"additionalProperties": {
																										"type": "string",
																										"x-auditable": true
																									},
																									"description": "Object where keys are language codes",
																									"type": "object"
																								},
																								"order": {
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"name",
																								"description",
																								"order"
																							],
																							"type": "object"
																						},
																						"description": "Object where keys are purpose alpha-numeric IDs",
																						"type": "object"
																					},
																					"tcfCompliant": {
																						"type": "boolean"
																					}
																				},
																				"required": [
																					"enabled"
																				],
																				"type": "object"
																			},
																			"dataLayer": {
																				"description": "Data layer compatibility mode enabled.",
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"debugKey": {
																				"description": "The key for Zaraz debug mode.",
																				"type": "string",
																				"x-auditable": true
																			},
																			"historyChange": {
																				"description": "Single Page Application support enabled.",
																				"type": "boolean",
																				"x-auditable": true
																			},
																			"settings": {
																				"description": "General Zaraz settings.",
																				"properties": {
																					"autoInjectScript": {
																						"description": "Automatic injection of Zaraz scripts enabled.",
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"contextEnricher": {
																						"description": "Details of the worker that receives and edits Zaraz Context object.",
																						"properties": {
																							"escapedWorkerName": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"workerTag": {
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"escapedWorkerName",
																							"workerTag"
																						],
																						"type": "object"
																					},
																					"cookieDomain": {
																						"description": "The domain Zaraz will use for writing and reading its cookies.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"ecommerce": {
																						"description": "Ecommerce API enabled.",
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"eventsApiPath": {
																						"description": "Custom endpoint for server-side track events.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"hideExternalReferer": {
																						"description": "Hiding external referrer URL enabled.",
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"hideIPAddress": {
																						"description": "Trimming IP address enabled.",
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"hideQueryParams": {
																						"description": "Removing URL query params enabled.",
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"hideUserAgent": {
																						"description": "Removing sensitive data from User Aagent string enabled.",
																						"type": "boolean"
																					},
																					"initPath": {
																						"description": "Custom endpoint for Zaraz init script.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"injectIframes": {
																						"description": "Injection of Zaraz scripts into iframes enabled.",
																						"type": "boolean",
																						"x-auditable": true
																					},
																					"mcRootPath": {
																						"description": "Custom path for Managed Components server functionalities.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"scriptPath": {
																						"description": "Custom endpoint for Zaraz main script.",
																						"type": "string",
																						"x-auditable": true
																					},
																					"trackPath": {
																						"description": "Custom endpoint for Zaraz tracking requests.",
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"required": [
																					"autoInjectScript"
																				],
																				"type": "object"
																			},
																			"triggers": {
																				"additionalProperties": {
																					"properties": {
																						"description": {
																							"description": "Trigger description.",
																							"type": "string",
																							"x-auditable": true
																						},
																						"excludeRules": {
																							"description": "Rules defining when the trigger is not fired.",
																							"items": {
																								"anyOf": [
																									{
																										"properties": {
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"match": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"op": {
																												"enum": [
																													"CONTAINS",
																													"EQUALS",
																													"STARTS_WITH",
																													"ENDS_WITH",
																													"MATCH_REGEX",
																													"NOT_MATCH_REGEX",
																													"GREATER_THAN",
																													"GREATER_THAN_OR_EQUAL",
																													"LESS_THAN",
																													"LESS_THAN_OR_EQUAL"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"value": {
																												"type": "string",
																												"x-auditable": true
																											}
																										},
																										"required": [
																											"id",
																											"match",
																											"op",
																											"value"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"clickListener"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"selector": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"type": {
																														"enum": [
																															"xpath",
																															"css"
																														],
																														"type": "string",
																														"x-auditable": true
																													},
																													"waitForTags": {
																														"minimum": 0,
																														"type": "integer",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"type",
																													"selector",
																													"waitForTags"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"timer"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"interval": {
																														"minimum": 50,
																														"type": "integer",
																														"x-auditable": true
																													},
																													"limit": {
																														"minimum": 0,
																														"type": "integer",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"interval",
																													"limit"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"formSubmission"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"selector": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"validate": {
																														"type": "boolean",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"selector",
																													"validate"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"variableMatch"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"match": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"variable": {
																														"type": "string",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"variable",
																													"match"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"scrollDepth"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"positions": {
																														"type": "string",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"positions"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"elementVisibility"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"selector": {
																														"type": "string",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"selector"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									}
																								]
																							},
																							"type": "array"
																						},
																						"loadRules": {
																							"description": "Rules defining when the trigger is fired.",
																							"items": {
																								"anyOf": [
																									{
																										"properties": {
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"match": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"op": {
																												"enum": [
																													"CONTAINS",
																													"EQUALS",
																													"STARTS_WITH",
																													"ENDS_WITH",
																													"MATCH_REGEX",
																													"NOT_MATCH_REGEX",
																													"GREATER_THAN",
																													"GREATER_THAN_OR_EQUAL",
																													"LESS_THAN",
																													"LESS_THAN_OR_EQUAL"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"value": {
																												"type": "string",
																												"x-auditable": true
																											}
																										},
																										"required": [
																											"id",
																											"match",
																											"op",
																											"value"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"clickListener"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"selector": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"type": {
																														"enum": [
																															"xpath",
																															"css"
																														],
																														"type": "string",
																														"x-auditable": true
																													},
																													"waitForTags": {
																														"minimum": 0,
																														"type": "integer",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"type",
																													"selector",
																													"waitForTags"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"timer"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"interval": {
																														"minimum": 50,
																														"type": "integer",
																														"x-auditable": true
																													},
																													"limit": {
																														"minimum": 0,
																														"type": "integer",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"interval",
																													"limit"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"formSubmission"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"selector": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"validate": {
																														"type": "boolean",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"selector",
																													"validate"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"variableMatch"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"match": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"variable": {
																														"type": "string",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"variable",
																													"match"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"scrollDepth"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"positions": {
																														"type": "string",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"positions"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									},
																									{
																										"properties": {
																											"action": {
																												"enum": [
																													"elementVisibility"
																												],
																												"type": "string",
																												"x-auditable": true
																											},
																											"id": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"settings": {
																												"properties": {
																													"selector": {
																														"type": "string",
																														"x-auditable": true
																													}
																												},
																												"required": [
																													"selector"
																												],
																												"type": "object"
																											}
																										},
																										"required": [
																											"id",
																											"action",
																											"settings"
																										],
																										"type": "object"
																									}
																								]
																							},
																							"type": "array"
																						},
																						"name": {
																							"description": "Trigger name.",
																							"type": "string",
																							"x-auditable": true
																						},
																						"system": {
																							"enum": [
																								"pageload"
																							],
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"name",
																						"loadRules",
																						"excludeRules"
																					],
																					"type": "object"
																				},
																				"description": "Triggers set up under Zaraz configuration, where key is the trigger alpha-numeric ID and value is the trigger configuration.",
																				"type": "object"
																			},
																			"variables": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"properties": {
																								"name": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"string"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"value": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"name",
																								"type",
																								"value"
																							],
																							"type": "object"
																						},
																						{
																							"properties": {
																								"name": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"secret"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"value": {
																									"type": "string",
																									"x-auditable": true,
																									"x-sensitive": true
																								}
																							},
																							"required": [
																								"name",
																								"type",
																								"value"
																							],
																							"type": "object"
																						},
																						{
																							"properties": {
																								"name": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"worker"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"value": {
																									"properties": {
																										"escapedWorkerName": {
																											"type": "string",
																											"x-auditable": true
																										},
																										"workerTag": {
																											"type": "string",
																											"x-auditable": true
																										}
																									},
																									"required": [
																										"escapedWorkerName",
																										"workerTag"
																									],
																									"type": "object"
																								}
																							},
																							"required": [
																								"name",
																								"type",
																								"value"
																							],
																							"type": "object"
																						}
																					],
																					"discriminator": {
																						"mapping": {
																							"secret": "#/components/schemas/zaraz_secret_variable",
																							"string": "#/components/schemas/zaraz_string_variable",
																							"worker": "#/components/schemas/zaraz_worker_variable"
																						},
																						"propertyName": "type"
																					}
																				},
																				"description": "Variables set up under Zaraz configuration, where key is the variable alpha-numeric ID and value is the variable configuration. Values of variables of type secret are not included.",
																				"type": "object"
																			},
																			"zarazVersion": {
																				"description": "Zaraz internal version of the config.",
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"tools",
																			"triggers",
																			"variables",
																			"settings",
																			"dataLayer",
																			"debugKey",
																			"zarazVersion"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"tools": {
																				"additionalProperties": {
																					"anyOf": [
																						{
																							"allOf": [
																								{
																									"allOf": [
																										{
																											"properties": {
																												"blockingTriggers": {
																													"description": "List of blocking trigger IDs",
																													"items": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"type": "array"
																												},
																												"defaultFields": {
																													"additionalProperties": {
																														"anyOf": [
																															{
																																"type": "string"
																															},
																															{
																																"type": "boolean"
																															}
																														],
																														"x-auditable": true
																													},
																													"description": "Default fields for tool's actions",
																													"type": "object"
																												},
																												"defaultPurpose": {
																													"description": "Default consent purpose ID",
																													"type": "string",
																													"x-auditable": true
																												},
																												"enabled": {
																													"description": "Whether tool is enabled",
																													"type": "boolean",
																													"x-auditable": true
																												},
																												"name": {
																													"description": "Tool's name defined by the user",
																													"type": "string",
																													"x-auditable": true
																												},
																												"vendorName": {
																													"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																													"type": "string",
																													"x-auditable": true
																												},
																												"vendorPolicyUrl": {
																													"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																													"type": "string",
																													"x-auditable": true
																												}
																											},
																											"required": [
																												"enabled",
																												"blockingTriggers",
																												"name",
																												"defaultFields"
																											],
																											"type": "object"
																										},
																										{
																											"properties": {
																												"actions": {
																													"additionalProperties": {
																														"properties": {
																															"actionType": {
																																"description": "Tool event type",
																																"type": "string",
																																"x-auditable": true
																															},
																															"blockingTriggers": {
																																"description": "List of blocking triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"type": "array"
																															},
																															"data": {
																																"description": "Event payload",
																																"type": "object"
																															},
																															"firingTriggers": {
																																"description": "List of firing triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"minItems": 1,
																																"type": "array"
																															}
																														},
																														"required": [
																															"actionType",
																															"blockingTriggers",
																															"firingTriggers",
																															"data"
																														],
																														"type": "object"
																													},
																													"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																													"type": "object"
																												},
																												"component": {
																													"description": "Tool's internal name",
																													"type": "string",
																													"x-auditable": true
																												},
																												"neoEvents": {
																													"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																													"items": {
																														"properties": {
																															"actionType": {
																																"description": "Tool event type",
																																"type": "string",
																																"x-auditable": true
																															},
																															"blockingTriggers": {
																																"description": "List of blocking triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"type": "array"
																															},
																															"data": {
																																"description": "Event payload",
																																"type": "object"
																															},
																															"firingTriggers": {
																																"description": "List of firing triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"minItems": 1,
																																"type": "array"
																															}
																														},
																														"required": [
																															"actionType",
																															"blockingTriggers",
																															"firingTriggers",
																															"data"
																														],
																														"type": "object"
																													},
																													"type": "array"
																												},
																												"permissions": {
																													"description": "List of permissions granted to the component",
																													"items": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"type": "array"
																												},
																												"settings": {
																													"additionalProperties": {
																														"anyOf": [
																															{
																																"type": "string"
																															},
																															{
																																"type": "boolean"
																															}
																														],
																														"x-auditable": true
																													},
																													"description": "Tool's settings",
																													"type": "object"
																												}
																											},
																											"required": [
																												"component",
																												"settings",
																												"permissions"
																											]
																										}
																									]
																								},
																								{
																									"properties": {
																										"type": {
																											"enum": [
																												"component"
																											],
																											"type": "string"
																										}
																									},
																									"required": [
																										"type"
																									]
																								}
																							]
																						},
																						{
																							"allOf": [
																								{
																									"allOf": [
																										{
																											"properties": {
																												"blockingTriggers": {
																													"description": "List of blocking trigger IDs",
																													"items": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"type": "array"
																												},
																												"defaultFields": {
																													"additionalProperties": {
																														"anyOf": [
																															{
																																"type": "string"
																															},
																															{
																																"type": "boolean"
																															}
																														],
																														"x-auditable": true
																													},
																													"description": "Default fields for tool's actions",
																													"type": "object"
																												},
																												"defaultPurpose": {
																													"description": "Default consent purpose ID",
																													"type": "string",
																													"x-auditable": true
																												},
																												"enabled": {
																													"description": "Whether tool is enabled",
																													"type": "boolean",
																													"x-auditable": true
																												},
																												"name": {
																													"description": "Tool's name defined by the user",
																													"type": "string",
																													"x-auditable": true
																												},
																												"vendorName": {
																													"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																													"type": "string",
																													"x-auditable": true
																												},
																												"vendorPolicyUrl": {
																													"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																													"type": "string",
																													"x-auditable": true
																												}
																											},
																											"required": [
																												"enabled",
																												"blockingTriggers",
																												"name",
																												"defaultFields"
																											],
																											"type": "object"
																										},
																										{
																											"properties": {
																												"actions": {
																													"additionalProperties": {
																														"properties": {
																															"actionType": {
																																"description": "Tool event type",
																																"type": "string",
																																"x-auditable": true
																															},
																															"blockingTriggers": {
																																"description": "List of blocking triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"type": "array"
																															},
																															"data": {
																																"description": "Event payload",
																																"type": "object"
																															},
																															"firingTriggers": {
																																"description": "List of firing triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"minItems": 1,
																																"type": "array"
																															}
																														},
																														"required": [
																															"actionType",
																															"blockingTriggers",
																															"firingTriggers",
																															"data"
																														],
																														"type": "object"
																													},
																													"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																													"type": "object"
																												},
																												"component": {
																													"description": "Tool's internal name",
																													"type": "string",
																													"x-auditable": true
																												},
																												"neoEvents": {
																													"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																													"items": {
																														"properties": {
																															"actionType": {
																																"description": "Tool event type",
																																"type": "string",
																																"x-auditable": true
																															},
																															"blockingTriggers": {
																																"description": "List of blocking triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"type": "array"
																															},
																															"data": {
																																"description": "Event payload",
																																"type": "object"
																															},
																															"firingTriggers": {
																																"description": "List of firing triggers IDs",
																																"items": {
																																	"type": "string",
																																	"x-auditable": true
																																},
																																"minItems": 1,
																																"type": "array"
																															}
																														},
																														"required": [
																															"actionType",
																															"blockingTriggers",
																															"firingTriggers",
																															"data"
																														],
																														"type": "object"
																													},
																													"type": "array"
																												},
																												"permissions": {
																													"description": "List of permissions granted to the component",
																													"items": {
																														"type": "string",
																														"x-auditable": true
																													},
																													"type": "array"
																												},
																												"settings": {
																													"additionalProperties": {
																														"anyOf": [
																															{
																																"type": "string"
																															},
																															{
																																"type": "boolean"
																															}
																														],
																														"x-auditable": true
																													},
																													"description": "Tool's settings",
																													"type": "object"
																												}
																											},
																											"required": [
																												"component",
																												"settings",
																												"permissions"
																											]
																										}
																									]
																								},
																								{
																									"properties": {
																										"type": {
																											"enum": [
																												"custom-mc"
																											],
																											"type": "string"
																										},
																										"worker": {
																											"description": "Cloudflare worker that acts as a managed component",
																											"properties": {
																												"escapedWorkerName": {
																													"type": "string",
																													"x-auditable": true
																												},
																												"workerTag": {
																													"type": "string",
																													"x-auditable": true
																												}
																											},
																											"required": [
																												"workerTag",
																												"escapedWorkerName"
																											],
																											"type": "object"
																										}
																									},
																									"required": [
																										"worker",
																										"type"
																									]
																								}
																							]
																						}
																					]
																				},
																				"description": "Tools set up under Zaraz configuration, where key is the alpha-numeric tool ID and value is the tool configuration object.",
																				"type": "object"
																			}
																		}
																	}
																]
															}
														},
														"required": [
															"config"
														],
														"type": "object"
													}
												]
											},
											"description": "Object where keys are numericc onfiguration IDs",
											"example": {
												"12345": {
													"config": {
														"consent": {
															"cookieName": "zaraz-consent",
															"customIntroDisclaimerDismissed": true,
															"enabled": false
														},
														"dataLayer": true,
														"debugKey": "my-debug-key",
														"settings": {
															"autoInjectScript": true
														},
														"tools": {
															"aJvt": {
																"component": "facebook-pixel",
																"defaultFields": {
																	"testKey": "TEST123456"
																},
																"enabled": true,
																"name": "Facebook Pixel",
																"neoEvents": [
																	{
																		"actionType": "pageview",
																		"blockingTriggers": [],
																		"data": {
																			"__zaraz_setting_name": "Page view",
																			"ev": "PageView"
																		},
																		"firingTriggers": [
																			"Pageview"
																		]
																	}
																],
																"permissions": [
																	"access_client_kv"
																],
																"settings": {
																	"accessToken": "ABcdEFg",
																	"ecommerce": true,
																	"property": "12345"
																},
																"type": "component"
															}
														},
														"triggers": {
															"ktBn": {
																"Pageview": {
																	"clientRules": [],
																	"description": "All page loads",
																	"excludeRules": [],
																	"loadRules": [
																		{
																			"match": "{{ client.__zarazTrack }}",
																			"op": "EQUALS",
																			"value": "Pageview"
																		}
																	],
																	"name": "Pageview",
																	"system": "pageload"
																}
															}
														},
														"variables": {
															"Autd": {
																"name": "ip",
																"type": "string",
																"value": "{{ system.device.ip }}"
															}
														},
														"zarazVersion": 43
													},
													"createdAt": "2023-02-23T05:05:55.155273Z",
													"id": 12345,
													"updatedAt": "2023-02-23T05:05:55.155273Z",
													"userId": "278d0d0g123cd8e49d45ea64f12faa37"
												},
												"23456": null
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Zaraz historical configurations by ID(s) response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zaraz historical configurations by ID(s) failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Zaraz historical configurations by ID(s)",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin"
		]
	},
	"GET /zones/{zone_id}/settings/zaraz/workflow": {
		"description": "Gets Zaraz workflow for a zone.",
		"operationId": "get-zones-zone_identifier-zaraz-workflow",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Zaraz workflow",
											"enum": [
												"realtime",
												"preview"
											],
											"type": "string",
											"x-auditable": true
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Zaraz workflow response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Zaraz workflow response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Zaraz workflow",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Read",
			"Zaraz Admin"
		]
	},
	"POST /zones/{zone_id}/settings/zaraz/publish": {
		"description": "Publish current Zaraz preview configuration for a zone.",
		"operationId": "post-zones-zone_identifier-zaraz-publish",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Zaraz configuration description.",
						"example": "Config with enabled ecommerce tracking",
						"type": "string"
					}
				}
			}
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": "Config has been published successfully",
											"type": "string"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Zaraz workflow response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update Zaraz workflow response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Publish Zaraz preview configuration",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Admin"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zaraz:publish"
			]
		}
	},
	"PUT /zones/{zone_id}/settings/zaraz/config": {
		"description": "Updates Zaraz configuration for a zone.",
		"operationId": "put-zones-zone_identifier-zaraz-config",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"description": "Zaraz configuration",
								"example": {
									"consent": {
										"cookieName": "zaraz-consent",
										"customIntroDisclaimerDismissed": true,
										"enabled": false
									},
									"dataLayer": true,
									"debugKey": "my-debug-key",
									"settings": {
										"autoInjectScript": true,
										"ecommerce": true,
										"initPath": "/i"
									},
									"tools": {
										"aJvt": {
											"actions": {
												"hrnc": {
													"actionType": "pageview",
													"blockingTriggers": [],
													"data": {
														"__zaraz_setting_name": "Page view",
														"ev": "PageView"
													},
													"firingTriggers": [
														"Pageview"
													]
												}
											},
											"component": "facebook-pixel",
											"defaultFields": {
												"testKey": "TEST123456"
											},
											"enabled": true,
											"name": "Facebook Pixel",
											"permissions": [
												"access_client_kv"
											],
											"settings": {
												"accessToken": "ABcdEFg",
												"ecommerce": true,
												"property": "12345"
											},
											"type": "component"
										}
									},
									"triggers": {
										"ktBn": {
											"Pageview": {
												"clientRules": [],
												"description": "All page loads",
												"excludeRules": [],
												"loadRules": [
													{
														"match": "{{ client.__zarazTrack }}",
														"op": "EQUALS",
														"value": "Pageview"
													}
												],
												"name": "Pageview",
												"system": "pageload"
											}
										}
									},
									"variables": {
										"Autd": {
											"name": "ip",
											"type": "string",
											"value": "{{ system.device.ip }}"
										}
									},
									"zarazVersion": 43
								},
								"properties": {
									"analytics": {
										"description": "Cloudflare Monitoring settings.",
										"properties": {
											"defaultPurpose": {
												"description": "Consent purpose assigned to Monitoring.",
												"type": "string",
												"x-auditable": true
											},
											"enabled": {
												"description": "Whether Advanced Monitoring reports are enabled.",
												"type": "boolean",
												"x-auditable": true
											},
											"sessionExpTime": {
												"description": "Session expiration time (seconds).",
												"maximum": 86400,
												"minimum": 60,
												"type": "integer",
												"x-auditable": true
											}
										},
										"type": "object"
									},
									"consent": {
										"description": "Consent management configuration.",
										"properties": {
											"buttonTextTranslations": {
												"properties": {
													"accept_all": {
														"additionalProperties": {
															"type": "string",
															"x-auditable": true
														},
														"description": "Object where keys are language codes",
														"type": "object"
													},
													"confirm_my_choices": {
														"additionalProperties": {
															"type": "string",
															"x-auditable": true
														},
														"description": "Object where keys are language codes",
														"type": "object"
													},
													"reject_all": {
														"additionalProperties": {
															"type": "string",
															"x-auditable": true
														},
														"description": "Object where keys are language codes",
														"type": "object"
													}
												},
												"required": [
													"accept_all",
													"reject_all",
													"confirm_my_choices"
												],
												"type": "object"
											},
											"companyEmail": {
												"type": "string",
												"x-auditable": true
											},
											"companyName": {
												"type": "string",
												"x-auditable": true
											},
											"companyStreetAddress": {
												"type": "string",
												"x-auditable": true
											},
											"consentModalIntroHTML": {
												"type": "string",
												"x-auditable": true
											},
											"consentModalIntroHTMLWithTranslations": {
												"additionalProperties": {
													"type": "string",
													"x-auditable": true
												},
												"description": "Object where keys are language codes",
												"type": "object"
											},
											"cookieName": {
												"type": "string",
												"x-auditable": true
											},
											"customCSS": {
												"type": "string",
												"x-auditable": true
											},
											"customIntroDisclaimerDismissed": {
												"type": "boolean",
												"x-auditable": true
											},
											"defaultLanguage": {
												"type": "string",
												"x-auditable": true
											},
											"enabled": {
												"type": "boolean"
											},
											"hideModal": {
												"type": "boolean",
												"x-auditable": true
											},
											"purposes": {
												"additionalProperties": {
													"properties": {
														"description": {
															"type": "string",
															"x-auditable": true
														},
														"name": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"name",
														"description"
													],
													"type": "object"
												},
												"description": "Object where keys are purpose alpha-numeric IDs",
												"type": "object"
											},
											"purposesWithTranslations": {
												"additionalProperties": {
													"properties": {
														"description": {
															"additionalProperties": {
																"type": "string",
																"x-auditable": true
															},
															"description": "Object where keys are language codes",
															"type": "object"
														},
														"name": {
															"additionalProperties": {
																"type": "string",
																"x-auditable": true
															},
															"description": "Object where keys are language codes",
															"type": "object"
														},
														"order": {
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"name",
														"description",
														"order"
													],
													"type": "object"
												},
												"description": "Object where keys are purpose alpha-numeric IDs",
												"type": "object"
											},
											"tcfCompliant": {
												"type": "boolean"
											}
										},
										"required": [
											"enabled"
										],
										"type": "object"
									},
									"dataLayer": {
										"description": "Data layer compatibility mode enabled.",
										"type": "boolean",
										"x-auditable": true
									},
									"debugKey": {
										"description": "The key for Zaraz debug mode.",
										"type": "string",
										"x-auditable": true
									},
									"historyChange": {
										"description": "Single Page Application support enabled.",
										"type": "boolean",
										"x-auditable": true
									},
									"settings": {
										"description": "General Zaraz settings.",
										"properties": {
											"autoInjectScript": {
												"description": "Automatic injection of Zaraz scripts enabled.",
												"type": "boolean",
												"x-auditable": true
											},
											"contextEnricher": {
												"description": "Details of the worker that receives and edits Zaraz Context object.",
												"properties": {
													"escapedWorkerName": {
														"type": "string",
														"x-auditable": true
													},
													"workerTag": {
														"type": "string",
														"x-auditable": true
													}
												},
												"required": [
													"escapedWorkerName",
													"workerTag"
												],
												"type": "object"
											},
											"cookieDomain": {
												"description": "The domain Zaraz will use for writing and reading its cookies.",
												"type": "string",
												"x-auditable": true
											},
											"ecommerce": {
												"description": "Ecommerce API enabled.",
												"type": "boolean",
												"x-auditable": true
											},
											"eventsApiPath": {
												"description": "Custom endpoint for server-side track events.",
												"type": "string",
												"x-auditable": true
											},
											"hideExternalReferer": {
												"description": "Hiding external referrer URL enabled.",
												"type": "boolean",
												"x-auditable": true
											},
											"hideIPAddress": {
												"description": "Trimming IP address enabled.",
												"type": "boolean",
												"x-auditable": true
											},
											"hideQueryParams": {
												"description": "Removing URL query params enabled.",
												"type": "boolean",
												"x-auditable": true
											},
											"hideUserAgent": {
												"description": "Removing sensitive data from User Aagent string enabled.",
												"type": "boolean"
											},
											"initPath": {
												"description": "Custom endpoint for Zaraz init script.",
												"type": "string",
												"x-auditable": true
											},
											"injectIframes": {
												"description": "Injection of Zaraz scripts into iframes enabled.",
												"type": "boolean",
												"x-auditable": true
											},
											"mcRootPath": {
												"description": "Custom path for Managed Components server functionalities.",
												"type": "string",
												"x-auditable": true
											},
											"scriptPath": {
												"description": "Custom endpoint for Zaraz main script.",
												"type": "string",
												"x-auditable": true
											},
											"trackPath": {
												"description": "Custom endpoint for Zaraz tracking requests.",
												"type": "string",
												"x-auditable": true
											}
										},
										"required": [
											"autoInjectScript"
										],
										"type": "object"
									},
									"triggers": {
										"additionalProperties": {
											"properties": {
												"description": {
													"description": "Trigger description.",
													"type": "string",
													"x-auditable": true
												},
												"excludeRules": {
													"description": "Rules defining when the trigger is not fired.",
													"items": {
														"anyOf": [
															{
																"properties": {
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"match": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"op": {
																		"enum": [
																			"CONTAINS",
																			"EQUALS",
																			"STARTS_WITH",
																			"ENDS_WITH",
																			"MATCH_REGEX",
																			"NOT_MATCH_REGEX",
																			"GREATER_THAN",
																			"GREATER_THAN_OR_EQUAL",
																			"LESS_THAN",
																			"LESS_THAN_OR_EQUAL"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"match",
																	"op",
																	"value"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"clickListener"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"selector": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"xpath",
																					"css"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"waitForTags": {
																				"minimum": 0,
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"type",
																			"selector",
																			"waitForTags"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"timer"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"interval": {
																				"minimum": 50,
																				"type": "integer",
																				"x-auditable": true
																			},
																			"limit": {
																				"minimum": 0,
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"interval",
																			"limit"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"formSubmission"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"selector": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"validate": {
																				"type": "boolean",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"selector",
																			"validate"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"variableMatch"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"match": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"variable": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"variable",
																			"match"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"scrollDepth"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"positions": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"positions"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"elementVisibility"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"selector": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"selector"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															}
														]
													},
													"type": "array"
												},
												"loadRules": {
													"description": "Rules defining when the trigger is fired.",
													"items": {
														"anyOf": [
															{
																"properties": {
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"match": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"op": {
																		"enum": [
																			"CONTAINS",
																			"EQUALS",
																			"STARTS_WITH",
																			"ENDS_WITH",
																			"MATCH_REGEX",
																			"NOT_MATCH_REGEX",
																			"GREATER_THAN",
																			"GREATER_THAN_OR_EQUAL",
																			"LESS_THAN",
																			"LESS_THAN_OR_EQUAL"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"value": {
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"id",
																	"match",
																	"op",
																	"value"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"clickListener"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"selector": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"xpath",
																					"css"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"waitForTags": {
																				"minimum": 0,
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"type",
																			"selector",
																			"waitForTags"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"timer"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"interval": {
																				"minimum": 50,
																				"type": "integer",
																				"x-auditable": true
																			},
																			"limit": {
																				"minimum": 0,
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"interval",
																			"limit"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"formSubmission"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"selector": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"validate": {
																				"type": "boolean",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"selector",
																			"validate"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"variableMatch"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"match": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"variable": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"variable",
																			"match"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"scrollDepth"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"positions": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"positions"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															},
															{
																"properties": {
																	"action": {
																		"enum": [
																			"elementVisibility"
																		],
																		"type": "string",
																		"x-auditable": true
																	},
																	"id": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"settings": {
																		"properties": {
																			"selector": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"selector"
																		],
																		"type": "object"
																	}
																},
																"required": [
																	"id",
																	"action",
																	"settings"
																],
																"type": "object"
															}
														]
													},
													"type": "array"
												},
												"name": {
													"description": "Trigger name.",
													"type": "string",
													"x-auditable": true
												},
												"system": {
													"enum": [
														"pageload"
													],
													"type": "string",
													"x-auditable": true
												}
											},
											"required": [
												"name",
												"loadRules",
												"excludeRules"
											],
											"type": "object"
										},
										"description": "Triggers set up under Zaraz configuration, where key is the trigger alpha-numeric ID and value is the trigger configuration.",
										"type": "object"
									},
									"variables": {
										"additionalProperties": {
											"anyOf": [
												{
													"properties": {
														"name": {
															"type": "string",
															"x-auditable": true
														},
														"type": {
															"enum": [
																"string"
															],
															"type": "string",
															"x-auditable": true
														},
														"value": {
															"type": "string",
															"x-auditable": true
														}
													},
													"required": [
														"name",
														"type",
														"value"
													],
													"type": "object"
												},
												{
													"properties": {
														"name": {
															"type": "string",
															"x-auditable": true
														},
														"type": {
															"enum": [
																"secret"
															],
															"type": "string",
															"x-auditable": true
														},
														"value": {
															"type": "string",
															"x-auditable": true,
															"x-sensitive": true
														}
													},
													"required": [
														"name",
														"type",
														"value"
													],
													"type": "object"
												},
												{
													"properties": {
														"name": {
															"type": "string",
															"x-auditable": true
														},
														"type": {
															"enum": [
																"worker"
															],
															"type": "string",
															"x-auditable": true
														},
														"value": {
															"properties": {
																"escapedWorkerName": {
																	"type": "string",
																	"x-auditable": true
																},
																"workerTag": {
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"escapedWorkerName",
																"workerTag"
															],
															"type": "object"
														}
													},
													"required": [
														"name",
														"type",
														"value"
													],
													"type": "object"
												}
											],
											"discriminator": {
												"mapping": {
													"secret": "#/components/schemas/zaraz_secret_variable",
													"string": "#/components/schemas/zaraz_string_variable",
													"worker": "#/components/schemas/zaraz_worker_variable"
												},
												"propertyName": "type"
											}
										},
										"description": "Variables set up under Zaraz configuration, where key is the variable alpha-numeric ID and value is the variable configuration. Values of variables of type secret are not included.",
										"type": "object"
									},
									"zarazVersion": {
										"description": "Zaraz internal version of the config.",
										"type": "integer",
										"x-auditable": true
									}
								},
								"required": [
									"tools",
									"triggers",
									"variables",
									"settings",
									"dataLayer",
									"debugKey",
									"zarazVersion"
								],
								"type": "object"
							},
							{
								"properties": {
									"tools": {
										"additionalProperties": {
											"anyOf": [
												{
													"allOf": [
														{
															"allOf": [
																{
																	"properties": {
																		"blockingTriggers": {
																			"description": "List of blocking trigger IDs",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		},
																		"defaultFields": {
																			"additionalProperties": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "boolean"
																					}
																				],
																				"x-auditable": true
																			},
																			"description": "Default fields for tool's actions",
																			"type": "object"
																		},
																		"defaultPurpose": {
																			"description": "Default consent purpose ID",
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Whether tool is enabled",
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "Tool's name defined by the user",
																			"type": "string",
																			"x-auditable": true
																		},
																		"vendorName": {
																			"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																			"type": "string",
																			"x-auditable": true
																		},
																		"vendorPolicyUrl": {
																			"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"enabled",
																		"blockingTriggers",
																		"name",
																		"defaultFields"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"actions": {
																			"additionalProperties": {
																				"properties": {
																					"actionType": {
																						"description": "Tool event type",
																						"type": "string",
																						"x-auditable": true
																					},
																					"blockingTriggers": {
																						"description": "List of blocking triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array"
																					},
																					"data": {
																						"description": "Event payload",
																						"type": "object"
																					},
																					"firingTriggers": {
																						"description": "List of firing triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"minItems": 1,
																						"type": "array"
																					}
																				},
																				"required": [
																					"actionType",
																					"blockingTriggers",
																					"firingTriggers",
																					"data"
																				],
																				"type": "object"
																			},
																			"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																			"type": "object"
																		},
																		"component": {
																			"description": "Tool's internal name",
																			"type": "string",
																			"x-auditable": true
																		},
																		"neoEvents": {
																			"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																			"items": {
																				"properties": {
																					"actionType": {
																						"description": "Tool event type",
																						"type": "string",
																						"x-auditable": true
																					},
																					"blockingTriggers": {
																						"description": "List of blocking triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array"
																					},
																					"data": {
																						"description": "Event payload",
																						"type": "object"
																					},
																					"firingTriggers": {
																						"description": "List of firing triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"minItems": 1,
																						"type": "array"
																					}
																				},
																				"required": [
																					"actionType",
																					"blockingTriggers",
																					"firingTriggers",
																					"data"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"permissions": {
																			"description": "List of permissions granted to the component",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		},
																		"settings": {
																			"additionalProperties": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "boolean"
																					}
																				],
																				"x-auditable": true
																			},
																			"description": "Tool's settings",
																			"type": "object"
																		}
																	},
																	"required": [
																		"component",
																		"settings",
																		"permissions"
																	]
																}
															]
														},
														{
															"properties": {
																"type": {
																	"enum": [
																		"component"
																	],
																	"type": "string"
																}
															},
															"required": [
																"type"
															]
														}
													]
												},
												{
													"allOf": [
														{
															"allOf": [
																{
																	"properties": {
																		"blockingTriggers": {
																			"description": "List of blocking trigger IDs",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		},
																		"defaultFields": {
																			"additionalProperties": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "boolean"
																					}
																				],
																				"x-auditable": true
																			},
																			"description": "Default fields for tool's actions",
																			"type": "object"
																		},
																		"defaultPurpose": {
																			"description": "Default consent purpose ID",
																			"type": "string",
																			"x-auditable": true
																		},
																		"enabled": {
																			"description": "Whether tool is enabled",
																			"type": "boolean",
																			"x-auditable": true
																		},
																		"name": {
																			"description": "Tool's name defined by the user",
																			"type": "string",
																			"x-auditable": true
																		},
																		"vendorName": {
																			"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																			"type": "string",
																			"x-auditable": true
																		},
																		"vendorPolicyUrl": {
																			"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"enabled",
																		"blockingTriggers",
																		"name",
																		"defaultFields"
																	],
																	"type": "object"
																},
																{
																	"properties": {
																		"actions": {
																			"additionalProperties": {
																				"properties": {
																					"actionType": {
																						"description": "Tool event type",
																						"type": "string",
																						"x-auditable": true
																					},
																					"blockingTriggers": {
																						"description": "List of blocking triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array"
																					},
																					"data": {
																						"description": "Event payload",
																						"type": "object"
																					},
																					"firingTriggers": {
																						"description": "List of firing triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"minItems": 1,
																						"type": "array"
																					}
																				},
																				"required": [
																					"actionType",
																					"blockingTriggers",
																					"firingTriggers",
																					"data"
																				],
																				"type": "object"
																			},
																			"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																			"type": "object"
																		},
																		"component": {
																			"description": "Tool's internal name",
																			"type": "string",
																			"x-auditable": true
																		},
																		"neoEvents": {
																			"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																			"items": {
																				"properties": {
																					"actionType": {
																						"description": "Tool event type",
																						"type": "string",
																						"x-auditable": true
																					},
																					"blockingTriggers": {
																						"description": "List of blocking triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"type": "array"
																					},
																					"data": {
																						"description": "Event payload",
																						"type": "object"
																					},
																					"firingTriggers": {
																						"description": "List of firing triggers IDs",
																						"items": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"minItems": 1,
																						"type": "array"
																					}
																				},
																				"required": [
																					"actionType",
																					"blockingTriggers",
																					"firingTriggers",
																					"data"
																				],
																				"type": "object"
																			},
																			"type": "array"
																		},
																		"permissions": {
																			"description": "List of permissions granted to the component",
																			"items": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": "array"
																		},
																		"settings": {
																			"additionalProperties": {
																				"anyOf": [
																					{
																						"type": "string"
																					},
																					{
																						"type": "boolean"
																					}
																				],
																				"x-auditable": true
																			},
																			"description": "Tool's settings",
																			"type": "object"
																		}
																	},
																	"required": [
																		"component",
																		"settings",
																		"permissions"
																	]
																}
															]
														},
														{
															"properties": {
																"type": {
																	"enum": [
																		"custom-mc"
																	],
																	"type": "string"
																},
																"worker": {
																	"description": "Cloudflare worker that acts as a managed component",
																	"properties": {
																		"escapedWorkerName": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"workerTag": {
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"workerTag",
																		"escapedWorkerName"
																	],
																	"type": "object"
																}
															},
															"required": [
																"worker",
																"type"
															]
														}
													]
												}
											]
										},
										"description": "Tools set up under Zaraz configuration, where key is the alpha-numeric tool ID and value is the tool configuration object.",
										"type": "object"
									}
								}
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Zaraz configuration",
													"example": {
														"consent": {
															"cookieName": "zaraz-consent",
															"customIntroDisclaimerDismissed": true,
															"enabled": false
														},
														"dataLayer": true,
														"debugKey": "my-debug-key",
														"settings": {
															"autoInjectScript": true,
															"ecommerce": true,
															"initPath": "/i"
														},
														"tools": {
															"aJvt": {
																"actions": {
																	"hrnc": {
																		"actionType": "pageview",
																		"blockingTriggers": [],
																		"data": {
																			"__zaraz_setting_name": "Page view",
																			"ev": "PageView"
																		},
																		"firingTriggers": [
																			"Pageview"
																		]
																	}
																},
																"component": "facebook-pixel",
																"defaultFields": {
																	"testKey": "TEST123456"
																},
																"enabled": true,
																"name": "Facebook Pixel",
																"permissions": [
																	"access_client_kv"
																],
																"settings": {
																	"accessToken": "ABcdEFg",
																	"ecommerce": true,
																	"property": "12345"
																},
																"type": "component"
															}
														},
														"triggers": {
															"ktBn": {
																"Pageview": {
																	"clientRules": [],
																	"description": "All page loads",
																	"excludeRules": [],
																	"loadRules": [
																		{
																			"match": "{{ client.__zarazTrack }}",
																			"op": "EQUALS",
																			"value": "Pageview"
																		}
																	],
																	"name": "Pageview",
																	"system": "pageload"
																}
															}
														},
														"variables": {
															"Autd": {
																"name": "ip",
																"type": "string",
																"value": "{{ system.device.ip }}"
															}
														},
														"zarazVersion": 43
													},
													"properties": {
														"analytics": {
															"description": "Cloudflare Monitoring settings.",
															"properties": {
																"defaultPurpose": {
																	"description": "Consent purpose assigned to Monitoring.",
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"description": "Whether Advanced Monitoring reports are enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"sessionExpTime": {
																	"description": "Session expiration time (seconds).",
																	"maximum": 86400,
																	"minimum": 60,
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"consent": {
															"description": "Consent management configuration.",
															"properties": {
																"buttonTextTranslations": {
																	"properties": {
																		"accept_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"confirm_my_choices": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"reject_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		}
																	},
																	"required": [
																		"accept_all",
																		"reject_all",
																		"confirm_my_choices"
																	],
																	"type": "object"
																},
																"companyEmail": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyName": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyStreetAddress": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTML": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTMLWithTranslations": {
																	"additionalProperties": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": "Object where keys are language codes",
																	"type": "object"
																},
																"cookieName": {
																	"type": "string",
																	"x-auditable": true
																},
																"customCSS": {
																	"type": "string",
																	"x-auditable": true
																},
																"customIntroDisclaimerDismissed": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"defaultLanguage": {
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"type": "boolean"
																},
																"hideModal": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"purposes": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"purposesWithTranslations": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"name": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"order": {
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description",
																			"order"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"tcfCompliant": {
																	"type": "boolean"
																}
															},
															"required": [
																"enabled"
															],
															"type": "object"
														},
														"dataLayer": {
															"description": "Data layer compatibility mode enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"debugKey": {
															"description": "The key for Zaraz debug mode.",
															"type": "string",
															"x-auditable": true
														},
														"historyChange": {
															"description": "Single Page Application support enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"settings": {
															"description": "General Zaraz settings.",
															"properties": {
																"autoInjectScript": {
																	"description": "Automatic injection of Zaraz scripts enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"contextEnricher": {
																	"description": "Details of the worker that receives and edits Zaraz Context object.",
																	"properties": {
																		"escapedWorkerName": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"workerTag": {
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"escapedWorkerName",
																		"workerTag"
																	],
																	"type": "object"
																},
																"cookieDomain": {
																	"description": "The domain Zaraz will use for writing and reading its cookies.",
																	"type": "string",
																	"x-auditable": true
																},
																"ecommerce": {
																	"description": "Ecommerce API enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"eventsApiPath": {
																	"description": "Custom endpoint for server-side track events.",
																	"type": "string",
																	"x-auditable": true
																},
																"hideExternalReferer": {
																	"description": "Hiding external referrer URL enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideIPAddress": {
																	"description": "Trimming IP address enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideQueryParams": {
																	"description": "Removing URL query params enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideUserAgent": {
																	"description": "Removing sensitive data from User Aagent string enabled.",
																	"type": "boolean"
																},
																"initPath": {
																	"description": "Custom endpoint for Zaraz init script.",
																	"type": "string",
																	"x-auditable": true
																},
																"injectIframes": {
																	"description": "Injection of Zaraz scripts into iframes enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"mcRootPath": {
																	"description": "Custom path for Managed Components server functionalities.",
																	"type": "string",
																	"x-auditable": true
																},
																"scriptPath": {
																	"description": "Custom endpoint for Zaraz main script.",
																	"type": "string",
																	"x-auditable": true
																},
																"trackPath": {
																	"description": "Custom endpoint for Zaraz tracking requests.",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"autoInjectScript"
															],
															"type": "object"
														},
														"triggers": {
															"additionalProperties": {
																"properties": {
																	"description": {
																		"description": "Trigger description.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"excludeRules": {
																		"description": "Rules defining when the trigger is not fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"loadRules": {
																		"description": "Rules defining when the trigger is fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"name": {
																		"description": "Trigger name.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"system": {
																		"enum": [
																			"pageload"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"loadRules",
																	"excludeRules"
																],
																"type": "object"
															},
															"description": "Triggers set up under Zaraz configuration, where key is the trigger alpha-numeric ID and value is the trigger configuration.",
															"type": "object"
														},
														"variables": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"string"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"secret"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true,
																				"x-sensitive": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"properties": {
																					"escapedWorkerName": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"workerTag": {
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"required": [
																					"escapedWorkerName",
																					"workerTag"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	}
																],
																"discriminator": {
																	"mapping": {
																		"secret": "#/components/schemas/zaraz_secret_variable",
																		"string": "#/components/schemas/zaraz_string_variable",
																		"worker": "#/components/schemas/zaraz_worker_variable"
																	},
																	"propertyName": "type"
																}
															},
															"description": "Variables set up under Zaraz configuration, where key is the variable alpha-numeric ID and value is the variable configuration. Values of variables of type secret are not included.",
															"type": "object"
														},
														"zarazVersion": {
															"description": "Zaraz internal version of the config.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"tools",
														"triggers",
														"variables",
														"settings",
														"dataLayer",
														"debugKey",
														"zarazVersion"
													],
													"type": "object"
												},
												{
													"properties": {
														"tools": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"component"
																						],
																						"type": "string"
																					}
																				},
																				"required": [
																					"type"
																				]
																			}
																		]
																	},
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"custom-mc"
																						],
																						"type": "string"
																					},
																					"worker": {
																						"description": "Cloudflare worker that acts as a managed component",
																						"properties": {
																							"escapedWorkerName": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"workerTag": {
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"workerTag",
																							"escapedWorkerName"
																						],
																						"type": "object"
																					}
																				},
																				"required": [
																					"worker",
																					"type"
																				]
																			}
																		]
																	}
																]
															},
															"description": "Tools set up under Zaraz configuration, where key is the alpha-numeric tool ID and value is the tool configuration object.",
															"type": "object"
														}
													}
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Zaraz configuration response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update Zaraz configuration response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Zaraz configuration",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Admin"
		]
	},
	"PUT /zones/{zone_id}/settings/zaraz/history": {
		"description": "Restores a historical published Zaraz configuration by ID for a zone.",
		"operationId": "put-zones-zone_identifier-zaraz-history",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "ID of the Zaraz configuration to restore.",
						"example": 12345,
						"minimum": 1,
						"type": "integer"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "Zaraz configuration",
													"example": {
														"consent": {
															"cookieName": "zaraz-consent",
															"customIntroDisclaimerDismissed": true,
															"enabled": false
														},
														"dataLayer": true,
														"debugKey": "my-debug-key",
														"settings": {
															"autoInjectScript": true,
															"ecommerce": true,
															"initPath": "/i"
														},
														"tools": {
															"aJvt": {
																"actions": {
																	"hrnc": {
																		"actionType": "pageview",
																		"blockingTriggers": [],
																		"data": {
																			"__zaraz_setting_name": "Page view",
																			"ev": "PageView"
																		},
																		"firingTriggers": [
																			"Pageview"
																		]
																	}
																},
																"component": "facebook-pixel",
																"defaultFields": {
																	"testKey": "TEST123456"
																},
																"enabled": true,
																"name": "Facebook Pixel",
																"permissions": [
																	"access_client_kv"
																],
																"settings": {
																	"accessToken": "ABcdEFg",
																	"ecommerce": true,
																	"property": "12345"
																},
																"type": "component"
															}
														},
														"triggers": {
															"ktBn": {
																"Pageview": {
																	"clientRules": [],
																	"description": "All page loads",
																	"excludeRules": [],
																	"loadRules": [
																		{
																			"match": "{{ client.__zarazTrack }}",
																			"op": "EQUALS",
																			"value": "Pageview"
																		}
																	],
																	"name": "Pageview",
																	"system": "pageload"
																}
															}
														},
														"variables": {
															"Autd": {
																"name": "ip",
																"type": "string",
																"value": "{{ system.device.ip }}"
															}
														},
														"zarazVersion": 43
													},
													"properties": {
														"analytics": {
															"description": "Cloudflare Monitoring settings.",
															"properties": {
																"defaultPurpose": {
																	"description": "Consent purpose assigned to Monitoring.",
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"description": "Whether Advanced Monitoring reports are enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"sessionExpTime": {
																	"description": "Session expiration time (seconds).",
																	"maximum": 86400,
																	"minimum": 60,
																	"type": "integer",
																	"x-auditable": true
																}
															},
															"type": "object"
														},
														"consent": {
															"description": "Consent management configuration.",
															"properties": {
																"buttonTextTranslations": {
																	"properties": {
																		"accept_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"confirm_my_choices": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		},
																		"reject_all": {
																			"additionalProperties": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"description": "Object where keys are language codes",
																			"type": "object"
																		}
																	},
																	"required": [
																		"accept_all",
																		"reject_all",
																		"confirm_my_choices"
																	],
																	"type": "object"
																},
																"companyEmail": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyName": {
																	"type": "string",
																	"x-auditable": true
																},
																"companyStreetAddress": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTML": {
																	"type": "string",
																	"x-auditable": true
																},
																"consentModalIntroHTMLWithTranslations": {
																	"additionalProperties": {
																		"type": "string",
																		"x-auditable": true
																	},
																	"description": "Object where keys are language codes",
																	"type": "object"
																},
																"cookieName": {
																	"type": "string",
																	"x-auditable": true
																},
																"customCSS": {
																	"type": "string",
																	"x-auditable": true
																},
																"customIntroDisclaimerDismissed": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"defaultLanguage": {
																	"type": "string",
																	"x-auditable": true
																},
																"enabled": {
																	"type": "boolean"
																},
																"hideModal": {
																	"type": "boolean",
																	"x-auditable": true
																},
																"purposes": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"purposesWithTranslations": {
																	"additionalProperties": {
																		"properties": {
																			"description": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"name": {
																				"additionalProperties": {
																					"type": "string",
																					"x-auditable": true
																				},
																				"description": "Object where keys are language codes",
																				"type": "object"
																			},
																			"order": {
																				"type": "integer",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"description",
																			"order"
																		],
																		"type": "object"
																	},
																	"description": "Object where keys are purpose alpha-numeric IDs",
																	"type": "object"
																},
																"tcfCompliant": {
																	"type": "boolean"
																}
															},
															"required": [
																"enabled"
															],
															"type": "object"
														},
														"dataLayer": {
															"description": "Data layer compatibility mode enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"debugKey": {
															"description": "The key for Zaraz debug mode.",
															"type": "string",
															"x-auditable": true
														},
														"historyChange": {
															"description": "Single Page Application support enabled.",
															"type": "boolean",
															"x-auditable": true
														},
														"settings": {
															"description": "General Zaraz settings.",
															"properties": {
																"autoInjectScript": {
																	"description": "Automatic injection of Zaraz scripts enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"contextEnricher": {
																	"description": "Details of the worker that receives and edits Zaraz Context object.",
																	"properties": {
																		"escapedWorkerName": {
																			"type": "string",
																			"x-auditable": true
																		},
																		"workerTag": {
																			"type": "string",
																			"x-auditable": true
																		}
																	},
																	"required": [
																		"escapedWorkerName",
																		"workerTag"
																	],
																	"type": "object"
																},
																"cookieDomain": {
																	"description": "The domain Zaraz will use for writing and reading its cookies.",
																	"type": "string",
																	"x-auditable": true
																},
																"ecommerce": {
																	"description": "Ecommerce API enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"eventsApiPath": {
																	"description": "Custom endpoint for server-side track events.",
																	"type": "string",
																	"x-auditable": true
																},
																"hideExternalReferer": {
																	"description": "Hiding external referrer URL enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideIPAddress": {
																	"description": "Trimming IP address enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideQueryParams": {
																	"description": "Removing URL query params enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"hideUserAgent": {
																	"description": "Removing sensitive data from User Aagent string enabled.",
																	"type": "boolean"
																},
																"initPath": {
																	"description": "Custom endpoint for Zaraz init script.",
																	"type": "string",
																	"x-auditable": true
																},
																"injectIframes": {
																	"description": "Injection of Zaraz scripts into iframes enabled.",
																	"type": "boolean",
																	"x-auditable": true
																},
																"mcRootPath": {
																	"description": "Custom path for Managed Components server functionalities.",
																	"type": "string",
																	"x-auditable": true
																},
																"scriptPath": {
																	"description": "Custom endpoint for Zaraz main script.",
																	"type": "string",
																	"x-auditable": true
																},
																"trackPath": {
																	"description": "Custom endpoint for Zaraz tracking requests.",
																	"type": "string",
																	"x-auditable": true
																}
															},
															"required": [
																"autoInjectScript"
															],
															"type": "object"
														},
														"triggers": {
															"additionalProperties": {
																"properties": {
																	"description": {
																		"description": "Trigger description.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"excludeRules": {
																		"description": "Rules defining when the trigger is not fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"loadRules": {
																		"description": "Rules defining when the trigger is fired.",
																		"items": {
																			"anyOf": [
																				{
																					"properties": {
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"match": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"op": {
																							"enum": [
																								"CONTAINS",
																								"EQUALS",
																								"STARTS_WITH",
																								"ENDS_WITH",
																								"MATCH_REGEX",
																								"NOT_MATCH_REGEX",
																								"GREATER_THAN",
																								"GREATER_THAN_OR_EQUAL",
																								"LESS_THAN",
																								"LESS_THAN_OR_EQUAL"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"value": {
																							"type": "string",
																							"x-auditable": true
																						}
																					},
																					"required": [
																						"id",
																						"match",
																						"op",
																						"value"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"clickListener"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": {
																									"enum": [
																										"xpath",
																										"css"
																									],
																									"type": "string",
																									"x-auditable": true
																								},
																								"waitForTags": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"type",
																								"selector",
																								"waitForTags"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"timer"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"interval": {
																									"minimum": 50,
																									"type": "integer",
																									"x-auditable": true
																								},
																								"limit": {
																									"minimum": 0,
																									"type": "integer",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"interval",
																								"limit"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"formSubmission"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"validate": {
																									"type": "boolean",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector",
																								"validate"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"variableMatch"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"match": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"variable": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"variable",
																								"match"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"scrollDepth"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"positions": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"positions"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				},
																				{
																					"properties": {
																						"action": {
																							"enum": [
																								"elementVisibility"
																							],
																							"type": "string",
																							"x-auditable": true
																						},
																						"id": {
																							"type": "string",
																							"x-auditable": true
																						},
																						"settings": {
																							"properties": {
																								"selector": {
																									"type": "string",
																									"x-auditable": true
																								}
																							},
																							"required": [
																								"selector"
																							],
																							"type": "object"
																						}
																					},
																					"required": [
																						"id",
																						"action",
																						"settings"
																					],
																					"type": "object"
																				}
																			]
																		},
																		"type": "array"
																	},
																	"name": {
																		"description": "Trigger name.",
																		"type": "string",
																		"x-auditable": true
																	},
																	"system": {
																		"enum": [
																			"pageload"
																		],
																		"type": "string",
																		"x-auditable": true
																	}
																},
																"required": [
																	"name",
																	"loadRules",
																	"excludeRules"
																],
																"type": "object"
															},
															"description": "Triggers set up under Zaraz configuration, where key is the trigger alpha-numeric ID and value is the trigger configuration.",
															"type": "object"
														},
														"variables": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"string"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"secret"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"type": "string",
																				"x-auditable": true,
																				"x-sensitive": true
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"name": {
																				"type": "string",
																				"x-auditable": true
																			},
																			"type": {
																				"enum": [
																					"worker"
																				],
																				"type": "string",
																				"x-auditable": true
																			},
																			"value": {
																				"properties": {
																					"escapedWorkerName": {
																						"type": "string",
																						"x-auditable": true
																					},
																					"workerTag": {
																						"type": "string",
																						"x-auditable": true
																					}
																				},
																				"required": [
																					"escapedWorkerName",
																					"workerTag"
																				],
																				"type": "object"
																			}
																		},
																		"required": [
																			"name",
																			"type",
																			"value"
																		],
																		"type": "object"
																	}
																],
																"discriminator": {
																	"mapping": {
																		"secret": "#/components/schemas/zaraz_secret_variable",
																		"string": "#/components/schemas/zaraz_string_variable",
																		"worker": "#/components/schemas/zaraz_worker_variable"
																	},
																	"propertyName": "type"
																}
															},
															"description": "Variables set up under Zaraz configuration, where key is the variable alpha-numeric ID and value is the variable configuration. Values of variables of type secret are not included.",
															"type": "object"
														},
														"zarazVersion": {
															"description": "Zaraz internal version of the config.",
															"type": "integer",
															"x-auditable": true
														}
													},
													"required": [
														"tools",
														"triggers",
														"variables",
														"settings",
														"dataLayer",
														"debugKey",
														"zarazVersion"
													],
													"type": "object"
												},
												{
													"properties": {
														"tools": {
															"additionalProperties": {
																"anyOf": [
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"component"
																						],
																						"type": "string"
																					}
																				},
																				"required": [
																					"type"
																				]
																			}
																		]
																	},
																	{
																		"allOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"blockingTriggers": {
																								"description": "List of blocking trigger IDs",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"defaultFields": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Default fields for tool's actions",
																								"type": "object"
																							},
																							"defaultPurpose": {
																								"description": "Default consent purpose ID",
																								"type": "string",
																								"x-auditable": true
																							},
																							"enabled": {
																								"description": "Whether tool is enabled",
																								"type": "boolean",
																								"x-auditable": true
																							},
																							"name": {
																								"description": "Tool's name defined by the user",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorName": {
																								"description": "Vendor name for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							},
																							"vendorPolicyUrl": {
																								"description": "Vendor's Privacy Policy URL for TCF compliant consent modal, required for Custom Managed Components and Custom HTML tool with a defaultPurpose assigned",
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"enabled",
																							"blockingTriggers",
																							"name",
																							"defaultFields"
																						],
																						"type": "object"
																					},
																					{
																						"properties": {
																							"actions": {
																								"additionalProperties": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"description": "Actions configured on a tool. Either this or neoEvents field is required.",
																								"type": "object"
																							},
																							"component": {
																								"description": "Tool's internal name",
																								"type": "string",
																								"x-auditable": true
																							},
																							"neoEvents": {
																								"description": "DEPRECATED - List of actions configured on a tool. Either this or actions field is required. If both are present, actions field will take precedence.",
																								"items": {
																									"properties": {
																										"actionType": {
																											"description": "Tool event type",
																											"type": "string",
																											"x-auditable": true
																										},
																										"blockingTriggers": {
																											"description": "List of blocking triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"type": "array"
																										},
																										"data": {
																											"description": "Event payload",
																											"type": "object"
																										},
																										"firingTriggers": {
																											"description": "List of firing triggers IDs",
																											"items": {
																												"type": "string",
																												"x-auditable": true
																											},
																											"minItems": 1,
																											"type": "array"
																										}
																									},
																									"required": [
																										"actionType",
																										"blockingTriggers",
																										"firingTriggers",
																										"data"
																									],
																									"type": "object"
																								},
																								"type": "array"
																							},
																							"permissions": {
																								"description": "List of permissions granted to the component",
																								"items": {
																									"type": "string",
																									"x-auditable": true
																								},
																								"type": "array"
																							},
																							"settings": {
																								"additionalProperties": {
																									"anyOf": [
																										{
																											"type": "string"
																										},
																										{
																											"type": "boolean"
																										}
																									],
																									"x-auditable": true
																								},
																								"description": "Tool's settings",
																								"type": "object"
																							}
																						},
																						"required": [
																							"component",
																							"settings",
																							"permissions"
																						]
																					}
																				]
																			},
																			{
																				"properties": {
																					"type": {
																						"enum": [
																							"custom-mc"
																						],
																						"type": "string"
																					},
																					"worker": {
																						"description": "Cloudflare worker that acts as a managed component",
																						"properties": {
																							"escapedWorkerName": {
																								"type": "string",
																								"x-auditable": true
																							},
																							"workerTag": {
																								"type": "string",
																								"x-auditable": true
																							}
																						},
																						"required": [
																							"workerTag",
																							"escapedWorkerName"
																						],
																						"type": "object"
																					}
																				},
																				"required": [
																					"worker",
																					"type"
																				]
																			}
																		]
																	}
																]
															},
															"description": "Tools set up under Zaraz configuration, where key is the alpha-numeric tool ID and value is the tool configuration object.",
															"type": "object"
														}
													}
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Restore Zaraz historical configuration by ID response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Restore Zaraz historical configuration by ID failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Restore Zaraz historical configuration by ID",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Admin"
		]
	},
	"PUT /zones/{zone_id}/settings/zaraz/workflow": {
		"description": "Updates Zaraz workflow for a zone.",
		"operationId": "put-zones-zone_identifier-zaraz-workflow",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "Zaraz workflow",
						"enum": [
							"realtime",
							"preview"
						],
						"type": "string",
						"x-auditable": true
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean",
											"x-auditable": true
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "Zaraz workflow",
											"enum": [
												"realtime",
												"preview"
											],
											"type": "string",
											"x-auditable": true
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Zaraz workflow response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"enum": [
										null
									],
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"enum": [
										false
									],
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Update Zaraz workflow response failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Zaraz workflow",
		"tags": [
			"Zaraz"
		],
		"x-api-token-group": [
			"Zaraz Edit",
			"Zaraz Admin"
		]
	}
}