{
	"structs": [
		{
			"name": "workerd/src/workerd/api/analytics-engine.capnp:AnalyticsEngineEvent",
			"fields": [
				{
					"name": "accountId",
					"annotations": {}
				},
				{
					"name": "dataset",
					"annotations": {}
				},
				{
					"name": "schemaVersion",
					"annotations": {}
				},
				{
					"name": "index1",
					"annotations": {}
				},
				{
					"name": "timestamp",
					"annotations": {}
				},
				{
					"name": "double1",
					"annotations": {}
				},
				{
					"name": "double2",
					"annotations": {}
				},
				{
					"name": "double3",
					"annotations": {}
				},
				{
					"name": "double4",
					"annotations": {}
				},
				{
					"name": "double5",
					"annotations": {}
				},
				{
					"name": "double6",
					"annotations": {}
				},
				{
					"name": "double7",
					"annotations": {}
				},
				{
					"name": "double8",
					"annotations": {}
				},
				{
					"name": "double9",
					"annotations": {}
				},
				{
					"name": "double10",
					"annotations": {}
				},
				{
					"name": "double11",
					"annotations": {}
				},
				{
					"name": "double12",
					"annotations": {}
				},
				{
					"name": "double13",
					"annotations": {}
				},
				{
					"name": "double14",
					"annotations": {}
				},
				{
					"name": "double15",
					"annotations": {}
				},
				{
					"name": "double16",
					"annotations": {}
				},
				{
					"name": "double17",
					"annotations": {}
				},
				{
					"name": "double18",
					"annotations": {}
				},
				{
					"name": "double19",
					"annotations": {}
				},
				{
					"name": "double20",
					"annotations": {}
				},
				{
					"name": "blob1",
					"annotations": {}
				},
				{
					"name": "blob2",
					"annotations": {}
				},
				{
					"name": "blob3",
					"annotations": {}
				},
				{
					"name": "blob4",
					"annotations": {}
				},
				{
					"name": "blob5",
					"annotations": {}
				},
				{
					"name": "blob6",
					"annotations": {}
				},
				{
					"name": "blob7",
					"annotations": {}
				},
				{
					"name": "blob8",
					"annotations": {}
				},
				{
					"name": "blob9",
					"annotations": {}
				},
				{
					"name": "blob10",
					"annotations": {}
				},
				{
					"name": "blob11",
					"annotations": {}
				},
				{
					"name": "blob12",
					"annotations": {}
				},
				{
					"name": "blob13",
					"annotations": {}
				},
				{
					"name": "blob14",
					"annotations": {}
				},
				{
					"name": "blob15",
					"annotations": {}
				},
				{
					"name": "blob16",
					"annotations": {}
				},
				{
					"name": "blob17",
					"annotations": {}
				},
				{
					"name": "blob18",
					"annotations": {}
				},
				{
					"name": "blob19",
					"annotations": {}
				},
				{
					"name": "blob20",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2HeadRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2GetRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "range",
					"annotations": {}
				},
				{
					"name": "onlyIf",
					"annotations": {}
				},
				{
					"name": "rangeHeader",
					"annotations": {}
				},
				{
					"name": "ssec",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2PutRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "customFields",
					"annotations": {}
				},
				{
					"name": "httpFields",
					"annotations": {}
				},
				{
					"name": "onlyIf",
					"annotations": {}
				},
				{
					"name": "md5",
					"annotations": {
						"base64": "true"
					}
				},
				{
					"name": "sha1",
					"annotations": {
						"hex": "true"
					}
				},
				{
					"name": "sha256",
					"annotations": {
						"hex": "true"
					}
				},
				{
					"name": "sha384",
					"annotations": {
						"hex": "true"
					}
				},
				{
					"name": "sha512",
					"annotations": {
						"hex": "true"
					}
				},
				{
					"name": "storageClass",
					"annotations": {}
				},
				{
					"name": "ssec",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2ListRequest",
			"fields": [
				{
					"name": "limit",
					"annotations": {}
				},
				{
					"name": "prefix",
					"annotations": {}
				},
				{
					"name": "cursor",
					"annotations": {}
				},
				{
					"name": "delimiter",
					"annotations": {}
				},
				{
					"name": "startAfter",
					"annotations": {}
				},
				{
					"name": "include",
					"annotations": {}
				},
				{
					"name": "newRuntime",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2DeleteRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "objects",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2CreateBucketRequest",
			"fields": [
				{
					"name": "bucket",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2ListBucketRequest",
			"fields": [
				{
					"name": "limit",
					"annotations": {}
				},
				{
					"name": "prefix",
					"annotations": {}
				},
				{
					"name": "cursor",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2DeleteBucketRequest",
			"fields": [
				{
					"name": "bucket",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2CreateMultipartUploadRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "customFields",
					"annotations": {}
				},
				{
					"name": "httpFields",
					"annotations": {}
				},
				{
					"name": "storageClass",
					"annotations": {}
				},
				{
					"name": "ssec",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2UploadPartRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "uploadId",
					"annotations": {}
				},
				{
					"name": "partNumber",
					"annotations": {}
				},
				{
					"name": "ssec",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2CompleteMultipartUploadRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "uploadId",
					"annotations": {}
				},
				{
					"name": "parts",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2AbortMultipartUploadRequest",
			"fields": [
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "uploadId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2BindingRequest",
			"fields": [
				{
					"name": "version",
					"annotations": {}
				},
				{
					"name": "payload",
					"annotations": {
						"discriminator": "unhandled type",
						"flatten": "unhandled type"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2BindingRequest.payload",
			"fields": [
				{
					"name": "head",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "get",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "put",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "list",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "delete",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "createBucket",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "listBucket",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "deleteBucket",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "createMultipartUpload",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "uploadPart",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "completeMultipartUpload",
					"annotations": {
						"flatten": "unhandled type"
					}
				},
				{
					"name": "abortMultipartUpload",
					"annotations": {
						"flatten": "unhandled type"
					}
				}
			]
		},
		{
			"name": "capnp/compat/json.capnp:FlattenOptions",
			"fields": [
				{
					"name": "prefix",
					"annotations": {}
				}
			]
		},
		{
			"name": "capnp/compat/json.capnp:DiscriminatorOptions",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "valueName",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2Range",
			"fields": [
				{
					"name": "offset",
					"annotations": {}
				},
				{
					"name": "length",
					"annotations": {}
				},
				{
					"name": "suffix",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2Conditional",
			"fields": [
				{
					"name": "etagMatches",
					"annotations": {}
				},
				{
					"name": "etagDoesNotMatch",
					"annotations": {}
				},
				{
					"name": "uploadedBefore",
					"annotations": {}
				},
				{
					"name": "uploadedAfter",
					"annotations": {}
				},
				{
					"name": "secondsGranularity",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2SSECOptions",
			"fields": [
				{
					"name": "key",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2Etag",
			"fields": [
				{
					"name": "value",
					"annotations": {}
				},
				{
					"name": "type",
					"annotations": {
						"discriminator": "unhandled type",
						"flatten": "unhandled type"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2Etag.type",
			"fields": [
				{
					"name": "strong",
					"annotations": {}
				},
				{
					"name": "weak",
					"annotations": {}
				},
				{
					"name": "wildcard",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:Record",
			"fields": [
				{
					"name": "k",
					"annotations": {}
				},
				{
					"name": "v",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2HttpFields",
			"fields": [
				{
					"name": "contentType",
					"annotations": {}
				},
				{
					"name": "contentLanguage",
					"annotations": {}
				},
				{
					"name": "contentDisposition",
					"annotations": {}
				},
				{
					"name": "contentEncoding",
					"annotations": {}
				},
				{
					"name": "cacheControl",
					"annotations": {}
				},
				{
					"name": "cacheExpiry",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2PublishedPart",
			"fields": [
				{
					"name": "etag",
					"annotations": {}
				},
				{
					"name": "part",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2Checksums",
			"fields": [
				{
					"name": "md5",
					"annotations": {
						"hex": "true",
						"name": "0"
					}
				},
				{
					"name": "sha1",
					"annotations": {
						"hex": "true",
						"name": "1"
					}
				},
				{
					"name": "sha256",
					"annotations": {
						"hex": "true",
						"name": "2"
					}
				},
				{
					"name": "sha384",
					"annotations": {
						"hex": "true",
						"name": "3"
					}
				},
				{
					"name": "sha512",
					"annotations": {
						"hex": "true",
						"name": "4"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2ErrorResponse",
			"fields": [
				{
					"name": "version",
					"annotations": {}
				},
				{
					"name": "v4code",
					"annotations": {}
				},
				{
					"name": "message",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2SSECResponse",
			"fields": [
				{
					"name": "algorithm",
					"annotations": {}
				},
				{
					"name": "keyMd5",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2HeadResponse",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "version",
					"annotations": {}
				},
				{
					"name": "size",
					"annotations": {}
				},
				{
					"name": "etag",
					"annotations": {}
				},
				{
					"name": "uploadedMillisecondsSinceEpoch",
					"annotations": {
						"name": "uploaded"
					}
				},
				{
					"name": "httpFields",
					"annotations": {}
				},
				{
					"name": "customFields",
					"annotations": {}
				},
				{
					"name": "range",
					"annotations": {}
				},
				{
					"name": "checksums",
					"annotations": {}
				},
				{
					"name": "storageClass",
					"annotations": {}
				},
				{
					"name": "ssec",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2CreateMultipartUploadResponse",
			"fields": [
				{
					"name": "uploadId",
					"annotations": {}
				},
				{
					"name": "ssec",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2UploadPartResponse",
			"fields": [
				{
					"name": "etag",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2AbortMultipartUploadResponse",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2ListResponse",
			"fields": [
				{
					"name": "objects",
					"annotations": {}
				},
				{
					"name": "truncated",
					"annotations": {}
				},
				{
					"name": "cursor",
					"annotations": {}
				},
				{
					"name": "delimitedPrefixes",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2DeleteResponse",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2CreateBucketResponse",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2ListBucketResponse.Bucket",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "createdMillisecondsSinceEpoch",
					"annotations": {
						"name": "created"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2ListBucketResponse",
			"fields": [
				{
					"name": "buckets",
					"annotations": {}
				},
				{
					"name": "truncated",
					"annotations": {}
				},
				{
					"name": "cursor",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2DeleteBucketResponse",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.getStage$Params",
			"fields": [
				{
					"name": "stableId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.getStage$Results",
			"fields": [
				{
					"name": "stage",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.DbSettings",
			"fields": [
				{
					"name": "priority",
					"annotations": {}
				},
				{
					"name": "asOfTimeMs",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage.txn$Params",
			"fields": [
				{
					"name": "settings",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage.txn$Results",
			"fields": [
				{
					"name": "transaction",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.get$Params",
			"fields": [
				{
					"name": "key",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.get$Results",
			"fields": [
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.KeyValue",
			"fields": [
				{
					"name": "key",
					"annotations": {}
				},
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.put$Params",
			"fields": [
				{
					"name": "entries",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.put$Results",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.delete$Params",
			"fields": [
				{
					"name": "keys",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.delete$Results",
			"fields": [
				{
					"name": "numDeleted",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.list$Params",
			"fields": [
				{
					"name": "start",
					"annotations": {}
				},
				{
					"name": "end",
					"annotations": {}
				},
				{
					"name": "limit",
					"annotations": {}
				},
				{
					"name": "reverse",
					"annotations": {}
				},
				{
					"name": "stream",
					"annotations": {}
				},
				{
					"name": "prefix",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.list$Results",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.getMultiple$Params",
			"fields": [
				{
					"name": "keys",
					"annotations": {}
				},
				{
					"name": "stream",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.getMultiple$Results",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.deleteAll$Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.deleteAll$Results",
			"fields": [
				{
					"name": "numDeleted",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.getAlarm$Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.getAlarm$Results",
			"fields": [
				{
					"name": "scheduledTimeMs",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.setAlarm$Params",
			"fields": [
				{
					"name": "scheduledTimeMs",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.setAlarm$Results",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.deleteAlarm$Params",
			"fields": [
				{
					"name": "timeToDeleteMs",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.deleteAlarm$Results",
			"fields": [
				{
					"name": "deleted",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.KeyRename",
			"fields": [
				{
					"name": "oldKey",
					"annotations": {}
				},
				{
					"name": "newKey",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.rename$Params",
			"fields": [
				{
					"name": "entries",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations.rename$Results",
			"fields": [
				{
					"name": "renamed",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.ListStream.values$Params",
			"fields": [
				{
					"name": "list",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.ListStream.end$Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.ListStream.end$Results",
			"fields": []
		},
		{
			"name": "capnp/stream.capnp:StreamResult",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage.Transaction.commit$Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage.Transaction.commit$Results",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage.Transaction.rollback$Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage.Transaction.rollback$Results",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime.CallFrame",
			"fields": [
				{
					"name": "functionName",
					"annotations": {}
				},
				{
					"name": "scriptId",
					"annotations": {}
				},
				{
					"name": "url",
					"annotations": {}
				},
				{
					"name": "lineNumber",
					"annotations": {}
				},
				{
					"name": "columnNumber",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime.StackTrace",
			"fields": [
				{
					"name": "description",
					"annotations": {}
				},
				{
					"name": "callFrames",
					"annotations": {}
				},
				{
					"name": "parent",
					"annotations": {}
				},
				{
					"name": "parentId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime.StackTraceId",
			"fields": [
				{
					"name": "id",
					"annotations": {}
				},
				{
					"name": "debuggerId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime.Event",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime.Event.ConsoleApiCalled.Arg",
			"fields": [
				{
					"name": "undefined",
					"annotations": {}
				},
				{
					"name": "string",
					"annotations": {
						"flatten": "unhandled type"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime.Event.ConsoleApiCalled",
			"fields": [
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "args",
					"annotations": {}
				},
				{
					"name": "executionContextId",
					"annotations": {}
				},
				{
					"name": "timestamp",
					"annotations": {}
				},
				{
					"name": "stackTrace",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Runtime.Event.ConsoleApiCalled.Arg.string",
			"fields": [
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Page",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Security",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.ResourceTiming",
			"fields": [
				{
					"name": "requestTime",
					"annotations": {}
				},
				{
					"name": "proxyStart",
					"annotations": {}
				},
				{
					"name": "proxyEnd",
					"annotations": {}
				},
				{
					"name": "dnsStart",
					"annotations": {}
				},
				{
					"name": "dnsEnd",
					"annotations": {}
				},
				{
					"name": "connectStart",
					"annotations": {}
				},
				{
					"name": "connectEnd",
					"annotations": {}
				},
				{
					"name": "sslStart",
					"annotations": {}
				},
				{
					"name": "sslEnd",
					"annotations": {}
				},
				{
					"name": "workerStart",
					"annotations": {}
				},
				{
					"name": "workerReady",
					"annotations": {}
				},
				{
					"name": "sendStart",
					"annotations": {}
				},
				{
					"name": "sendEnd",
					"annotations": {}
				},
				{
					"name": "pushStart",
					"annotations": {}
				},
				{
					"name": "pushEnd",
					"annotations": {}
				},
				{
					"name": "receiveHeadersEnd",
					"annotations": {}
				}
			]
		},
		{
			"name": "capnp/compat/json.capnp:Value",
			"fields": [
				{
					"name": "null",
					"annotations": {}
				},
				{
					"name": "boolean",
					"annotations": {}
				},
				{
					"name": "number",
					"annotations": {}
				},
				{
					"name": "string",
					"annotations": {}
				},
				{
					"name": "array",
					"annotations": {}
				},
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "call",
					"annotations": {}
				},
				{
					"name": "raw",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Request",
			"fields": [
				{
					"name": "url",
					"annotations": {}
				},
				{
					"name": "method",
					"annotations": {}
				},
				{
					"name": "headers",
					"annotations": {}
				},
				{
					"name": "postData",
					"annotations": {}
				},
				{
					"name": "mixedContentType",
					"annotations": {}
				},
				{
					"name": "initialPriority",
					"annotations": {}
				},
				{
					"name": "referrerPolicy",
					"annotations": {}
				},
				{
					"name": "isLinkPreload",
					"annotations": {}
				}
			]
		},
		{
			"name": "capnp/compat/json.capnp:Value.Field",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "capnp/compat/json.capnp:Value.Call",
			"fields": [
				{
					"name": "function",
					"annotations": {}
				},
				{
					"name": "params",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.SignedCertificateTimestamp",
			"fields": [
				{
					"name": "status",
					"annotations": {}
				},
				{
					"name": "origin",
					"annotations": {}
				},
				{
					"name": "logDescription",
					"annotations": {}
				},
				{
					"name": "logId",
					"annotations": {}
				},
				{
					"name": "timestamp",
					"annotations": {}
				},
				{
					"name": "hashAlgorithm",
					"annotations": {}
				},
				{
					"name": "signatureAlgorithm",
					"annotations": {}
				},
				{
					"name": "signatureData",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.SecurityDetails",
			"fields": [
				{
					"name": "protocol",
					"annotations": {}
				},
				{
					"name": "keyExchange",
					"annotations": {}
				},
				{
					"name": "keyExchangeGroup",
					"annotations": {}
				},
				{
					"name": "cipher",
					"annotations": {}
				},
				{
					"name": "mac",
					"annotations": {}
				},
				{
					"name": "certificateId",
					"annotations": {}
				},
				{
					"name": "subjectName",
					"annotations": {}
				},
				{
					"name": "sanList",
					"annotations": {}
				},
				{
					"name": "issuer",
					"annotations": {}
				},
				{
					"name": "validFrom",
					"annotations": {}
				},
				{
					"name": "validTo",
					"annotations": {}
				},
				{
					"name": "signedCertificateTimestampList",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Response",
			"fields": [
				{
					"name": "url",
					"annotations": {}
				},
				{
					"name": "status",
					"annotations": {}
				},
				{
					"name": "statusText",
					"annotations": {}
				},
				{
					"name": "headers",
					"annotations": {}
				},
				{
					"name": "headersText",
					"annotations": {}
				},
				{
					"name": "mimeType",
					"annotations": {}
				},
				{
					"name": "requestHeaders",
					"annotations": {}
				},
				{
					"name": "requestHeadersText",
					"annotations": {}
				},
				{
					"name": "connectionReused",
					"annotations": {}
				},
				{
					"name": "connectionId",
					"annotations": {}
				},
				{
					"name": "remoteIPAddress",
					"annotations": {}
				},
				{
					"name": "remotePort",
					"annotations": {}
				},
				{
					"name": "fromDiskCache",
					"annotations": {}
				},
				{
					"name": "fromServiceWorker",
					"annotations": {}
				},
				{
					"name": "encodedDataLength",
					"annotations": {}
				},
				{
					"name": "timing",
					"annotations": {}
				},
				{
					"name": "protocol",
					"annotations": {}
				},
				{
					"name": "securityState",
					"annotations": {}
				},
				{
					"name": "securityDetails",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Initiator",
			"fields": [
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "stack",
					"annotations": {}
				},
				{
					"name": "url",
					"annotations": {}
				},
				{
					"name": "lineNumber",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.Enable",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.Enable.Params",
			"fields": [
				{
					"name": "maxTotalBufferSize",
					"annotations": {}
				},
				{
					"name": "maxResourceBufferSize",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.Enable.Result",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.Disable",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.Disable.Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.Disable.Result",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.GetResponseBody",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.GetResponseBody.Params",
			"fields": [
				{
					"name": "requestId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Command.GetResponseBody.Result",
			"fields": [
				{
					"name": "body",
					"annotations": {}
				},
				{
					"name": "base64Encoded",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Event",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Event.RequestWillBeSent",
			"fields": [
				{
					"name": "requestId",
					"annotations": {}
				},
				{
					"name": "loaderId",
					"annotations": {}
				},
				{
					"name": "documentURL",
					"annotations": {}
				},
				{
					"name": "request",
					"annotations": {}
				},
				{
					"name": "timestamp",
					"annotations": {}
				},
				{
					"name": "wallTime",
					"annotations": {}
				},
				{
					"name": "initiator",
					"annotations": {}
				},
				{
					"name": "redirectResponse",
					"annotations": {}
				},
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "frameId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Event.ResponseReceived",
			"fields": [
				{
					"name": "requestId",
					"annotations": {}
				},
				{
					"name": "loaderId",
					"annotations": {}
				},
				{
					"name": "timestamp",
					"annotations": {}
				},
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "response",
					"annotations": {}
				},
				{
					"name": "frameId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Event.DataReceived",
			"fields": [
				{
					"name": "requestId",
					"annotations": {}
				},
				{
					"name": "timestamp",
					"annotations": {}
				},
				{
					"name": "dataLength",
					"annotations": {}
				},
				{
					"name": "encodedDataLength",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Event.LoadingFinished",
			"fields": [
				{
					"name": "requestId",
					"annotations": {}
				},
				{
					"name": "timestamp",
					"annotations": {}
				},
				{
					"name": "encodedDataLength",
					"annotations": {}
				},
				{
					"name": "cfResponse",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.PositionTickInfo",
			"fields": [
				{
					"name": "line",
					"annotations": {}
				},
				{
					"name": "ticks",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.ProfileNode",
			"fields": [
				{
					"name": "id",
					"annotations": {}
				},
				{
					"name": "callFrame",
					"annotations": {}
				},
				{
					"name": "hitCount",
					"annotations": {}
				},
				{
					"name": "children",
					"annotations": {}
				},
				{
					"name": "deoptReason",
					"annotations": {}
				},
				{
					"name": "positionTicks",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Profile",
			"fields": [
				{
					"name": "nodes",
					"annotations": {}
				},
				{
					"name": "startTime",
					"annotations": {}
				},
				{
					"name": "endTime",
					"annotations": {}
				},
				{
					"name": "samples",
					"annotations": {}
				},
				{
					"name": "timeDeltas",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Enable",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Enable.Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Enable.Result",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.SetSamplingInterval",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.SetSamplingInterval.Params",
			"fields": [
				{
					"name": "interval",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.SetSamplingInterval.Result",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Start",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Start.Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Start.Result",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Stop",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Stop.Params",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Profiler.Command.Stop.Result",
			"fields": [
				{
					"name": "profile",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler.Command",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler.Command.TakeHeapSnapshot",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler.Command.TakeHeapSnapshot.Params",
			"fields": [
				{
					"name": "reportProgress",
					"annotations": {}
				},
				{
					"name": "captureNumericValue",
					"annotations": {}
				},
				{
					"name": "exposeInternals",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler.Command.TakeHeapSnapshot.Result",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler.Event",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler.Event.AddHeapSnapshotChunk",
			"fields": [
				{
					"name": "chunk",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:HeapProfiler.Event.ReportHeapSnapshotProgress",
			"fields": [
				{
					"name": "done",
					"annotations": {}
				},
				{
					"name": "total",
					"annotations": {}
				},
				{
					"name": "finished",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Error",
			"fields": [
				{
					"name": "code",
					"annotations": {}
				},
				{
					"name": "message",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Method",
			"fields": [
				{
					"name": "params",
					"annotations": {}
				},
				{
					"name": "result",
					"annotations": {}
				},
				{
					"name": "error",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Command",
			"fields": [
				{
					"name": "id",
					"annotations": {}
				},
				{
					"name": "unknown",
					"annotations": {}
				},
				{
					"name": "networkEnable",
					"annotations": {
						"flatten": "unhandled type",
						"name": "Network.enable"
					}
				},
				{
					"name": "networkDisable",
					"annotations": {
						"flatten": "unhandled type",
						"name": "Network.disable"
					}
				},
				{
					"name": "networkGetResponseBody",
					"annotations": {
						"flatten": "unhandled type",
						"name": "Network.getResponseBody"
					}
				},
				{
					"name": "profilerSetSamplingInterval",
					"annotations": {
						"flatten": "unhandled type",
						"name": "Profiler.setSamplingInterval"
					}
				},
				{
					"name": "profilerEnable",
					"annotations": {
						"flatten": "unhandled type",
						"name": "Profiler.enable"
					}
				},
				{
					"name": "profilerStart",
					"annotations": {
						"flatten": "unhandled type",
						"name": "Profiler.start"
					}
				},
				{
					"name": "profilerStop",
					"annotations": {
						"flatten": "unhandled type",
						"name": "Profiler.stop"
					}
				},
				{
					"name": "takeHeapSnapshot",
					"annotations": {
						"flatten": "unhandled type",
						"name": "HeapProfiler.takeHeapSnapshot"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Event",
			"fields": [
				{
					"name": "networkRequestWillBeSent",
					"annotations": {
						"name": "Network.requestWillBeSent"
					}
				},
				{
					"name": "networkResponseReceived",
					"annotations": {
						"name": "Network.responseReceived"
					}
				},
				{
					"name": "networkDataReceived",
					"annotations": {
						"name": "Network.dataReceived"
					}
				},
				{
					"name": "networkLoadingFinished",
					"annotations": {
						"name": "Network.loadingFinished"
					}
				},
				{
					"name": "runtimeConsoleApiCalled",
					"annotations": {
						"name": "Runtime.consoleAPICalled"
					}
				},
				{
					"name": "addHeapSnapshotChunk",
					"annotations": {
						"name": "HeapProfiler.addHeapSnapshotChunk"
					}
				},
				{
					"name": "reportHeapSnapshotProgress",
					"annotations": {
						"name": "HeapProfiler.reportHeapSnapshotProgress"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/compatibility-date.capnp:ImpliedByAfterDate",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "date",
					"annotations": {}
				},
				{
					"name": "names",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags",
			"fields": [
				{
					"name": "formDataParserSupportsFiles",
					"annotations": {
						"compatDisableFlag": "formdata_parser_converts_files_to_strings",
						"compatEnableDate": "2021-11-03",
						"compatEnableFlag": "formdata_parser_supports_files"
					}
				},
				{
					"name": "fetchRefusesUnknownProtocols",
					"annotations": {
						"compatDisableFlag": "fetch_treats_unknown_protocols_as_http",
						"compatEnableDate": "2021-11-10",
						"compatEnableFlag": "fetch_refuses_unknown_protocols"
					}
				},
				{
					"name": "esiIncludeIsVoidTag",
					"annotations": {
						"compatEnableFlag": "html_rewriter_treats_esi_include_as_void_tag"
					}
				},
				{
					"name": "obsolete3",
					"annotations": {}
				},
				{
					"name": "durableObjectFetchRequiresSchemeAuthority",
					"annotations": {
						"compatDisableFlag": "durable_object_fetch_allows_relative_url",
						"compatEnableDate": "2021-11-10",
						"compatEnableFlag": "durable_object_fetch_requires_full_url"
					}
				},
				{
					"name": "streamsByobReaderDetachesBuffer",
					"annotations": {
						"compatDisableFlag": "streams_byob_reader_does_not_detach_buffer",
						"compatEnableDate": "2021-11-10",
						"compatEnableFlag": "streams_byob_reader_detaches_buffer"
					}
				},
				{
					"name": "streamsJavaScriptControllers",
					"annotations": {
						"compatDisableFlag": "streams_disable_constructors",
						"compatEnableDate": "2022-11-30",
						"compatEnableFlag": "streams_enable_constructors"
					}
				},
				{
					"name": "jsgPropertyOnPrototypeTemplate",
					"annotations": {
						"compatDisableFlag": "workers_api_getters_setters_on_instance",
						"compatEnableDate": "2022-01-31",
						"compatEnableFlag": "workers_api_getters_setters_on_prototype"
					}
				},
				{
					"name": "minimalSubrequests",
					"annotations": {
						"compatDisableFlag": "no_minimal_subrequests",
						"compatEnableDate": "2022-04-05",
						"compatEnableFlag": "minimal_subrequests",
						"neededByFl": "true"
					}
				},
				{
					"name": "noCotsOnExternalFetch",
					"annotations": {
						"compatDisableFlag": "cots_on_external_fetch",
						"compatEnableDate": "2022-03-08",
						"compatEnableFlag": "no_cots_on_external_fetch",
						"neededByFl": "true"
					}
				},
				{
					"name": "specCompliantUrl",
					"annotations": {
						"compatDisableFlag": "url_original",
						"compatEnableDate": "2022-10-31",
						"compatEnableFlag": "url_standard"
					}
				},
				{
					"name": "globalNavigator",
					"annotations": {
						"compatDisableFlag": "no_global_navigator",
						"compatEnableDate": "2022-03-21",
						"compatEnableFlag": "global_navigator"
					}
				},
				{
					"name": "captureThrowsAsRejections",
					"annotations": {
						"compatDisableFlag": "do_not_capture_async_api_throws",
						"compatEnableDate": "2022-10-31",
						"compatEnableFlag": "capture_async_api_throws"
					}
				},
				{
					"name": "r2PublicBetaApi",
					"annotations": {
						"compatDisableFlag": "r2_internal_beta_bindings",
						"compatEnableAllDates": "true",
						"compatEnableFlag": "r2_public_beta_bindings"
					}
				},
				{
					"name": "obsolete14",
					"annotations": {
						"compatEnableFlag": "durable_object_alarms"
					}
				},
				{
					"name": "noSubstituteNull",
					"annotations": {
						"compatDisableFlag": "substitute_null_on_type_error",
						"compatEnableDate": "2022-06-01",
						"compatEnableFlag": "dont_substitute_null_on_type_error"
					}
				},
				{
					"name": "transformStreamJavaScriptControllers",
					"annotations": {
						"compatDisableFlag": "transformstream_disable_standard_constructor",
						"compatEnableDate": "2022-11-30",
						"compatEnableFlag": "transformstream_enable_standard_constructor"
					}
				},
				{
					"name": "r2ListHonorIncludeFields",
					"annotations": {
						"compatEnableDate": "2022-08-04",
						"compatEnableFlag": "r2_list_honor_include"
					}
				},
				{
					"name": "exportCommonJsDefaultNamespace",
					"annotations": {
						"compatDisableFlag": "export_commonjs_namespace",
						"compatEnableDate": "2022-10-31",
						"compatEnableFlag": "export_commonjs_default"
					}
				},
				{
					"name": "obsolete19",
					"annotations": {
						"compatEnableFlag": "durable_object_rename",
						"experimental": "true"
					}
				},
				{
					"name": "webSocketCompression",
					"annotations": {
						"compatDisableFlag": "no_web_socket_compression",
						"compatEnableDate": "2023-08-15",
						"compatEnableFlag": "web_socket_compression"
					}
				},
				{
					"name": "nodeJsCompat",
					"annotations": {
						"compatDisableFlag": "no_nodejs_compat",
						"compatEnableFlag": "nodejs_compat",
						"impliedByAfterDate": "unhandled type"
					}
				},
				{
					"name": "obsolete22",
					"annotations": {
						"compatEnableFlag": "tcp_sockets_support"
					}
				},
				{
					"name": "specCompliantResponseRedirect",
					"annotations": {
						"compatDisableFlag": "response_redirect_url_original",
						"compatEnableDate": "2023-03-14",
						"compatEnableFlag": "response_redirect_url_standard"
					}
				},
				{
					"name": "workerdExperimental",
					"annotations": {
						"compatEnableFlag": "experimental",
						"experimental": "true"
					}
				},
				{
					"name": "durableObjectGetExisting",
					"annotations": {
						"compatEnableFlag": "durable_object_get_existing",
						"experimental": "true"
					}
				},
				{
					"name": "httpHeadersGetSetCookie",
					"annotations": {
						"compatDisableFlag": "no_http_headers_getsetcookie",
						"compatEnableDate": "2023-03-01",
						"compatEnableFlag": "http_headers_getsetcookie"
					}
				},
				{
					"name": "dispatchExceptionTunneling",
					"annotations": {
						"compatDisableFlag": "dynamic_dispatch_treat_exceptions_as_500",
						"compatEnableDate": "2023-03-01",
						"compatEnableFlag": "dynamic_dispatch_tunnel_exceptions"
					}
				},
				{
					"name": "serviceBindingExtraHandlers",
					"annotations": {
						"compatEnableFlag": "service_binding_extra_handlers",
						"experimental": "true"
					}
				},
				{
					"name": "noCfBotManagementDefault",
					"annotations": {
						"compatDisableFlag": "cf_botmanagement_default",
						"compatEnableDate": "2023-08-01",
						"compatEnableFlag": "no_cf_botmanagement_default"
					}
				},
				{
					"name": "urlSearchParamsDeleteHasValueArg",
					"annotations": {
						"compatDisableFlag": "no_urlsearchparams_delete_has_value_arg",
						"compatEnableDate": "2023-07-01",
						"compatEnableFlag": "urlsearchparams_delete_has_value_arg"
					}
				},
				{
					"name": "strictCompression",
					"annotations": {
						"compatDisableFlag": "no_strict_compression_checks",
						"compatEnableDate": "2023-08-01",
						"compatEnableFlag": "strict_compression_checks"
					}
				},
				{
					"name": "brotliContentEncoding",
					"annotations": {
						"compatDisableFlag": "no_brotli_content_encoding",
						"compatEnableDate": "2024-04-29",
						"compatEnableFlag": "brotli_content_encoding",
						"neededByFl": "true"
					}
				},
				{
					"name": "strictCrypto",
					"annotations": {
						"compatDisableFlag": "no_strict_crypto_checks",
						"compatEnableDate": "2023-08-01",
						"compatEnableFlag": "strict_crypto_checks"
					}
				},
				{
					"name": "rttiApi",
					"annotations": {
						"compatEnableFlag": "rtti_api",
						"experimental": "true"
					}
				},
				{
					"name": "obsolete35",
					"annotations": {
						"compatEnableFlag": "webgpu",
						"experimental": "true"
					}
				},
				{
					"name": "cryptoPreservePublicExponent",
					"annotations": {
						"compatDisableFlag": "no_crypto_preserve_public_exponent",
						"compatEnableDate": "2023-12-01",
						"compatEnableFlag": "crypto_preserve_public_exponent"
					}
				},
				{
					"name": "vectorizeQueryMetadataOptional",
					"annotations": {
						"compatDisableFlag": "vectorize_query_original",
						"compatEnableDate": "2023-11-08",
						"compatEnableFlag": "vectorize_query_metadata_optional"
					}
				},
				{
					"name": "unsafeModule",
					"annotations": {
						"compatEnableFlag": "unsafe_module",
						"experimental": "true"
					}
				},
				{
					"name": "jsRpc",
					"annotations": {
						"compatEnableFlag": "js_rpc",
						"experimental": "true"
					}
				},
				{
					"name": "noImportScripts",
					"annotations": {
						"compatDisableFlag": "global_importscripts",
						"compatEnableDate": "2024-03-04",
						"compatEnableFlag": "no_global_importscripts"
					}
				},
				{
					"name": "nodeJsAls",
					"annotations": {
						"compatDisableFlag": "no_nodejs_als",
						"compatEnableFlag": "nodejs_als"
					}
				},
				{
					"name": "queuesJsonMessages",
					"annotations": {
						"compatDisableFlag": "no_queues_json_messages",
						"compatEnableDate": "2024-03-18",
						"compatEnableFlag": "queues_json_messages"
					}
				},
				{
					"name": "pythonWorkers",
					"annotations": {
						"compatEnableFlag": "python_workers",
						"impliedByAfterDate": "unhandled type",
						"pythonSnapshotRelease": "true"
					}
				},
				{
					"name": "fetcherNoGetPutDelete",
					"annotations": {
						"compatDisableFlag": "fetcher_has_get_put_delete",
						"compatEnableDate": "2024-03-26",
						"compatEnableFlag": "fetcher_no_get_put_delete"
					}
				},
				{
					"name": "unwrapCustomThenables",
					"annotations": {
						"compatDisableFlag": "no_unwrap_custom_thenables",
						"compatEnableDate": "2024-04-01",
						"compatEnableFlag": "unwrap_custom_thenables"
					}
				},
				{
					"name": "fetcherRpc",
					"annotations": {
						"compatDisableFlag": "no_rpc",
						"compatEnableDate": "2024-04-03",
						"compatEnableFlag": "rpc"
					}
				},
				{
					"name": "internalStreamByobReturn",
					"annotations": {
						"compatDisableFlag": "internal_stream_byob_return_undefined",
						"compatEnableDate": "2024-05-13",
						"compatEnableFlag": "internal_stream_byob_return_view"
					}
				},
				{
					"name": "blobStandardMimeType",
					"annotations": {
						"compatDisableFlag": "blob_legacy_mime_type",
						"compatEnableDate": "2024-06-03",
						"compatEnableFlag": "blob_standard_mime_type"
					}
				},
				{
					"name": "fetchStandardUrl",
					"annotations": {
						"compatDisableFlag": "fetch_legacy_url",
						"compatEnableDate": "2024-06-03",
						"compatEnableFlag": "fetch_standard_url"
					}
				},
				{
					"name": "nodeJsCompatV2",
					"annotations": {
						"compatDisableFlag": "no_nodejs_compat_v2",
						"compatEnableFlag": "nodejs_compat_v2",
						"impliedByAfterDate": "unhandled type"
					}
				},
				{
					"name": "globalFetchStrictlyPublic",
					"annotations": {
						"compatDisableFlag": "global_fetch_private_origin",
						"compatEnableFlag": "global_fetch_strictly_public"
					}
				},
				{
					"name": "newModuleRegistry",
					"annotations": {
						"compatDisableFlag": "legacy_module_registry",
						"compatEnableFlag": "new_module_registry",
						"experimental": "true"
					}
				},
				{
					"name": "cacheOptionEnabled",
					"annotations": {
						"compatDisableFlag": "cache_option_disabled",
						"compatEnableDate": "2024-11-11",
						"compatEnableFlag": "cache_option_enabled"
					}
				},
				{
					"name": "kvDirectBinding",
					"annotations": {
						"compatEnableFlag": "kv_direct_binding",
						"experimental": "true"
					}
				},
				{
					"name": "allowCustomPorts",
					"annotations": {
						"compatDisableFlag": "ignore_custom_ports",
						"compatEnableDate": "2024-09-02",
						"compatEnableFlag": "allow_custom_ports",
						"neededByFl": "true"
					}
				},
				{
					"name": "increaseWebsocketMessageSize",
					"annotations": {
						"compatEnableFlag": "increase_websocket_message_size",
						"experimental": "true"
					}
				},
				{
					"name": "internalWritableStreamAbortClearsQueue",
					"annotations": {
						"compatDisableFlag": "internal_writable_stream_abort_does_not_clear_queue",
						"compatEnableDate": "2024-09-02",
						"compatEnableFlag": "internal_writable_stream_abort_clears_queue"
					}
				},
				{
					"name": "pythonWorkersDevPyodide",
					"annotations": {
						"compatEnableFlag": "python_workers_development",
						"experimental": "true",
						"pythonSnapshotRelease": "true"
					}
				},
				{
					"name": "nodeJsZlib",
					"annotations": {
						"compatDisableFlag": "no_nodejs_zlib",
						"compatEnableFlag": "nodejs_zlib",
						"impliedByAfterDate": "unhandled type"
					}
				},
				{
					"name": "replicaRouting",
					"annotations": {
						"compatEnableFlag": "replica_routing",
						"experimental": "true"
					}
				},
				{
					"name": "obsolete61",
					"annotations": {
						"compatEnableFlag": "enable_d1_with_sessions_api",
						"experimental": "true"
					}
				},
				{
					"name": "handleCrossRequestPromiseResolution",
					"annotations": {
						"compatDisableFlag": "no_handle_cross_request_promise_resolution",
						"compatEnableDate": "2024-10-14",
						"compatEnableFlag": "handle_cross_request_promise_resolution"
					}
				},
				{
					"name": "obsolete63",
					"annotations": {
						"experimental": "true"
					}
				},
				{
					"name": "setToStringTag",
					"annotations": {
						"compatDisableFlag": "do_not_set_tostring_tag",
						"compatEnableDate": "2024-09-26",
						"compatEnableFlag": "set_tostring_tag"
					}
				},
				{
					"name": "upperCaseAllHttpMethods",
					"annotations": {
						"compatDisableFlag": "no_upper_case_all_http_methods",
						"compatEnableDate": "2024-10-14",
						"compatEnableFlag": "upper_case_all_http_methods"
					}
				},
				{
					"name": "obsolete66",
					"annotations": {
						"compatEnableFlag": "python_external_packages"
					}
				},
				{
					"name": "noTopLevelAwaitInRequire",
					"annotations": {
						"compatDisableFlag": "enable_top_level_await_in_require",
						"compatEnableDate": "2024-12-02",
						"compatEnableFlag": "disable_top_level_await_in_require"
					}
				},
				{
					"name": "fixupTransformStreamBackpressure",
					"annotations": {
						"compatDisableFlag": "original-transform-stream-backpressure",
						"compatEnableDate": "2024-12-16",
						"compatEnableFlag": "fixup-transform-stream-backpressure"
					}
				},
				{
					"name": "tailWorkerUserSpans",
					"annotations": {
						"compatEnableFlag": "tail_worker_user_spans",
						"experimental": "true"
					}
				},
				{
					"name": "cacheNoCache",
					"annotations": {
						"compatDisableFlag": "cache_no_cache_disabled",
						"compatEnableFlag": "cache_no_cache_enabled",
						"experimental": "true"
					}
				},
				{
					"name": "pythonWorkers20250116",
					"annotations": {
						"compatEnableFlag": "python_workers_20250116",
						"experimental": "true",
						"pythonSnapshotRelease": "true"
					}
				},
				{
					"name": "requestCfOverridesCacheRules",
					"annotations": {
						"compatDisableFlag": "no_request_cf_overrides_cache_rules",
						"compatEnableDate": "2025-04-02",
						"compatEnableFlag": "request_cf_overrides_cache_rules",
						"neededByFl": "true"
					}
				},
				{
					"name": "memoryCacheDelete",
					"annotations": {
						"compatEnableFlag": "memory_cache_delete",
						"experimental": "true"
					}
				},
				{
					"name": "obsolete74",
					"annotations": {
						"compatEnableDate": "2025-03-10",
						"compatEnableFlag": "unique_ctx_per_invocation"
					}
				},
				{
					"name": "queueConsumerNoWaitForWaitUntil",
					"annotations": {
						"compatDisableFlag": "queue_consumer_wait_for_wait_until",
						"compatEnableFlag": "queue_consumer_no_wait_for_wait_until"
					}
				},
				{
					"name": "populateProcessEnv",
					"annotations": {
						"compatDisableFlag": "nodejs_compat_do_not_populate_process_env",
						"compatEnableFlag": "nodejs_compat_populate_process_env",
						"impliedByAfterDate": "unhandled type"
					}
				},
				{
					"name": "cacheApiRequestCfOverridesCacheRules",
					"annotations": {
						"compatDisableFlag": "no_cache_api_request_cf_overrides_cache_rules",
						"compatEnableDate": "2025-05-19",
						"compatEnableFlag": "cache_api_request_cf_overrides_cache_rules",
						"neededByFl": "true"
					}
				},
				{
					"name": "disableImportableEnv",
					"annotations": {
						"compatDisableFlag": "allow_importable_env",
						"compatEnableFlag": "disallow_importable_env"
					}
				},
				{
					"name": "assetsSecFetchModeNavigateHeaderPrefersAssetServing",
					"annotations": {
						"compatDisableFlag": "assets_navigation_has_no_effect",
						"compatEnableDate": "2025-04-01",
						"compatEnableFlag": "assets_navigation_prefers_asset_serving"
					}
				},
				{
					"name": "cacheApiCompatFlags",
					"annotations": {
						"compatDisableFlag": "no_cache_api_compat_flags",
						"compatEnableDate": "2025-04-19",
						"compatEnableFlag": "cache_api_compat_flags"
					}
				},
				{
					"name": "obsolete81",
					"annotations": {
						"compatEnableFlag": "python_workers_durable_objects",
						"experimental": "true"
					}
				},
				{
					"name": "streamingTailWorker",
					"annotations": {
						"compatEnableFlag": "streaming_tail_worker",
						"experimental": "true"
					}
				},
				{
					"name": "specCompliantUrlpattern",
					"annotations": {
						"compatDisableFlag": "urlpattern_original",
						"compatEnableDate": "2025-05-01",
						"compatEnableFlag": "urlpattern_standard"
					}
				},
				{
					"name": "jsWeakRef",
					"annotations": {
						"compatDisableFlag": "disable_weak_ref",
						"compatEnableDate": "2025-05-05",
						"compatEnableFlag": "enable_weak_ref"
					}
				},
				{
					"name": "requestSignalPassthrough",
					"annotations": {
						"compatDisableFlag": "no_request_signal_passthrough",
						"compatEnableFlag": "request_signal_passthrough"
					}
				},
				{
					"name": "enableNavigatorLanguage",
					"annotations": {
						"compatDisableFlag": "disable_navigator_language",
						"compatEnableDate": "2025-05-19",
						"compatEnableFlag": "enable_navigator_language"
					}
				},
				{
					"name": "webFileSystem",
					"annotations": {
						"compatEnableFlag": "enable_web_file_system",
						"experimental": "true"
					}
				},
				{
					"name": "abortSignalRpc",
					"annotations": {
						"compatEnableFlag": "enable_abortsignal_rpc",
						"experimental": "true"
					}
				},
				{
					"name": "allowEvalDuringStartup",
					"annotations": {
						"compatDisableFlag": "disallow_eval_during_startup",
						"compatEnableDate": "2025-06-01",
						"compatEnableFlag": "allow_eval_during_startup"
					}
				},
				{
					"name": "enableRequestSignal",
					"annotations": {
						"compatDisableFlag": "disable_request_signal",
						"compatEnableFlag": "enable_request_signal"
					}
				},
				{
					"name": "connectPassThrough",
					"annotations": {
						"compatEnableFlag": "connect_pass_through",
						"experimental": "true"
					}
				},
				{
					"name": "reuseCtxAcrossNonclassEvents",
					"annotations": {
						"compatEnableFlag": "nonclass_entrypoint_reuses_ctx_across_invocations"
					}
				},
				{
					"name": "bindAsyncLocalStorageSnapshot",
					"annotations": {
						"compatDisableFlag": "do_not_bind_asynclocalstorage_snapshot_to-request",
						"compatEnableDate": "2025-06-16",
						"compatEnableFlag": "bind_asynclocalstorage_snapshot_to_request"
					}
				},
				{
					"name": "throwOnUnrecognizedImportAssertion",
					"annotations": {
						"compatDisableFlag": "ignore_unrecognized_import_assertion",
						"compatEnableDate": "2025-06-16",
						"compatEnableFlag": "throw_on_unrecognized_import_assertion"
					}
				},
				{
					"name": "pythonWorkflows",
					"annotations": {
						"compatEnableFlag": "python_workflows",
						"experimental": "true"
					}
				},
				{
					"name": "unsupportedProcessActualPlatform",
					"annotations": {
						"compatEnableFlag": "unsupported_process_actual_platform",
						"experimental": "true"
					}
				},
				{
					"name": "enableNodeJsProcessV2",
					"annotations": {
						"compatEnableFlag": "enable_nodejs_process_v2",
						"experimental": "true"
					}
				},
				{
					"name": "setEventTargetThis",
					"annotations": {
						"compatDisableFlag": "no_set_event_target_this",
						"compatEnableDate": "2025-08-01",
						"compatEnableFlag": "set_event_target_this"
					}
				},
				{
					"name": "enableForwardableEmailFullHeaders",
					"annotations": {
						"compatDisableFlag": "set_forwardable_email_single_headers",
						"compatEnableDate": "2025-08-01",
						"compatEnableFlag": "set_forwardable_email_full_headers"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/frankenvalue.capnp:Frankenvalue",
			"fields": [
				{
					"name": "emptyObject",
					"annotations": {}
				},
				{
					"name": "json",
					"annotations": {}
				},
				{
					"name": "v8Serialized",
					"annotations": {}
				},
				{
					"name": "properties",
					"annotations": {}
				},
				{
					"name": "name",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/script-version.capnp:ScriptVersion",
			"fields": [
				{
					"name": "id",
					"annotations": {}
				},
				{
					"name": "tag",
					"annotations": {}
				},
				{
					"name": "message",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/script-version.capnp:ScriptVersion.id",
			"fields": [
				{
					"name": "upper",
					"annotations": {}
				},
				{
					"name": "lower",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/trace.capnp:TagValue",
			"fields": [
				{
					"name": "string",
					"annotations": {}
				},
				{
					"name": "bool",
					"annotations": {}
				},
				{
					"name": "int64",
					"annotations": {}
				},
				{
					"name": "float64",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/trace.capnp:Tag",
			"fields": [
				{
					"name": "key",
					"annotations": {}
				},
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/trace.capnp:UserSpanData",
			"fields": [
				{
					"name": "operationName",
					"annotations": {}
				},
				{
					"name": "startTimeNs",
					"annotations": {}
				},
				{
					"name": "endTimeNs",
					"annotations": {}
				},
				{
					"name": "tags",
					"annotations": {}
				},
				{
					"name": "spanId",
					"annotations": {}
				},
				{
					"name": "parentSpanId",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/modules.capnp:Module",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "src",
					"annotations": {}
				},
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "tsDeclaration",
					"annotations": {}
				},
				{
					"name": "wasm",
					"annotations": {}
				},
				{
					"name": "data",
					"annotations": {}
				},
				{
					"name": "json",
					"annotations": {}
				},
				{
					"name": "compileCache",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/modules.capnp:Bundle",
			"fields": [
				{
					"name": "modules",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:NumberType",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:PromiseType",
			"fields": [
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:StructureType",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "fullyQualifiedName",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:StringType",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:ArrayType",
			"fields": [
				{
					"name": "element",
					"annotations": {}
				},
				{
					"name": "name",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:MaybeType",
			"fields": [
				{
					"name": "value",
					"annotations": {}
				},
				{
					"name": "name",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:DictType",
			"fields": [
				{
					"name": "key",
					"annotations": {}
				},
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:OneOfType",
			"fields": [
				{
					"name": "variants",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:BuiltinType",
			"fields": [
				{
					"name": "type",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:IntrinsicType",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:FunctionType",
			"fields": [
				{
					"name": "returnType",
					"annotations": {}
				},
				{
					"name": "args",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:JsgImplType",
			"fields": [
				{
					"name": "type",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:JsBuiltinType",
			"fields": [
				{
					"name": "module",
					"annotations": {}
				},
				{
					"name": "export",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Type",
			"fields": [
				{
					"name": "unknown",
					"annotations": {}
				},
				{
					"name": "voidt",
					"annotations": {}
				},
				{
					"name": "boolt",
					"annotations": {}
				},
				{
					"name": "number",
					"annotations": {}
				},
				{
					"name": "promise",
					"annotations": {}
				},
				{
					"name": "structure",
					"annotations": {}
				},
				{
					"name": "string",
					"annotations": {}
				},
				{
					"name": "object",
					"annotations": {}
				},
				{
					"name": "array",
					"annotations": {}
				},
				{
					"name": "maybe",
					"annotations": {}
				},
				{
					"name": "dict",
					"annotations": {}
				},
				{
					"name": "oneOf",
					"annotations": {}
				},
				{
					"name": "builtin",
					"annotations": {}
				},
				{
					"name": "intrinsic",
					"annotations": {}
				},
				{
					"name": "function",
					"annotations": {}
				},
				{
					"name": "jsgImpl",
					"annotations": {}
				},
				{
					"name": "jsBuiltin",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Member",
			"fields": [
				{
					"name": "method",
					"annotations": {}
				},
				{
					"name": "property",
					"annotations": {}
				},
				{
					"name": "nested",
					"annotations": {}
				},
				{
					"name": "constant",
					"annotations": {}
				},
				{
					"name": "constructor",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Method",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "returnType",
					"annotations": {}
				},
				{
					"name": "args",
					"annotations": {}
				},
				{
					"name": "static",
					"annotations": {}
				},
				{
					"name": "fastApiCompatible",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Module",
			"fields": [
				{
					"name": "specifier",
					"annotations": {}
				},
				{
					"name": "structureName",
					"annotations": {}
				},
				{
					"name": "tsDeclarations",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Structure",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "members",
					"annotations": {}
				},
				{
					"name": "extends",
					"annotations": {}
				},
				{
					"name": "iterable",
					"annotations": {}
				},
				{
					"name": "asyncIterable",
					"annotations": {}
				},
				{
					"name": "fullyQualifiedName",
					"annotations": {}
				},
				{
					"name": "iterator",
					"annotations": {}
				},
				{
					"name": "asyncIterator",
					"annotations": {}
				},
				{
					"name": "tsRoot",
					"annotations": {}
				},
				{
					"name": "tsOverride",
					"annotations": {}
				},
				{
					"name": "tsDefine",
					"annotations": {}
				},
				{
					"name": "callable",
					"annotations": {}
				},
				{
					"name": "builtinModules",
					"annotations": {}
				},
				{
					"name": "disposable",
					"annotations": {}
				},
				{
					"name": "dispose",
					"annotations": {}
				},
				{
					"name": "asyncDisposable",
					"annotations": {}
				},
				{
					"name": "asyncDispose",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Member.nested",
			"fields": [
				{
					"name": "structure",
					"annotations": {}
				},
				{
					"name": "name",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Property",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "readonly",
					"annotations": {}
				},
				{
					"name": "lazy",
					"annotations": {}
				},
				{
					"name": "prototype",
					"annotations": {}
				},
				{
					"name": "getterFastApiCompatible",
					"annotations": {}
				},
				{
					"name": "setterFastApiCompatible",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Constant",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:Constructor",
			"fields": [
				{
					"name": "args",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:StructureGroups.StructureGroup",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "structures",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:StructureGroups",
			"fields": [
				{
					"name": "groups",
					"annotations": {}
				},
				{
					"name": "modules",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.PortBinding",
			"fields": [
				{
					"name": "hostIp",
					"annotations": {
						"name": "HostIp"
					}
				},
				{
					"name": "hostPort",
					"annotations": {
						"name": "HostPort"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.LogConfig",
			"fields": [
				{
					"name": "type",
					"annotations": {
						"name": "Type"
					}
				},
				{
					"name": "config",
					"annotations": {
						"name": "Config"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.RestartPolicy",
			"fields": [
				{
					"name": "name",
					"annotations": {
						"name": "Name"
					}
				},
				{
					"name": "maximumRetryCount",
					"annotations": {
						"name": "MaximumRetryCount"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.WeightDevice",
			"fields": [
				{
					"name": "path",
					"annotations": {}
				},
				{
					"name": "weight",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ThrottleDevice",
			"fields": [
				{
					"name": "path",
					"annotations": {}
				},
				{
					"name": "rate",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.DeviceMapping",
			"fields": [
				{
					"name": "pathOnHost",
					"annotations": {}
				},
				{
					"name": "pathInContainer",
					"annotations": {}
				},
				{
					"name": "cgroupPermissions",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.DeviceRequest",
			"fields": [
				{
					"name": "driver",
					"annotations": {}
				},
				{
					"name": "count",
					"annotations": {}
				},
				{
					"name": "deviceIds",
					"annotations": {}
				},
				{
					"name": "capabilities",
					"annotations": {}
				},
				{
					"name": "options",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Ulimit",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "soft",
					"annotations": {}
				},
				{
					"name": "hard",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.IPAMConfig",
			"fields": [
				{
					"name": "ipv4Address",
					"annotations": {
						"name": "IPv4Address"
					}
				},
				{
					"name": "ipv6Address",
					"annotations": {
						"name": "IPv6Address"
					}
				},
				{
					"name": "linkLocalIps",
					"annotations": {
						"name": "LinkLocalIPs"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.EndpointSettings",
			"fields": [
				{
					"name": "ipamConfig",
					"annotations": {
						"name": "IPAMConfig"
					}
				},
				{
					"name": "links",
					"annotations": {
						"name": "Links"
					}
				},
				{
					"name": "aliases",
					"annotations": {
						"name": "Aliases"
					}
				},
				{
					"name": "networkId",
					"annotations": {
						"name": "NetworkID"
					}
				},
				{
					"name": "endpointId",
					"annotations": {
						"name": "EndpointID"
					}
				},
				{
					"name": "gateway",
					"annotations": {
						"name": "Gateway"
					}
				},
				{
					"name": "ipAddress",
					"annotations": {
						"name": "IPAddress"
					}
				},
				{
					"name": "ipPrefixLen",
					"annotations": {
						"name": "IPPrefixLen"
					}
				},
				{
					"name": "ipv6Gateway",
					"annotations": {
						"name": "IPv6Gateway"
					}
				},
				{
					"name": "globalIpv6Address",
					"annotations": {
						"name": "GlobalIPv6Address"
					}
				},
				{
					"name": "globalIpv6PrefixLen",
					"annotations": {
						"name": "GlobalIPv6PrefixLen"
					}
				},
				{
					"name": "macAddress",
					"annotations": {
						"name": "MacAddress"
					}
				},
				{
					"name": "driverOpts",
					"annotations": {
						"name": "DriverOpts"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ContainerCreateRequest.HostConfig",
			"fields": [
				{
					"name": "binds",
					"annotations": {
						"name": "Binds"
					}
				},
				{
					"name": "links",
					"annotations": {
						"name": "Links"
					}
				},
				{
					"name": "memory",
					"annotations": {
						"name": "Memory"
					}
				},
				{
					"name": "memorySwap",
					"annotations": {
						"name": "MemorySwap"
					}
				},
				{
					"name": "memoryReservation",
					"annotations": {
						"name": "MemoryReservation"
					}
				},
				{
					"name": "kernelMemory",
					"annotations": {
						"name": "KernelMemory"
					}
				},
				{
					"name": "nanoCpus",
					"annotations": {
						"name": "NanoCpus"
					}
				},
				{
					"name": "cpuPercent",
					"annotations": {
						"name": "CpuPercent"
					}
				},
				{
					"name": "cpuShares",
					"annotations": {
						"name": "CpuShares"
					}
				},
				{
					"name": "cpuPeriod",
					"annotations": {
						"name": "CpuPeriod"
					}
				},
				{
					"name": "cpuRealtimePeriod",
					"annotations": {
						"name": "CpuRealtimePeriod"
					}
				},
				{
					"name": "cpuRealtimeRuntime",
					"annotations": {
						"name": "CpuRealtimeRuntime"
					}
				},
				{
					"name": "cpuQuota",
					"annotations": {
						"name": "CpuQuota"
					}
				},
				{
					"name": "cpusetCpus",
					"annotations": {
						"name": "CpusetCpus"
					}
				},
				{
					"name": "cpusetMems",
					"annotations": {
						"name": "CpusetMems"
					}
				},
				{
					"name": "maximumIOps",
					"annotations": {
						"name": "MaximumIOps"
					}
				},
				{
					"name": "maximumIOBps",
					"annotations": {
						"name": "MaximumIOBps"
					}
				},
				{
					"name": "blkioWeight",
					"annotations": {
						"name": "BlkioWeight"
					}
				},
				{
					"name": "blkioWeightDevice",
					"annotations": {
						"name": "BlkioWeightDevice"
					}
				},
				{
					"name": "blkioDeviceReadBps",
					"annotations": {
						"name": "BlkioDeviceReadBps"
					}
				},
				{
					"name": "blkioDeviceReadIOps",
					"annotations": {
						"name": "BlkioDeviceReadIOps"
					}
				},
				{
					"name": "blkioDeviceWriteBps",
					"annotations": {
						"name": "BlkioDeviceWriteBps"
					}
				},
				{
					"name": "blkioDeviceWriteIOps",
					"annotations": {
						"name": "BlkioDeviceWriteIOps"
					}
				},
				{
					"name": "memorySwappiness",
					"annotations": {
						"name": "MemorySwappiness"
					}
				},
				{
					"name": "oomKillDisable",
					"annotations": {
						"name": "OomKillDisable"
					}
				},
				{
					"name": "oomScoreAdj",
					"annotations": {
						"name": "OomScoreAdj"
					}
				},
				{
					"name": "pidMode",
					"annotations": {
						"name": "PidMode"
					}
				},
				{
					"name": "pidsLimit",
					"annotations": {
						"name": "PidsLimit"
					}
				},
				{
					"name": "portBindings",
					"annotations": {
						"name": "PortBindings"
					}
				},
				{
					"name": "publishAllPorts",
					"annotations": {
						"name": "PublishAllPorts"
					}
				},
				{
					"name": "privileged",
					"annotations": {
						"name": "Privileged"
					}
				},
				{
					"name": "readonlyRootfs",
					"annotations": {
						"name": "ReadonlyRootfs"
					}
				},
				{
					"name": "dns",
					"annotations": {
						"name": "Dns"
					}
				},
				{
					"name": "dnsOptions",
					"annotations": {
						"name": "DnsOptions"
					}
				},
				{
					"name": "dnsSearch",
					"annotations": {
						"name": "DnsSearch"
					}
				},
				{
					"name": "volumesFrom",
					"annotations": {
						"name": "VolumesFrom"
					}
				},
				{
					"name": "capAdd",
					"annotations": {
						"name": "CapAdd"
					}
				},
				{
					"name": "capDrop",
					"annotations": {
						"name": "CapDrop"
					}
				},
				{
					"name": "groupAdd",
					"annotations": {
						"name": "GroupAdd"
					}
				},
				{
					"name": "restartPolicy",
					"annotations": {
						"name": "RestartPolicy"
					}
				},
				{
					"name": "autoRemove",
					"annotations": {
						"name": "AutoRemove"
					}
				},
				{
					"name": "networkMode",
					"annotations": {
						"name": "NetworkMode"
					}
				},
				{
					"name": "devices",
					"annotations": {
						"name": "Devices"
					}
				},
				{
					"name": "ulimits",
					"annotations": {
						"name": "Ulimits"
					}
				},
				{
					"name": "logConfig",
					"annotations": {
						"name": "LogConfig"
					}
				},
				{
					"name": "securityOpt",
					"annotations": {
						"name": "SecurityOpt"
					}
				},
				{
					"name": "storageOpt",
					"annotations": {
						"name": "StorageOpt"
					}
				},
				{
					"name": "cgroupParent",
					"annotations": {
						"name": "CgroupParent"
					}
				},
				{
					"name": "volumeDriver",
					"annotations": {
						"name": "VolumeDriver"
					}
				},
				{
					"name": "shmSize",
					"annotations": {
						"name": "ShmSize"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ContainerCreateRequest",
			"fields": [
				{
					"name": "hostname",
					"annotations": {
						"name": "Hostname"
					}
				},
				{
					"name": "domainname",
					"annotations": {
						"name": "Domainname"
					}
				},
				{
					"name": "user",
					"annotations": {
						"name": "User"
					}
				},
				{
					"name": "attachStdin",
					"annotations": {
						"name": "AttachStdin"
					}
				},
				{
					"name": "attachStdout",
					"annotations": {
						"name": "AttachStdout"
					}
				},
				{
					"name": "attachStderr",
					"annotations": {
						"name": "AttachStderr"
					}
				},
				{
					"name": "exposedPorts",
					"annotations": {
						"name": "ExposedPorts"
					}
				},
				{
					"name": "tty",
					"annotations": {
						"name": "Tty"
					}
				},
				{
					"name": "openStdin",
					"annotations": {
						"name": "OpenStdin"
					}
				},
				{
					"name": "stdinOnce",
					"annotations": {
						"name": "StdinOnce"
					}
				},
				{
					"name": "env",
					"annotations": {
						"name": "Env"
					}
				},
				{
					"name": "cmd",
					"annotations": {
						"name": "Cmd"
					}
				},
				{
					"name": "entrypoint",
					"annotations": {
						"name": "Entrypoint"
					}
				},
				{
					"name": "image",
					"annotations": {
						"name": "Image"
					}
				},
				{
					"name": "labels",
					"annotations": {
						"name": "Labels"
					}
				},
				{
					"name": "volumes",
					"annotations": {
						"name": "Volumes"
					}
				},
				{
					"name": "workingDir",
					"annotations": {
						"name": "WorkingDir"
					}
				},
				{
					"name": "networkDisabled",
					"annotations": {
						"name": "NetworkDisabled"
					}
				},
				{
					"name": "macAddress",
					"annotations": {
						"name": "MacAddress"
					}
				},
				{
					"name": "stopSignal",
					"annotations": {
						"name": "StopSignal"
					}
				},
				{
					"name": "stopTimeout",
					"annotations": {
						"name": "StopTimeout"
					}
				},
				{
					"name": "hostConfig",
					"annotations": {
						"name": "HostConfig"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ContainerCreateResponse",
			"fields": [
				{
					"name": "id",
					"annotations": {
						"name": "Id"
					}
				},
				{
					"name": "warnings",
					"annotations": {
						"name": "Warnings"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ContainerMonitorResponse",
			"fields": [
				{
					"name": "statusCode",
					"annotations": {
						"name": "StatusCode"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ContainerState",
			"fields": [
				{
					"name": "status",
					"annotations": {
						"name": "Status"
					}
				},
				{
					"name": "running",
					"annotations": {
						"name": "Running"
					}
				},
				{
					"name": "paused",
					"annotations": {
						"name": "Paused"
					}
				},
				{
					"name": "restarting",
					"annotations": {
						"name": "Restarting"
					}
				},
				{
					"name": "oomKilled",
					"annotations": {
						"name": "OOMKilled"
					}
				},
				{
					"name": "dead",
					"annotations": {
						"name": "Dead"
					}
				},
				{
					"name": "pid",
					"annotations": {
						"name": "Pid"
					}
				},
				{
					"name": "exitCode",
					"annotations": {
						"name": "ExitCode"
					}
				},
				{
					"name": "error",
					"annotations": {
						"name": "Error"
					}
				},
				{
					"name": "startedAt",
					"annotations": {
						"name": "StartedAt"
					}
				},
				{
					"name": "finishedAt",
					"annotations": {
						"name": "FinishedAt"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.GraphDriverData",
			"fields": [
				{
					"name": "name",
					"annotations": {
						"name": "Name"
					}
				},
				{
					"name": "data",
					"annotations": {
						"name": "Data"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.MountPoint",
			"fields": [
				{
					"name": "type",
					"annotations": {
						"name": "Type"
					}
				},
				{
					"name": "name",
					"annotations": {
						"name": "Name"
					}
				},
				{
					"name": "source",
					"annotations": {
						"name": "Source"
					}
				},
				{
					"name": "destination",
					"annotations": {
						"name": "Destination"
					}
				},
				{
					"name": "driver",
					"annotations": {
						"name": "Driver"
					}
				},
				{
					"name": "mode",
					"annotations": {
						"name": "Mode"
					}
				},
				{
					"name": "rw",
					"annotations": {
						"name": "RW"
					}
				},
				{
					"name": "propagation",
					"annotations": {
						"name": "Propagation"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.NetworkSettings",
			"fields": [
				{
					"name": "bridge",
					"annotations": {
						"name": "Bridge"
					}
				},
				{
					"name": "sandboxId",
					"annotations": {
						"name": "SandboxID"
					}
				},
				{
					"name": "hairpinMode",
					"annotations": {
						"name": "HairpinMode"
					}
				},
				{
					"name": "linkLocalIpv6Address",
					"annotations": {
						"name": "LinkLocalIPv6Address"
					}
				},
				{
					"name": "linkLocalIpv6PrefixLen",
					"annotations": {
						"name": "LinkLocalIPv6PrefixLen"
					}
				},
				{
					"name": "sandboxKey",
					"annotations": {
						"name": "SandboxKey"
					}
				},
				{
					"name": "endpointId",
					"annotations": {
						"name": "EndpointID"
					}
				},
				{
					"name": "gateway",
					"annotations": {
						"name": "Gateway"
					}
				},
				{
					"name": "globalIpv6Address",
					"annotations": {
						"name": "GlobalIPv6Address"
					}
				},
				{
					"name": "globalIpv6PrefixLen",
					"annotations": {
						"name": "GlobalIPv6PrefixLen"
					}
				},
				{
					"name": "ipAddress",
					"annotations": {
						"name": "IPAddress"
					}
				},
				{
					"name": "ipPrefixLen",
					"annotations": {
						"name": "IPPrefixLen"
					}
				},
				{
					"name": "ipv6Gateway",
					"annotations": {
						"name": "IPv6Gateway"
					}
				},
				{
					"name": "macAddress",
					"annotations": {
						"name": "MacAddress"
					}
				},
				{
					"name": "networks",
					"annotations": {
						"name": "Networks"
					}
				},
				{
					"name": "ports",
					"annotations": {
						"name": "Ports"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ContainerConfig",
			"fields": [
				{
					"name": "hostname",
					"annotations": {
						"name": "Hostname"
					}
				},
				{
					"name": "domainname",
					"annotations": {
						"name": "Domainname"
					}
				},
				{
					"name": "user",
					"annotations": {
						"name": "User"
					}
				},
				{
					"name": "attachStdin",
					"annotations": {
						"name": "AttachStdin"
					}
				},
				{
					"name": "attachStdout",
					"annotations": {
						"name": "AttachStdout"
					}
				},
				{
					"name": "attachStderr",
					"annotations": {
						"name": "AttachStderr"
					}
				},
				{
					"name": "exposedPorts",
					"annotations": {
						"name": "ExposedPorts"
					}
				},
				{
					"name": "tty",
					"annotations": {
						"name": "Tty"
					}
				},
				{
					"name": "openStdin",
					"annotations": {
						"name": "OpenStdin"
					}
				},
				{
					"name": "stdinOnce",
					"annotations": {
						"name": "StdinOnce"
					}
				},
				{
					"name": "env",
					"annotations": {
						"name": "Env"
					}
				},
				{
					"name": "cmd",
					"annotations": {
						"name": "Cmd"
					}
				},
				{
					"name": "image",
					"annotations": {
						"name": "Image"
					}
				},
				{
					"name": "volumes",
					"annotations": {
						"name": "Volumes"
					}
				},
				{
					"name": "workingDir",
					"annotations": {
						"name": "WorkingDir"
					}
				},
				{
					"name": "entrypoint",
					"annotations": {
						"name": "Entrypoint"
					}
				},
				{
					"name": "networkDisabled",
					"annotations": {
						"name": "NetworkDisabled"
					}
				},
				{
					"name": "macAddress",
					"annotations": {
						"name": "MacAddress"
					}
				},
				{
					"name": "onBuild",
					"annotations": {
						"name": "OnBuild"
					}
				},
				{
					"name": "labels",
					"annotations": {
						"name": "Labels"
					}
				},
				{
					"name": "stopSignal",
					"annotations": {
						"name": "StopSignal"
					}
				},
				{
					"name": "stopTimeout",
					"annotations": {
						"name": "StopTimeout"
					}
				},
				{
					"name": "shell",
					"annotations": {
						"name": "Shell"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.ContainerInspectResponse",
			"fields": [
				{
					"name": "id",
					"annotations": {
						"name": "Id"
					}
				},
				{
					"name": "created",
					"annotations": {
						"name": "Created"
					}
				},
				{
					"name": "path",
					"annotations": {
						"name": "Path"
					}
				},
				{
					"name": "args",
					"annotations": {
						"name": "Args"
					}
				},
				{
					"name": "state",
					"annotations": {
						"name": "State"
					}
				},
				{
					"name": "networkSettings",
					"annotations": {
						"name": "NetworkSettings"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Command",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Command.ContainerCreate",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Command.ContainerCreate.Params",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "body",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Command.ContainerCreate.Result",
			"fields": [
				{
					"name": "response",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Command.ContainerInspect",
			"fields": []
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Command.ContainerInspect.Params",
			"fields": [
				{
					"name": "id",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/docker-api.capnp:Docker.Command.ContainerInspect.Result",
			"fields": [
				{
					"name": "response",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/log-schema.capnp:LogEntry",
			"fields": [
				{
					"name": "timestamp",
					"annotations": {
						"name": "timestamp"
					}
				},
				{
					"name": "level",
					"annotations": {
						"name": "level"
					}
				},
				{
					"name": "source",
					"annotations": {
						"name": "source"
					}
				},
				{
					"name": "message",
					"annotations": {
						"name": "message"
					}
				},
				{
					"name": "contextDepth",
					"annotations": {
						"name": "context_depth"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Service",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "unspecified",
					"annotations": {}
				},
				{
					"name": "worker",
					"annotations": {}
				},
				{
					"name": "network",
					"annotations": {}
				},
				{
					"name": "external",
					"annotations": {}
				},
				{
					"name": "disk",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Socket",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "address",
					"annotations": {}
				},
				{
					"name": "http",
					"annotations": {}
				},
				{
					"name": "https",
					"annotations": {}
				},
				{
					"name": "service",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Extension",
			"fields": [
				{
					"name": "modules",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Config",
			"fields": [
				{
					"name": "services",
					"annotations": {}
				},
				{
					"name": "sockets",
					"annotations": {}
				},
				{
					"name": "v8Flags",
					"annotations": {}
				},
				{
					"name": "extensions",
					"annotations": {}
				},
				{
					"name": "autogates",
					"annotations": {}
				},
				{
					"name": "structuredLogging",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker",
			"fields": [
				{
					"name": "modules",
					"annotations": {}
				},
				{
					"name": "serviceWorkerScript",
					"annotations": {}
				},
				{
					"name": "inherit",
					"annotations": {}
				},
				{
					"name": "compatibilityDate",
					"annotations": {}
				},
				{
					"name": "compatibilityFlags",
					"annotations": {}
				},
				{
					"name": "bindings",
					"annotations": {}
				},
				{
					"name": "globalOutbound",
					"annotations": {}
				},
				{
					"name": "durableObjectNamespaces",
					"annotations": {}
				},
				{
					"name": "durableObjectUniqueKeyModifier",
					"annotations": {}
				},
				{
					"name": "durableObjectStorage",
					"annotations": {}
				},
				{
					"name": "cacheApiOutbound",
					"annotations": {}
				},
				{
					"name": "moduleFallback",
					"annotations": {}
				},
				{
					"name": "tails",
					"annotations": {}
				},
				{
					"name": "streamingTails",
					"annotations": {}
				},
				{
					"name": "containerEngine",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Network",
			"fields": [
				{
					"name": "allow",
					"annotations": {}
				},
				{
					"name": "deny",
					"annotations": {}
				},
				{
					"name": "tlsOptions",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:ExternalServer",
			"fields": [
				{
					"name": "address",
					"annotations": {}
				},
				{
					"name": "http",
					"annotations": {}
				},
				{
					"name": "https",
					"annotations": {}
				},
				{
					"name": "tcp",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:DiskDirectory",
			"fields": [
				{
					"name": "path",
					"annotations": {}
				},
				{
					"name": "writable",
					"annotations": {}
				},
				{
					"name": "allowDotfiles",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.durableObjectStorage",
			"fields": [
				{
					"name": "none",
					"annotations": {}
				},
				{
					"name": "inMemory",
					"annotations": {}
				},
				{
					"name": "localDisk",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.DockerConfiguration",
			"fields": [
				{
					"name": "socketPath",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.containerEngine",
			"fields": [
				{
					"name": "none",
					"annotations": {}
				},
				{
					"name": "localDocker",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Module",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "esModule",
					"annotations": {}
				},
				{
					"name": "commonJsModule",
					"annotations": {}
				},
				{
					"name": "text",
					"annotations": {}
				},
				{
					"name": "data",
					"annotations": {}
				},
				{
					"name": "wasm",
					"annotations": {}
				},
				{
					"name": "json",
					"annotations": {}
				},
				{
					"name": "obsolete",
					"annotations": {}
				},
				{
					"name": "pythonModule",
					"annotations": {}
				},
				{
					"name": "pythonRequirement",
					"annotations": {}
				},
				{
					"name": "namedExports",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "unspecified",
					"annotations": {}
				},
				{
					"name": "parameter",
					"annotations": {}
				},
				{
					"name": "text",
					"annotations": {}
				},
				{
					"name": "data",
					"annotations": {}
				},
				{
					"name": "json",
					"annotations": {}
				},
				{
					"name": "wasmModule",
					"annotations": {}
				},
				{
					"name": "cryptoKey",
					"annotations": {}
				},
				{
					"name": "service",
					"annotations": {}
				},
				{
					"name": "durableObjectNamespace",
					"annotations": {}
				},
				{
					"name": "kvNamespace",
					"annotations": {}
				},
				{
					"name": "r2Bucket",
					"annotations": {}
				},
				{
					"name": "r2Admin",
					"annotations": {}
				},
				{
					"name": "wrapped",
					"annotations": {}
				},
				{
					"name": "queue",
					"annotations": {}
				},
				{
					"name": "fromEnvironment",
					"annotations": {}
				},
				{
					"name": "analyticsEngine",
					"annotations": {}
				},
				{
					"name": "hyperdrive",
					"annotations": {}
				},
				{
					"name": "unsafeEval",
					"annotations": {}
				},
				{
					"name": "memoryCache",
					"annotations": {}
				},
				{
					"name": "durableObjectClass",
					"annotations": {}
				},
				{
					"name": "workerLoader",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:ServiceDesignator",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "entrypoint",
					"annotations": {}
				},
				{
					"name": "props",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.DurableObjectNamespace",
			"fields": [
				{
					"name": "className",
					"annotations": {}
				},
				{
					"name": "uniqueKey",
					"annotations": {}
				},
				{
					"name": "ephemeralLocal",
					"annotations": {}
				},
				{
					"name": "preventEviction",
					"annotations": {}
				},
				{
					"name": "enableSql",
					"annotations": {}
				},
				{
					"name": "container",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.Type",
			"fields": [
				{
					"name": "unspecified",
					"annotations": {}
				},
				{
					"name": "text",
					"annotations": {}
				},
				{
					"name": "data",
					"annotations": {}
				},
				{
					"name": "json",
					"annotations": {}
				},
				{
					"name": "wasm",
					"annotations": {}
				},
				{
					"name": "cryptoKey",
					"annotations": {}
				},
				{
					"name": "service",
					"annotations": {}
				},
				{
					"name": "durableObjectNamespace",
					"annotations": {}
				},
				{
					"name": "kvNamespace",
					"annotations": {}
				},
				{
					"name": "r2Bucket",
					"annotations": {}
				},
				{
					"name": "r2Admin",
					"annotations": {}
				},
				{
					"name": "queue",
					"annotations": {}
				},
				{
					"name": "analyticsEngine",
					"annotations": {}
				},
				{
					"name": "hyperdrive",
					"annotations": {}
				},
				{
					"name": "durableObjectClass",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.parameter",
			"fields": [
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "optional",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.hyperdrive",
			"fields": [
				{
					"name": "designator",
					"annotations": {}
				},
				{
					"name": "database",
					"annotations": {}
				},
				{
					"name": "user",
					"annotations": {}
				},
				{
					"name": "password",
					"annotations": {}
				},
				{
					"name": "scheme",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.MemoryCacheLimits",
			"fields": [
				{
					"name": "maxKeys",
					"annotations": {}
				},
				{
					"name": "maxValueSize",
					"annotations": {}
				},
				{
					"name": "maxTotalValueSize",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.memoryCache",
			"fields": [
				{
					"name": "id",
					"annotations": {}
				},
				{
					"name": "limits",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.workerLoader",
			"fields": [
				{
					"name": "id",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.CryptoKey",
			"fields": [
				{
					"name": "raw",
					"annotations": {}
				},
				{
					"name": "hex",
					"annotations": {}
				},
				{
					"name": "base64",
					"annotations": {}
				},
				{
					"name": "pkcs8",
					"annotations": {}
				},
				{
					"name": "spki",
					"annotations": {}
				},
				{
					"name": "jwk",
					"annotations": {}
				},
				{
					"name": "algorithm",
					"annotations": {}
				},
				{
					"name": "extractable",
					"annotations": {}
				},
				{
					"name": "usages",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.DurableObjectNamespaceDesignator",
			"fields": [
				{
					"name": "className",
					"annotations": {}
				},
				{
					"name": "serviceName",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.WrappedBinding",
			"fields": [
				{
					"name": "moduleName",
					"annotations": {}
				},
				{
					"name": "entrypoint",
					"annotations": {}
				},
				{
					"name": "innerBindings",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.CryptoKey.algorithm",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "json",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:ServiceDesignator.props",
			"fields": [
				{
					"name": "empty",
					"annotations": {}
				},
				{
					"name": "json",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.DurableObjectNamespace.ContainerOptions",
			"fields": [
				{
					"name": "imageName",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:TlsOptions",
			"fields": [
				{
					"name": "keypair",
					"annotations": {}
				},
				{
					"name": "requireClientCerts",
					"annotations": {}
				},
				{
					"name": "trustBrowserCas",
					"annotations": {}
				},
				{
					"name": "trustedCertificates",
					"annotations": {}
				},
				{
					"name": "minVersion",
					"annotations": {}
				},
				{
					"name": "cipherList",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:TlsOptions.Keypair",
			"fields": [
				{
					"name": "privateKey",
					"annotations": {}
				},
				{
					"name": "certificateChain",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:HttpOptions",
			"fields": [
				{
					"name": "style",
					"annotations": {}
				},
				{
					"name": "forwardedProtoHeader",
					"annotations": {}
				},
				{
					"name": "cfBlobHeader",
					"annotations": {}
				},
				{
					"name": "injectRequestHeaders",
					"annotations": {}
				},
				{
					"name": "injectResponseHeaders",
					"annotations": {}
				},
				{
					"name": "capnpConnectHost",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:ExternalServer.https",
			"fields": [
				{
					"name": "options",
					"annotations": {}
				},
				{
					"name": "tlsOptions",
					"annotations": {}
				},
				{
					"name": "certificateHost",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:ExternalServer.tcp",
			"fields": [
				{
					"name": "tlsOptions",
					"annotations": {}
				},
				{
					"name": "certificateHost",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:HttpOptions.Header",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Socket.https",
			"fields": [
				{
					"name": "options",
					"annotations": {}
				},
				{
					"name": "tlsOptions",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Extension.Module",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "internal",
					"annotations": {}
				},
				{
					"name": "esModule",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:FallbackServiceRequest.Attribute",
			"fields": [
				{
					"name": "name",
					"annotations": {}
				},
				{
					"name": "value",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:FallbackServiceRequest",
			"fields": [
				{
					"name": "type",
					"annotations": {}
				},
				{
					"name": "specifier",
					"annotations": {}
				},
				{
					"name": "rawSpecifier",
					"annotations": {}
				},
				{
					"name": "referrer",
					"annotations": {}
				},
				{
					"name": "attributes",
					"annotations": {}
				}
			]
		}
	],
	"enums": [
		{
			"name": "workerd/src/workerd/api/r2-api.capnp:R2ListRequest.IncludeField",
			"enumerants": [
				{
					"name": "http",
					"annotations": {}
				},
				{
					"name": "custom",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.DbSettings.Priority",
			"enumerants": [
				{
					"name": "default",
					"annotations": {}
				},
				{
					"name": "low",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:LogType",
			"enumerants": [
				{
					"name": "log",
					"annotations": {}
				},
				{
					"name": "debug",
					"annotations": {
						"name": "debug_"
					}
				},
				{
					"name": "info",
					"annotations": {}
				},
				{
					"name": "error",
					"annotations": {}
				},
				{
					"name": "warning",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Page.ResourceType",
			"enumerants": [
				{
					"name": "document",
					"annotations": {
						"name": "Document"
					}
				},
				{
					"name": "stylesheet",
					"annotations": {
						"name": "Stylesheet"
					}
				},
				{
					"name": "image",
					"annotations": {
						"name": "Image"
					}
				},
				{
					"name": "media",
					"annotations": {
						"name": "Media"
					}
				},
				{
					"name": "font",
					"annotations": {
						"name": "Font"
					}
				},
				{
					"name": "script",
					"annotations": {
						"name": "Script"
					}
				},
				{
					"name": "textTrack",
					"annotations": {
						"name": "TextTrack"
					}
				},
				{
					"name": "xhr",
					"annotations": {
						"name": "XHR"
					}
				},
				{
					"name": "fetch",
					"annotations": {
						"name": "Fetch"
					}
				},
				{
					"name": "eventSource",
					"annotations": {
						"name": "EventSource"
					}
				},
				{
					"name": "webSocket",
					"annotations": {
						"name": "WebSocket"
					}
				},
				{
					"name": "manifest",
					"annotations": {
						"name": "Manifest"
					}
				},
				{
					"name": "other",
					"annotations": {
						"name": "Other"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Security.MixedContentType",
			"enumerants": [
				{
					"name": "blockable",
					"annotations": {}
				},
				{
					"name": "optionallyBlockable",
					"annotations": {
						"name": "optionally-blockable"
					}
				},
				{
					"name": "none",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Security.SecurityState",
			"enumerants": [
				{
					"name": "unknown",
					"annotations": {}
				},
				{
					"name": "neutral",
					"annotations": {}
				},
				{
					"name": "insecure",
					"annotations": {}
				},
				{
					"name": "secure",
					"annotations": {}
				},
				{
					"name": "info",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.ResourcePriority",
			"enumerants": [
				{
					"name": "veryLow",
					"annotations": {
						"name": "VeryLow"
					}
				},
				{
					"name": "low",
					"annotations": {
						"name": "Low"
					}
				},
				{
					"name": "medium",
					"annotations": {
						"name": "Medium"
					}
				},
				{
					"name": "high",
					"annotations": {
						"name": "High"
					}
				},
				{
					"name": "veryHigh",
					"annotations": {
						"name": "VeryHigh"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Request.ReferrerPolicy",
			"enumerants": [
				{
					"name": "unsafeUrl",
					"annotations": {
						"name": "unsafe-url"
					}
				},
				{
					"name": "noReferrerWhenDowngrade",
					"annotations": {
						"name": "no-referrer-when-downgrade"
					}
				},
				{
					"name": "noReferrer",
					"annotations": {
						"name": "no-referrer"
					}
				},
				{
					"name": "origin",
					"annotations": {}
				},
				{
					"name": "originWhenCrossOrigin",
					"annotations": {
						"name": "origin-when-cross-origin"
					}
				},
				{
					"name": "sameOrigin",
					"annotations": {
						"name": "same-origin"
					}
				},
				{
					"name": "strictOrigin",
					"annotations": {
						"name": "strict-origin"
					}
				},
				{
					"name": "strictOriginWhenCrossOrigin",
					"annotations": {
						"name": "strict-origin-when-cross-origin"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/cdp.capnp:Network.Initiator.Type",
			"enumerants": [
				{
					"name": "parser",
					"annotations": {}
				},
				{
					"name": "script",
					"annotations": {}
				},
				{
					"name": "preload",
					"annotations": {}
				},
				{
					"name": "other",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/features.capnp:Features",
			"enumerants": [
				{
					"name": "test",
					"annotations": {}
				},
				{
					"name": "blobAsArrayBuffer",
					"annotations": {}
				},
				{
					"name": "blobAsText",
					"annotations": {}
				},
				{
					"name": "blobAsStream",
					"annotations": {}
				},
				{
					"name": "blobGetData",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/outcome.capnp:EventOutcome",
			"enumerants": [
				{
					"name": "unknown",
					"annotations": {}
				},
				{
					"name": "ok",
					"annotations": {}
				},
				{
					"name": "exception",
					"annotations": {}
				},
				{
					"name": "exceededCpu",
					"annotations": {}
				},
				{
					"name": "killSwitch",
					"annotations": {}
				},
				{
					"name": "daemonDown",
					"annotations": {}
				},
				{
					"name": "scriptNotFound",
					"annotations": {}
				},
				{
					"name": "canceled",
					"annotations": {}
				},
				{
					"name": "exceededMemory",
					"annotations": {}
				},
				{
					"name": "loadShed",
					"annotations": {}
				},
				{
					"name": "responseStreamDisconnected",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/modules.capnp:ModuleType",
			"enumerants": [
				{
					"name": "bundle",
					"annotations": {}
				},
				{
					"name": "builtin",
					"annotations": {}
				},
				{
					"name": "internal",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:BuiltinType.Type",
			"enumerants": [
				{
					"name": "v8Uint8Array",
					"annotations": {}
				},
				{
					"name": "v8ArrayBufferView",
					"annotations": {}
				},
				{
					"name": "jsgBufferSource",
					"annotations": {}
				},
				{
					"name": "kjDate",
					"annotations": {}
				},
				{
					"name": "v8Function",
					"annotations": {}
				},
				{
					"name": "v8ArrayBuffer",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/jsg/rtti.capnp:JsgImplType.Type",
			"enumerants": [
				{
					"name": "configuration",
					"annotations": {}
				},
				{
					"name": "v8Isolate",
					"annotations": {}
				},
				{
					"name": "jsgLock",
					"annotations": {}
				},
				{
					"name": "jsgTypeHandler",
					"annotations": {}
				},
				{
					"name": "jsgUnimplemented",
					"annotations": {}
				},
				{
					"name": "jsgVarargs",
					"annotations": {}
				},
				{
					"name": "jsgSelfRef",
					"annotations": {}
				},
				{
					"name": "v8FunctionCallbackInfo",
					"annotations": {}
				},
				{
					"name": "v8PropertyCallbackInfo",
					"annotations": {}
				},
				{
					"name": "jsgName",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/log-schema.capnp:LogEntry.LogLevel",
			"enumerants": [
				{
					"name": "debug",
					"annotations": {
						"name": "debug"
					}
				},
				{
					"name": "info",
					"annotations": {
						"name": "info"
					}
				},
				{
					"name": "warning",
					"annotations": {
						"name": "warning"
					}
				},
				{
					"name": "error",
					"annotations": {
						"name": "error"
					}
				},
				{
					"name": "fatal",
					"annotations": {
						"name": "fatal"
					}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:Worker.Binding.CryptoKey.Usage",
			"enumerants": [
				{
					"name": "encrypt",
					"annotations": {}
				},
				{
					"name": "decrypt",
					"annotations": {}
				},
				{
					"name": "sign",
					"annotations": {}
				},
				{
					"name": "verify",
					"annotations": {}
				},
				{
					"name": "deriveKey",
					"annotations": {}
				},
				{
					"name": "deriveBits",
					"annotations": {}
				},
				{
					"name": "wrapKey",
					"annotations": {}
				},
				{
					"name": "unwrapKey",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:TlsOptions.Version",
			"enumerants": [
				{
					"name": "goodDefault",
					"annotations": {}
				},
				{
					"name": "ssl3",
					"annotations": {}
				},
				{
					"name": "tls1Dot0",
					"annotations": {}
				},
				{
					"name": "tls1Dot1",
					"annotations": {}
				},
				{
					"name": "tls1Dot2",
					"annotations": {}
				},
				{
					"name": "tls1Dot3",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/server/workerd.capnp:HttpOptions.Style",
			"enumerants": [
				{
					"name": "host",
					"annotations": {}
				},
				{
					"name": "proxy",
					"annotations": {}
				}
			]
		}
	],
	"interfaces": [
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage",
			"methods": [
				{
					"name": "txn",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage",
			"methods": [
				{
					"name": "getStage",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Stage.Transaction",
			"methods": [
				{
					"name": "commit",
					"annotations": {}
				},
				{
					"name": "rollback",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.Operations",
			"methods": [
				{
					"name": "get",
					"annotations": {}
				},
				{
					"name": "put",
					"annotations": {}
				},
				{
					"name": "delete",
					"annotations": {}
				},
				{
					"name": "list",
					"annotations": {}
				},
				{
					"name": "getMultiple",
					"annotations": {}
				},
				{
					"name": "deleteAll",
					"annotations": {}
				},
				{
					"name": "getAlarm",
					"annotations": {}
				},
				{
					"name": "setAlarm",
					"annotations": {}
				},
				{
					"name": "deleteAlarm",
					"annotations": {}
				},
				{
					"name": "rename",
					"annotations": {}
				}
			]
		},
		{
			"name": "workerd/src/workerd/io/actor-storage.capnp:ActorStorage.ListStream",
			"methods": [
				{
					"name": "values",
					"annotations": {}
				},
				{
					"name": "end",
					"annotations": {}
				}
			]
		}
	],
	"unk": [
		"workerd/src/workerd/api/analytics-engine.capnp",
		"capnp/c++.capnp:namespace",
		"capnp/c++.capnp",
		"capnp/c++.capnp:allowCancellation",
		"workerd/src/workerd/api/r2-api.capnp",
		"workerd/src/workerd/api/r2-api.capnp:versionPublicBeta",
		"capnp/compat/json.capnp:flatten",
		"capnp/compat/json.capnp",
		"capnp/compat/json.capnp:discriminator",
		"capnp/compat/json.capnp:base64",
		"capnp/compat/json.capnp:hex",
		"capnp/compat/json.capnp:name",
		"workerd/src/workerd/io/actor-storage.capnp",
		"capnp/stream.capnp",
		"workerd/src/workerd/io/actor-storage.capnp:ActorStorage.maxKeys",
		"workerd/src/workerd/io/actor-storage.capnp:ActorStorage.renameLimit",
		"workerd/src/workerd/io/cdp.capnp",
		"capnp/c++.capnp:name",
		"workerd/src/workerd/io/compatibility-date.capnp",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.compatEnableFlag",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.compatEnableDate",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.compatDisableFlag",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.neededByFl",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.compatEnableAllDates",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.experimental",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.impliedByAfterDate",
		"workerd/src/workerd/io/compatibility-date.capnp:CompatibilityFlags.pythonSnapshotRelease",
		"workerd/src/workerd/io/features.capnp",
		"workerd/src/workerd/io/frankenvalue.capnp",
		"workerd/src/workerd/io/outcome.capnp",
		"workerd/src/workerd/io/script-version.capnp",
		"workerd/src/workerd/io/trace.capnp",
		"workerd/src/workerd/jsg/modules.capnp",
		"workerd/src/workerd/jsg/rtti.capnp",
		"workerd/src/workerd/server/docker-api.capnp",
		"workerd/src/workerd/server/log-schema.capnp",
		"workerd/src/workerd/server/workerd-meta.capnp",
		"workerd/src/workerd/server/workerd-meta.capnp:cppCapnpSchema",
		"workerd/src/workerd/server/workerd-meta.capnp:workerdCapnpSchema",
		"workerd/src/workerd/server/workerd.capnp"
	]
}
