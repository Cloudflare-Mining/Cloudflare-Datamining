{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "7",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Marek Majkowski",
				"slug": "marek-majkowski",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1JuU5qavgwVeqR8BAUrd6U/3a0d0445d41c9a3c42011046efe9c37b/marek-majkowski.jpeg",
				"location": null,
				"website": null,
				"twitter": "@majek04",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Recently Akamai published an article about CLDAP reflection attacks. This got us thinking. We saw attacks from Connectionless LDAP servers back in November 2016 but totally ignored them because our systems were automatically dropping the attack traffic without any impact.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7z3StKcINqYvK3VC2oJfY4/f13dba84d044b786d1d0e71194d8ce35/reflections-on-reflections.jpg",
		"featured": false,
		"html": "<p>Recently <a href=\"https://www.akamai.com/us/en/about/our-thinking/threat-advisories/connection-less-lightweight-directory-access-protocol-reflection-ddos-threat-advisory.jsp\">Akamai published an article about CLDAP</a> reflection attacks. This got us thinking. We saw attacks from <a href=\"https://ldapscan.shadowserver.org/\">Connectionless LDAP</a> servers back in November 2016 but totally ignored them because our systems were automatically dropping the attack traffic without any impact.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1cPH4iVdvSLz4zASMsx4y1/55263fc349679bfdd3bb738294dcde51/5624068176_547766995c_z.jpg\" alt=\"\" class=\"kg-image\" width=\"640\" height=\"447\" loading=\"lazy\"/>\n            \n            </figure><p><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC BY 2.0</a> <a href=\"https://www.flickr.com/photos/ragez/5624068176\">image</a> by <a href=\"https://www.flickr.com/photos/ragez/\">RageZ</a></p><p>We decided to take a second look through our logs and share some statistics about reflection attacks we see regularly. In this blog post, I&#39;ll describe popular reflection attacks, explain how to defend against them and why Cloudflare and our customers are immune to most of them.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"a-recipe-for-reflection\">A recipe for reflection</h2>\n      <a href=\"#a-recipe-for-reflection\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/37shntzMKVznz96CFNVl4n/c7d72b8761f9c5c89ef10a41cd3b398b/Untitled-2.001saaa.png\" alt=\"\" class=\"kg-image\" width=\"640\" height=\"354\" loading=\"lazy\"/>\n            \n            </figure><p>Let&#39;s start with a brief reminder on how reflection attacks (often called &quot;amplification attacks&quot;) work.</p><p>To bake a reflection attack, the villain needs four ingredients:</p><ul><li><p>A server capable of performing <a href=\"https://en.wikipedia.org/wiki/IP_address_spoofing\">IP address spoofing</a>.</p></li><li><p>A protocol vulnerable to reflection/amplification. Any badly designed UDP-based request-response protocol will do.</p></li><li><p>A list of &quot;reflectors&quot;: servers that support the vulnerable protocol.</p></li><li><p>A victim IP address.</p></li></ul><p>The general idea:</p><ul><li><p>The villain sends fake UDP requests.</p></li><li><p>The source IP address in these packets is spoofed: the attacker sticks the victim&#39;s IP address in the source IP address field, not their own IP address as they normally would.</p></li><li><p>Each packet is destined to a random reflector server.</p></li><li><p>The spoofed packets traverse the Internet and eventually are delivered to the reflector server.</p></li><li><p>The reflector server receives the fake packet. It looks at it carefully and thinks: &quot;Oh, what a nice request from <i>the victim</i>! I must be polite and respond!&quot;. It sends the response in good faith.</p></li><li><p>The response, though, is directed to the victim.</p></li></ul><p>The victim will end up receiving a large volume of response packets it never had requested. With a large enough attack the victim may end up with congested network and <a href=\"https://en.wikipedia.org/wiki/Interrupt_storm\">an interrupt storm</a>.</p><p>The responses delivered to victim might be larger than the spoofed requests (hence <i>amplification</i>). A carefully mounted attack may amplify the villain&#39;s traffic. In the past <a href=\"/the-ddos-that-almost-broke-the-internet/\">we&#39;ve documented a 300Gbps attack</a> generated with an estimated 27Gbps of spoofing capacity.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"popular-reflections\">Popular reflections</h2>\n      <a href=\"#popular-reflections\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>During the last six months our DDoS mitigation system &quot;Gatebot&quot; detected 6,329 simple reflection attacks (that&#39;s one every 40 minutes). Here is the list by popularity of different attack vectors. An attack is defined as a large flood of packets identified by a tuple: (Protocol, Source Port, Target IP). Basically - a flood of packets with the same source port to a single target. This notation is pretty accurate - during normal Cloudflare operation, incoming packets rarely share a source port number!</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">  Count  Proto  Src port\n   3774   udp    123        NTP\n   1692   udp    1900       SSDP\n    438   udp    0          IP fragmentation\n    253   udp    53         DNS\n     42   udp    27015      SRCDS\n     20   udp    19         Chargen\n     19   udp    20800      Call Of Duty\n     16   udp    161        SNMP\n     12   udp    389        CLDAP\n     11   udp    111        Sunrpc\n     10   udp    137        Netbios\n      6   tcp    80         HTTP\n      5   udp    27005      SRCDS\n      2   udp    520        RIP</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h2 id=\"source-port-123-udp-ntp\">Source port 123/udp NTP</h2>\n      <a href=\"#source-port-123-udp-ntp\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>By far the most popular reflection attack vector remains NTP. We have blogged about NTP in the past:</p><ul><li><p><a href=\"/understanding-and-mitigating-ntp-based-ddos-attacks/\">Understanding and mitigating NTP-based DDoS attacks</a></p></li><li><p><a href=\"/technical-details-behind-a-400Gbps-ntp-amplification-ddos-attack/\">Technical Details Behind a 400Gbps NTP Amplification DDoS Attack</a></p></li><li><p><a href=\"/good-news-vulnerable-ntp-servers-closing-down/\">Good News: Vulnerable NTP Servers Closing Down</a></p></li></ul><p>Over the last six months we&#39;ve seen 3,374 unique NTP amplification attacks. Most of them were short. The average attack duration was 11 minutes, with the longest lasting 22 hours (1,300 minutes). Here&#39;s a histogram showing the distribution of NTP attack duration:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">Minutes min:1.00 avg:10.51 max:1297.00 dev:35.02 count:3774\nMinutes:\n value |-------------------------------------------------- count\n     0 |                                                   2\n     1 |                                                 * 53\n     2 |                         ************************* 942\n     4 |************************************************** 1848\n     8 |                                   *************** 580\n    16 |                                             ***** 221\n    32 |                                                 * 72\n    64 |                                                   35\n   128 |                                                   11\n   256 |                                                   7\n   512 |                                                   2\n  1024 |                                                   1</pre></code>\n            <p>Most of the attacks used a small number of reflectors - we&#39;ve recorded an average of 1.5k unique IPs per attack. The largest attack used an estimated 12.3k reflector servers.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">Unique IPs min:5.00 avg:1552.84 max:12338.00 dev:1416.03 count:3774\nUnique IPs:\n value |-------------------------------------------------- count\n    16 |                                                   0\n    32 |                                                   1\n    64 |                                                   8\n   128 |                                             ***** 111\n   256 |                         ************************* 553\n   512 | ************************************************* 1084\n  1024 |************************************************** 1093\n  2048 |                   ******************************* 685\n  4096 |                                        ********** 220\n  8192 |                                                   13</pre></code>\n            <p>The peak attack bandwidth was on average 5.76Gbps and max of 64Gbps:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">Peak bandwidth in Gbps min:0.06 avg:5.76 max:64.41 dev:6.39 count:3774\nPeak bandwidth in Gbps:\n value |-------------------------------------------------- count\n     0 |                                            ****** 187\n     1 |                             ********************* 603\n     2 |************************************************** 1388\n     4 |                     ***************************** 818\n     8 |                                ****************** 526\n    16 |                                           ******* 212\n    32 |                                                 * 39\n    64 |                                                   1</pre></code>\n            <p>This stacked chart shows the geographical distribution of the largest NTP attack we&#39;ve seen in the last six months. You can see the packets per second number directed to each datacenter. One our datacenters (San Jose to be precise) received about a third of the total attack volume, while the remaining packets were distributed roughly evenly across other datacenters.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/ZfOEawZjCimyFTOrVawyI/253b1a0b851aa23e0c276f2d184b21cd/ntp-3164b6fac836774c.png\" alt=\"\" class=\"kg-image\" width=\"800\" height=\"257\" loading=\"lazy\"/>\n            \n            </figure><p>The attack lasted 20 minutes, used 527 reflector NTP servers and generated about 20Mpps / 64Gbps at peak.</p><p>Dividing these numbers we can estimate that a single packet in that attack had on average size of 400 bytes. In fact, in NTP attacks the great majority of packets have a length of precisely 468 bytes (less often 516). Here&#39;s a snippet from tcpdump:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ tcpdump -n -r 3164b6fac836774c.pcap -v -c 5 -K\n11:38:06.075262 IP -(tos 0x20, ttl 60, id 0, offset 0, proto UDP (17), length 468)\n    216.152.174.70.123 &gt; x.x.x.x.47787:  [|ntp]\n11:38:06.077141 IP -(tos 0x0, ttl 56, id 0, offset 0, proto UDP (17), length 468)\n    190.151.163.1.123 &gt; x.x.x.x.44540:  [|ntp]\n11:38:06.082631 IP -(tos 0xc0, ttl 60, id 0, offset 0, proto UDP (17), length 468)\n    69.57.241.60.123 &gt; x.x.x.x.47787:  [|ntp]\n11:38:06.095971 IP -(tos 0x0, ttl 60, id 0, offset 0, proto UDP (17), length 468)\n    126.219.94.77.123 &gt; x.x.x.x.21784:  [|ntp]\n11:38:06.113935 IP -(tos 0x0, ttl 59, id 0, offset 0, proto UDP (17), length 516)\n    69.57.241.60.123 &gt; x.x.x.x.9285:  [|ntp]</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h2 id=\"source-port-1900-udp-ssdp\">Source port 1900/udp SSDP</h2>\n      <a href=\"#source-port-1900-udp-ssdp\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>The second most popular reflection attack was <a href=\"https://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol\">SSDP</a>, with a count of 1,692 unique events. These attacks were using much larger fleets of reflector servers. On average we&#39;ve seen around 100k reflectors used in each attack, with the largest attack using 1.23M reflector IPs. Here&#39;s the histogram of number of unique IPs used <a href=\"https://www.us-cert.gov/ncas/alerts/TA14-017A\">in SSDP attacks</a>:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">Unique IPs min:15.00 avg:98272.02 max:1234617.00 dev:162699.90 count:1691\nUnique IPs:\n   value |-------------------------------------------------- count\n     256 |                                                   0\n     512 |                                                   4\n    1024 |                                  **************** 98\n    2048 |                          ************************ 152\n    4096 |                     ***************************** 178\n    8192 |                         ************************* 158\n   16384 |                      **************************** 176\n   32768 |           *************************************** 243\n   65536 |************************************************** 306\n  131072 |              ************************************ 225\n  262144 |                                   *************** 95\n  524288 |                                           ******* 47\n 1048576 |                                                 * 7</pre></code>\n            <p>The attacks were also longer, with 24 minutes average duration:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ cat 1900-minutes| ~/bin/mmhistogram -t &quot;Minutes&quot;\nMinutes min:2.00 avg:23.69 max:1139.00 dev:57.65 count:1692\nMinutes:\n value |-------------------------------------------------- count\n     0 |                                                   0\n     1 |                                                   10\n     2 |                                 ***************** 188\n     4 |                  ******************************** 354\n     8 |************************************************** 544\n    16 |                   ******************************* 342\n    32 |                                   *************** 168\n    64 |                                              **** 48\n   128 |                                                 * 19\n   256 |                                                 * 16\n   512 |                                                   1\n  1024 |                                                   2</pre></code>\n            <p>Interestingly the bandwidth doesn&#39;t follow a <a href=\"https://en.wikipedia.org/wiki/Normal_distribution\">normal distribution</a>. The average SSDP attack was 12Gbps and the largest just shy of 80Gbps:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ cat 1900-Gbps| ~/bin/mmhistogram -t &quot;Bandwidth in Gbps&quot;\nBandwidth in Gbps min:0.41 avg:11.95 max:78.03 dev:13.32 count:1692\nBandwidth in Gbps:\n value |-------------------------------------------------- count\n     0 |                   ******************************* 331\n     1 |                             ********************* 232\n     2 |                            ********************** 235\n     4 |                                   *************** 165\n     8 |                                            ****** 65\n    16 |************************************************** 533\n    32 |                                       *********** 118\n    64 |                                                 * 13</pre></code>\n            <p>Let&#39;s take a closer look at the largest (80Gbps) attack we&#39;ve recorded. Here&#39;s a stacked chart showing packets per second going to each datacenter. This attack was using 940k reflector IPs, generated 30Mpps. The datacenters receiving the largest proportion of the traffic were San Jose, Los Angeles and Moscow.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1Tn5lGP6EmQYqB6gwESNST/63ec0dc0e40e0b5521f8523de6dd5670/ssdp-4ca985a2211f8c88.png\" alt=\"\" class=\"kg-image\" width=\"800\" height=\"262\" loading=\"lazy\"/>\n            \n            </figure><p>The average packet size was 300 bytes. Here&#39;s how the attack looked on the wire:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ tcpdump -n -r 4ca985a2211f8c88.pcap -K -c 7\n10:24:34.030339 IP - 219.121.108.27.1900 &gt; x.x.x.x.25255: UDP, length 301\n10:24:34.406943 IP - 208.102.119.37.1900 &gt; x.x.x.x.37081: UDP, length 331\n10:24:34.454707 IP - 82.190.96.126.1900 &gt; x.x.x.x.25255: UDP, length 299\n10:24:34.460455 IP - 77.49.122.27.1900 &gt; x.x.x.x.25255: UDP, length 289\n10:24:34.491559 IP - 212.171.247.139.1900 &gt; x.x.x.x.25255: UDP, length 323\n10:24:34.494385 IP - 111.1.86.109.1900 &gt; x.x.x.x.37081: UDP, length 320\n10:24:34.495474 IP - 112.2.47.110.1900 &gt; x.x.x.x.37081: UDP, length 288</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h2 id=\"source-port-0-udp-ip-fragmentation\">Source port 0/udp IP fragmentation</h2>\n      <a href=\"#source-port-0-udp-ip-fragmentation\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Sometimes we see reflection attacks showing UDP source and destination port numbers set to zero. This is usually a side effect of attacks where the reflecting servers responded with large fragmented packets. Only the first IP fragment contains a UDP header, preventing subsequent fragments from being reported properly. From a router point of view this looks like a UDP packet without UDP header. A confused router reports a packet from source port 0, going to port 0!</p><p>This is a tcpdump-like view:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ tcpdump -n -r 4651d0ec9e6fdc8e.pcap -c 8\n02:05:03.408800 IP - 190.88.35.82.0 &gt; x.x.x.x.0: UDP, length 1167\n02:05:03.522186 IP - 95.111.126.202.0 &gt; x.x.x.x.0: UDP, length 1448\n02:05:03.525476 IP - 78.90.250.3.0 &gt; x.x.x.x.0: UDP, length 839\n02:05:03.550516 IP - 203.247.133.133.0 &gt; x.x.x.x.0: UDP, length 1472\n02:05:03.571970 IP - 54.158.14.127.0 &gt; x.x.x.x.0: UDP, length 1328\n02:05:03.734834 IP - 1.21.56.71.0 &gt; x.x.x.x.0: UDP, length 1250\n02:05:03.745220 IP - 195.4.131.174.0 &gt; x.x.x.x.0: UDP, length 1472\n02:05:03.766862 IP - 157.7.137.101.0 &gt; x.x.x.x.0: UDP, length 1122</pre></code>\n            <p>An avid reader will notice - the source IPs above are open DNS resolvers! Indeed, from our experience most of the attacks categorized as fragmentation are actually a side effect of DNS amplifications.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"source-port-53-udp-dns\">Source port 53/udp DNS</h2>\n      <a href=\"#source-port-53-udp-dns\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Over the last six months we&#39;ve seen 253 DNS amplifications. On average an attack used 7100 DNS reflector servers and lasted 24 minutes. Average bandwidth was around 3.4Gbps with largest attack using 12Gbps.</p><p>This is a simplification though. As mentioned above multiple DNS attacks were registered by our systems as two distinct vectors. One was categorized as source port 53, and another as source port 0. This happened when the DNS server flooded us with DNS responses larger than max packet size, usually about 1,460 bytes. It&#39;s easy to see if that was the case by inspecting the DNS attack packet lengths. Here&#39;s an example:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">DNS attack packet lengths min:44.00 avg:1458.94 max:1500.00 dev:208.14 count:40000\nDNS attack packet lengths:\n value |-------------------------------------------------- count\n     8 |                                                   0\n    16 |                                                   0\n    32 |                                                   129\n    64 |                                                   479\n   128 |                                                   84\n   256 |                                                   164\n   512 |                                                   268\n  1024 |************************************************** 38876</pre></code>\n            <p>The great majority of the received DNS packets were indeed close to the max packet size. This suggests the DNS responses were large and were split into multiple fragmented packets. Let&#39;s see the packet size distribution for accompanying source port 0 attack:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ tcpdump -n -r 4651d0ec9e6fdc8e.pcap \\\n    | grep length \\\n    | sed -s &#039;s#.*length \\([0-9]\\+\\).*#\\1#g&#039; \\\n    | ~/bin/mmhistogram -t &quot;Port 0 packet length&quot; -l -b 100\nPort 0 packet length min:0.00 avg:1264.81 max:1472.00 dev:228.08 count:40000\nPort 0 packet length:\n value |-------------------------------------------------- count\n     0 |                                                   348\n   100 |                                                   7\n   200 |                                                   17\n   300 |                                                   11\n   400 |                                                   17\n   500 |                                                   56\n   600 |                                                   3\n   700 |                                                ** 919\n   800 |                                                 * 520\n   900 |                                                 * 400\n  1000 |                                          ******** 3083\n  1100 |              ************************************ 12986\n  1200 |                                             ***** 1791\n  1300 |                                             ***** 2057\n  1400 |************************************************** 17785</pre></code>\n            <p>About half of the fragments were large, close to the max packet length in size, and rest were just shy of 1,200 bytes. This makes sense: a typical max DNS response is capped at 4,096 bytes. 4,096 bytes would be seen on the wire as one DNS packet fragment with an IP header, one max length packet fragment and one fragment of around 1,100 bytes:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">4,096 = 1,460+1,460+1,060</pre></code>\n            <p>For the record, the particular attack illustrated here used about 17k reflector server IPs, lasted 64 minutes, generated about 6Gbps on the source port 53 strand and 11Gbps of source port 0 fragments.</p><p>We have blogged about DNS reflection attacks in the past:</p><ul><li><p><a href=\"/65Gbps-ddos-no-problem/\">How to Launch a 65Gbps DDoS, and How to Stop One</a></p></li><li><p><a href=\"/deep-inside-a-dns-amplification-ddos-attack/\">Deep Inside a DNS Amplification DDoS Attack</a></p></li><li><p><a href=\"/how-the-consumer-product-safety-commission-is-inadvertently-behind-the-internets-largest-ddos-attacks/\">How the Consumer Product Safety Commission is (Inadvertently) Behind the Internet’s Largest DDoS Attacks</a></p></li></ul>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"other-protocols\">Other protocols</h2>\n      <a href=\"#other-protocols\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We&#39;ve seen amplification using other protocols such as:</p><ul><li><p>port 19 - Chargen</p></li><li><p>port 27015 - SRCDS</p></li><li><p>port 20800 - Call Of Duty</p></li></ul><p>...and many other obscure protocols. These attacks were usually small and not notable. We didn&#39;t see enough of then to provide meaningful statistics but the attacks were automatically mitigated.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"poor-observability\">Poor observability</h2>\n      <a href=\"#poor-observability\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Unfortunately we&#39;re not able to report on the contents of the attack traffic. This is notable for the NTP and DNS amplifications - without case by case investigations we can&#39;t report what responses were actually being delivered to us.</p><p>This is because all these attacks stopped at the network layer. Routers are heavily optimized to perform packet forwarding and have a limited capacity of extracting raw packets. Basically there is no &quot;tcpdump&quot; there.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4OT709HCNnicRfaMIXxaRV/e23cda7421fa2a893538aec40433c70d/Untitled-2.001bbb.png\" alt=\"\" class=\"kg-image\" width=\"640\" height=\"292\" loading=\"lazy\"/>\n            \n            </figure><p>We track these attacks with netflow, and we observe them hit our routers firewall. The tcpdump snippets shown above were actually fake, reconstructed artificially from netflow data.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"trivial-to-mitigate\">Trivial to mitigate</h2>\n      <a href=\"#trivial-to-mitigate\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>With properly configured firewall and sufficient network capacity (which isn&#39;t always easy to come by unless you are the size of Cloudflare) it&#39;s trivial to block the reflection attacks. But note that we&#39;ve seen reflection attacks up to 80Gbps so you do need sufficient capacity.</p><p>Properly configuring a firewall is not rocket science: default DROP can get you quite far. In other cases you might want to configure rate limiting rules. This is a snippet from our JunOS config:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">term RATELIMIT-SSDP-UPNP {\n    from {\n        destination-prefix-list {\n            ANYCAST;\n        }\n        next-header udp;\n        source-port 1900;\n    }\n    then {\n        policer SA-POLICER;\n        count ACCEPT-SSDP-UPNP;\n        next term;\n    }\n}</pre></code>\n            <p>But properly configuring firewall requires some Internet hygiene. You should avoid using the same IP for inbound and outbound traffic. For example, filtering a potential NTP DDoS will be harder if you can&#39;t just block inbound port 123 indiscriminately. If your server requires NTP, make sure it exits to the Internet over non-server IP address!</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"capacity-game\">Capacity game</h2>\n      <a href=\"#capacity-game\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>While having sufficient network capacity is necessary, you don&#39;t need to be a Tier 1 to survive amplification DDoS. The median attack size we&#39;ve received was just 3.35Gbps, average 7Gbps, Only 195 attacks out of 6,353 attacks recorded - 3% - were larger than 30Gbps.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">All attacks in Gbps: min:0.04 avg:7.07 med:3.35 max:78.03 dev:9.06 count:6329\nAll attacks in Gbps:\n value |-------------------------------------------------- count\n     0 |                                  **************** 658\n     1 |                         ************************* 1012\n     2 |************************************************** 1947\n     4 |                    ****************************** 1176\n     8 |                                  **************** 641\n    16 |                               ******************* 748\n    32 |                                              **** 157\n    64 |                                                   14</pre></code>\n            <p>But not all Cloudflare datacenters have equal sized network connections to the Internet. So how can we manage?</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4zPhFBCkn2Dmw14rD2TUhe/3210e6a859c0deb8c098cb197d5627f1/Untitled-2.001-1.png\" alt=\"\" class=\"kg-image\" width=\"640\" height=\"376\" loading=\"lazy\"/>\n            \n            </figure><p>Cloudflare <a href=\"/how-cloudflares-architecture-allows-us-to-scale-to-stop-the-largest-attacks/\">was architected to withstand large attacks</a>. We are able to spread the traffic on two layers:</p><ul><li><p>Our <a href=\"/a-brief-anycast-primer/\">public network</a> uses <a href=\"https://en.wikipedia.org/wiki/Anycast\">Anycast</a>. For certain attack types - like amplification - this allows us <a href=\"/cloudflares-architecture-eliminating-single-p/\">to split the attack</a> across multiple datacenters avoiding a single choke point.</p></li><li><p>Additionally we use <a href=\"/path-mtu-discovery-in-practice/\">ECMP</a> internally to spread a traffic destined to single IP address across multiple physical servers.</p></li></ul><p>In the examples above, I showed a couple of amplification attacks getting nicely distributed across dozens of datacenters across the globe. In the shown attacks, if our router firewall failed, our physical servers wouldn&#39;t receive more than 500kpps of attack data. A well tuned <code>iptables</code> firewall should be able to cope with such a volume without <a href=\"/kernel-bypass/\">a special kernel offload</a> help.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"inter-as-flowspec-for-the-rest\">Inter-AS Flowspec for the rest</h2>\n      <a href=\"#inter-as-flowspec-for-the-rest\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Withstanding reflection attacks requires sufficient network capacity. Internet citizens not having fat network cables should use a good Internet Service Provider supporting <a href=\"https://tools.ietf.org/html/rfc5575\">flowspec</a>.</p><p>Flowspec can be thought of as a protocol enabling firewall rules to be transmitted over a BGP session. In theory flowspec allows BGP routers on <a href=\"https://conference.apnic.net/data/41/apricot-ddos-mitigation-using-flowspec_1456208439.pdf\">different Autonomous Systems</a> to share firewall rules. The rule can be set up on the attacked router and distributed to the ISP network with the BGP magic. This will stop the packets closer to the source and effectively relieve network congestion.</p><p>Unfortunately, due to performance and security concerns only a handful of large ISP&#39;s allow inter-AS flowspec rules. Still - it&#39;s worth a try. Check if your ISP is willing to accept flowspec from your BGP router!</p><p>At Cloudflare we maintain an intra-AS flowspec infrastructure, <a href=\"/todays-outage-post-mortem-82515/\">and we have plenty of war stories</a> about it.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"summary\">Summary</h2>\n      <a href=\"#summary\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>In this blog post we&#39;ve given details of three popular reflection attack vectors: NTP, SSDP and DNS. We discussed how the Cloudflare Anycast network helps us avoid a single choke point. In most cases dealing with reflection attacks is not rocket science though sufficient network capacity is needed and simple firewall rules are usually enough to cope.</p><p>The types of DDoS attacks we see from other vectors (such as IoT botnets) are another matter. They tend to be much larger and require specialized, automatic DDoS mitigation. And, of course, there are many DDoS attacks that occur using techniques other than reflection and not just using UDP.</p><p>Whether you face DDoS attacks of 10Gbps+, 100Gbps+ or 1Tbps+, Cloudflare can mitigate them.</p>",
		"id": "1LH3eGdT62cTZrxs2SaXW6",
		"localeList": {
			"name": "Reflections on reflection (attacks) Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2017-05-24T19:16:39.000+01:00",
		"slug": "reflections-on-reflections",
		"tags": [
			{
				"id": "5kIxDMJCg3PXQxVINDL0Cw",
				"name": "Attacks",
				"slug": "attacks"
			},
			{
				"id": "64g1G2mvZyb6PjJsisO09T",
				"name": "DDoS",
				"slug": "ddos"
			},
			{
				"id": "6QVJOBzgKXUO9xAPEpqxvK",
				"name": "Reliability",
				"slug": "reliability"
			},
			{
				"id": "6Mp7ouACN2rT3YjL1xaXJx",
				"name": "Security",
				"slug": "security"
			}
		],
		"title": "Reflections on reflection (attacks)",
		"updated_at": "2025-10-24T10:51:15.008Z",
		"url": "https://blog.cloudflare.com/reflections-on-reflections"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}