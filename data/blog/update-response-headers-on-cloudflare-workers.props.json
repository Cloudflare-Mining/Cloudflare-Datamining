{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "2",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Guest Author",
				"slug": "guest-author",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/YJzTr2p8aLvtEX5J7CysP/dd56b510670ea7bd78c3b19cc5b3bcd7/guest-author.png",
				"location": null,
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Getting lots of traffic? Planning to add more servers? You’ll need load balancing to maintain the reliability of your site. Cloudflare offers powerful Load Balancing, but there are situations where some options can’t satisfy your specific needs. For those situations, you can write your own Worker.",
		"feature_image": "https:undefined",
		"featured": false,
		"html": "<p><i>The following is a guest post by </i><a href=\"https://www.linkedin.com/in/jayaprabhakar/\"><i>Jayaprabhakar Kadarkarai</i></a><i>, Developer of </i><a href=\"https://www.codiva.io/\"><i>Codiva.io</i></a><i>, an Online IDE used by computer science students across the world. He works full stack to deliver low latency and scalable web applications.</i></p><p>Have you launched your website? Getting a lot of traffic? And you are planning to add more servers? You’ll need load balancing to maintain the scalability and reliability of your website. Cloudflare offers powerful <a href=\"https://www.cloudflare.com/load-balancing/\">Load Balancing</a>, but there are situations where off-the-shelf options can’t satisfy your specific needs. For those situations, you can write your own Cloudflare Worker.</p><p>In this post, we’ll learn about load balancers and how to set them up at a low cost with Cloudflare Service Workers.</p><p>This post assumes you have a basic understanding of JavaScript, as that’s the language used to write a Cloudflare Worker.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"the-basic-pattern\">The Basic Pattern</h3>\n      <a href=\"#the-basic-pattern\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>The basic pattern starts with adding ‘fetch’ event listener to intercept the requests. You can configure which requests to intercept on the Cloudflare dashboard or using the <a href=\"https://developers.cloudflare.com/workers/api/#create-a-route\">Cloudflare API</a>.</p><p>Then, modify the hostname of the URL and send the request to the new host.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">addEventListener(&#039;fetch&#039;, event =&gt; {\n  var url = new URL(event.request.url);\n\n  // https://example.com/path/ to https://myorigin.example.com/path\n  url.hostname = &#039;myorigin.&#039; + url.hostname\n  \n  event.respondWith(fetch(url));\n});</pre></code>\n            <p>This doesn’t do anything useful yet, but this is the basic pattern that will be used in the rest of the examples.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"load-balancer-with-random-routing\">Load Balancer with Random Routing</h3>\n      <a href=\"#load-balancer-with-random-routing\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>When you have a list of origin servers, pick a random host to route to.</p><p>This is a very basic load balancing technique to evenly distribute the traffic across all origin servers.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">var hostnames = [\n  &quot;0.example.com&quot;,\n  &quot;1.example.com&quot;,\n  &quot;2.example.com&quot;\n];\n\naddEventListener(&#039;fetch&#039;, event =&gt; {\n  var url = new URL(event.request.url);\n\n  // Randomly pick the next host \n  url.hostname = hostnames[getRandomInt(hostnames.length)];\n  \n  event.respondWith(fetch(url));\n});\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h3 id=\"load-balancer-with-fallback\">Load Balancer with Fallback</h3>\n      <a href=\"#load-balancer-with-fallback\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>What about when a host is down? A simple fallback strategy is to route the request to a different host. Use this only if you know the requests are idempotent. In general, this means GET requests are okay, but you might wish to handle POST requests another way.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">addEventListener(&#039;fetch&#039;, event =&gt; {\n\n  // Randomly pick the primary host\n  var primary = getRandomInt(hostnames.length);\n\n  var primaryUrl = new URL(event.request.url);\n  primaryUrl.hostname = hostnames[primary];\n\n  var timeoutId = setTimeout(function() {\n    var backup;\n    do {\n        // Naive solution to pick a backup host\n        backup = getRandomInt(hostnames.length);\n    } while(backup === primary);\n\n    var backupUrl = new URL(event.request.url);\n    backupUrl.hostname = hostnames[backup];\n\n    event.respondWith(fetch(backupUrl));\n  }, 2000 /* 2 seconds */);\n\n  fetch(primaryUrl)\n    .then(function(response) {\n        clearTimeout(timeoutId);\n        event.respondWith(response);\n    });\n});</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h3 id=\"geographic-routing\">Geographic Routing</h3>\n      <a href=\"#geographic-routing\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Cloudflare adds <a href=\"https://support.cloudflare.com/hc/en-us/articles/200168236-What-does-Cloudflare-IP-Geolocation-do-\">CF-IPCountry</a> header to all requests once Cloudflare IP Geolocation is enabled.</p><p>You can access it using:</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">var countryCode = event.request.headers.get(‘CF-IPCountry’);</pre></code>\n            <p>We can use the countryCode to route requests from different locations to different servers in different regions.</p><p>For example, 80% of the traffic to Codiva.io is from the US and India. So, I have servers in two different regions (Oregon, USA; and Mumbai, India). Requests from India and  other countries near it are routed to servers in India. All other requests are routed to the US data center.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">const US_HOST = &quot;us.example.com&quot;\nconst IN_HOST = &quot;in.example.com&quot;\n\nvar COUNTRIES_MAP = {\n  IN: IN_HOST,\n  PK: IN_HOST,\n  BD: IN_HOST,\n  SL: IN_HOST,\n  NL: IN_HOST\n}\naddEventListener(&#039;fetch&#039;, event =&gt; {\n  var url = new URL(event.request.url);\n\n  var countryCode = event.request.headers.get(&#039;CF-IPCountry&#039;);\n  if (COUNTRIES_MAP[countryCode]) {\n    url.hostname = COUNTRIES_MAP[countryCode];\n  } else {\n    url.hostname = US_HOST;\n  }\n  \n  event.respondWith(fetch(url));\n});</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h3 id=\"putting-it-all-together\">Putting it all together</h3>\n      <a href=\"#putting-it-all-together\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Now, let us combine the geographic routing, random load balancing and fallback into a single worker:</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">const US_HOSTS = [\n  &quot;0.us.example.com&quot;,\n  &quot;1.us.example.com&quot;,\n  &quot;2.us.example.com&quot;\n];\n\nconst IN_HOSTS = [\n  &quot;0.in.example.com&quot;,\n  &quot;1.in.example.com&quot;,\n  &quot;2.in.example.com&quot;\n];\n\nvar COUNTRIES_MAP = {\n  IN: IN_HOSTS,\n  PK: IN_HOSTS,\n  BD: IN_HOSTS,\n  SL: IN_HOSTS,\n  NL: IN_HOSTS\n}\naddEventListener(&#039;fetch&#039;, event =&gt; {\n  var url = new URL(event.request.url);\n\n  var countryCode = event.request.headers.get(&#039;CF-IPCountry&#039;);\n  var hostnames = US_HOSTS;\n  if (COUNTRIES_MAP[countryCode]) {\n    hostnames = COUNTRIES_MAP[countryCode];\n  }\n  // Randomly pick the next host \n  var primary = hostnames[getRandomInt(hostnames.length)];\n\n  var primaryUrl = new URL(event.request.url);\n  primaryUrl.hostname = hostnames[primary];\n\n  // Fallback if there is no response within timeout\n  var timeoutId = setTimeout(function() {\n    var backup;\n    do {\n        // Naive solution to pick a backup host\n        backup = getRandomInt(hostnames.length);\n    } while(backup === primary);\n\n    var backupUrl = new URL(event.request.url);\n    backupUrl.hostname = hostnames[backup];\n\n    event.respondWith(fetch(backupUrl));\n  }, 2000 /* 2 seconds */);\n\n  fetch(primaryUrl)\n    .then(function(response) {\n        clearTimeout(timeoutId);\n        event.respondWith(response);\n    });  \n});\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h3 id=\"recap\">Recap</h3>\n      <a href=\"#recap\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>In this article, you saw the power of Cloudflare workers and how simple it is to use it. Before implementing custom load balancer with workers, take a look at <a href=\"https://www.cloudflare.com/load-balancing/\">Cloudflare’s load balancer</a>.</p><p>For more examples, take a look at the <a href=\"https://developers.cloudflare.com/workers/recipes/\">recipes</a> on the developer docs page.</p>",
		"id": "3HShWRMhva3SLltL715amN",
		"localeList": {
			"name": "Custom Load Balancing With Cloudflare Workers Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2018-10-03T08:59:00.000+01:00",
		"slug": "update-response-headers-on-cloudflare-workers",
		"tags": [
			{
				"id": "6hbkItfupogJP3aRDAq6v8",
				"name": "Cloudflare Workers",
				"slug": "workers"
			},
			{
				"id": "5cye1Bh5KxFh3pKSnX8Dsy",
				"name": "Serverless",
				"slug": "serverless"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			},
			{
				"id": "78aSAeMjGNmCuetQ7B4OgU",
				"name": "JavaScript",
				"slug": "javascript"
			},
			{
				"id": "3JAY3z7p7An94s6ScuSQPf",
				"name": "Developer Platform",
				"slug": "developer-platform"
			}
		],
		"title": "Custom Load Balancing With Cloudflare Workers",
		"updated_at": "2024-10-10T00:32:50.751Z",
		"url": "https://blog.cloudflare.com/update-response-headers-on-cloudflare-workers"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}