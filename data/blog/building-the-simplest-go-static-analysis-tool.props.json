{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "2",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Filippo Valsorda",
				"slug": "filippo",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/46wTy3eKIkbnXRmuf2gsIt/3b2b4a5afc370ab87b3a189c0424f75c/filippo.jpg",
				"location": null,
				"website": null,
				"twitter": "@filosottile",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Go native vendoring (a.k.a. GO15VENDOREXPERIMENT) allows you to freeze dependencies by putting them in a vendor folder in your project. The compiler will then look there before searching the GOPATH.",
		"feature_image": "https:undefined",
		"featured": false,
		"html": "<p><a href=\"https://docs.google.com/document/d/1Bz5-UB7g2uPBdOx-rw5t9MxJwkfpx90cqG9AFL0JAYo/edit\">Go native vendoring</a> (a.k.a. GO15VENDOREXPERIMENT) allows you to freeze dependencies by putting them in a <code>vendor</code> folder in your project. The compiler will then look there before searching the GOPATH.</p><p>The only annoyance compared to using a per-project GOPATH, which is what we used to do, is that you might forget to vendor a package that you have in your GOPATH. The program will build for you, but it won&#39;t for anyone else. Back to the <a href=\"https://www.urbandictionary.com/define.php?term=wfm\">WFM</a> times!</p><p>I decided I wanted something, a tool, to check that all my (non-stdlib) dependencies were vendored.</p><p>At first I thought of using <a href=\"https://golang.org/cmd/go/#hdr-List_packages\"><code>go list</code></a>, which Dave Cheney appropriately called a <a href=\"http://dave.cheney.net/2014/09/14/go-list-your-swiss-army-knife\">swiss army knife</a>, but while it can show the entire recursive dependency tree (format <code>.Deps</code>), there&#39;s no way to know from the templating engine if a dependency is in the standard library.</p><p>We could just pass each output back into <code>go list</code> to check for <code>.Standard</code>, but I thought this would be a good occasion to build a very simple static analysis tool. Go&#39;s simplicity and libraries make it a very easy task, as you will see.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"first-loading-the-program\">First, loading the program</h3>\n      <a href=\"#first-loading-the-program\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We use <a href=\"https://godoc.org/golang.org/x/tools/go/loader\"><code>golang.org/x/tools/go/loader</code></a> to load the packages passed as arguments on the command line, including the test files based on a flag.</p>\n            <pre class=\"language-go\"><code class=\"language-go\">var conf loader.Config\nfor _, p := range flag.Args() {\n    if *tests {\n        conf.ImportWithTests(p)\n    } else {\n        conf.Import(p)\n    }\n}\nprog, err := conf.Load()\nif err != nil {\n    log.Fatal(err)\n}\nfor p := range prog.AllPackages {\n    fmt.Println(p.Path())\n}</pre></code>\n            <p>With these few lines we already replicated <code>go list -f {{ .Deps }}</code>!</p><p>The only missing loading feature here is wildcard (<code>./...</code>) support. That code <a href=\"https://github.com/golang/go/blob/87bca88c703c1f14fe8473dc2f07dc521cf2b989/src/cmd/go/main.go#L365\">is in the go tool source</a> and it&#39;s unexported. There&#39;s an <a href=\"https://github.com/golang/go/issues/8768\">issue</a> about exposing it, but for now packages <a href=\"https://github.com/golang/lint/blob/58f662d2fc0598c6c36a92ae29af1caa6ec89d7a/golint/import.go\">are just copy-pasting it</a>. We&#39;ll use a packaged version of that code, <a href=\"https://github.com/kisielk/gotool\"><code>github.com/kisielk/gotool</code></a>:</p>\n            <pre class=\"language-go\"><code class=\"language-go\">for _, p := range gotool.ImportPaths(flag.Args()) {</pre></code>\n            <p>Finally, since we are only interested in the dependency tree today we instruct the parser to only go as far as the imports statements and we ignore the resulting &quot;not used&quot; errors:</p>\n            <pre class=\"language-go\"><code class=\"language-go\">conf.ParserMode = parser.ImportsOnly\nconf.AllowErrors = true\nconf.TypeChecker.Error = func(error) {}</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h3 id=\"then-the-actual-logic\">Then, the actual logic</h3>\n      <a href=\"#then-the-actual-logic\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We now have a <code>loader.Program</code> object, which holds references to various <code>loader.PackageInfo</code> objects, which in turn are a combination of package, AST and types information. All you need to perform any kind of complex analysis. Not that we are going to do that today :)</p><p>We&#39;ll just replicate <a href=\"https://github.com/golang/go/blob/87bca88c703c1f14fe8473dc2f07dc521cf2b989/src/cmd/go/pkg.go#L183-L194\">the <code>go list</code> logic to recognize stdlib packages</a> and remove the packages passed on the command line from the list:</p>\n            <pre class=\"language-go\"><code class=\"language-go\">initial := make(map[*loader.PackageInfo]bool)\nfor _, pi := range prog.InitialPackages() {\n    initial[pi] = true\n}\n\nvar packages []*loader.PackageInfo\nfor _, pi := range prog.AllPackages {\n    if initial[pi] {\n        continue\n    }\n    if len(pi.Files) == 0 {\n        continue // virtual stdlib package\n    }\n    filename := prog.Fset.File(pi.Files[0].Pos()).Name()\n    if !strings.HasPrefix(filename, build.Default.GOROOT) ||\n        !isStandardImportPath(pi.Pkg.Path()) {\n        packages = append(packages, pi)\n    }\n}</pre></code>\n            <p>Then we just have to print a warning if any remaining package is not in a <code>/vendor/</code> folder:</p>\n            <pre class=\"language-go\"><code class=\"language-go\">for _, pi := range packages {\n    if strings.Index(pi.Pkg.Path(), &quot;/vendor/&quot;) == -1 {\n        fmt.Println(&quot;[!] dependency not vendored:&quot;, pi.Pkg.Path())\n    }\n}</pre></code>\n            <p>Done! You can find the tool here: <a href=\"https://github.com/FiloSottile/vendorcheck\">https://github.com/FiloSottile/vendorcheck</a></p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"further-reading\">Further reading</h3>\n      <a href=\"#further-reading\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p><a href=\"https://github.com/golang/example/tree/master/gotypes#gotypes-the-go-type-checker\">This document</a> maintained by Alan Donovan will tell you more than I&#39;ll ever know about the static analysis tooling.</p><p>Note that you might be tempted to use <code>go/importer</code> and <code>types.Importer[From]</code> instead of <code>x/go/loader</code>. Don&#39;t do that. That doesn&#39;t load the source but reads compiled <code>.a</code> files, which <b>can be stale or missing</b>. Static analysis tools that spit out &quot;package not found&quot; for existing packages or, worse, incorrect results because of this are a pet peeve of mine.</p><p><i>If you now feel the urge to write static analysis tools, know that the CloudFlare Go team </i><a href=\"https://www.cloudflare.com/join-our-team/\"><i>is hiring in London, San Francisco and Singapore</i></a><i>!</i></p>",
		"id": "7f5NBXh02bwJ9WyQmBdtZK",
		"localeList": {
			"name": "Building the simplest Go static analysis tool Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "In this post we'll build together a very simple Go static analysis tool, vendorcheck. It will make sure that all our dependencies are vendored.",
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2016-04-27T16:01:15.000+01:00",
		"slug": "building-the-simplest-go-static-analysis-tool",
		"tags": [
			{
				"id": "1fCflWFtZIDnGI4cd3gRgx",
				"name": "Tools",
				"slug": "tools"
			},
			{
				"id": "KDI5hQcs301H8vxpGKXO0",
				"name": "Go",
				"slug": "go"
			},
			{
				"id": "6lhzEBz2B56RKa4nUEAGYJ",
				"name": "Programming",
				"slug": "programming"
			}
		],
		"title": "Building the simplest Go static analysis tool",
		"updated_at": "2024-10-09T23:07:42.584Z",
		"url": "https://blog.cloudflare.com/building-the-simplest-go-static-analysis-tool"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}