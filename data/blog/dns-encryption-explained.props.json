{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "11",
	"locale": "en-us",
	"localesAvailable": [
		"zh-cn",
		"fr-fr",
		"de-de",
		"ja-jp",
		"es-es"
	],
	"post": {
		"authors": [
			{
				"name": "Peter Wu",
				"slug": "peter-wu",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/98XTE1c5ayg8C6b7MuhKl/a1fbb6f184151d2fb2c05a163323bfed/peter-wu.jpg",
				"location": null,
				"website": "https://lekensteyn.nl/",
				"twitter": "@Lekensteyn",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "The Domain Name System (DNS) is the address book of the Internet. When you visit cloudflare.com or any other site, your browser will ask a DNS resolver for the IP address where the website can be found. Unfortunately, these DNS queries and answers are typically unprotected.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3f4bsYdRVqoij3XRFZpCTq/ded7a149d531335f2f36adbdc50b8e91/dns-encryption-explained.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6IOupV8pnzUywVdRQ9IHgO/9637d256926c000674db8c9a837c7d1f/DoT-DoH_2x.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"920\" loading=\"lazy\"/>\n            \n            </figure><p>The <a href=\"https://www.cloudflare.com/learning/dns/what-is-dns/\">Domain Name System (DNS)</a> is the address book of the Internet. When you visit cloudflare.com or any other site, your browser will ask a DNS resolver for the IP address where the website can be found. Unfortunately, these DNS queries and answers are typically unprotected. Encrypting DNS would improve user privacy and security. In this post, we will look at two mechanisms for encrypting DNS, known as <a href=\"https://www.cloudflare.com/learning/dns/dns-over-tls/\">DNS over TLS (DoT) and DNS over HTTPS (DoH)</a>, and explain how they work.</p><p>Applications that want to resolve a <a href=\"https://www.cloudflare.com/learning/dns/glossary/what-is-a-domain-name/\">domain name</a> to an IP address typically use DNS. This is usually not done explicitly by the programmer who wrote the application. Instead, the programmer writes something such as <code>fetch(&quot;https://example.com/news&quot;)</code> and expects a software library to handle the translation of “example.com” to an IP address.</p><p>Behind the scenes, the software library is responsible for discovering and connecting to the external <a href=\"https://www.cloudflare.com/learning/dns/what-is-recursive-dns/\">recursive DNS resolver</a> and speaking the DNS protocol (see the figure below) in order to resolve the name requested by the application. The choice of the external DNS resolver and whether any privacy and security is provided at all is outside the control of the application. It depends on the software library in use, and the policies provided by the operating system of the device that runs the software.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2YN2i6IydAzTY2KPg0mdVA/09f322be351b4a423b5f1edf3b7a7839/DNS-flow-diagram.png\" alt=\"\" class=\"kg-image\" width=\"1200\" height=\"555\" loading=\"lazy\"/>\n            \n            </figure><p>Overview of DNS query and response</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"the-external-dns-resolver\">The external DNS resolver</h2>\n      <a href=\"#the-external-dns-resolver\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>The operating system usually learns the resolver address from the local network using <a href=\"https://www.cloudflare.com/learning/dns/glossary/dynamic-dns/\">Dynamic Host Configuration Protocol (DHCP)</a>. In home and mobile networks, it typically ends up using the resolver from the Internet Service Provider (ISP). In corporate networks, the selected resolver is typically controlled by the network administrator. If desired, users with control over their devices can override the resolver with a specific address, such as the address of a public resolver like Google’s 8.8.8.8 or <a href=\"/dns-resolver-1-1-1-1/\">Cloudflare’s 1.1.1.1</a>, but most users will likely not bother changing it when connecting to a public Wi-Fi hotspot at a coffee shop or airport.</p><p>The choice of external resolver has a direct impact on the end-user experience. Most users do not change their resolver settings and will likely end up using the DNS resolver from their network provider. The most obvious observable property is the speed and accuracy of name resolution. Features that improve privacy or security might not be immediately visible, but will help to prevent others from profiling or interfering with your browsing activity. This is especially important on public Wi-Fi networks where anyone in physical proximity can capture and decrypt wireless network traffic.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"unencrypted-dns\">Unencrypted DNS</h2>\n      <a href=\"#unencrypted-dns\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Ever since DNS was created in 1987, it has been largely unencrypted. Everyone between your device and the resolver is able to snoop on or even modify your DNS queries and responses. This includes anyone in your local Wi-Fi network, your Internet Service Provider (ISP), and transit providers. This may affect your privacy by revealing the domain names that are you are visiting.</p><p>What can they see? Well, consider this network packet capture taken from a laptop connected to a home network:</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1d6w6OMSPn4jcLKyam6ArW/6c30de3175501fa4094e8da3c4965f03/dns-at-home-marked.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"1109\" loading=\"lazy\"/>\n            \n            </figure><p>The following observations can be made:</p><ul><li><p>The UDP source port is 53 which is the standard port number for unencrypted DNS. The UDP payload is therefore likely to be a DNS answer.</p></li><li><p>That suggests that the source IP address 192.168.2.254 is a DNS resolver while the destination IP 192.168.2.14 is the DNS client.</p></li><li><p>The UDP payload could indeed be parsed as a DNS answer, and reveals that the user was trying to visit twitter.com.</p></li><li><p>If there are any future connections to 104.244.42.129 or 104.244.42.1, then it is most likely traffic that is directed at “twitter.com”.</p></li><li><p>If there is some further encrypted HTTPS traffic to this IP, succeeded by more DNS queries, it could indicate that a web browser loaded additional resources from that page. That could potentially reveal the pages that a user was looking at while visiting twitter.com.</p></li></ul><p>Since the DNS messages are unprotected, other attacks are possible:</p><ul><li><p>Queries could be directed to a resolver that performs <a href=\"https://www.cloudflare.com/learning/security/global-dns-hijacking-threat/\">DNS hijacking</a>. For example, in the UK, Virgin Media and <a href=\"https://bt.custhelp.com/app/answers/detail/a_id/14244/c/402\">BT</a> return a fake response for domains that do not exist, redirecting users to a search page. This redirection is possible because the computer/phone blindly trusts the DNS resolver that was advertised using DHCP by the ISP-provided gateway router.</p></li><li><p>Firewalls can easily intercept, block or modify any unencrypted DNS traffic based on the port number alone. It is worth noting that plaintext inspection is not a silver bullet for achieving visibility goals, because the DNS resolver can be bypassed.</p></li></ul>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"encrypting-dns\">Encrypting DNS</h2>\n      <a href=\"#encrypting-dns\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Encrypting DNS makes it much harder for snoopers to look into your DNS messages, or to corrupt them in transit. Just as the web moved from unencrypted HTTP to encrypted HTTPS, there are now upgrades to the DNS protocol that encrypt DNS itself. Encrypting the web has made it possible for private and secure communications and commerce to flourish. Encrypting DNS will further enhance user privacy.</p><p>Two standardized mechanisms exist to secure the DNS transport between you and the resolver, <a href=\"https://tools.ietf.org/html/rfc7858\">DNS over TLS (2016)</a> and <a href=\"https://tools.ietf.org/html/rfc8484\">DNS Queries over HTTPS (2018)</a>. Both are based on <a href=\"https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/\">Transport Layer Security (TLS)</a> which is also used to secure communication between you and a website using HTTPS. In TLS, the server (be it a web server or DNS resolver) authenticates itself to the client (your device) using a certificate. This ensures that no other party can impersonate the server (the resolver).</p><p>With DNS over TLS (DoT), the original DNS message is directly embedded into the secure TLS channel. From the outside, one can neither learn the name that was being queried nor modify it. The intended client application will be able to decrypt TLS, it looks like this:</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/YaRbOJm8SaN6SZvy40b7t/6da8977ecb1e13b2695893583c5291aa/dns-over-tls13-marked.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"957\" loading=\"lazy\"/>\n            \n            </figure><p>In the packet trace for unencrypted DNS, it was clear that a DNS request can be sent directly by the client, followed by a DNS answer from the resolver. In the encrypted DoT case however, some <a href=\"https://www.cloudflare.com/learning/ssl/what-happens-in-a-tls-handshake/\">TLS handshake</a> messages are exchanged prior to sending encrypted DNS messages:</p><ul><li><p>The client sends a Client Hello, advertising its supported TLS capabilities.</p></li><li><p>The server responds with a Server Hello, agreeing on TLS parameters that will be used to secure the connection. The Certificate message contains the identity of the server while the Certificate Verify message will contain a digital signature which can be verified by the client using the server Certificate. The client typically checks this certificate against its local list of trusted Certificate Authorities, but the DoT specification mentions <a href=\"https://tools.ietf.org/html/rfc7858#section-3.2\">alternative trust mechanisms</a> such as public key pinning.</p></li><li><p>Once the TLS handshake is Finished by both the client and server, they can finally start exchanging encrypted messages.</p></li><li><p>While the above picture contains one DNS query and answer, in practice the secure TLS connection will remain open and will be reused for future DNS queries.</p></li></ul><p>Securing unencrypted protocols by slapping TLS on top of a new port has been done before:</p><ul><li><p>Web traffic: HTTP (tcp/80) -&gt; HTTPS (tcp/443)</p></li><li><p>Sending email: SMTP (tcp/25) -&gt; SMTPS (tcp/465)</p></li><li><p>Receiving email: IMAP (tcp/143) -&gt; IMAPS (tcp/993)</p></li><li><p>Now: DNS (tcp/53 or udp/53) -&gt; DoT (tcp/853)</p></li></ul><p>A problem with introducing a new port is that existing firewalls may block it. Either because they employ a allowlist approach where new services have to be explicitly enabled, or a blocklist approach where a network administrator explicitly blocks a service. If the secure option (DoT) is less likely to be available than its insecure option, then users and applications might be tempted to try to fall back to unencrypted DNS. This subsequently could allow attackers to force users to an insecure version.</p><p>Such fallback attacks are not theoretical. <a href=\"/performing-preventing-ssl-stripping-a-plain-english-primer/\">SSL stripping</a> has previously been used to downgrade HTTPS websites to HTTP, allowing attackers to steal passwords or hijack accounts.</p><p>Another approach, DNS Queries over HTTPS (DoH), was <a href=\"https://tools.ietf.org/html/rfc8484#section-1\">designed</a> to support two primary use cases:</p><ul><li><p>Prevent the above problem where on-path devices interfere with DNS. This includes the port blocking problem above.</p></li><li><p>Enable web applications to access DNS through existing browser APIs.DoH is essentially HTTPS, the same encrypted standard the web uses, and reuses the same port number (tcp/443). Web browsers have already <a href=\"https://blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/\">deprecated non-secure HTTP</a> in favor of HTTPS. That makes HTTPS a great choice for securely transporting DNS messages. An example of such a DoH request can be found <a href=\"https://tools.ietf.org/html/rfc8484#section-4.1.1\">here</a>.</p></li></ul>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5nHSbgeKy6xjxzhkGzotY8/564e677dd0b05247a47927fa40a6d8f1/DoH-flow-diagram.png\" alt=\"\" class=\"kg-image\" width=\"1200\" height=\"1066\" loading=\"lazy\"/>\n            \n            </figure><p>DoH: DNS query and response transported over a secure HTTPS stream</p><p>Some users have been concerned that the use of HTTPS could weaken privacy due to the potential use of cookies for tracking purposes. The DoH protocol designers <a href=\"https://tools.ietf.org/html/rfc8484#section-8\">considered</a> various privacy aspects and explicitly discouraged use of HTTP cookies to prevent tracking, a recommendation that is widely respected. TLS session resumption improves TLS 1.2 handshake performance, but can potentially be used to correlate TLS connections. Luckily, use of <a href=\"https://www.cloudflare.com/learning/ssl/why-use-tls-1.3/\">TLS 1.3</a> obviates the need for TLS session resumption by reducing the number of round trips by default, effectively addressing its associated privacy concern.</p><p>Using HTTPS means that HTTP protocol improvements can also benefit DoH. For example, the in-development <a href=\"/http3-the-past-present-and-future/\">HTTP/3 protocol</a>, built on top of <a href=\"/the-road-to-quic/\">QUIC</a>, could offer additional performance improvements in the presence of packet loss due to lack of head-of-line blocking. This means that multiple DNS queries could be sent simultaneously over the secure channel without blocking each other when one packet is lost.</p><p>A <a href=\"https://tools.ietf.org/html/draft-huitema-quic-dnsoquic\">draft</a> for DNS over QUIC (DNS/QUIC) also exists and is similar to DoT, but without the head-of-line blocking problem due to the use of QUIC. Both <a href=\"https://www.cloudflare.com/learning/performance/what-is-http3/\">HTTP/3</a> and DNS/QUIC, however, require a UDP port to be accessible. In theory, both could fall back to DoH over HTTP/2 and DoT respectively.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"deployment-of-dot-and-doh\">Deployment of DoT and DoH</h2>\n      <a href=\"#deployment-of-dot-and-doh\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>As both DoT and DoH are relatively new, they are not universally deployed yet. On the server side, major public resolvers including Cloudflare’s 1.1.1.1 and <a href=\"https://www.cloudflare.com/cloudflare-vs-google-dns/\">Google DNS</a> support it. Many ISP resolvers however still lack support for it. A small list of public resolvers supporting DoH can be found at <a href=\"https://github.com/DNSCrypt/dnscrypt-proxy/wiki/DNS-server-sources\">DNS server sources</a>, another list of public resolvers supporting DoT and DoH can be found on <a href=\"https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers\">DNS Privacy Public Resolvers</a>.</p><p>There are two methods to enable DoT or DoH on end-user devices:</p><ul><li><p>Add support to applications, bypassing the resolver service from the operating system.</p></li><li><p>Add support to the operating system, transparently providing support to applications.</p></li></ul><p>There are generally three configuration modes for DoT or DoH on the client side:</p><ul><li><p>Off: DNS will not be encrypted.</p></li><li><p>Opportunistic mode: try to use a secure transport for DNS, but fallback to unencrypted DNS if the former is unavailable. This mode is vulnerable to downgrade attacks where an attacker can force a device to use unencrypted DNS. It aims to offer privacy when there are no on-path active attackers.</p></li><li><p>Strict mode: try to use DNS over a secure transport. If unavailable, fail hard and show an error to the user.</p></li></ul><!--kg-card-begin: html--><p>The current state for system-wide configuration of DNS over a secure transport:</p>\n<ul>\n<li style=\"padding-bottom:0\">Android 9: <a href=\"https://android-developers.googleblog.com/2018/04/dns-over-tls-support-in-android-p.html\">supports</a> DoT through its “Private DNS” feature. Modes:\n<ul>\n<li>Opportunistic mode (“Automatic”) is used by default. The resolver from network settings (typically DHCP) will be used.</li>\n<li>Strict mode can be <a href=\"http://staging.blog.mrk.cfdata.org/enable-private-dns-with-1-1-1-1-on-android-9-pie/\">configured</a> by setting an explicit hostname. No IP address is allowed, the hostname is resolved using the default resolver and is also used for validating the certificate. (<a href=\"https://github.com/aosp-mirror/platform_frameworks_base/commit/a24d459a5d60c706472f9b620d079cd0a40a7279\">Relevant source code</a>)</li>\n</ul>\n</li>\n<li>iOS and Android users can also install the <a href=\"https://1.1.1.1/\">1.1.1.1 app</a> to enable either DoH or DoT support in strict mode. Internally it uses the VPN programming interfaces to enable interception of unencrypted DNS traffic before it is forwarded over a secure channel.</li>\n<li style=\"padding-bottom:0\">\nLinux with systemd-resolved from systemd 239: DoT through the <a href=\"https://www.freedesktop.org/software/systemd/man/resolved.conf.html#DNSOverTLS=\">DNSOverTLS</a> option.\n<ul>\n<li>Off is the default.</li>\n<li>Opportunistic mode can be configured, but no certificate validation is performed.</li>\n<li>Strict mode is available since systemd 243. Any certificate signed by a trusted certificate authority is accepted. However, <a href=\"https://github.com/systemd/systemd/blob/v243/src/resolve/resolved-dnstls-gnutls.c#L62-L63\">there is no hostname validation</a> with the GnuTLS backend while the OpenSSL backend <a href=\"https://github.com/systemd/systemd/blob/v243/src/resolve/resolved-dnstls-openssl.c#L86-L87\">expects</a> an IP address.</li>\n<li>In any case, no Server Name Indication (SNI) is sent. The certificate name is <a href=\"https://github.com/systemd/systemd/issues/9397\">not validated</a>, making a on-path attacker rather trivial.</li>\n</ul>\n</li>\n<li>\nLinux, macOS, and Windows can <a href=\"https://developers.cloudflare.com/1.1.1.1/dns-over-https/cloudflared-proxy/\">use</a> a DoH client in strict mode. The <code>cloudflared proxy-dns</code> command uses the Cloudflare DNS resolver by default, but users can override it through the proxy-dns-upstream option.\n</li>\n</ul><!--kg-card-end: html--><p>Web browsers support DoH instead of DoT:</p><ul><li><p>Firefox 62 <a href=\"https://support.mozilla.org/en-US/kb/firefox-dns-over-https\">supports</a> DoH and provides several <a href=\"https://wiki.mozilla.org/Trusted_Recursive_Resolver\">Trusted Recursive Resolver (TRR)</a> settings. By default DoH is disabled, but Mozilla is running an <a href=\"https://blog.mozilla.org/futurereleases/2019/09/06/whats-next-in-making-dns-over-https-the-default/\">experiment</a> to enable DoH for some users in the USA. This experiment currently uses Cloudflare&#39;s 1.1.1.1 resolver, since we are the only provider that currently satisfies the <a href=\"https://wiki.mozilla.org/Security/DOH-resolver-policy\">strict resolver policy</a> required by Mozilla. Since many DNS resolvers still do not support an encrypted DNS transport, Mozilla&#39;s approach will ensure that more users are protected using DoH.</p><ul><li><p>When enabled through the experiment, or through the “Enable DNS over HTTPS” option at Network Settings, Firefox will use opportunistic mode (network.trr.mode=2 at about:config).</p></li><li><p>Strict mode can be enabled with network.trr.mode=3, but requires an explicit resolver IP to be specified (for example, network.trr.bootstrapAddress=1.1.1.1).</p></li><li><p>While Firefox ignores the default resolver from the system, it can be configured with alternative resolvers. Additionally, enterprise deployments who use a resolver that does not support DoH have the <a href=\"https://support.mozilla.org/en-US/kb/configuring-networks-disable-dns-over-https\">option</a> to disable DoH.</p></li></ul></li><li><p>Chrome 78 <a href=\"https://blog.chromium.org/2019/09/experimenting-with-same-provider-dns.html\">enables</a> opportunistic DoH if the system resolver address matches one of the <a href=\"https://www.chromium.org/developers/dns-over-https\">hard-coded DoH providers</a> (<a href=\"https://chromium.googlesource.com/chromium/src.git/+/f93a48e3720931c25a3abc7848b08afed43e3be2%5E%21/\">source code change</a>). This experiment is enabled for all platforms except Linux and iOS, and excludes enterprise deployments by default.</p></li><li><p>Opera 65 <a href=\"https://blogs.opera.com/desktop/2019/09/opera-65-0-3430-0-developer-update/\">adds</a> an option to enable DoH through Cloudflare&#39;s 1.1.1.1 resolver. This feature is off by default. Once enabled, it appears to use opportunistic mode: if 1.1.1.1:443 (without SNI) is reachable, it will be used. Otherwise it falls back to the default resolver, unencrypted.</p></li></ul><p>The <a href=\"https://github.com/curl/curl/wiki/DNS-over-HTTPS\">DNS over HTTPS</a> page from the curl project has a comprehensive list of DoH providers and additional implementations.</p><p>As an alternative to encrypting the full network path between the device and the external DNS resolver, one can take a middle ground: use unencrypted DNS between devices and the gateway of the local network, but <a href=\"/dns-over-tls-built-in/\">encrypt all DNS traffic</a> between the gateway router and the external DNS resolver. Assuming a secure wired or wireless network, this would protect all devices in the local network against a snooping ISP, or other adversaries on the Internet. As public Wi-Fi hotspots are not considered secure, this approach would not be safe on open Wi-Fi networks. Even if it is password-protected with WPA2-PSK, others will still be able to snoop and modify unencrypted DNS.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"other-security-considerations\">Other security considerations</h2>\n      <a href=\"#other-security-considerations\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>The previous sections described secure DNS transports, DoH and DoT. These will only ensure that your client receives the untampered answer from the DNS resolver. It does not, however, protect the client against the resolver returning the wrong answer (through <a href=\"https://www.cloudflare.com/learning/security/global-dns-hijacking-threat/\">DNS hijacking</a> or <a href=\"https://www.cloudflare.com/learning/dns/dns-cache-poisoning/\">DNS cache poisoning</a> attacks). The “true” answer is determined by the owner of a domain or zone as reported by the authoritative name server. <a href=\"https://www.cloudflare.com/learning/dns/dns-security/\">DNSSEC</a> allows clients to verify the integrity of the returned DNS answer and catch any unauthorized tampering along the path between the client and authoritative name server.</p><p>However deployment of DNSSEC is hindered by middleboxes that <a href=\"https://labs.ripe.net/Members/willem_toorop/sunrise-dns-over-tls-sunset-dnssec\">incorrectly</a> forward DNS messages, and even if the information is available, stub resolvers used by applications might not even validate the results. A report from 2016 <a href=\"https://www.internetsociety.org/resources/doc/2016/state-of-dnssec-deployment-2016/\">found</a> that only 26% of users use DNSSEC-validating resolvers.</p><p>DoH and DoT protect the transport between the client and the public resolver. The public resolver may have to reach out to additional authoritative name servers in order to resolve a name. Traditionally, the path between any resolver and the authoritative name server uses unencrypted DNS. To protect these DNS messages as well, we did an experiment with Facebook, using DoT between 1.1.1.1 and Facebook’s authoritative name servers. While setting up a secure channel using TLS increases latency, it can be amortized over many queries.</p><p>Transport encryption ensures that resolver results and metadata are protected. For example, the <a href=\"https://tools.ietf.org/html/rfc7871\">EDNS Client Subnet (ECS)</a> information included with DNS queries could reveal the original client address that started the DNS query. Hiding that information along the path improves privacy. It will also <a href=\"https://labs.ripe.net/Members/willem_toorop/sunrise-dns-over-tls-sunset-dnssec\">prevent</a> broken middle-boxes from breaking DNSSEC due to issues in forwarding DNS.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"operational-issues-with-dns-encryption\">Operational issues with DNS encryption</h2>\n      <a href=\"#operational-issues-with-dns-encryption\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>DNS encryption may bring challenges to individuals or organizations that rely on monitoring or modifying DNS traffic. Security appliances that rely on passive monitoring watch all incoming and outgoing network traffic on a machine or on the edge of a network. Based on unencrypted DNS queries, they could potentially identify machines which are infected with malware for example. If the DNS query is encrypted, then passive monitoring solutions will not be able to monitor domain names.</p><p>Some parties expect DNS resolvers to apply content filtering for purposes such as:</p><ul><li><p>Blocking domains used for malware distribution.</p></li><li><p>Blocking advertisements.</p></li><li><p>Perform parental control filtering, blocking domains associated with adult content.</p></li><li><p>Block access to domains serving illegal content according to local regulations.</p></li><li><p>Offer a <a href=\"https://en.wikipedia.org/wiki/Split-horizon_DNS\">split-horizon DNS</a> to provide different answers depending on the source network.</p></li></ul><p>An advantage of blocking access to domains via the DNS resolver is that it can be centrally done, without reimplementing it in every single application. Unfortunately, it is also quite coarse. Suppose that a website hosts content for multiple users at example.com/videos/for-kids/ and example.com/videos/for-adults/. The DNS resolver will only be able to see “example.com” and can either choose to block it or not. In this case, application-specific controls such as browser extensions would be more effective since they can actually look into the URLs and selectively prevent content from being accessible.</p><p>DNS monitoring is not comprehensive. Malware could skip DNS and hardcode IP addresses, or use <a href=\"https://blog.netlab.360.com/an-analysis-of-godlua-backdoor-en/\">alternative methods</a> to query an IP address. However, not all malware is that complicated, so DNS monitoring can still serve as a <a href=\"https://en.wikipedia.org/wiki/Defense_in_depth_%28computing%29\">defence-in-depth</a> tool.</p><p>All of these non-passive monitoring or DNS blocking use cases require support from the DNS resolver. Deployments that rely on opportunistic DoH/DoT upgrades of the current resolver will maintain the same feature set as usually provided over unencrypted DNS. Unfortunately this is vulnerable to downgrades, as mentioned before. To solve this, system administrators can point endpoints to a DoH/DoT resolver in strict mode. Ideally this is done through secure device management solutions (<a href=\"https://en.wikipedia.org/wiki/Mobile_device_management\">MDM</a>, <a href=\"https://en.wikipedia.org/wiki/Group_Policy\">group policy</a> on Windows, etc.).</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"conclusion\">Conclusion</h2>\n      <a href=\"#conclusion\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>One of the cornerstones of the Internet is mapping names to an address using DNS. DNS has traditionally used insecure, unencrypted transports. This has been abused by ISPs in the past for injecting <a href=\"https://www.icsi.berkeley.edu/pubs/networking/redirectingdnsforads11.pdf\">advertisements</a>, but also causes a privacy leak. Nosey visitors in the coffee shop can use unencrypted DNS to follow your activity. All of these issues can be solved by using DNS over TLS (DoT) or DNS over HTTPS (DoH). These techniques to protect the user are relatively new and are seeing increasing adoption.</p><p>From a technical perspective, DoH is very similar to HTTPS and follows the general industry trend to <a href=\"https://blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/\">deprecate non-secure options</a>. DoT is a simpler transport mode than DoH as the HTTP layer is removed, but that also makes it easier to be blocked, either deliberately or by accident.</p><p>Secondary to enabling a secure transport is the choice of a DNS resolver. Some vendors will use the locally configured DNS resolver, but try to opportunistically upgrade the unencrypted transport to a more secure transport (either DoT or DoH). Unfortunately, the DNS resolver usually defaults to one provided by the ISP which may not support secure transports.</p><p>Mozilla has adopted a different approach. Rather than relying on local resolvers that may not even support DoH, they allow the user to explicitly select a resolver. Resolvers recommended by Mozilla have to satisfy <a href=\"https://wiki.mozilla.org/Security/DOH-resolver-policy\">high standards</a> to protect user privacy. To ensure that parental control features based on DNS remain functional, and to support the split-horizon use case, Mozilla has <a href=\"https://support.mozilla.org/en-US/kb/configuring-networks-disable-dns-over-https\">added</a> a mechanism that allows private resolvers to disable DoH.</p><p>The DoT and DoH transport protocols are ready for us to move to a more secure Internet. As can be seen in previous packet traces, these protocols are similar to existing mechanisms to <a href=\"https://www.cloudflare.com/application-services/solutions/\">secure application traffic</a>. Once this security and privacy hole is closed, there will be <a href=\"https://arxiv.org/pdf/1906.09682.pdf\">many</a> <a href=\"/esni/\">more</a> to tackle.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2rE1TtD6u8D6Wk64LriLUB/53d8e662554bed780841a5a40d63434a/tales-from-the-crypto-team_2x-5.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"1188\" loading=\"lazy\"/>\n            \n            </figure><p></p>",
		"id": "42cfohkBmNPzLvTAUhd700",
		"localeList": {
			"name": "DNS Encryption Explained Config",
			"enUS": "English for Locale",
			"zhCN": "Translated for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "Translated for Locale",
			"deDE": "Translated for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "Translated for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "Translated for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Encrypting DNS makes it impossible for snoopers to look into your DNS messages. Just as the web moved from unencrypted HTTP to encrypted HTTPS there are now upgrades to the DNS protocol that encrypt DNS itself. ",
		"metadata": {
			"title": "DNS Encryption Explained",
			"description": "The Domain Name System (DNS) is the address book of the Internet. When you visit cloudflare.com or any other site, your browser will ask a DNS resolver for the IP address where the website can be found. ",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/oJ8VJs0r2YL0e3BKpFyCF/c65fab188baece85449672d93e6f6ac8/dns-encryption-explained-qBT4Op.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2019-10-29T13:00:00.000+00:00",
		"slug": "dns-encryption-explained",
		"tags": [
			{
				"id": "5grQBv96AL5Ck0c8I54a0f",
				"name": "Crypto Week",
				"slug": "crypto-week"
			},
			{
				"id": "5fZHv2k9HnJ7phOPmYexHw",
				"name": "DNS",
				"slug": "dns"
			},
			{
				"id": "lYgpkmxckzYQz50iiVcjw",
				"name": "DoH",
				"slug": "doh"
			},
			{
				"id": "6Mp7ouACN2rT3YjL1xaXJx",
				"name": "Security",
				"slug": "security"
			},
			{
				"id": "1x7tpPmKIUCt19EDgM1Tsl",
				"name": "Research",
				"slug": "research"
			},
			{
				"id": "1QsJUMpv0QBSLiVZLLQJ3V",
				"name": "Cryptography",
				"slug": "cryptography"
			}
		],
		"title": "DNS Encryption Explained",
		"updated_at": "2025-10-03T17:49:02.963Z",
		"url": "https://blog.cloudflare.com/dns-encryption-explained"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}