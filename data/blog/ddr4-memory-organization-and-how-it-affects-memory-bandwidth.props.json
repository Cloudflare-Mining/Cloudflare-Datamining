{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "8",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Xiaomin Shen",
				"slug": "xiaomin",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3EEgBtNqGzBSlPoM4BLgux/d5b896eb8344efc39c17554d0fd1a7fa/xiaomin.jpg",
				"location": "Houston, TX",
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "In this blog, we will study the concepts of memory rank and organization, and how memory rank and organization affect the memory bandwidth performance by reviewing some benchmarking test results",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/26Kxt5WWOirxIQ4WUuVC9d/9270ef591d71bd837bd587f416b3f969/ddr4-memory-organization-and-how-it-affects-memory-bandwidth.png",
		"featured": false,
		"html": "<p></p><p>When shopping for DDR4 memory modules, we typically look at the memory density and memory speed. For example a 32GB DDR4-2666 memory module has 32GB of memory density, and the data rate transfer speed is 2666 mega transfers per second (MT/s).</p><p>If we take a closer look at the selection of DDR4 memories, we will then notice that there are several other parameters to choose from. One of them is rank x organization, for example 1Rx8, 2Rx4, 2Rx8 and so on. What are these and does memory module rank and organization have an effect on DDR4 module performance?</p><p>In this blog, we will study the concepts of memory rank and organization, and how memory rank and organization affect the memory bandwidth performance by reviewing some benchmarking test results.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"memory-rank\">Memory rank</h2>\n      <a href=\"#memory-rank\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Memory rank is a term that is used to describe how many sets of DRAM chips, or devices, exist on a memory module. A set of DDR4 DRAM chips is always 64-bit wide, or 72-bit wide if ECC is supported. Within a memory rank, all chips share the address, command and control signals.</p><p>The concept of memory rank is very similar to memory bank. Memory rank is a term used to describe memory modules, which are small printed circuit boards with memory chips and other electronic components on them; and memory bank is a term used to describe memory integrated circuit chips, which are the building blocks of the memory modules.</p><p>A single-rank (1R) memory module contains one set of DRAM chips. Each set of DRAM chips is 64-bits wide, or 72-bits wide if Error Correction Code (ECC) is supported.</p><p>A dual-rank (2R) memory module is similar to having two single-rank memory modules. It contains two sets of DRAM chips, therefore doubling the capacity of a single-rank module. The two ranks are selected one at a time through a chip select signal, therefore only one rank is accessible at a time.</p><p>Likewise, a quad-rank (4R) memory module contains four sets of DRAM chips. It is similar to having two dual-rank memories on one module, and it provides the greatest capacity. There are two chip select signals needed to access one of the four ranks. Again, only one rank is accessible at a time.</p><p>Figure 1 is a simplified view of the DQ signal flow on a dual-rank memory module. There are two identical sets of memory chips: set 1 and set 2. The 64-bit data I/O signals of each memory set are connected to a data I/O module. A single bit chip select (CS_n) signal controls which set of memory chips is accessed and the data I/O signals of the selected set will be connected to the DQ pins of the memory module.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6q9XI3SWMopg2BQ2DC0RhR/cac46aa57d755132291b3e5ea1485b79/image4-5.png\" alt=\"\" class=\"kg-image\" width=\"1632\" height=\"710\" loading=\"lazy\"/>\n            \n            </figure><p>Figure 1: DQ signal path on a dual rank memory module</p><p>Dual-rank and quad-rank memory modules double or quadruple the memory capacity on a module, within the existing memory technology. Even though only one rank can be accessed at a time, the other ranks are not sitting idle. Multi-rank memory modules use a process called rank interleaving, where the ranks that are not accessed go through their refresh cycles in parallel. This pipelined process reduces memory response time, as soon as the previous rank completes data transmission, the next rank can start its transmission.</p><p>On the other hand, there is some I/O latency penalty with multi-rank memory modules, since memory controllers need additional clock cycles to move from one rank to another. The overall <a href=\"https://www.cloudflare.com/learning/performance/glossary/what-is-latency/\">latency performance</a> difference between single rank and multi-rank memories depend heavily on the type of application.</p><p>In addition, because there are less memory chips on each module, single-rank modules produce less heat and are less likely to fail.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"memory-depth-and-width\">Memory depth and width</h2>\n      <a href=\"#memory-depth-and-width\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>The capacity of each memory chip, or device, is defined as memory depth x memory width. Memory width refers to the width of the data bus, i.e. the number of DQ lines of each memory chip.</p><p>The width of memory chips are standard, they are either x4, x8 or x16. From here, we can calculate how many memory chips are in a 64-bit wide single rank memory. For example, with x4 memory chips, we will need 16 pieces (64 ÷ 4 = 16); and with x8 memory chips, we will only need 8 of them.</p><p>Let&#39;s look at the following two high-level block diagrams of 1Gbx8 and 2Gbx4 memory chips. The total memory capacity for both of them is 8Gb. Figure 2 describes the 1Gb x8 configuration, and Figure 3 describes the 2Gbx4 configuration. With DDR4, both x4 and x8 devices have 4 groups of 4 banks. x16 devices have 2 groups of 4 banks.</p><p>We can think of each memory chip as a library. Within that library, there are four bank groups, which are the four floors of the library. On each floor, there are four shelves, each shelf is similar to one of the banks. And we can locate each one of the memory cells by its row and column addresses, just like the library book call numbers. Within each bank, the row address MUX activates a line in the memory array through the Row address latch and decoder, based on the given row address. This line is also called the word line. When a word line is activated, the data on the word line is loaded on to the sense amplifiers. Subsequently, the column decoder accesses the data on the sense amplifier based on the given column address.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/69bOFcBszD2lzFKP6PuKmv/bfed28f664a654faa5c16d5f1530cff7/pasted-image-0-3.png\" alt=\"\" class=\"kg-image\" width=\"966\" height=\"580\" loading=\"lazy\"/>\n            \n            </figure><p>Figure 2: 1Gbx8 block diagram</p><p>The capacity, or density of a memory chip is calculated as:</p><p><b>Memory Depth</b> = Number of Rows * Number of Columns * Number of Banks</p><p><b>Total Memory Capacity</b> = Memory Depth * Memory Width</p><p>In the example of a 1Gbx8 device as shown in Figure 2 above:</p><p>Number of Row Address Bits = 16</p><p>Total Number of Rows = 2 ^ 16 = 65536</p><p>Number of Column Address Bits = 10</p><p>Total Number of Columns = 2 ^ 10 = 1024</p><p>And the calculation goes:</p><p><b>Memory Depth</b> = 65536 Rows * 1024 Columns * 16 Banks = 1Gb</p><p><b>Total Memory Capacity</b> = 1Gb * 8 = 8Gb</p><p>Figure 3 describes the function block diagram of a 2 Gb x 4 device.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4JTK5yWP3Kw5O7g1gZS6p7/7d832423f891cb01019f73b1f4146f3b/pasted-image-0--1--3.png\" alt=\"\" class=\"kg-image\" width=\"958\" height=\"582\" loading=\"lazy\"/>\n            \n            </figure><p>Figure 3: 2Gbx4 Block Diagram</p><p>Number of Row Address Bits = 17</p><p>Total Number of Rows = 2 ^ 17 = 131072</p><p>Number of Column Address Bits = 10</p><p>Total Number of Columns = 2 ^ 10 = 1024</p><p>And the calculation goes:</p><p><b>Memory Depth</b> = 131072 * 1024 * 16 = 2Gb</p><p><b>Total Memory Capacity</b> = 2Gb* 4 = 8Gb</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"memory-module-capacity\">Memory module capacity</h2>\n      <a href=\"#memory-module-capacity\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Memory rank and memory width determine how many memory devices are needed on each memory module.</p><p>A 64-bit DDR4 module with ECC support has a total of 72 bits for the data bus. Of the 72 bits, 8 bits are used for ECC. It would require a total of 18 x4 memory devices for a single rank module. Each memory device would supply 4 bits, and the total number of bits with 18 devices is 72 bits.  For a dual rank module, we would need to double the amount of memory devices to 36.</p><p>If each x4 memory device has a memory capacity of 8Gb, a single rank module with 16 + 2 (ECC) devices would have 16GB module capacity.</p><p>8Gb * 16 = 128Gb = 16GB</p><p>And a dual rank ECC module with 36 8Gb (2Gb x 4) devices would have 32GB module capacity.</p><p>8Gb * 32 = 256Gb = 32GB</p><p>If the memory devices are x8, a 64-bit DDR4 module with ECC support would require a total of 9 x8 memory devices for a single rank module, and 18 x8 memory devices for a dual rank memory module. If each of these x8 memory devices has a memory capacity of 8Gb, a single rank module would have 8GB module capacity.</p><p>8Gb * 8 = 64Gb = 8GB</p><p>A dual rank ECC module with 18 8Gb (1Gb x 8) devices would have 16GB module capacity.</p><p>8Gb * 16 = 128Gb = 16GB</p><p>Notice that within the same memory device technology, for example 8Gb in our example, higher memory module capacity is achieved through using x4 device width, or dual-rank, or even quad-rank.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"activate-timing-and-dram-page-sizes\">ACTIVATE timing and DRAM page sizes</h2>\n      <a href=\"#activate-timing-and-dram-page-sizes\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Memory device width, whether it is x4, x8 or x16, also has an effect on memory timing parameters such as tFAW.</p><p>tFAW refers to Four Active Window time. It specifies a timing window within which four ACTIVATE commands can be issued. An ACTIVATE command is issued to open a row within a bank. In the block diagrams above we can see that each bank has its own set of sense amplifiers, thus one row can remain active per bank. A memory controller can issue four back-to-back ACTIVATE commands, but once the fourth ACTIVATE is done, the fifth ACTIVATE cannot be issued until the tFAW window expires.</p><p>The table below lists out the tFAW window lengths assigned to various DDR4 speeds and page sizes. Notice that under the same DDR4 speed, the bigger the page size, the longer the tFAW window is. For example, DDR4-1600 has a tFAW window of 20ns with 1/2KB page size. This means that within a bank, once a command to open a first row is issued, the controller must wait for 20ns, or 16 clock cycles (CK) before a command to open a fifth row can be issued.</p><p>The JEDEC memory standard specification for DDR4 tFAW timing varies by page sizes: 1/2KB, 1KB and 2KB.</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-ia17{background-color:#F4F5F7;color:#172B4D;font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-stvh{color:#172B4D;text-align:left;vertical-align:top}\n.tg .tg-7s56{background-color:#F4F5F7;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-7s56\"></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Symbol</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">DDR4-1600</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">DDR4-1866</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">DDR4-2133</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">DDR4-2400</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Four ACTIVATE windows for 1/2KB page size (minimum)</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">tFAW (1/2KB)</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 16CK or 20ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 16CK or 17ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 16CK or 15ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 16CK or 13ns</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Four ACTIVATE windows for 1KB page size (minimum)</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">tFAW (1KB)</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 20CK or 25ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 20CK or 23ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 20CK or 21ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 20CK or 21ns</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Four ACTIVATE windows for 2KB page size (minimum)</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">tFAW (2KB)</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 28CK or 35ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 28CK or 30ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 28CK or 30ns</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">greater of 28CK or 30ns</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html--><p>What is the relationship between page sizes and memory device width? Since we briefly compared two 8Gb memory devices earlier, it makes sense to take another look at those two in terms of page sizes.</p><p>Page size is the number of bits loaded into the sense amplifiers when a row is activated. Therefore page size is directly related to the number of bits per row, or number of columns per row.</p><p>Page Size = Number of Columns * Memory Device Width = 1024 * Memory Device Width</p><p>The table below shows the page sizes for each device width:</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-ia17{background-color:#F4F5F7;color:#172B4D;font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-stvh{color:#172B4D;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Device Width</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Page Size (Kb)</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Page Size (KB)</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">x4</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">4 Kb</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">1/2 KB</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">x8</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">8 Kb</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">1 KB</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">x16</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">16 Kb</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2 KB</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html--><p>Among the three device widths, x4 devices have the shortest tFAW timing limit, and x16 devices have the longest tFAW timing limit. The difference in tFAW specification has a negative timing performance impact on devices with higher device width.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"an-experiment-with-2rx4-and-2rx8-ddr4-modules\">An experiment with 2Rx4 and 2Rx8 DDR4 modules</h2>\n      <a href=\"#an-experiment-with-2rx4-and-2rx8-ddr4-modules\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>To quantify the impact on memory performance from different memory device widths, an experiment has been conducted on our Gen11 servers with AMD EPYC 7713 Milan CPU. The Milan CPU has 64 cores, supports 8 memory channels.</p><p>Our production Gen11 servers are configured with 1 DIMM populated in each memory channel. In order to achieve 6GB/core memory per core ratio, the total memory for the Gen11 system is 64 core * 6 GB/core = 384 GB. This is achieved by installing four pieces of 32GB 2Rx8 and four pieces of 64GB 2Rx4 memory modules.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6xl4Gwvsl4gUdpgNafGzhW/fb099e78d8d8b6cec35afbaef2794dd3/Untitled.png\" alt=\"\" class=\"kg-image\" width=\"1448\" height=\"636\" loading=\"lazy\"/>\n            \n            </figure><p>Figure 5: Gen11 server memory configuration</p><p>To compare the bandwidth performance difference between 2Rx4 and 2Rx8 DDR4 modules, two test cases are needed. One with all 2Rx4 DDR4 modules, and another one with 2Rx8 DDR4 modules. Each test case populates eight pieces of 32GB 32Mbps DDR4 RDIMM memories in each memory channel (1DPC). As shown in the table below, the difference between the set up of the two test cases is: case A tests 2Rx4 memory modules, and case B tests 2Rx8 memory modules.</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-ia17{background-color:#F4F5F7;color:#172B4D;font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-stvh{color:#172B4D;text-align:left;vertical-align:top}\n.tg .tg-fkh2{color:#036;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Test case</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Number of DIMMs</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Memory vendor</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Part number</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Memory size</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Memory speed</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Memory organization</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">A</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">8</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Samsung</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">M393A4G43BB4-CWE</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">32GB</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">3200 MT/s</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2Rx8</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">B</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">8</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Samsung</span></td>\n    <td class=\"tg-fkh2\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#036;background-color:transparent\">M393A4K40EB3-</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">CWECQ</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">32GB</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">3200 MT/s</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2Rx4</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html-->\n    <div class=\"flex anchor relative\">\n      <h2 id=\"memory-latency-checker-results\">Memory Latency Checker results</h2>\n      <a href=\"#memory-latency-checker-results\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Memory Latency Checker is an Intel developed synthetic benchmarking tool. It measures memory latency and bandwidth, and how they vary with workloads of different read/write ratios, as well as stream triad. Stream triad is a memory benchmark workload that contains three operations: it first multiples a large 1D array with a scalar, then adds it to a second array, and assigns it to a third array.</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-ia17{background-color:#F4F5F7;color:#172B4D;font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-stvh{color:#172B4D;text-align:left;vertical-align:top}\n.tg .tg-7s56{background-color:#F4F5F7;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-7s56\"></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2Rx8 32GB bandwidth (MB/s)</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2Rx4 32GB bandwidth (MB/s)</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Percentage difference</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">All reads        </span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">173,287</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">173,650</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">0.21%</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">3:1 reads-writes </span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">154,593</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">156,343</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">1.13%</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2:1 reads-writes </span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">151,660</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">155,289</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2.39%</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">1:1 reads-writes </span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">146,895</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">151,199</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2.93%</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Stream-triad like</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">156,273</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">158,710</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">1.56%</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html--><p>The bandwidth performance difference in the All reads test case is not very significant, only 0.21%.</p><p>As the amount of writes increase, from 25% (3:1 reads-writes) to 50% (1:1 reads-writes), the bandwidth performance differences between test case A and test case B increase from 1.13% to 2.93%.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"lmbench-results\">LMBench Results</h2>\n      <a href=\"#lmbench-results\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>LMBench is another synthetic benchmarking tool often used to study bandwidth performances of memory.  Our LMBench bw_mem tests results are comparable to the results obtained from the MLC benchmark test.</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-ia17{background-color:#F4F5F7;color:#172B4D;font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-stvh{color:#172B4D;text-align:left;vertical-align:top}\n.tg .tg-7s56{background-color:#F4F5F7;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-7s56\"></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2Rx8 32GB bandwidth (MB/s)</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2Rx4 32GB bandwidth (MB/s)</span></th>\n    <th class=\"tg-ia17\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Percentage difference</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Read</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">170,285</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">173,897</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2.12%</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Write</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">73,179</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">76,019</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">3.88%</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Read then write </span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">72,804</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">74,926</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2.91%</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">Copy</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">50,332</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">51,776</span></td>\n    <td class=\"tg-stvh\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#172B4D;background-color:transparent\">2.87%</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html--><p>The biggest bandwidth performance difference is with Write workload. The 2Rx4 test case has 3.88% higher write bandwidth than the 2Rx8 test case.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"summary\">Summary</h2>\n      <a href=\"#summary\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Memory organization and memory width has a slight effect on memory bandwidth performance. The difference is most obvious in write-heavy workloads than read-heavy workloads. But even in write-heavy workloads, the difference is less than 4% according to our benchmark tests.</p><p>Memory modules with x4 width require twice the number of memory devices on the memory module, as compared to memory modules with x8 width of the same capacity. More memory devices would consume more power. According to Micron&#39;s measurement data, 2Rx8 32GB memory modules using 16Gb devices consume 31% less power than 2Rx4 32GB memory modules using 8Gb devices. The substantial power saving of using x8 memory modules may outweigh the slight bandwidth performance impact.</p><p>Our Gen11 servers are configured with a mix of 2Rx4 and 2Rx8 DDR4 modules. For our future generations, we may consider using 2Rx8 memory where possible, in order to reduce overall system power consumption, with minimal impact to bandwidth performance.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"references\">References</h2>\n      <a href=\"#references\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p><a href=\"https://www.micron.com/-/media/client/global/documents/products/data-sheet/dram/ddr4/8gb_ddr4_sdram.pdf\">https://www.micron.com/-/media/client/global/documents/products/data-sheet/dram/ddr4/8gb_ddr4_sdram.pdf</a></p><p><a href=\"https://www.systemverilog.io/ddr4-basics#:~:text=DRAM%20Page%20Size&text=Since%20the%20column%20address%20is,it%20is%202KB%20per%20page\">https://www.systemverilog.io/ddr4-basics#:~:text=DRAM%20Page%20Size&amp;text=Since%20the%20column%20address%20is,it%20is%202KB%20per%20page</a></p>",
		"id": "2BAZPjYYbUP454YnBpLiKb",
		"localeList": {
			"name": "DDR4 memory organization and how it affects memory bandwidth Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "In this blog, we will study the concepts of memory rank and organization, and how memory rank and organization affect the memory bandwidth performance by reviewing some benchmarking test results.",
		"metadata": {
			"title": "DDR4 memory organization and how it affects memory bandwidth",
			"description": "In this blog, we will study the concepts of memory rank and organization, and how memory rank and organization affect the memory bandwidth performance by reviewing some benchmarking test results.",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/30uvR13eU5VyEMHSr42F8n/029b711e070c59270315a0b111895bf5/ddr4-memory-organization-and-how-it-affects-memory-bandwidth-2kqdJM.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2023-04-19T14:00:00.000+01:00",
		"slug": "ddr4-memory-organization-and-how-it-affects-memory-bandwidth",
		"tags": [
			{
				"id": "1ffv1vW4BzGcbQOa9xbY4O",
				"name": "Hardware",
				"slug": "hardware"
			},
			{
				"id": "2UVIYusJwlvsmPYl2AvSuR",
				"name": "Deep Dive",
				"slug": "deep-dive"
			}
		],
		"title": "DDR4 memory organization and how it affects memory bandwidth",
		"updated_at": "2025-10-24T09:39:51.018Z",
		"url": "https://blog.cloudflare.com/ddr4-memory-organization-and-how-it-affects-memory-bandwidth"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}