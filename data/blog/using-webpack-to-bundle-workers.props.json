{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "2",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "John Fawcett",
				"slug": "john-fawcett",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/27TmraPIWLyrldE7wBIhTQ/f1374fe5011c5bb5c0d38f6b0b8fe119/john-fawcett.jpg",
				"location": null,
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Throughout this post, we’ll use contrived examples, shaky metaphors, and questionably accurate weather predictions to explain how to bundle your Service Worker with Webpack.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5fjJVEAUPyTxUALPA8laM1/ca02561f0af0380c5fc3ab07b988cb7a/using-webpack-to-bundle-workers.jpg",
		"featured": false,
		"html": "<p><i>A brief introduction to bundling your Service Worker scripts.</i></p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4NwkPVtyHfmAOZMPI2Z4as/47366eb8eb56dc184584166cdaab3bff/photo-1523212727988-82c430c79c8e\" alt=\"\" class=\"kg-image\" width=\"1080\" height=\"720\" loading=\"lazy\"/>\n            \n            </figure><p>Photo by <a href=\"https://unsplash.com/@joyceromero?utm_source=ghost&utm_medium=referral&utm_campaign=api-credit\">Joyce Romero</a> / <a href=\"https://unsplash.com/?utm_source=ghost&utm_medium=referral&utm_campaign=api-credit\">Unsplash</a></p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">// The simplest Service Worker: A passthrough script\naddEventListener(&#039;fetch&#039;, event =&gt; {\n  event.respondWith(fetch(event.request))\n})</pre></code>\n            <p>The code above is simple and sweet: when a request comes into one of Cloudflare’s data centers, passthrough to the origin server. There is <i>absolutely no need</i> for us to introduce any complex tooling or dependencies. Nevertheless, introduce we will! The problem is, once your script grows even just a little bit, you’ll be tempted to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\">JavaScript’s fancy new module system</a>. However, in doing so, you’ll have a little bit of trouble uploading your script via our API (we only accept a single JS file).</p><p>Throughout this post, we’ll use contrived examples, shaky metaphors, and questionably accurate weather predictions to explain how to bundle your Service Worker with <a href=\"https://webpack.js.org/\">Webpack</a>.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"webpack\">Webpack</h3>\n      <a href=\"#webpack\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Let’s just say Webpack is a module bundler. That is, if you have code in multiple files, and you tie them together like this:</p>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"app-js\">app.js</h4>\n      <a href=\"#app-js\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <pre class=\"language-javascript\"><code class=\"language-javascript\">// Import the CoolSocks class from dresser.js\nimport { CoolSocks } from &#039;./dresser&#039;\nimport { FancyShoes } from &#039;./closet&#039;</pre></code>\n            <p>Then you can tell webpack to follow all of those import statements to produce a single file. This is useful because Service Workers running on Cloudflare need to be a single file as well.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"show-me-the-code\">Show me the code</h3>\n      <a href=\"#show-me-the-code\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Remember when I said something about predicting weather? Let’s build a worker with TypeScript that responds with the current weather.</p><p>Make sure to have <a href=\"https://nodejs.org\">NodeJS</a> installed.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\"># Make a new project directory\nmkdir weather-worker\ncd weather-worker\nmkdir src dist\n# Initialize project and install dependencies\nnpm init\nnpm install --save-dev \\\n  awesome-typescript-loader \\\n  typescript \\\n  webpack \\\n  webpack-cli \\\n  workers-preview\ntouch src/index.ts src/fetch-weather.ts webpack.config.js tsconfig.json</pre></code>\n            <p>You should now have a file in your project called <code>package.json</code>. Add the following code to that file:</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">  &quot;scripts&quot;: {\n    &quot;build&quot;: &quot;webpack&quot;,\n    &quot;build:watch&quot;: &quot;webpack --watch&quot;,\n    &quot;preview&quot;: &quot;workers-preview &lt; dist/bundle.js&quot;\n  }</pre></code>\n            <p>Now edit the following files to match what is shown:</p>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"tsconfig-json\">tsconfig.json</h4>\n      <a href=\"#tsconfig-json\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <pre class=\"language-javascript\"><code class=\"language-javascript\">{\n  &quot;compilerOptions&quot;: {\n    &quot;module&quot;: &quot;commonjs&quot;,\n    &quot;target&quot;: &quot;esnext&quot;,\n    &quot;lib&quot;: [&quot;es2015&quot;, &quot;webworker&quot;],\n    &quot;jsx&quot;: &quot;react&quot;,\n    &quot;noImplicitAny&quot;: true,\n    &quot;preserveConstEnums&quot;: true,\n    &quot;outDir&quot;: &quot;./dist&quot;,\n    &quot;moduleResolution&quot;: &quot;node&quot;\n  },\n  &quot;include&quot;: [&quot;src/*.ts&quot;, &quot;src/**/*.ts&quot;, &quot;src/*.tsx&quot;, &quot;src/**/*.tsx&quot;]\n}</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h4 id=\"webpack-config-js\">webpack.config.js</h4>\n      <a href=\"#webpack-config-js\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <pre class=\"language-javascript\"><code class=\"language-javascript\">const path = require(&#039;path&#039;)\n\nmodule.exports = {\n  entry: {\n    bundle: path.join(__dirname, &#039;./src/index.ts&#039;),\n  },\n\n  output: {\n    filename: &#039;bundle.js&#039;,\n    path: path.join(__dirname, &#039;dist&#039;),\n  },\n\n  mode: process.env.NODE_ENV || &#039;development&#039;,\n\n  watchOptions: {\n    ignored: /node_modules|dist|\\.js/g,\n  },\n\n  devtool: &#039;cheap-module-eval-source-map&#039;,\n\n  resolve: {\n    extensions: [&#039;.ts&#039;, &#039;.tsx&#039;, &#039;.js&#039;, &#039;.json&#039;],\n    plugins: [],\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        loader: &#039;awesome-typescript-loader&#039;,\n      },\n    ],\n  },\n}</pre></code>\n            <p>For newcomers, this file will seem incredibly cryptic. All I can say is just to accept it as magic for now. You’ll eventually understand what’s going on.</p><blockquote><p>A note about <code>devtool: &#39;cheap-module-eval-source-map&#39;</code>. Specifying this type of sourcemap is fast, lightweight, and results in stacktraces much more representative of your source code. They’re not exact (yet!), but we’re getting there.</p></blockquote>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/18EkSrkR6zwUeYdaw5raii/bf076831c7dd2c8d485757721a21e9bb/Screen-Shot-2018-06-20-at-5.46.48-PM.png\" alt=\"Fiddle Error\" class=\"kg-image\" width=\"1212\" height=\"148\" loading=\"lazy\"/>\n            \n            </figure><p><i>Cloudflare fiddle devtools uses source maps to point you to the correct source file. Click through to see the problematic line.</i></p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/246fUhbfWAx68lusG2fhKb/47265b387877e2d339a7c00cd4815722/Screen-Shot-2018-06-20-at-5.47.52-PM.png\" alt=\"Fiddle error source\" class=\"kg-image\" width=\"2934\" height=\"936\" loading=\"lazy\"/>\n            \n            </figure>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"src-index-ts\">src/index.ts</h4>\n      <a href=\"#src-index-ts\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <pre class=\"language-typescript\"><code class=\"language-typescript\">import { fetchWeather } from &#039;./fetch-weather&#039;\n\naddEventListener(&#039;fetch&#039;, (event: FetchEvent) =&gt; {\n  event.respondWith(handleRequest(event.request))\n})\n\nasync function handleRequest(request: Request) {\n  const weather = await fetchWeather(&#039;austin&#039;)\n  const body = `\n    ${weather.location.city}, ${weather.location.region}&lt;br&gt;\n    ${weather.item.condition.temp} ${weather.item.condition.text}\n  `.trim()\n\n  return new Response(body, {\n    headers: { &#039;Content-Type&#039;: &#039;text/html&#039; },\n  })\n}</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h4 id=\"src-fetch-weather-ts\">src/fetch-weather.ts</h4>\n      <a href=\"#src-fetch-weather-ts\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <pre class=\"language-typescript\"><code class=\"language-typescript\">/**\n * Fetch the current weather conditions and forecast for a particular location\n * @param location location string to fetch\n * @param unit temperature units (c or f)\n */\nexport async function fetchWeather(location: string, unit = &#039;f&#039;) {\n  const url = `https://query.yahooapis.com/v1/public/yql?q=select *\n  from weather.forecast\n  where u=&#039;${unit}&#039;\n    AND woeid in (\n      select woeid from geo.places(1)\n      where text=&quot;${location}&quot;\n  )&amp;format=json`\n    .split(&#039;\\n&#039;)\n    .join(&#039; &#039;)\n    // yahoo&#039;s api doesn&#039;t like spaces unless they&#039;re encoded\n    .replace(/\\s/g, &#039;%20&#039;)\n\n  const res = await fetch(url)\n\n  if (res.status &gt;= 400) {\n    throw new Error(&#039;Bad response from server&#039;)\n  }\n\n  const result = await res.json()\n\n  return result.query.results &amp;&amp; result.query.results.channel\n}</pre></code>\n            <p>Now simply run:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">npm run build &amp;&amp; npm run preview</pre></code>\n            <p>This ought to build your script and open a page very similar to:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5hNT2U1yxvTRfm5Cpa5cxR/4677b288db793b3023af2475671e48d9/Screen-Shot-2018-06-20-at-5.51.19-PM.png\" alt=\"Workers Fiddle Screenshot\" class=\"kg-image\" width=\"2522\" height=\"1852\" loading=\"lazy\"/>\n            \n            </figure><p>This is great, but instead of returning the weather for every single resource request, maybe we should only return the weather on pathnames that match a particular pattern. Something like:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">GET /weather/:city\nGET /weather/austin\nGET /weather/toronto</pre></code>\n            <p>In that pattern, <code>city</code> is a variable. Anything that starts with <code>/weather/</code> will match, and everything after will be our city. This shouldn’t match a path like <code>/weather/austin/tatious</code>. Luckily there are off-the-shelf solutions on npm to handle exactly this sort of logic.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"loading-node-modules\">Loading node modules</h3>\n      <a href=\"#loading-node-modules\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Webpack also understands how to import npm modules into your bundle. To illustrate this, we’re going to use the fantastic <a href=\"https://www.npmjs.com/package/path-to-regexp\">path-to-regexp</a> module.</p><p>Install and save the module:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">npm install -S path-to-regexp</pre></code>\n            <p>The path-to-regexp module converts the url path pattern <code>/weather/:city</code> to a regular expression. Using that regular expression, we can extract the variable <code>city</code> out of a pathname string. For instance, in the string ‘/weather/toronto’, the city variable is ‘toronto’. However, for the string ‘/users/123’, there is no match at all.</p><p>Let’s modify our <code>src/index.ts</code> file to include this new routing logic.</p>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"src-index-ts\">src/index.ts</h4>\n      <a href=\"#src-index-ts\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <pre class=\"language-typescript\"><code class=\"language-typescript\">import * as pathToRegExp from &#039;path-to-regexp&#039;\nimport { fetchWeather } from &#039;./fetch-weather&#039;\n\ntype TWeatherRequestParams = { city: string }\nconst weatherPath = &#039;/weather/:city&#039;\n\naddEventListener(&#039;fetch&#039;, (event: FetchEvent) =&gt; {\n  // Create a regular expression based on the pathname of the request\n  const weatherPathKeys: pathToRegExp.Key[] = []\n  const weatherRegex = pathToRegExp(weatherPath, weatherPathKeys)\n  const url = new URL(event.request.url)\n  const result = weatherRegex.exec(url.pathname)\n\n  // No result, return early and passthrough\n  if (!Array.isArray(result)) return\n\n  // Build the request parameters object\n  const params = weatherPathKeys.reduce(\n    (params, key, i) =&gt; {\n      params[key.name as keyof TWeatherRequestParams] = result[i + 1]\n      return params\n    },\n    {} as TWeatherRequestParams,\n  )\n\n  event.respondWith(handleWeatherRequest(params))\n})\n\nasync function handleWeatherRequest(params: TWeatherRequestParams) {\n  const weather = await fetchWeather(params.city)\n  const body = `\n    ${weather.location.city}, ${weather.location.region}&lt;br&gt;\n    ${weather.item.condition.temp} ${weather.item.condition.text}\n  `.trim()\n\n  return new Response(body, {\n    headers: { &#039;Content-Type&#039;: &#039;text/html&#039; },\n  })\n}</pre></code>\n            <p>Notice that after installing the module, all we have to do is import by its name on npm. This is because webpack knows to look inside of your node_modules directory to resolve import statement paths.</p><p>Run:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">npm run build &amp;&amp; npm run preview -- \\\n  --preview-url https://foo.bar.com/weather/austin</pre></code>\n            <p>You should see the weather for Austin, TX displayed. Congrats!</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"conclusion\">Conclusion</h3>\n      <a href=\"#conclusion\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Webpack is an incredibly robust and configurable piece of technology. It’s not just a module bundler, but rather a general static asset build system for web development. Although it was built with front-end assets in mind, it’s a perfect fit for bundling Cloudflare Service Workers.</p><p>You can view the full source of our weather script here: <a href=\"https://github.com/jrf0110/weather-workers\">github.com/jrf0110/weather-workers</a></p><hr/><p><i>If you have a worker you&#39;d like to share, or want to check out workers from other Cloudflare users, visit the </i><a href=\"https://community.cloudflare.com/tags/recipe-exchange\"><i>“Recipe Exchange”</i></a><i> in the Workers section of the </i><a href=\"https://community.cloudflare.com/c/developers/workers\"><i>Cloudflare Community Forum</i></a><i>.</i></p>",
		"id": "3Cig5qNm9MxILXx94cjpFy",
		"localeList": {
			"name": "Using Webpack to bundle your Workers modules Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2018-06-25T15:16:14.000+01:00",
		"slug": "using-webpack-to-bundle-workers",
		"tags": [
			{
				"id": "3JAY3z7p7An94s6ScuSQPf",
				"name": "Developer Platform",
				"slug": "developer-platform"
			},
			{
				"id": "6hbkItfupogJP3aRDAq6v8",
				"name": "Cloudflare Workers",
				"slug": "workers"
			},
			{
				"id": "5cye1Bh5KxFh3pKSnX8Dsy",
				"name": "Serverless",
				"slug": "serverless"
			},
			{
				"id": "78aSAeMjGNmCuetQ7B4OgU",
				"name": "JavaScript",
				"slug": "javascript"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			}
		],
		"title": "Using Webpack to bundle your Workers modules",
		"updated_at": "2025-10-24T09:38:16.109Z",
		"url": "https://blog.cloudflare.com/using-webpack-to-bundle-workers"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}