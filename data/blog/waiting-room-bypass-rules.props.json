{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "8",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Arielle Olache",
				"slug": "arielle",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/30uBJ2ZAg1oCTwCrsuUKFD/fe89d685060cca6a6774ad2590882297/arielle.jpg",
				"location": null,
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			},
			{
				"name": "Piper McCorkle",
				"slug": "piper",
				"bio": "I'm a systems engineer on the Waiting Room and Healthchecks team.",
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1MB0LDvo5MEig1PQVIfrj0/bf367b8284422795eba838c6bc3f2d50/piper.jpg",
				"location": "Brenham, TX",
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Waiting Room now offers customers more fine-tuned control over what traffic a waiting room covers. Queue only the traffic you want to with Bypass Waiting Room Rules, now available to all Enterprise customers with an Advanced Purchase of Waiting Room.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2xyTF4NoL7XvayFGSswuks/874b12688cc769f8bb285724d785c87f/waiting-room-bypass-rules.png",
		"featured": false,
		"html": "<p></p><p>Leveraging the power and versatility of Cloudflare&#39;s Ruleset Engine, Waiting Room now offers customers more fine-tuned control over their waiting room traffic. Queue only the traffic you want to with Waiting Room Bypass Rules, now available to all Enterprise customers with an Advanced Purchase of Waiting Room.</p><p>Customers depend on <a href=\"/cloudflare-waiting-room/\">Waiting Room</a> for always-on protection from unexpected and overwhelming traffic surges that would otherwise bring their site down. Waiting Room places excess users in a fully customizable virtual waiting room, admitting new visitors dynamically as spots become available on a customer’s site. Instead of throwing error pages or delivering poorly-performing site pages, Waiting Room empowers customers to take control of their end-user experience during unmanageable traffic surges.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6n3SXyNyJTLfNHzKSadZEQ/500878a533c197451d1afc42e6a1beb9/image7-2.png\" alt=\"\" class=\"kg-image\" width=\"1440\" height=\"1024\" loading=\"lazy\"/>\n            \n            </figure><p>Take control of your customer experience with a fully customizable virtual waiting room</p><p>Additionally, customers use <a href=\"/waiting-room-event-scheduling/\">Waiting Room Event Scheduling</a> to manage user flow and ensure reliable site performance before, during, and after online events such as product restocks, seasonal sales, and ticket sales. With Event Scheduling, customers schedule changes to their waiting rooms&#39; settings and custom queuing page ahead of time, with options to pre-queue early arrivers and offload event traffic from their origins after the event has concluded.</p><p>As part of the simple, no-coding-necessary process for deploying a waiting room, customers specify a hostname and path combination, which defines <a href=\"https://developers.cloudflare.com/waiting-room/get-started/#location\">the location</a> of their waiting room on their site. When a site visitor makes a preliminary request to that hostname and path or any of its subpaths, they will be issued a waiting room cookie and placed in the queue if the waiting room is queuing at that time.</p><p>The hostname and path approach to defining the placement of a waiting room is intuitive and makes it easy to deploy a waiting room to a site. But, many customers needed more granular control over what traffic and parts of their site their waiting room did or did not cover under a waiting room’s configured hostname and path. Use cases for allowing specific traffic to bypass a waiting room were varied.</p><p>Examples included allowing internal administrators site access at all times, never blocking internal user agents performing operations like synthetic monitoring, not applying waiting room to specific subpaths or query strings, or queuing only traffic from certain countries. Given the diversity of our customers’ requests to exclude traffic from a waiting room’s coverage, we built a bypass feature that gave customers the versatility necessary to deploy waiting rooms aligned with their existing site architecture and use cases. With the release of Event Scheduling, Waiting Room customers could queue <i>when</i> they wanted to; now, we are excited to announce that customers now have more flexibility to queue <i>who</i> and <i>where</i> they want to with Waiting Room Bypass Rules.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"who-gets-queued-is-up-to-you\">Who gets queued is up to you</h2>\n      <a href=\"#who-gets-queued-is-up-to-you\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Waiting Room Bypass Rules allow customers to write expressions that define what traffic should bypass their waiting room. A waiting room will not apply to incoming requests matching conditions based on one or more <a href=\"https://developers.cloudflare.com/waiting-room/additional-options/waiting-room-rules/bypass-rules/\">available fields</a>, like IP address, URI path, query string, and country. Bypass rules supersede all Waiting Room features; even in <a href=\"https://developers.cloudflare.com/waiting-room/how-to/control-waiting-room/#queue-all-visitors\">Queue-all mode</a>, event pre-queuing, or any other waiting room state, traffic matching your enabled rules’ expressions will never be queued or issued a waiting room cookie. Waiting Room rules are created via the Waiting Room API or the Waiting Room dashboard using a familiar rule management interface found throughout the Cloudflare dashboard. Waiting Room rules are managed at the individual waiting room level for precise control over each waiting room’s traffic.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2qU9yyQgWm9n7sohikI5LL/a9415c27aac27e2dd617df2876a75250/Screen-Shot-2022-11-28-at-11.35.50-AM.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"732\" loading=\"lazy\"/>\n            \n            </figure><p>Use the familiar rule builder found throughout the Cloudflare dashboard to define which traffic should bypass your waiting room.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/732mVjGlMIDtW3rOOhglfK/417683285c722cca7fd1d3538d443ccc/Screen-Shot-2022-11-28-at-12.20.02-PM.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"639\" loading=\"lazy\"/>\n            \n            </figure><p>Manage bypass rules at the individual waiting room level for precise control over each waiting room’s traffic coverage.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"built-with-the-ruleset-engine\">Built with the Ruleset Engine</h2>\n      <a href=\"#built-with-the-ruleset-engine\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We love building Cloudflare products on top of Cloudflare products; we knew that the versatility we wanted to offer to our customers with regard to what traffic a waiting room should apply to would best be achieved by integrating with Cloudflare’s powerful <a href=\"https://developers.cloudflare.com/ruleset-engine/\">Ruleset Engine</a>. The Ruleset Engine provides the infrastructure for many of our highly customizable products, such as the new <a href=\"https://developers.cloudflare.com/rules/origin-rules/\">Origin Rules</a> feature and our <a href=\"https://developers.cloudflare.com/waf/managed-rulesets/\">WAF Managed Rulesets</a>, by providing a unified way to represent the concept of “rules” and an easy-to-integrate software library for consistently executing those rules. This allows all sorts of Cloudflare products to provide extremely similar rules capabilities, with the same language for defining conditions (which can grow quite complex!) and very similar APIs.</p><p>We’ve even found that some of Waiting Room’s product functionality can be best implemented on top of the Ruleset Engine; earlier this year we migrated some select core Waiting Room logic into the Ruleset Engine, implemented as rulesets that we now transparently deploy to every zone with a waiting room. This newly migrated implementation has been running for months, and the flexibility of the Ruleset Engine will make certain future Waiting Room features easier than ever to build.</p><p>The Ruleset Engine works on two major concepts: rulesets and rules. A ruleset is a list of rules that the engine executes in order. A rule consists of a condition and an action, with the action being executed if the condition evaluates to “true”.</p><p>Under the hood, when you create the first rule for a waiting room, we create a hidden ruleset attached to that waiting room. We put together a ruleset of our own which runs on every request to your zone, dispatching to your custom ruleset if a request matches the attached waiting room. This all sounds somewhat complicated, but don’t worry. You simply manage rules at the individual waiting room level, while we abstract away the complexity of the underlying rulesets.</p><p>The Waiting Room Bypass action’s core implementation is quite simple: when the condition on one of your bypass rules is true for a request, the bypass action simply clears the flag on the request that would have told the waiting room code to kick in. This way, the bypass action ensures that Waiting Room doesn’t touch your request and the request doesn’t affect your waiting room’s statistics or queuing.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"bypass-rules-in-action\">Bypass rules in action</h2>\n      <a href=\"#bypass-rules-in-action\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Creating a bypass rule is easy and requires no coding or application changes. Let&#39;s walk through a couple of real-world scenarios to demonstrate how easy it is to deploy a bypass rule from the Waiting Room dashboard or API.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"set-up-an-administrative-ip-bypass-rule-via-the-waiting-room-dashboard\">Set up an Administrative IP Bypass Rule via the Waiting Room Dashboard</h3>\n      <a href=\"#set-up-an-administrative-ip-bypass-rule-via-the-waiting-room-dashboard\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>As mentioned before, many customers wanted to ensure that their site administrators and other internal employees–which they identify by IP address–could access their site at all times, regardless of a waiting room&#39;s queueing status. Allowing unrestricted access to specific internal employees is especially important before online events when customers pre-queue early site visitors ahead of an event&#39;s start time. Without the ability to bypass the waiting room before the event starts, internal employees could not review their event pages in a production environment, adding friction and uncertainty to their review process. Let&#39;s see how we can fix that with a Waiting Room bypass rule.</p><p>Before setting up your administrator bypass rule, you can <a href=\"https://developers.cloudflare.com/firewall/cf-dashboard/rules-lists/manage-items/\">create an IP</a> list if you have more than a handful of IPs you&#39;d like to bypass your waiting room. Then, you will need to <a href=\"https://developers.cloudflare.com/waiting-room/how-to/create-waiting-room/\">configure a waiting room</a> from the Waiting Room dashboard. From that waiting room&#39;s expanded view, navigate to Manage rules, where you can create, disable, and delete rules for a waiting room.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7nLXLofqRK0U1S8hhCwpBB/d3f9e719e190a59833947020bc20e584/Untitled-3.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"955\" loading=\"lazy\"/>\n            \n            </figure><p>Once you have created your waiting room, from that waiting room’s expanded view, select Manage rules to create Waiting Room bypass rules.</p><p>Using the rule builder, give your rule a descriptive name and build your expression. To build an expression for this example, we will select “IP Source Address” from the Field drop-down, “is in list” from the Operator drop-down, and then select the name of the IP list we created earlier.  Once we&#39;ve built the expression, we can either save this rule as a draft and deploy it later or save the rule and deploy it now.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7GVmQpVKb3VixCNl5cJMiJ/661656758a8964c5d7b6533e1cc02317/Untitled--1--2.png\" alt=\"Allow site administrators to bypass your waiting room by creating a Waiting Room bypass rule via the Waiting Room dashboard.\" class=\"kg-image\" width=\"1596\" height=\"1472\" loading=\"lazy\"/>\n            \n            </figure><p>Allow site administrators to bypass your waiting room by creating a Waiting Room bypass rule via the Waiting Room dashboard.</p><p>Once saved, the rule will appear on this waiting room&#39;s rules management page along with all other rules for this waiting room. All requests for which this rule&#39;s expression evaluates to true will bypass the waiting room. Thus, any user with an IP address from this managed list will never be queued when this rule is enabled.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3Nhijav5NcNydJBITXNrC5/b0ab6e47d6bfa28a419888f5759a9e49/Untitled--2-.png\" alt=\"Enable or disabled Waiting Room rules from an individual waiting room’s rule management dashboard.\" class=\"kg-image\" width=\"1600\" height=\"619\" loading=\"lazy\"/>\n            \n            </figure><p>Enable or disabled Waiting Room rules from an individual waiting room’s rule management dashboard.</p><p>For added oversight, there are indicators on the Waiting Room dashboard that clearly signal if a waiting room has any bypass rules enabled. Now that we have deployed the admin bypass rule, we can see from the Waiting Room table that there is an active rule for this waiting room.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4JhsSbz8HTYPiNyvHk6vSo/9f347fbe55a1a99e28582ede188147ec/Screenshot-2022-12-09-at-9.51.26-AM.png\" alt=\"Easily glean which waiting rooms have bypass rules active from the Waiting Room table.\" class=\"kg-image\" width=\"1600\" height=\"1103\" loading=\"lazy\"/>\n            \n            </figure><p>Easily glean which waiting rooms have bypass rules active from the Waiting Room table.</p>\n    <div class=\"flex anchor relative\">\n      <h2 id=\"bypass-rules-via-the-waiting-room-api-path-bypass-example\">Bypass rules via the Waiting Room API - path bypass example</h2>\n      <a href=\"#bypass-rules-via-the-waiting-room-api-path-bypass-example\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Another common customer request now achievable using Waiting Room Bypass Rules is path exclusions. As mentioned previously, a waiting room applies to all requests hitting the hostname and path combination of the configured waiting room and any URLs under that path. For many Waiting Room customers, there were specific URLs, paths, or query strings that they did not want a waiting room to apply to under their configured hostname and path. There are various reasons why a customer would want to make exceptions like this but let&#39;s consider the following use case to illustrate the utility of bypassing specific parts of a site or application.</p><p>Consider a movie ticketing platform that wants to protect its ticketing web application from purchasing surges due to blockbuster releases. They create a waiting room to cover their ticketing web app by placing it at ticketing.example.com/. After tickets are purchased, the ticketing platform sends movie-goers an email or a text which links back to a URL under ticketing.example.com/. The URL the user receives via text or email is: ticketing.example.com/myaccount/mobiletickets/userverified?ticketid=</p><p>This link opens a page in the user’s mobile browser containing a QR code that the movie theater will scan in place of a physical ticket. They want to ensure that the waiting room does not apply to customers trying to open their mobile tickets.</p><p>To do this, they would create the following bypass rule via the Waiting Room API as follows:</p><p>With a <a href=\"https://developers.cloudflare.com/waiting-room/how-to/create-waiting-room/#create-a-waiting-room-via-the-api\">waiting room already configured</a> at ticketing.example.com/, use the following API call to create a bypass rule:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">curl -X POST \\&quot;https://api.cloudflare.com/client/v4/zones/&lt;ZONE_ID&gt;/waiting_rooms/&lt;ROOM_ID&gt;/rules&quot; \\-H &quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot; \\\n-d &#039;{    \n&quot;description&quot;: &quot;ticket holders bypass waiting room&quot;,    \n&quot;expression&quot;: &quot;ends_with(http.request.uri.path, \\&quot;/userverified\\&quot;)  \n &quot;action&quot;: &quot;bypass_waiting_room&quot;\n}&#039;</pre></code>\n            <p>Let’s break down this call. First, there is the URL, which needs to be populated with the zone id and the waiting room id. Then we pass our API token in the Authorization header. This call will create a new Waiting Room rule that will be added after any existing rules for this waiting room.</p><p>Within the body of the call, first define an optional description parameter. Give the rule an optional <code>description</code> to indicate the purpose of the rule for easy reference later.</p><p><code>&quot;description&quot;: &quot;ticket holders bypass waiting room&quot;</code></p><p>Next, write the expression, which defines the exact traffic which should bypass the waiting room. In this example, customers using the direct link sent via text should bypass the waiting room. These direct links end with the path <code>userverified</code> so create an <code>ends_with</code> condition.</p><p><code>&quot;expression&quot;: &quot;ends_with(http.request.uri.path, \\&quot;/userverified\\&quot;)</code></p><p>When creating a bypass rule for path, query string, or URLs, make sure to include in the expression exclusions for <a href=\"https://developers.cloudflare.com/waiting-room/additional-options/waiting-room-rules/bypass-rules/#a-note-on-subrequests\">subrequests that load assets</a> on the pages covered by a waiting room. Let’s assume in this example we are hosting assets on a different subdomain not covered by the waiting room. Therefore, we do not need to include these subrequests in the expression.</p><p>Lastly, set the action parameter to <code>bypass_waiting_room</code> to indicate that this traffic should bypass the waiting room and deploy the rule. This customer&#39;s waiting room now covers precisely the parts of their application they want to cover. Their waiting room will protect their web application from ticket purchasing traffic while ensuring that customers who need to display their mobile tickets at the movie theater can do so reliably without being placed in a Waiting Room queue.</p><p>With the addition of Waiting Room Bypass Rules, customers now have more flexibility to deploy waiting rooms on their terms, to cover exactly the traffic they want. For more on Waiting Room Bypass Rules and Waiting Room, <a href=\"https://developers.cloudflare.com/waiting-room/additional-options/waiting-room-rules/bypass-rules/\">check out our developer documentation</a>.</p><p>Not using Cloudflare yet? Start now with our <a href=\"https://www.cloudflare.com/plans/business/\">Business plan</a> which includes one basic Waiting Room or <a href=\"https://www.cloudflare.com/plans/enterprise/discover/contact/\">contact us</a> about our advanced Waiting Room with Event Scheduling, Customized Templates, and Waiting Room Bypass Rules available on our <a href=\"https://www.cloudflare.com/plans/enterprise/\">Enterprise plan</a>.</p>",
		"id": "5WrPFRu8C4Q6DQPN7d9rOW",
		"localeList": {
			"name": "Introducing Waiting Room Bypass Rules Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Leveraging the power and versatility of Cloudflare's Ruleset Engine, Waiting Room now offers customers more fine-tuned control over what traffic a waiting room covers. Queue only the traffic you want to with Bypass Waiting Room Rules, now available to all Enterprise customers with an Advanced Purchase of Waiting Room.",
		"metadata": {
			"title": "Introducing Waiting Room Bypass Rules",
			"description": "Leveraging the power and versatility of Cloudflare's Ruleset Engine, Waiting Room now offers customers more fine-tuned control over what traffic a waiting room covers. Queue only the traffic you want to with Bypass Waiting Room Rules, now available to all Enterprise customers with an Advanced Purchase of Waiting Room.",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2dio1Qu6NfHcfP4AnhKdja/3cb640f8b2d5ca85f7cea4adb90f6b3c/waiting-room-bypass-rules-JXOh9Y.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2023-01-19T14:00:00.000+00:00",
		"slug": "waiting-room-bypass-rules",
		"tags": [
			{
				"id": "79jLdGrSe87cix3F6A5Snu",
				"name": "Waiting Room",
				"slug": "waiting-room"
			},
			{
				"id": "6QktrXeEFcl4e2dZUTZVGl",
				"name": "Product News",
				"slug": "product-news"
			},
			{
				"id": "36Dg2NwTgUHhrlE0FRpSdJ",
				"name": "Application Services",
				"slug": "application-services"
			}
		],
		"title": "Introducing Waiting Room Bypass Rules",
		"updated_at": "2025-10-24T11:23:26.244Z",
		"url": "https://blog.cloudflare.com/waiting-room-bypass-rules"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}