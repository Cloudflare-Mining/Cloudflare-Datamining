{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "2",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "John Graham-Cumming",
				"slug": "john-graham-cumming",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5vGNsXzZrtSLn2X30pnpUY/6f350e7dd36058a6422f9199b452bb02/john-graham-cumming.jpg",
				"location": "Lisbon, Portugal",
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Last week Troy Hunt launched his Pwned Password v2 service which has an API handled and cached by Cloudflare using a clever anonymity scheme.  The following simple code can check if a password exists in Troy's database without sending the password to Troy.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2Lee0CvRCuqSKPD3Ig17s2/038a6ef1154aa9bf46d906f3db6624c3/using-cloudflare-workers-to-identify-pwned-passwords.png",
		"featured": false,
		"html": "<p>Last week Troy Hunt launched his <a href=\"https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2/\">Pwned Password v2</a> service which has an API handled and cached by Cloudflare using a <a href=\"/validating-leaked-passwords-with-k-anonymity/\">clever anonymity scheme</a>.</p><p>The following simple code can check if a password exists in Troy&#39;s database without sending the password to Troy. The details of how it works are found in the blog post above.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">use strict;\nuse warnings;\n\nuse LWP::Simple qw/$ua get/;\n$ua-&gt;agent(&#039;Cloudflare Test/0.1&#039;);\nuse Digest::SHA1 qw/sha1_hex/;\n\nuc(sha1_hex($ARGV[0]))=~/^(.{5})(.+)/;\nprint get(&quot;https://api.pwnedpasswords.com/range/$1&quot;)=~/$2/?&#039;Pwned&#039;:&#039;Ok&#039;, &quot;\\n&quot;;</pre></code>\n            <p>It&#39;s just as easy to implement the same check in other languages, such as JavaScript, which made me realize that I could incorporate the check into a <a href=\"/introducing-cloudflare-workers/\">Cloudflare Worker</a>. With a little help from people who know JavaScript far better than me, I wrote the <a href=\"https://gist.github.com/jgrahamc/21f31c8fb4b2c27bda4f605197d5143f\">following Worker</a>:</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">addEventListener(&#039;fetch&#039;, event =&gt; {\n  event.respondWith(fetchAndCheckPassword(event.request))\n})\n\nasync function fetchAndCheckPassword(req) {\n  if (req.method == &quot;POST&quot;) {\n    try {\n      const post = await req.formData()\n      const pwd = post.get(&#039;password&#039;)\n      const enc = new TextEncoder(&quot;utf-8&quot;).encode(pwd)\n\n      let hash = await crypto.subtle.digest(&quot;SHA-1&quot;, enc)\n      let hashStr = hex(hash).toUpperCase()\n      \n      const prefix = hashStr.substring(0, 5)\n      const suffix = hashStr.substring(5)\n\n      const pwndpwds = await fetch(&#039;https://api.pwnedpasswords.com/range/&#039; + prefix)\n      const t = await pwndpwds.text()\n      const pwnd = t.includes(suffix)\n\n      let newHdrs = new Headers(req.headers)\n      newHdrs.set(&#039;Cf-Password-Pwnd&#039;, pwnd?&#039;YES&#039;:&#039;NO&#039;)\n\n      const init = {\n        method: &#039;POST&#039;,\n        headers: newHdrs,\n        body: post\n      }\n\n      return await fetch(req.url, init)    \n    } catch (err) {\n      return new Response(&#039;Internal Error&#039;)\n    }\n  }\n  \n  return await fetch(req)\n}\n\nfunction hex(a) {\n  var h = &quot;&quot;\n  var b = new Uint8Array(a)\n  for(var i = 0; i &lt; b.length; i++){\n    var hi = b[i].toString(16)\n    h += hi.length === 1?&quot;0&quot;+hi:hi\n  }\n  return h\n}</pre></code>\n            <p>This Worker can be used to intercept a request passing through Cloudflare to a Cloudflare site. It looks at POST requests and extracts a field called <code>password</code> and checks it against Troy Hunt&#39;s service.</p><p>It then adds an HTTP request header, <code>Cf-Password-Pwned</code>, with either the value <code>YES</code> or <code>NO</code> depending on whether the password being handled is found in the database or not.</p><p>The POST request is then passed on to the origin server for handling, with the extra header inserted. This could, for example, be used on a signup page to check whether the password a user is hoping to use has already been found in a leak. The server would simply look at the header.</p><p>Clearly, this code isn&#39;t completely production ready (it does a bad job of handling failure, for example), but it gives a good idea of the power of a Cloudflare Worker to perform a subrequest to an API as part of normal request processing by Cloudflare and augment at request with information.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"trying-it-out\">Trying it out</h3>\n            <a href=\"#trying-it-out\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>To test it out I created a simple page that just returns the received HTTP request headers as text and deployed this as a &#39;signup&#39; page with the Worker code above routed to it.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6p6dvgMpxz9HWG5YylXrik/e96f93eded1a139c56086104e532da6b/Screen-Shot-2018-02-26-at-11.23.45.png\" alt=\"Screen-Shot-2018-02-26-at-11.23.45\" class=\"kg-image\" width=\"1240\" height=\"596\" loading=\"lazy\"/>\n            \n            </figure><p>And checked the a simple GET request was <i>not</i> handled by the Worker (notice that the <code>Cf-Password-Pwned</code> header is not present.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ curl https://signup.example.com\nHost: signup.example.com\nConnection: Keep-Alive\nAccept-Encoding: gzip\nCf-Ipcountry: US\nCf-Ray: 3f329308132f92b8-SJC\nX-Forwarded-Proto: https\nCf-Visitor: {&quot;scheme&quot;:&quot;https&quot;}\nAccept: */*\nUser-Agent: curl/7.26.0</pre></code>\n            <p>But a POST request with a password results in an extra header. Clearly no one should be using the password <code>12345</code>.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ curl -X POST -d &#039;password=12345&#039; https://signup.example.com\nHost: signup.example.com\nConnection: Keep-Alive\nAccept-Encoding: gzip\nCf-Ipcountry: US\nCf-Ray: 3f3294e714a36d42-SJC\nContent-Length: 130\nX-Forwarded-Proto: https\nCf-Visitor: {&quot;scheme&quot;:&quot;https&quot;}\nContent-Type: application/x-www-form-urlencoded\nAccept: */*\nCf-Password-Pwnd: YES\nUser-Agent: curl/7.26.0</pre></code>\n            <p>But it looks like the password <code>kRc4qMwAtexDVZVygPnSt7LP5jPFsUDt</code> is safe for the time being:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">$ curl -X POST -d &#039;password=kRc4qMwAtexDVZVygPnSt7LP5jPFsUDt&#039; https://signup.example.com\nHost: signup.example.com\nConnection: Keep-Alive \nAccept-Encoding: gzip\nCf-Ipcountry: US\nCf-Ray: 3f329675e7f29625-SJC\nContent-Length: 157\nX-Forwarded-Proto: https\nCf-Visitor: {&quot;scheme&quot;:&quot;https&quot;}\nContent-Type: application/x-www-form-urlencoded\nAccept: */*\nCf-Password-Pwnd: NO\nUser-Agent: curl/7.26.0</pre></code>\n            <p>The power of Cloudflare Workers comes from the ability to run standard JavaScript written against the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\">Service Workers API</a> on Cloudflare&#39;s edge nodes around the world. Small snippets of code can be used to transform and enhance requests and responses, build responses from multiple API calls, and interact with the Cloudflare cache.</p><p>Read more in the <a href=\"https://developers.cloudflare.com/workers/\">developer documentation</a>.</p><hr/><p><i>If you have a worker you&#39;d like to share, or want to check out workers from other Cloudflare users, visit the </i><a href=\"https://community.cloudflare.com/tags/recipe-exchange\"><i>“Recipe Exchange”</i></a><i> in the Workers section of the </i><a href=\"https://community.cloudflare.com/c/developers/workers\"><i>Cloudflare Community Forum</i></a><i>.</i></p>",
		"id": "NGbAdBYqiYoKOCBhmgVkN",
		"localeList": {
			"name": "Using Cloudflare Workers to identify pwned passwords Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2018-02-26T12:04:56.000+00:00",
		"slug": "using-cloudflare-workers-to-identify-pwned-passwords",
		"tags": [
			{
				"id": "2TOtJQifwXjIR75fc5l7ia",
				"name": "Passwords",
				"slug": "passwords"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			},
			{
				"id": "5cye1Bh5KxFh3pKSnX8Dsy",
				"name": "Serverless",
				"slug": "serverless"
			},
			{
				"id": "6hbkItfupogJP3aRDAq6v8",
				"name": "Cloudflare Workers",
				"slug": "workers"
			},
			{
				"id": "6Mp7ouACN2rT3YjL1xaXJx",
				"name": "Security",
				"slug": "security"
			},
			{
				"id": "6lhzEBz2B56RKa4nUEAGYJ",
				"name": "Programming",
				"slug": "programming"
			},
			{
				"id": "3JAY3z7p7An94s6ScuSQPf",
				"name": "Developer Platform",
				"slug": "developer-platform"
			}
		],
		"title": "Using Cloudflare Workers to identify pwned passwords",
		"updated_at": "2024-10-10T00:33:42.821Z",
		"url": "https://blog.cloudflare.com/using-cloudflare-workers-to-identify-pwned-passwords"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}