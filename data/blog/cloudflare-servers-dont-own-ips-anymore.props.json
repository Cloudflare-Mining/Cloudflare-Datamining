{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "9",
	"locale": "en-us",
	"localesAvailable": [
		"zh-cn",
		"zh-tw",
		"fr-fr",
		"de-de",
		"ja-jp",
		"pt-br",
		"es-es",
		"ru-ru"
	],
	"post": {
		"authors": [
			{
				"name": "Marek Majkowski",
				"slug": "marek-majkowski",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1JuU5qavgwVeqR8BAUrd6U/3a0d0445d41c9a3c42011046efe9c37b/marek-majkowski.jpeg",
				"location": null,
				"website": null,
				"twitter": "@majek04",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "In this blog we'll discuss how we manage Cloudflare IP addresses\nused to retrieve the data from the Internet, how our egress\nnetwork design has evolved, how we optimized it for best use\nof available IP space and introduce our soft-anycast technology",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7AE1g6qtbDnerZjq0ThKBS/89239c6de5062b4ca4757ec6a3c05966/cloudflare-servers-dont-own-ips-anymore.png",
		"featured": false,
		"html": "<p><i></i></p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/27jjBnvTr1dvuTNt8baVMj/5244e0d8f89ffd15d4bf51a15e646625/image11-3.png\" alt=\"Cloudflare servers don't own IPs anymore – so how do they connect to the Internet?\" class=\"kg-image\" width=\"1200\" height=\"675\" loading=\"lazy\"/>\n            \n            </figure><p>A lot of Cloudflare&#39;s technology is well documented. For example, how we handle traffic between the eyeballs (clients) and our servers has been discussed many times on this blog: “<a href=\"/a-brief-anycast-primer/\">A brief primer on anycast (2011)</a>”, &quot;<a href=\"/cloudflares-architecture-eliminating-single-p/\">Load Balancing without Load Balancers (2013)</a>&quot;, &quot;<a href=\"/path-mtu-discovery-in-practice/\">Path MTU discovery in practice (2015)</a>&quot;,  &quot;<a href=\"/unimog-cloudflares-edge-load-balancer/\">Cloudflare&#39;s edge load balancer (2020)</a>&quot;, &quot;<a href=\"/tubular-fixing-the-socket-api-with-ebpf/\">How we fixed the BSD socket API (2022)</a>&quot;.</p><p>However, we have rarely talked about the second part of our networking setup — how our servers fetch the content from the Internet. In this blog we’re going to cover this gap. We&#39;ll discuss how we manage Cloudflare IP addresses used to retrieve the data from the Internet, how our egress network design has evolved and how we optimized it for best use of available IP space.</p><p>Brace yourself. We have a lot to cover.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"terminology-first\">Terminology first!</h3>\n            <a href=\"#terminology-first\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/01iopATg1CQGchxawLCk1U/9d8582351fed8929930c18c78321f194/image8-4.png\" alt=\"\" class=\"kg-image\" width=\"2000\" height=\"600\" loading=\"lazy\"/>\n            \n            </figure><p>Each Cloudflare server deals with many kinds of networking traffic, but two rough categories stand out:</p><ul><li><p><i>Internet sourced traffic</i> - Inbound connections initiated by eyeball to our servers. In the context of this blog post we&#39;ll call these &quot;<b>ingress</b> connections&quot;.</p></li><li><p><i>Cloudflare sourced traffic</i> - Outgoing connections initiated by our servers to other hosts on the Internet. For brevity, we&#39;ll call these &quot;<b>egress</b> connections&quot;.</p></li></ul><p>The egress part, while rarely discussed on this blog, is critical for our operation. Our servers must initiate outgoing connections to get their jobs done! Like:</p><ul><li><p>In our CDN product, before the content is cached, it&#39;s fetched from the origin servers. See &quot;<a href=\"/how-we-built-pingora-the-proxy-that-connects-cloudflare-to-the-internet/\">Pingora, the proxy that connects Cloudflare to the Internet (2022)</a>&quot;, <a href=\"/argo-v2/\">Argo</a> and <a href=\"/tiered-cache-smart-topology/\">Tiered Cache</a>.</p></li><li><p>For the <a href=\"https://www.cloudflare.com/products/cloudflare-spectrum/\">Spectrum</a> product, each ingress TCP connection results in one egress connection.</p></li><li><p><a href=\"https://workers.cloudflare.com/\">Workers</a> often run multiple subrequests to construct an HTTP response. Some of them might be querying servers to the Internet.</p></li><li><p>We also operate client-facing forward proxy products - like WARP and Cloudflare Gateway. These proxies deal with eyeball connections destined to the Internet. Our servers need to establish connections to the Internet on behalf of our users.</p></li></ul><p>And so on.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"anycast-on-ingress-unicast-on-egress\">Anycast on ingress, unicast on egress</h3>\n            <a href=\"#anycast-on-ingress-unicast-on-egress\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/WOoxT0QUqaGhBwa0lSgRu/15aba7b2dbf84e647d84dfa3a5adeeb2/image9-3.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"940\" loading=\"lazy\"/>\n            \n            </figure><p>Our ingress network architecture is very different from the egress one. On ingress, the connections sourced from the Internet are handled exclusively by our anycast IP ranges. Anycast is a technology where each of our data centers &quot;announces&quot; and can handle the same IP ranges. With many destinations possible, how does the Internet know where to route the packets? Well, the eyeball packets are routed towards the closest data center based on Internet BGP metrics, often it&#39;s also geographically the closest one. Usually, the BGP routes don&#39;t change much, and each eyeball IP can be expected to be routed to a single data center.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7jiVD7EKAKmWRoIN6FlrMz/f7b12c24fcf94a56e44638f3f74f955a/image10-2.png\" alt=\"\" class=\"kg-image\" width=\"1820\" height=\"690\" loading=\"lazy\"/>\n            \n            </figure><p>However, while anycast works well in the ingress direction, it can&#39;t operate on egress. Establishing an outgoing connection from an anycast IP won&#39;t work. Consider the response packet. It&#39;s likely to be routed back to a wrong place - a data center geographically closest to the sender, not necessarily the source data center!</p><p>For this reason, until recently, we established outgoing connections in a straightforward and conventional way: each server was given its own unicast IP address. &quot;Unicast IP&quot; means there is only one server using that address in the world. Return packets will work just fine and get back exactly to the right server identified by the unicast IP.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2GWAHkJLOKz7tR9rIgwfgG/5b7e68b8e02942697d7de1fbf6d74b0e/image5-16.png\" alt=\"\" class=\"kg-image\" width=\"1360\" height=\"600\" loading=\"lazy\"/>\n            \n            </figure>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"segmenting-traffic-based-on-egress-ip\">Segmenting traffic based on egress IP</h3>\n            <a href=\"#segmenting-traffic-based-on-egress-ip\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Originally connections sourced by Cloudflare were mostly HTTP fetches going to origin servers on the Internet. As our product line grew, so did the variety of traffic. The most notable example is <a href=\"/1111-warp-better-vpn/\">our WARP app</a>. For WARP, our servers operate a forward proxy, and handle the traffic sourced by end-user devices. It&#39;s done without the same degree of intermediation as in our <a href=\"https://www.cloudflare.com/application-services/products/cdn/\">CDN product</a>. This creates a problem. Third party servers on the Internet — like the origin servers — must be able to distinguish between connections coming from Cloudflare services and our WARP users. Such traffic segmentation is traditionally done by using different IP ranges for different traffic types (although recently we introduced more robust techniques like <a href=\"https://developers.cloudflare.com/ssl/origin-configuration/authenticated-origin-pull/\">Authenticated Origin Pulls</a>).</p><p>To work around the trusted vs untrusted traffic pool differentiation problem, we added an untrusted WARP IP address to each of our servers:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2hudtFCXBWUe1aRFIfcH7s/47bca3701568a8562029e41334d79692/image4-30.png\" alt=\"\" class=\"kg-image\" width=\"1560\" height=\"600\" loading=\"lazy\"/>\n            \n            </figure>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"country-tagged-egress-ip-addresses\">Country tagged egress IP addresses</h3>\n            <a href=\"#country-tagged-egress-ip-addresses\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>It quickly became apparent that trusted vs untrusted weren&#39;t the only tags needed. For WARP service we also need country tags. For example, United Kingdom based WARP users expect the bbc.com website to just work. However, the BBC restricts many of its services to people just in the UK.</p><p>It does this by <i>geofencing</i> — using a database mapping public IP addresses to countries, and allowing only the UK ones. Geofencing is widespread on today&#39;s Internet. To avoid geofencing issues, we need to choose specific egress addresses tagged with an appropriate country, depending on WARP user location. Like many other parties on the Internet, we tag our egress IP space with country codes and publish it as a geofeed (like <a href=\"https://mask-api.icloud.com/egress-ip-ranges.csv\">this one</a>). Notice, the published geofeed is just data. The fact that an IP is tagged as say UK does not mean it is served from the UK, it just means the operator wants it to be geolocated to the UK. Like many things on the Internet, it is based on trust.</p><p>Notice, at this point we have three independent geographical tags:</p><ul><li><p>the country tag of the WARP user - the eyeball connecting IP</p></li><li><p>the location of the data center the eyeball connected to</p></li><li><p>the country tag of the egressing IP</p></li></ul><p>For best service, we want to choose the egressing IP so that its country tag matches the country from the eyeball IP. But egressing from a specific country tagged IP is challenging: our data centers serve users from all over the world, potentially from many countries! Remember: due to anycast we don&#39;t directly control the ingress routing. Internet geography doesn’t always match physical geography. For example our London data center receives traffic not only from users in the United Kingdom, but also from Ireland, and Saudi Arabia. As a result, our servers in London need many WARP egress addresses associated with many countries:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6rcN3OCsVAvpWBiER4JHgI/6edbc6ec71af73c39d13c52e8e50b4e0/image2-52.png\" alt=\"\" class=\"kg-image\" width=\"1400\" height=\"720\" loading=\"lazy\"/>\n            \n            </figure><p>Can you see where this is going? The problem space just explodes! Instead of having one or two egress IP addresses for each server, now we require dozens, and <a href=\"/amazon-2bn-ipv4-tax-how-avoid-paying\">IPv4 addresses aren&#39;t cheap</a>. With this design, we need many addresses per server, and we operate thousands of servers. This architecture becomes very expensive.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"is-anycast-a-problem\">Is anycast a problem?</h3>\n            <a href=\"#is-anycast-a-problem\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Let me recap: with anycast ingress we don&#39;t control which data center the user is routed to. Therefore, each of our data centers must be able to egress from an address with any conceivable tag. Inside the data center we also don&#39;t control which server the connection is routed to. There are potentially many tags, many data centers, and many servers inside a data center.</p><p>Maybe the problem is the ingress architecture? Perhaps it&#39;s better to use a traditional networking design where a specific eyeball is routed with <a href=\"https://www.cloudflare.com/learning/dns/what-is-dns/\">DNS</a> to a specific data center, or even a server?</p><p>That&#39;s one way of thinking, but we decided against it. We like our anycast on ingress. It brings us many advantages:</p><ul><li><p><b>Performance</b>: with anycast, by definition, the eyeball is routed to the closest (by BGP metrics) data center. This is usually the fastest data center for a given user.</p></li><li><p><b>Automatic failover</b>: if one of our data centers becomes unavailable, the traffic will be instantly, automatically re-routed to the next best place.</p></li><li><p><b>DDoS resilience</b>: during a <a href=\"https://www.cloudflare.com/learning/ddos/what-is-a-ddos-attack/\">denial of service attack</a> or a traffic spike, the load is automatically balanced across many data centers, significantly reducing the impact.</p></li><li><p><b>Uniform software</b>: The functionality of every data center and of every server inside a data center is identical. We use the same software stack on all the servers around the world. Each machine can perform any action, for any product. This enables easy debugging and good scalability.</p></li></ul><p>For these reasons we&#39;d like to keep the anycast on ingress. We decided to solve the issue of egress address cardinality in some other way.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"solving-a-million-dollar-problem\">Solving a million dollar problem</h3>\n            <a href=\"#solving-a-million-dollar-problem\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Out of the thousands of servers we operate, every single one should be able to use an egress IP with any of the possible tags. It&#39;s easiest to explain our solution by first showing two extreme designs.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1UoCyD5rIsCDc6nAMY1jvp/646cd025de3707b60b205682f3b140c8/image6-10.png\" alt=\"\" class=\"kg-image\" width=\"1400\" height=\"720\" loading=\"lazy\"/>\n            \n            </figure><p><b>Each server owns all the needed IPs:</b> each server has all the specialized egress IPs with the needed tags.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3s0xwHrfjPQpusPeq9HTtX/3338238e28e89abcaa5b4fc3eff2cc09/image12-1.png\" alt=\"\" class=\"kg-image\" width=\"1400\" height=\"720\" loading=\"lazy\"/>\n            \n            </figure><p><b>One server owns the needed IP:</b> a specialized egress IP with a specific tag lives in one place, other servers forward traffic to it.</p><p>Both options have pros and cons:</p><!--kg-card-begin: html--><table>\n<thead>\n  <tr>\n    <th>Specialized IP on every server</th>\n    <th>Specialized IP on one server</th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td>Super expensive $$$, every server needs many IP addresses.</td>\n    <td>Cheap $, only one specialized IP needed for a tag.</td>\n  </tr>\n  <tr>\n    <td>Egress always local - fast</td>\n    <td>Egress almost always forwarded - slow</td>\n  </tr>\n  <tr>\n    <td>Excellent reliability - every server is independent</td>\n    <td>Poor reliability - introduced chokepoints</td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html-->\n          <div class=\"flex anchor relative\">\n            <h3 id=\"theres-a-third-way\">There&#39;s a third way</h3>\n            <a href=\"#theres-a-third-way\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>We&#39;ve been thinking hard about this problem. Frankly, the first extreme option of having every needed IP available locally on every Cloudflare server is not totally unworkable. This is, roughly, what we were able to pull off for IPv6. With IPv6, access to the large needed IP space is not a problem.</p><p>However, in IPv4 neither option is acceptable. The first offers fast and reliable egress, but requires great cost — the IPv4 addresses needed are expensive. The second option uses the smallest possible IP space, so it&#39;s cheap, but compromises on performance and reliability.</p><p>The solution we devised is a compromise between the extremes. The rough idea is to change the assignment unit. Instead of assigning one /32 IPv4 address for each server, we devised a method of assigning a /32 IP per data center, and then sharing it among physical servers.</p><!--kg-card-begin: html--><table>\n<thead>\n  <tr>\n    <th>Specialized IP on every server</th>\n    <th>Specialized IP per data center</th>\n    <th>Specialized IP on one server</th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td>Super expensive $$$</td>\n    <td>Reasonably priced $$</td>\n    <td>Cheap $</td>\n  </tr>\n  <tr>\n    <td>Egress always local - fast</td>\n    <td>Egress always local - fast</td>\n    <td>Egress almost always forwarded - slow</td>\n  </tr>\n  <tr>\n    <td>Excellent reliability - every server is independent</td>\n    <td>Excellent reliability - every server is independent</td>\n    <td>Poor reliability - many choke points</td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html-->\n          <div class=\"flex anchor relative\">\n            <h3 id=\"sharing-an-ip-inside-data-center\">Sharing an IP inside data center</h3>\n            <a href=\"#sharing-an-ip-inside-data-center\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>The idea of sharing an IP among servers is not new. Traditionally this can be achieved by Source-NAT on a router. Sadly, the sheer number of egress IP&#39;s we need and the size of our operation, prevents us from relying on stateful firewall / NAT at the router level. We also dislike shared state, so we&#39;re not fans of distributed NAT installations.</p><p>What we chose instead, is splitting an egress IP across servers by <b>a port range</b>. For a given egress IP, each server owns a small portion of available source ports - a port slice.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6ruhT8POdI4Vd3yDd4WIrh/5204f34fbe65306902cb0b12216cedd4/image1-68.png\" alt=\"\" class=\"kg-image\" width=\"1400\" height=\"720\" loading=\"lazy\"/>\n            \n            </figure><p>When return packets arrive from the Internet, we have to route them back to the correct machine. For this task we&#39;ve customized &quot;Unimog&quot; - our L4 XDP-based load balancer - (&quot;<a href=\"/unimog-cloudflares-edge-load-balancer/\">Unimog, Cloudflare&#39;s load balancer (2020)</a>&quot;) and it&#39;s working flawlessly.</p><p>With a port slice of say 2,048 ports, we can share one IP among 31 servers. However, there is always a possibility of running out of ports. To address this, we&#39;ve worked hard to be able to reuse the egress ports efficiently. See the &quot;<a href=\"/how-to-stop-running-out-of-ephemeral-ports-and-start-to-love-long-lived-connections/\">How to stop running out of ports (2022)</a>&quot;, &quot;<a href=\"https://lpc.events/event/16/contributions/1349/\">How to share IPv4 addresses (2022)</a>&quot; and our <a href=\"https://cloudflare.tv/event/oZKxMJg4\">Cloudflare.TV segment</a>.</p><p>This is pretty much it. Each server is aware which IP addresses and port slices it owns. For inbound routing Unimog inspects the ports and dispatches the packets to appropriate machines.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"sharing-a-subnet-between-data-centers\">Sharing a subnet between data centers</h3>\n            <a href=\"#sharing-a-subnet-between-data-centers\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>This is not the end of the story though, we haven&#39;t discussed how we can route a single /32 address into a datacenter. Traditionally, in the public Internet, it&#39;s only possible to route subnets with granularity of /24 or 256 IP addresses. In our case this would lead to great waste of IP space.</p><p>To solve this problem and improve the utilization of our IP space, we deployed our egress ranges as... <b>anycast</b>! With that in place, we customized Unimog and taught it to forward the packets over our <a href=\"/cloudflare-backbone-internet-fast-lane/\">backbone network</a> to the right data center. Unimog maintains a database like this:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">198.51.100.1 - forward to LHR\n198.51.100.2 - forward to CDG\n198.51.100.3 - forward to MAN\n...</pre></code>\n            <p>With this design, it doesn&#39;t matter to which data center return packets are delivered. Unimog can always fix it and forward the data to the right place. Basically, while at the <a href=\"https://www.cloudflare.com/learning/security/glossary/what-is-bgp/\">BGP layer</a> we are using anycast, due to our design, semantically an IP identifies a datacenter and an IP and port range identify a specific machine. It behaves almost like a unicast.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1aQ9FLJSpyr3OjcEynnyse/0274312eac4adaa6f391e7e48d3d6e3c/image7-6.png\" alt=\"\" class=\"kg-image\" width=\"1720\" height=\"880\" loading=\"lazy\"/>\n            \n            </figure><p>We call this technology stack &quot;<b>soft-unicast</b>&quot; and it feels magical. It&#39;s like we did unicast in software over anycast in the BGP layer.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"soft-unicast-is-indistinguishable-from-magic\">Soft-unicast is indistinguishable from magic</h3>\n            <a href=\"#soft-unicast-is-indistinguishable-from-magic\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>With this setup we can achieve significant benefits:</p><ul><li><p>We are able to share a /32 egress IP amongst <b>many servers</b>.</p></li><li><p>We can spread a single subnet across <b>many data centers</b>, and change it easily on the fly. This allows us to fully use our egress IPv4 ranges.</p></li><li><p>We can <b>group similar IP addresses</b> together. For example, all the IP addresses tagged with the &quot;UK&quot; tag might form a single continuous range. This reduces the size of the published geofeed.</p></li><li><p>It&#39;s easy for us to <b>onboard new egress IP ranges</b>, like customer IP&#39;s. This is useful for some of our products, like <a href=\"https://www.cloudflare.com/products/zero-trust/\">Cloudflare Zero Trust</a>.</p></li></ul><p>All this is done at sensible cost, at no loss to performance and reliability:</p><ul><li><p>Typically, the user is able to egress directly from the closest datacenter, providing the <b>best possible performance</b>.</p></li><li><p>Depending on the actual needs we can allocate or release the IP addresses. This gives us <b>flexibility with the IP</b> cost management, we don&#39;t need to overspend upfront.</p></li><li><p>Since we operate multiple egress IP addresses in different locations, the <b>reliability is not compromised</b>.</p></li></ul>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"the-true-location-of-our-ip-addresses-is-the-cloud\">The true location of our IP addresses is: “the cloud”</h3>\n            <a href=\"#the-true-location-of-our-ip-addresses-is-the-cloud\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>While soft-unicast allows us to gain great efficiency, we&#39;ve hit some issues. Sometimes we get a question &quot;Where does this IP physically exist?&quot;. But it doesn&#39;t have an answer! Our egress IPs don&#39;t exist physically anywhere. From a BGP standpoint our egress ranges are anycast, so they live everywhere. Logically each address is used in one data center at a time, but we can move it around on demand.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"content-delivery-networks-misdirect-users\">Content Delivery Networks misdirect users</h3>\n            <a href=\"#content-delivery-networks-misdirect-users\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5sCk5BkrFFweDjmy5zQnHs/058bef00f049ab0445b59d70a422f5d0/image3-43.png\" alt=\"\" class=\"kg-image\" width=\"1680\" height=\"900\" loading=\"lazy\"/>\n            \n            </figure><p>As another example of problems, here&#39;s one issue we&#39;ve hit with third party CDNs. As we mentioned before, there are three country tags in our pipeline:</p><ul><li><p>The country tag of the IP eyeball is connecting from.</p></li><li><p>The location of our data center.</p></li><li><p>The country tag of the IP addresses we chose for the egress connections.</p></li></ul><p>The fact that our egress address is tagged as &quot;UK&quot; doesn&#39;t always mean it actually is being used in the UK. We’ve had cases when a UK-tagged WARP user, due to the maintenance of our LHR data center, was routed to Paris. A popular <a href=\"https://www.cloudflare.com/learning/cdn/what-is-a-cdn/\">CDN</a> performed a reverse-lookup of our egress IP, found it tagged as &quot;UK&quot;, and directed the user to a London CDN server. This is generally OK... but we actually egressed from Paris at the time. This user ended up routing packets from their home in the UK, to Paris, and back to the UK. This is bad for performance.</p><p>We address this issue by performing DNS requests in the egressing data center. For DNS we use IP addresses tagged with the location of the <b>data center</b>, not the intended geolocation for the user. This generally fixes the problem, but sadly, there are still some exceptions.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"the-future-is-here\">The future is here</h3>\n            <a href=\"#the-future-is-here\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Our 2021 experiments with <a href=\"/addressing-agility/\">Addressing Agility</a> proved we have plenty of opportunity to innovate with the addressing of the ingress. Soft-unicast shows us we can achieve great flexibility and density on the egress side.</p><p>With each new product, the number of tags we need on the egress grows - from traffic trustworthiness, product category to geolocation. As the pool of usable IPv4 addresses shrinks, we can be sure there will be more innovation in the space. Soft-unicast is our solution, but for sure it&#39;s not our last development.</p><p>For now though, it seems like we&#39;re moving away from traditional unicast. Our egress IP&#39;s really don&#39;t exist in a fixed place anymore, and some of our servers don&#39;t even own a true unicast IP nowadays.</p>",
		"id": "60l7qhQ3DKYiHtI3TduJSc",
		"localeList": {
			"name": "Cloudflare servers don't own IPs anymore – so how do they connect to the Internet? Config",
			"enUS": "English for Locale",
			"zhCN": "Translated for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "Translated for Locale",
			"frFR": "Translated for Locale",
			"deDE": "Translated for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "Translated for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "Translated for Locale",
			"esLA": "No Page for Locale",
			"esES": "Translated for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "Translated for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Historically, we have rarely talked about how our servers fetch\nthe content from the Internet. In this blog we’re going to cover\nthis gap. We'll discuss how we manage Cloudflare IP addresses\nused to retrieve the data from the Internet, how our egress\nnetwork design has evolved, how we optimized it for best use\nof available IP space and introduce our soft-anycast technology.",
		"metadata": {
			"title": "Cloudflare servers don't own IPs anymore – so how do they connect to the Internet?",
			"description": "Historically, we have rarely talked about how our servers fetch\nthe content from the Internet. In this blog we’re going to cover\nthis gap. We'll discuss how we manage Cloudflare IP addresses\nused to retrieve the data from the Internet, how our egress\nnetwork design has evolved, how we optimized it for best use\nof available IP space and introduce our soft-anycast technology.",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4bwhiGfP26VS4gvDPEz5pn/7034adfe97acaaa9fbc0a0ffd88e17ae/cloudflare-servers-dont-own-ips-anymore-qzKZX3.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2022-11-25T14:00:00.000+00:00",
		"slug": "cloudflare-servers-dont-own-ips-anymore",
		"tags": [
			{
				"id": "1U6ifhBwTuaJ2w4pjNOzNT",
				"name": "Network",
				"slug": "network"
			}
		],
		"title": "Cloudflare servers don't own IPs anymore – so how do they connect to the Internet?",
		"updated_at": "2024-10-09T23:21:29.129Z",
		"url": "https://blog.cloudflare.com/cloudflare-servers-dont-own-ips-anymore"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}