{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "8",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Jakub Sitnicki",
				"slug": "jakub",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6RLFhbkBfkn8gecOR2w7wW/1146ae51b6182b10a997c82813c13503/jakub.jpg",
				"location": null,
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "If I navigate to https://blog.cloudflare.com/, my browser will connect to a remote TCP address from the local IP address assigned to my machine, and a randomly chosen local TCP port. What happens if I then decide to head to another site?",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5GNMPMoDXKKUowU7IcM2Xx/1b08759e49bee3a8597d4b04fbb7ff9a/the-quantum-state-of-a-tcp-port.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6jtTk2dCNu3WzoL9bLxFHA/4dae6095af8553a7571a4fb9411358ff/image6-14.png\" alt=\"The quantum state of a TCP port\" class=\"kg-image\" width=\"1999\" height=\"1125\" loading=\"lazy\"/>\n            \n            </figure><p>Have you noticed how simple questions sometimes lead to complex answers? Today we will tackle one such question. Category: our favorite - Linux networking.</p>\n          <div class=\"flex anchor relative\">\n            <h2 id=\"when-can-two-tcp-sockets-share-a-local-address\">When can two TCP sockets share a local address?</h2>\n            <a href=\"#when-can-two-tcp-sockets-share-a-local-address\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n          <p>If I navigate to <a href=\"/\">https://blog.cloudflare.com/</a>, my browser will connect to a remote TCP address, might be 104.16.132.229:443 in this case, from the local IP address assigned to my Linux machine, and a randomly chosen local TCP port, say 192.0.2.42:54321. What happens if I then decide to head to a different site? Is it possible to establish another TCP connection from the same local IP address and port?</p><p>To find the answer let&#39;s do a bit of <a href=\"https://en.wikipedia.org/wiki/Discovery_learning\">learning by discovering</a>. We have prepared eight quiz questions. Each will let you discover one aspect of the rules that govern local address sharing between TCP sockets under Linux. Fair warning, it might get a bit mind-boggling.</p><p>Questions are split into two groups by test scenario:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3Fu0occJtMgjz3Rd7xGJCo/9bf63f71e754ccbcf47c1fdd801d8f8f/image4-15.png\" alt=\"image\" class=\"kg-image\" width=\"881\" height=\"461\" loading=\"lazy\"/>\n            \n            </figure><p>In the first test scenario, two sockets connect from the same local port to the same remote IP and port. However, the local IP is different for each socket.</p><p>While, in the second scenario, the local IP and port is the same for all sockets, but the remote address, or actually just the IP address, differs.</p><p>In our quiz questions, we will either:</p><ol><li><p>let the OS automatically select the the local IP and/or port for the socket, or</p></li><li><p>we will explicitly assign the local address with <a href=\"https://man7.org/linux/man-pages/man2/bind.2.html\"><code>bind()</code></a> before <a href=\"https://man7.org/linux/man-pages/man2/connect.2.html\"><code>connect()</code></a>’ing the socket; a method also known as <a href=\"https://idea.popcount.org/2014-04-03-bind-before-connect/\">bind-before-connect</a>.</p></li></ol><p>Because we will be examining corner cases in the bind() logic, we need a way to exhaust available local addresses, that is (IP, port) pairs. We could just create lots of sockets, but it will be easier to <a href=\"https://www.kernel.org/doc/html/latest/networking/ip-sysctl.html?#ip-variables\">tweak the system configuration</a> and pretend that there is just one ephemeral local port, which the OS can assign to sockets:</p><p><code>sysctl -w net.ipv4.ip_local_port_range=&#39;60000 60000&#39;</code></p><p>Each quiz question is a short Python snippet. Your task is to predict the outcome of running the code. Does it succeed? Does it fail? If so, what fails? Asking ChatGPT is not allowed ?</p><p>There is always a common setup procedure to keep in mind. We will omit it from the quiz snippets to keep them short:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">from os import system\nfrom socket import *\n\n# Missing constants\nIP_BIND_ADDRESS_NO_PORT = 24\n\n# Our network namespace has just *one* ephemeral port\nsystem(&quot;sysctl -w net.ipv4.ip_local_port_range=&#039;60000 60000&#039;&quot;)\n\n# Open a listening socket at *:1234. We will connect to it.\nln = socket(AF_INET, SOCK_STREAM)\nln.bind((&quot;&quot;, 1234))\nln.listen(SOMAXCONN)</pre></code>\n            <p>With the formalities out of the way, let us begin. Ready. Set. Go!</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"scenario-1-when-the-local-ip-is-unique-but-the-local-port-is-the-same\">Scenario #1: When the local IP is unique, but the local port is the same</h3>\n            <a href=\"#scenario-1-when-the-local-ip-is-unique-but-the-local-port-is-the-same\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>In Scenario #1 we connect two sockets to the same remote address - 127.9.9.9:1234. The sockets will use different local IP addresses, but is it enough to share the local port?</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-0lax{text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">local IP</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">local port</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">remote IP</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">remote port</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">unique</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">same</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">same</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">same</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">127.0.0.1<br>127.1.1.1<br>127.2.2.2</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">60_000</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">127.9.9.9</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">1234</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html-->\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-1\">Quiz #1</h3>\n            <a href=\"#quiz-1\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>On the local side, we bind two sockets to distinct, explicitly specified IP addresses. We will allow the OS to select the local port. Remember: our local ephemeral port range contains just one port (60,000).</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.bind((&#039;127.1.1.1&#039;, 0))\ns1.connect((&#039;127.9.9.9&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.bind((&#039;127.2.2.2&#039;, 0))\ns2.connect((&#039;127.9.9.9&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_1.py\">Answer #1</a></p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-2\">Quiz #2</h3>\n            <a href=\"#quiz-2\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Here, the setup is almost identical as before. However, we ask the OS to select the local IP address and port for the first socket. Do you think the result will differ from the previous question?</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.connect((&#039;127.9.9.9&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.bind((&#039;127.2.2.2&#039;, 0))\ns2.connect((&#039;127.9.9.9&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_2.py\">Answer #2</a></p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-3\">Quiz #3</h3>\n            <a href=\"#quiz-3\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>This quiz question is just like  the one above. We just changed the ordering. First, we connect a socket from an explicitly specified local address. Then we ask the system to select a local address for us. Obviously, such an ordering change should not make any difference, right?</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.bind((&#039;127.1.1.1&#039;, 0))\ns1.connect((&#039;127.9.9.9&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.connect((&#039;127.9.9.9&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_3.py\">Answer #3</a></p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"scenario-2-when-the-local-ip-and-port-are-the-same-but-the-remote-ip-differs\">Scenario #2: When the local IP and port are the same, but the remote IP differs</h3>\n            <a href=\"#scenario-2-when-the-local-ip-and-port-are-the-same-but-the-remote-ip-differs\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>In Scenario #2 we reverse our setup. Instead of multiple local IP&#39;s and one remote address, we now have one local address <code>127.0.0.1:60000</code> and two distinct remote addresses. The question remains the same - can two sockets share the local port? Reminder: ephemeral port range is still of size one.</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-0lax{text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">local IP</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">local port</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">remote IP</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">remote port</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">same</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">same</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">unique</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">same</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">127.0.0.1</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">60_000</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">127.8.8.8<br>127.9.9.9</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">1234</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html-->\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-4\">Quiz #4</h3>\n            <a href=\"#quiz-4\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Let’s start from the basics. We <code>connect()</code> to two distinct remote addresses. This is a warm up ?</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.connect((&#039;127.8.8.8&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.connect((&#039;127.9.9.9&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_4.py\">Answer #4</a></p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-5\">Quiz #5</h3>\n            <a href=\"#quiz-5\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>What if we <code>bind()</code> to a local IP explicitly but let the OS select the port - does anything change?</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.bind((&#039;127.0.0.1&#039;, 0))\ns1.connect((&#039;127.8.8.8&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.bind((&#039;127.0.0.1&#039;, 0))\ns2.connect((&#039;127.9.9.9&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_5.py\">Answer #5</a></p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-6\">Quiz #6</h3>\n            <a href=\"#quiz-6\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>This time we explicitly specify the local address and port. Sometimes there is a need to specify the local port.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.bind((&#039;127.0.0.1&#039;, 60_000))\ns1.connect((&#039;127.8.8.8&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.bind((&#039;127.0.0.1&#039;, 60_000))\ns2.connect((&#039;127.9.9.9&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_6.py\">Answer #6</a></p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-7\">Quiz #7</h3>\n            <a href=\"#quiz-7\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Just when you thought it couldn’t get any weirder, we add <a href=\"https://manpages.debian.org/unstable/manpages/socket.7.en.html#SO_REUSEADDR\"><code>SO_REUSEADDR</code></a> into the mix.</p><p>First, we ask the OS to allocate a local address for us. Then we explicitly bind to the same local address, which we know the OS must have assigned to the first socket. We enable local address reuse for both sockets. Is this allowed?</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)\ns1.connect((&#039;127.8.8.8&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)\ns2.bind((&#039;127.0.0.1&#039;, 60_000))\ns2.connect((&#039;127.9.9.9&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_7.py\">Answer #7</a></p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"quiz-8\">Quiz #8</h3>\n            <a href=\"#quiz-8\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Finally, a cherry on top. This is Quiz #7 but in reverse. Common sense dictates that the outcome should be the same, but is it?</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">s1 = socket(AF_INET, SOCK_STREAM)\ns1.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)\ns1.bind((&#039;127.0.0.1&#039;, 60_000))\ns1.connect((&#039;127.9.9.9&#039;, 1234))\ns1.getsockname(), s1.getpeername()\n\ns2 = socket(AF_INET, SOCK_STREAM)\ns2.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)\ns2.connect((&#039;127.8.8.8&#039;, 1234))\ns2.getsockname(), s2.getpeername()</pre></code>\n            <p>GOTO <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/quiz_8.py\">Answer #8</a></p>\n          <div class=\"flex anchor relative\">\n            <h2 id=\"the-secret-tri-state-life-of-a-local-tcp-port\">The secret tri-state life of a local TCP port</h2>\n            <a href=\"#the-secret-tri-state-life-of-a-local-tcp-port\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n          <p>Is it all clear now? Well, probably no. It feels like reverse engineering a black box. So what is happening behind the scenes? Let&#39;s take a look.</p><p>Linux tracks all TCP <b>ports</b> in use in a hash table named <a href=\"https://elixir.bootlin.com/linux/v6.2/source/include/net/inet_hashtables.h#L166\">bhash</a>. Not to be confused with with <a href=\"https://elixir.bootlin.com/linux/v6.2/source/include/net/inet_hashtables.h#L156\">ehash</a> table, which tracks <b>sockets</b> with both local and remote address already assigned.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3OJ1M8Zu9lgEZoEJdJCNgr/d50e8f331dc994366b2ff749ed10b519/Untitled.png\" alt=\"image\" class=\"kg-image\" width=\"1600\" height=\"585\" loading=\"lazy\"/>\n            \n            </figure><p>Each hash table entry points to a chain of so-called bind buckets, which group together sockets which share a local port. To be precise, sockets are grouped into buckets by:</p><ul><li><p>the <a href=\"https://man7.org/linux/man-pages/man7/network_namespaces.7.html\">network namespace</a> they belong to, and</p></li><li><p>the <a href=\"https://docs.kernel.org/networking/vrf.html\">VRF</a> device they are bound to, and</p></li><li><p>the local port number they are bound to.</p></li></ul><p>But in the simplest possible setup - single network namespace, no VRFs - we can say that sockets in a bind bucket are grouped by their local port number.</p><p>The set of sockets in each bind bucket, that is sharing a local port, is backed by a linked list of named owners.</p><p>When we ask the kernel to assign a local address to a socket, its task is to check for a conflict with any existing socket. That is because a local port number can be shared only <a href=\"https://elixir.bootlin.com/linux/v6.2/source/include/net/inet_hashtables.h#L43\">under some conditions</a>:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">/* There are a few simple rules, which allow for local port reuse by\n * an application.  In essence:\n *\n *   1) Sockets bound to different interfaces may share a local port.\n *      Failing that, goto test 2.\n *   2) If all sockets have sk-&gt;sk_reuse set, and none of them are in\n *      TCP_LISTEN state, the port may be shared.\n *      Failing that, goto test 3.\n *   3) If all sockets are bound to a specific inet_sk(sk)-&gt;rcv_saddr local\n *      address, and none of them are the same, the port may be\n *      shared.\n *      Failing this, the port cannot be shared.\n *\n * The interesting point, is test #2.  This is what an FTP server does\n * all day.  To optimize this case we use a specific flag bit defined\n * below.  As we add sockets to a bind bucket list, we perform a\n * check of: (newsk-&gt;sk_reuse &amp;&amp; (newsk-&gt;sk_state != TCP_LISTEN))\n * As long as all sockets added to a bind bucket pass this test,\n * the flag bit will be set.\n * ...\n */</pre></code>\n            <p>The comment above hints that the kernel tries to optimize for the happy case of no conflict. To this end the bind bucket holds additional state which aggregates the properties of the sockets it holds:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">struct inet_bind_bucket {\n        /* ... */\n        signed char          fastreuse;\n        signed char          fastreuseport;\n        kuid_t               fastuid;\n#if IS_ENABLED(CONFIG_IPV6)\n        struct in6_addr      fast_v6_rcv_saddr;\n#endif\n        __be32               fast_rcv_saddr;\n        unsigned short       fast_sk_family;\n        bool                 fast_ipv6_only;\n        /* ... */\n};</pre></code>\n            <p>Let&#39;s focus our attention just on the first aggregate property - <code>fastreuse</code>. It has existed since, now prehistoric, Linux 2.1.90pre1. Initially in the form of a <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/history/history.git/tree/include/net/tcp.h?h=2.1.90pre1&id=9d11a5176cc5b9609542b1bd5a827b8618efe681#n76\">bit flag</a>, as the comment says, only to evolve to a byte-sized field over time.</p><p>The other six fields came on much later with the introduction of <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=da5e36308d9f7151845018369148201a5d28b46d\"><code>SO_REUSEPORT</code> in Linux 3.9</a>. Because they play a role only when there are sockets with the <a href=\"https://manpages.debian.org/unstable/manpages/socket.7.en.html#SO_REUSEPORT\"><code>SO_REUSEPORT</code></a> flag set. We are going to ignore them today.</p><p>Whenever the Linux kernel needs to bind a socket to a local port, it first has to look for the bind bucket for that port. What makes life a bit more complicated is the fact that the search for a TCP bind bucket exists in two places in the kernel. The bind bucket lookup can happen early - <code>at bind()</code> time - or late - <code>at connect()</code> - time. Which one gets called depends on how the connected socket has been set up:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3KOEGkTF7HEH7qku86bufY/8560316429d383b25add8c9f0b2bab3b/image5-5.png\" alt=\"image\" class=\"kg-image\" width=\"711\" height=\"481\" loading=\"lazy\"/>\n            \n            </figure><p>However, whether we land in <a href=\"https://elixir.bootlin.com/linux/v6.2/source/net/ipv4/inet_connection_sock.c#L486\"><code>inet_csk_get_port</code></a> or <a href=\"https://elixir.bootlin.com/linux/v6.2/source/net/ipv4/inet_hashtables.c#L992\"><code>__inet_hash_connect</code></a>, we always end up walking the bucket chain in the bhash looking for the bucket with a matching port number. The bucket might already exist or we might have to create it first. But once it exists, its fastreuse field is in one of three possible states: <code>-1</code>, <code>0</code>, or <code>+1</code>. As if Linux developers were inspired by <a href=\"https://en.wikipedia.org/wiki/Triplet_state\">quantum mechanics</a>.</p><p>That state reflects two aspects of the bind bucket:</p><ol><li><p>What sockets are in the bucket?</p></li><li><p>When can the local port be shared?</p></li></ol><p>So let us try to decipher the three possible fastreuse states then, and what they mean in each case.</p><p>First, what does the fastreuse property say about the owners of the bucket, that is the sockets using that local port?</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-0lax{text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\" width=\"100%\">\n<thead>\n  <tr>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">fastreuse is</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">owners list contains</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">-1</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">sockets connect()'ed from an ephemeral port</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">0</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">sockets bound without SO_REUSEADDR</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">+1</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">sockets bound with SO_REUSEADDR</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html--><p>While this is not the whole truth, it is close enough for now. We will soon get to the bottom of it.</p><p>When it comes port sharing, the situation is far less straightforward:</p><!--kg-card-begin: html--><style type=\"text/css\">\n.tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0;}\n.tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;\n  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-0lax{text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\">\n<thead>\n  <tr>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">Can I … when …</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">fastreuse = -1</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">fastreuse = 0</span></th>\n    <th class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">fastreuse = +1</span></th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">bind() to the same port (ephemeral or specified)</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">yes</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> IFF local IP is unique ①</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">← </span><a href=\"https://en.wiktionary.org/wiki/idem#Pronoun\"><span style=\"font-weight:400;font-style:normal;text-decoration:underline;color:#15C;background-color:transparent\">idem</span></a></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">← idem</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">bind() to the specific port with SO_REUSEADDR</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">yes</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> IFF local IP is unique OR conflicting socket uses SO_REUSEADDR ①</span></td>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">← idem</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">yes</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> ②</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">connect() from the same ephemeral port to the same remote (IP, port)</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">yes</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> IFF local IP unique ③</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">no</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> ③</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">no</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> ③</span></td>\n  </tr>\n  <tr>\n    <td class=\"tg-0lax\"><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">connect() from the same ephemeral port to a unique remote (IP, port)</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">yes</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> ③</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">no</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> ③</span></td>\n    <td class=\"tg-1wig\"><span style=\"font-weight:700;font-style:normal;text-decoration:none;color:#000;background-color:transparent\">no</span><span style=\"font-weight:400;font-style:normal;text-decoration:none;color:#000;background-color:transparent\"> ③</span></td>\n  </tr>\n</tbody>\n</table><!--kg-card-end: html--><p>① Determined by <a href=\"https://elixir.bootlin.com/linux/v6.2/source/net/ipv4/inet_connection_sock.c#L214\"><code>inet_csk_bind_conflict()</code></a> called from <code>inet_csk_get_port()</code> (specific port bind) or <code>inet_csk_get_port()</code> → <code>inet_csk_find_open_port()</code> (ephemeral port bind).</p><p>② Because <code>inet_csk_get_port()</code> <a href=\"https://elixir.bootlin.com/linux/v6.2/source/net/ipv4/inet_connection_sock.c#L531\">skips conflict check</a> for <code>fastreuse == 1 buckets</code>.</p><p>③ Because <code>inet_hash_connect()</code> → <code>__inet_hash_connect()</code> <a href=\"https://elixir.bootlin.com/linux/v6.2/source/net/ipv4/inet_hashtables.c#L1062\">skips buckets</a> with <code>fastreuse != -1</code>.</p><p>While it all looks rather complicated at first sight, we can distill the table above into a few statements that hold true, and are a bit easier to digest:</p><ul><li><p><code>bind()</code>, or early local address allocation, always succeeds if there is no local IP address conflict with any existing socket,</p></li><li><p><code>connect()</code>, or late local address allocation, always fails when TCP bind bucket for a local port is in any state other than <code>fastreuse = -1</code>,</p></li><li><p><code>connect()</code> only succeeds if there is no local and remote address conflict,</p></li><li><p><code>SO_REUSEADDR</code> socket option allows local address sharing, if all conflicting sockets also use it (and none of them is in the listening state).</p></li></ul>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"this-is-crazy-i-dont-believe-you\">This is crazy. I don’t believe you.</h3>\n            <a href=\"#this-is-crazy-i-dont-believe-you\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Fortunately, you don&#39;t have to. With <a href=\"https://drgn.readthedocs.io/en/latest/index.html\">drgn</a>, the programmable debugger, we can examine the bind bucket state on a live kernel:</p>\n            <pre class=\"language-python\"><code class=\"language-python\">#!/usr/bin/env drgn\n\n&quot;&quot;&quot;\ndump_bhash.py - List all TCP bind buckets in the current netns.\n\nScript is not aware of VRF.\n&quot;&quot;&quot;\n\nimport os\n\nfrom drgn.helpers.linux.list import hlist_for_each, hlist_for_each_entry\nfrom drgn.helpers.linux.net import get_net_ns_by_fd\nfrom drgn.helpers.linux.pid import find_task\n\n\ndef dump_bind_bucket(head, net):\n    for tb in hlist_for_each_entry(&quot;struct inet_bind_bucket&quot;, head, &quot;node&quot;):\n        # Skip buckets not from this netns\n        if tb.ib_net.net != net:\n            continue\n\n        port = tb.port.value_()\n        fastreuse = tb.fastreuse.value_()\n        owners_len = len(list(hlist_for_each(tb.owners)))\n\n        print(\n            &quot;{:8d}  {:{sign}9d}  {:7d}&quot;.format(\n                port,\n                fastreuse,\n                owners_len,\n                sign=&quot;+&quot; if fastreuse != 0 else &quot; &quot;,\n            )\n        )\n\n\ndef get_netns():\n    pid = os.getpid()\n    task = find_task(prog, pid)\n    with open(f&quot;/proc/{pid}/ns/net&quot;) as f:\n        return get_net_ns_by_fd(task, f.fileno())\n\n\ndef main():\n    print(&quot;{:8}  {:9}  {:7}&quot;.format(&quot;TCP-PORT&quot;, &quot;FASTREUSE&quot;, &quot;#OWNERS&quot;))\n\n    tcp_hashinfo = prog.object(&quot;tcp_hashinfo&quot;)\n    net = get_netns()\n\n    # Iterate over all bhash slots\n    for i in range(0, tcp_hashinfo.bhash_size):\n        head = tcp_hashinfo.bhash[i].chain\n        # Iterate over bind buckets in the slot\n        dump_bind_bucket(head, net)\n\n\nmain()</pre></code>\n            <p>Let&#39;s take <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/dump_bhash.py\">this script</a> for a spin and try to confirm what <i>Table 1</i> claims to be true. Keep in mind that to produce the <code>ipython --classic</code> session snippets below I&#39;ve used the same setup as for the quiz questions.</p><p>Two connected sockets sharing ephemeral port 60,000:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">&gt;&gt;&gt; s1 = socket(AF_INET, SOCK_STREAM)\n&gt;&gt;&gt; s1.connect((&#039;127.1.1.1&#039;, 1234))\n&gt;&gt;&gt; s2 = socket(AF_INET, SOCK_STREAM)\n&gt;&gt;&gt; s2.connect((&#039;127.2.2.2&#039;, 1234))\n&gt;&gt;&gt; !./dump_bhash.py\nTCP-PORT  FASTREUSE  #OWNERS\n    1234          0        3\n   60000         -1        2\n&gt;&gt;&gt;</pre></code>\n            <p>Two bound sockets reusing port 60,000:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">&gt;&gt;&gt; s1 = socket(AF_INET, SOCK_STREAM)\n&gt;&gt;&gt; s1.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)\n&gt;&gt;&gt; s1.bind((&#039;127.1.1.1&#039;, 60_000))\n&gt;&gt;&gt; s2 = socket(AF_INET, SOCK_STREAM)\n&gt;&gt;&gt; s2.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)\n&gt;&gt;&gt; s2.bind((&#039;127.1.1.1&#039;, 60_000))\n&gt;&gt;&gt; !./dump_bhash.py\nTCP-PORT  FASTREUSE  #OWNERS\n    1234          0        1\n   60000         +1        2\n&gt;&gt;&gt; </pre></code>\n            <p>A mix of bound sockets with and without REUSEADDR sharing port 60,000:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">&gt;&gt;&gt; s1 = socket(AF_INET, SOCK_STREAM)\n&gt;&gt;&gt; s1.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)\n&gt;&gt;&gt; s1.bind((&#039;127.1.1.1&#039;, 60_000))\n&gt;&gt;&gt; !./dump_bhash.py\nTCP-PORT  FASTREUSE  #OWNERS\n    1234          0        1\n   60000         +1        1\n&gt;&gt;&gt; s2 = socket(AF_INET, SOCK_STREAM)\n&gt;&gt;&gt; s2.bind((&#039;127.2.2.2&#039;, 60_000))\n&gt;&gt;&gt; !./dump_bhash.py\nTCP-PORT  FASTREUSE  #OWNERS\n    1234          0        1\n   60000          0        2\n&gt;&gt;&gt;</pre></code>\n            <p>With such tooling, proving that <i>Table 2</i> holds true is just a matter of writing a bunch of <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/test_fastreuse.py\">exploratory tests</a>.</p><p>But what has happened in that last snippet? The bind bucket has clearly transitioned from one fastreuse state to another. This is what <i>Table 1</i> fails to capture. And it means that we still don&#39;t have the full picture.</p><p>We have yet to find out when the bucket&#39;s fastreuse state can change. This calls for a state machine.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"das-state-machine\">Das State Machine</h3>\n            <a href=\"#das-state-machine\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>As we have just seen, a bind bucket does not need to stay in the initial fastreuse state throughout its lifetime. Adding sockets to the bucket can trigger a state change. As it turns out, it can only transition into <code>fastreuse = 0</code>, if we happen to bind() a socket that:</p><ol><li><p>doesn&#39;t conflict existing owners, and</p></li><li><p>doesn&#39;t have the <code>SO_REUSEADDR</code> option enabled.</p></li></ol>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7awSZQJp00EDbGbvcpBNv9/cca9b2c49a3db5f3d1db62ce142ac46a/Untitled--1-.png\" alt=\"image\" class=\"kg-image\" width=\"731\" height=\"681\" loading=\"lazy\"/>\n            \n            </figure><p>And while we could have figured it all out by carefully reading the code in <a href=\"https://elixir.bootlin.com/linux/v6.2/source/net/ipv4/inet_connection_sock.c#L431\"><code>inet_csk_get_port → inet_csk_update_fastreuse</code></a>, it certainly doesn&#39;t hurt to confirm our understanding with <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/test_fastreuse_states.py\">a few more tests</a>.</p><p>Now that we have the full picture, this begs the question...</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"why-are-you-telling-me-all-this\">Why are you telling me all this?</h3>\n            <a href=\"#why-are-you-telling-me-all-this\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Firstly, so that the next time <code>bind()</code> syscall rejects your request with <code>EADDRINUSE</code>, or <code>connect()</code> refuses to cooperate by throwing the <code>EADDRNOTAVAIL</code> error, you will know what is happening, or at least have the tools to find out.</p><p>Secondly, because we have previously <a href=\"/how-to-stop-running-out-of-ephemeral-ports-and-start-to-love-long-lived-connections/\">advertised a technique</a> for opening connections from a specific range of ports which involves bind()&#39;ing sockets with the SO_REUSEADDR option. What we did not realize back then, is that there exists <a href=\"https://github.com/cloudflare/cloudflare-blog/blob/master/2023-03-quantum-state-of-tcp-port/test_fastreuse.py#L300\">a corner case</a> when the same port can&#39;t be shared with the regular, <code>connect()</code>&#39;ed sockets. While that is not a deal-breaker, it is good to understand the consequences.</p><p>To make things better, we have worked with the Linux community to extend the kernel API with a new socket option that lets the user <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=91d0b78c5177\">specify the local port range</a>. The new option will be available in the upcoming Linux 6.3. With it we no longer have to resort to bind()-tricks. This makes it possible to yet again share a local port with regular <code>connect()</code>&#39;ed sockets.</p>\n          <div class=\"flex anchor relative\">\n            <h2 id=\"closing-thoughts\">Closing thoughts</h2>\n            <a href=\"#closing-thoughts\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n          <p>Today we posed a relatively straightforward question - when can two TCP sockets share a local address? - and worked our way towards an answer. An answer that is too complex to compress it into a single sentence. What is more, it&#39;s not even the full answer. After all, we have decided to ignore the existence of the SO_REUSEPORT feature, and did not consider conflicts with TCP listening sockets.</p><p>If there is a simple takeaway, though, it is that bind()&#39;ing a socket can have tricky consequences. When using bind() to select an egress IP address, it is best to combine it with IP_BIND_ADDRESS_NO_PORT socket option, and leave the port assignment to the kernel. Otherwise we might unintentionally block local TCP ports from being reused.</p><p>It is too bad that the same advice does not apply to UDP, where IP_BIND_ADDRESS_NO_PORT does not really work today. But that is another story.</p><p>Until next time ?.</p><p>If you enjoy scratching your head while reading the Linux kernel source code, <a href=\"https://www.cloudflare.com/careers/\">we are hiring</a>.</p>",
		"id": "74q2VGXmBazVsIZUpVUD8o",
		"localeList": {
			"name": "The quantum state of a TCP port Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "If I navigate to https://blog.cloudflare.com/, my browser will connect to a remote TCP address from the local IP address assigned to my machine, and a randomly chosen local TCP port. What happens if I then decide to head to another site? Is it possible to establish a new TCP connection from the same local IP address and port?",
		"metadata": {
			"title": "The quantum state of a TCP port",
			"description": "If I navigate to https://blog.cloudflare.com/, my browser will connect to a remote TCP address from the local IP address assigned to my machine, and a randomly chosen local TCP port. What happens if I then decide to head to another site? Is it possible to establish a new TCP connection from the same local IP address and port?",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7aD8PTUnHl5uTJywACPju5/9336803c3a776d720d96a0ac6984c20e/the-quantum-state-of-a-tcp-port-R48NxR.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2023-03-20T13:00:00.000+00:00",
		"slug": "the-quantum-state-of-a-tcp-port",
		"tags": [
			{
				"id": "73alK6sbtKLS6uB7ZrYrjj",
				"name": "Kernel",
				"slug": "kernel"
			},
			{
				"id": "383iv0UQ6Lp0GZwOAxGq2p",
				"name": "Linux",
				"slug": "linux"
			},
			{
				"id": "2UVIYusJwlvsmPYl2AvSuR",
				"name": "Deep Dive",
				"slug": "deep-dive"
			}
		],
		"title": "The quantum state of a TCP port",
		"updated_at": "2024-10-09T23:23:31.261Z",
		"url": "https://blog.cloudflare.com/the-quantum-state-of-a-tcp-port"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}