{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "4",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Jiale Zhi",
				"slug": "jiale-zhi",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7dZ5cZ9KiLne5jeAbcHh1D/c5c9030bb40866cfb37ea2a9775120a1/jiale-zhi.jpg",
				"location": null,
				"website": null,
				"twitter": null,
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "When we need to transfer data from one program to another program, either within a machine or from one data center to another some form of serialization is needed.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6TvLCsvWs5RNVQy3qPdymV/d6b8481cda338004ca95ac67a12fad94/introducing-lua-capnproto-better-serialization-in-lua.png",
		"featured": false,
		"html": "<p>When we need to transfer data from one program to another program, either within a machine or from one data center to another some form of serialization is needed. Serialization converts data stored in memory into a form that can be sent across a network or between processes and then converted back into data a program can use directly.</p><p>At CloudFlare, we have data centers all over the world. When transferring data from one data center to another, we need a very efficient way of serializing data, saving us both time and network bandwidth.</p><p>We&#39;ve looked at a few serialization projects. For example, one popular serialization format is JSON, for some of our Go programs we use gob, and we&#39;ve made use of Protocol Buffers in the past. But lately we&#39;ve been using a new serialization protocol called Cap&#39;n Proto.</p><p><a href=\"http://kentonv.github.io/capnproto/\">Cap&#39;n Proto</a> attracted us because of its very high performance compared to other serialization projects. It looks a little like a better version of Protocol Buffers, and the author of Cap&#39;n Proto, Kenton, was the primary author of Protocol Buffers version 2.</p><p>At CloudFlare, we use NGINX in conjunction with Lua for front-line web serving, proxying and traffic filtering. We need to serialize our data in Lua and transport it across the Internet. But unfortunately, there was no Lua module for <a href=\"http://kentonv.github.io/capnproto/index.html\">Cap&#39;n Proto</a>. So, we decided to write <a href=\"https://github.com/cloudflare/lua-capnproto\">lua-capnproto</a> and release it as yet another <a href=\"http://cloudflare.github.io/\">CloudFlare open source</a> contribution.</p><p><a href=\"https://github.com/cloudflare/lua-capnproto\">lua-capnproto</a> provides very fast data serialization and a really easy to use API. Here I&#39;ll show you how to use <a href=\"https://github.com/cloudflare/lua-capnproto\">lua-capnproto</a> to do serialization and deserialization.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"install-lua-capnproto\">Install lua-capnproto</h3>\n            <a href=\"#install-lua-capnproto\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>To install lua-capnproto, you need to install <a href=\"http://kentonv.github.io/capnproto/install.html\">Cap&#39;n Proto</a>, <a href=\"http://luajit.org/install.html\">LuaJIT 2.1</a> and <a href=\"http://luarocks.org/en/Download\">luarocks</a> first.</p><p>Then you can install lua-capnproto using the following commands:</p><p>git clone <a href=\"https://github.com/cloudflare/lua-capnproto.git\">https://github.com/cloudflare/lua-capnproto.git</a>cd lua-capnprotosudo luarocks make</p><p>To test whether lua-capnproto was installed successfully, you can use the <code>capnp</code> compiler to generate a Lua version of one of the Cap&#39;n Proto examples as follows:</p><p>capnp compile -olua proto/example.capnp</p><p>If everything goes well, you should see no errors and a file named <code>example_capnp.lua</code> generated under the <code>proto</code> directory.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"write-a-capn-proto-definition\">Write a Cap’n Proto definition</h3>\n            <a href=\"#write-a-capn-proto-definition\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Here&#39;s a sample Cap’n Proto definition that would be stored in a file called <code>AddressBook.capnp</code>:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">    @0xdbb9ad1f14bf0b36;  # unique file ID, generated by capnp id\n\n    struct Person {\n      id @0 :UInt32;\n      name @1 :Text;\n      email @2 :Text;\n      phones @3 :List(PhoneNumber);\n\n      struct PhoneNumber {\n        number @0 :Text;\n        type @1 :Type;\n\n        enum Type {\n          mobile @0;\n          home @1;\n          work @2;\n        }\n      }\n\n      employment :union {\n        unemployed @4 :Void;\n        employer @5 :Text;\n        school @6 :Text;\n        selfEmployed @7 :Void;\n        # We assume that a person is only one of these.\n      }\n    }\n\n    struct AddressBook {\n      people @0 :List(Person);\n    }</pre></code>\n            <p>We have a root structure named <code>AddressBook</code> containing a list named <code>people</code> whose members are also structures. What we are going to do is to serialize an <code>AddressBook</code> structure and then read the structure from serialized data. For more details about the <a href=\"http://kentonv.github.io/capnproto/index.html\">Cap&#39;n Proto</a> definition, you can checkout its documentation at <a href=\"http://kentonv.github.io/capnproto/index.html\">here</a>.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"prepare-your-data\">Prepare your data</h3>\n            <a href=\"#prepare-your-data\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Preparing data is pretty simple. All you need to do is to generate a Lua table corresponding to the root structure. The following list gives rules to help you write this table. On the left is a <a href=\"http://kentonv.github.io/capnproto/index.html\">Cap&#39;n Proto</a> data type, on the right is its corresponding Lua data type.</p><ul><li><p>struct -&gt; Lua hash table</p></li><li><p>list -&gt; Lua array table</p></li><li><p>bool -&gt; Lua boolean</p></li><li><p>int8/16/32 or uint8/16/32 or float32/64 -&gt; Lua number</p></li><li><p>int64/uint64 -&gt; LuaJIT 64bit number</p></li><li><p>enum -&gt; Lua string</p></li><li><p>void -&gt; Lua string <code>“Void”</code></p></li><li><p>group -&gt; Lua hash table (the same as struct)</p></li><li><p>union -&gt; Lua hash table which has only one value set</p></li></ul>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"a-few-notices\">A few notices:</h3>\n            <a href=\"#a-few-notices\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Because Lua number type represents real (double-precision floating-point) numbers and Lua has no integer type, so by default you can&#39;t store a 64 bit integer using number type without losing precision. LuaJIT has an <a href=\"http://luajit.org/ext_ffi_api.html#literals\">extension</a> which supports 64-bit integers. You need to add <code>ULL</code> or <code>LL</code> to the end of the number (<code>ULL</code> is for unsigned integers, <code>LL</code> for signed). So, if you need to serialize a 64-bit integer, remember to append <code>ULL</code> or <code>LL</code> to your number.</p><p>For example:</p><p>id @0 :Int64;                   -&gt;   id = 12345678901234LL</p><p>Enum values are automatically converted from strings to their values, you don’t need to do it yourself. By default, enums will be converted to the uppercase with underscores form. You can change this behavior using annotations. The <a href=\"https://github.com/cloudflare/lua-capnproto\">lua-capnproto</a> <a href=\"https://github.com/cloudflare/lua-capnproto/blob/master/README.md\">document</a> has more details.</p><p>Here is an example:</p><p>type @0 :Type;\nenum Type {\nbinaryAddr @0;\ntextAddr @1;\n}                               -&gt;    type = “TEXT_ADDR”</p><p><code>void</code> is a special type in Cap’n Proto. For simplicity, we just use a string <code>&quot;Void&quot;</code> to represent <code>void</code> (actually, when serializing, any value other than <code>nil</code> will work, but we use <code>&quot;Void&quot;</code> for consistency).</p><p>A sample data table looks like this:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">    local data = {\n        people = {\n            {\n                id = &quot;123&quot;,\n                name = &quot;Alice&quot;,\n                email = &quot;alice@example.com&quot;,\n                phones = {\n                    {\n                        number = &quot;555-1212&quot;,\n                        [&quot;type&quot;] = &quot;MOBILE&quot;,\n                    },\n                },\n                employment = {\n                    school = &quot;MIT&quot;,\n                },\n            },\n            {\n                id = &quot;456&quot;,\n                name = &quot;Bob&quot;,\n                email = &quot;bob@example.com&quot;,\n                phones = {\n                    {\n                        number = &quot;555-4567&quot;,\n                        [&quot;type&quot;] = &quot;HOME&quot;,\n                    },\n                    {\n                        number = &quot;555-7654&quot;,\n                        [&quot;type&quot;] = &quot;WORK&quot;,\n                    },\n                },\n                employment = {\n                    unemployed = &quot;Void&quot;,\n                },\n            },\n        }\n    }</pre></code>\n            \n          <div class=\"flex anchor relative\">\n            <h3 id=\"compile-and-run\">Compile and run</h3>\n            <a href=\"#compile-and-run\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Now let&#39;s compile the Cap&#39;n Proto file:</p><p>capnp compile -olua AddressBook.capnp</p><p>You shouldn&#39;t see any errors and a file named <code>AddressBook_capnp.lua</code> is generated under the current directory.</p><p>To use this file, we only need to write a file named <code>main.lua</code> (or whatever name you desire), and get all the required modules ready.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">    local addressBook = require &quot;AddressBook_capnp&quot;                                                                       \n    local capnp = require &quot;capnp&quot;</pre></code>\n            <p>Now we can start to serialize using our already prepared data.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">    local bin = addressBook.AddressBook.serialize(data)</pre></code>\n            <p>That’s it. Just one line of code. All the serialization work is done. Now variable <code>bin</code> (a Lua string) holds the serialized binary data. You can write this string to a file or send it through network.</p><p>Want about deserialization? It&#39;s as easy as serialization.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">    local decoded = addressBook.AddressBook.parse(bin)</pre></code>\n            <p>Now variable <code>decoded</code> holds a table which is identical to <code>data</code>. You can find the complete code <a href=\"https://github.com/cloudflare/lua-capnproto/tree/master/example\">here</a>. Note that you need LuaJIT to run the code.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"performance\">Performance</h3>\n            <a href=\"#performance\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>If you are happy with the API, here is even better news. We chose Cap&#39;n Proto because of its impressively high performance. So when writing lua-capnproto, I also made every effort to make it fast.</p><p>In one project we switched to lua-capnproto from <a href=\"http://www.kyne.com.au/~mark/software/lua-cjson.php\">lua-cjson</a> (a quite fast JSON library for Lua) for serialization. So let&#39;s see how fast lua-capnproto is compared to lua-cjson.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/59GtNOY9Ix3jO9tFNn53ms/8b88605c6a817d02dd525926adebee8b/lua-capnproto.png\" alt=\"Performance\" class=\"kg-image\" width=\"524\" height=\"340\" loading=\"lazy\"/>\n            \n            </figure><p>You can also run <a href=\"https://github.com/cloudflare/lua-capnproto/blob/master/benchmark.lua\">benchmark.lua</a> yourself (included in the source code) to find out how fast lua-capnproto is compared to <a href=\"http://www.kyne.com.au/~mark/software/lua-cjson.php\">lua-cjson</a> on your machine.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"the-future\">The future</h3>\n            <a href=\"#the-future\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>We are already using <a href=\"https://github.com/cloudflare/lua-capnproto\">lua-capnproto</a> in production at CloudFlare and it has been running very well for the past month. But <a href=\"https://github.com/cloudflare/lua-capnproto\">lua-capnproto</a> is still a very young project. Some features are missing and there&#39;s a lot of work to do in the future. We will continue to make <a href=\"https://github.com/cloudflare/lua-capnproto\">lua-capnproto</a> more stable and more reliable, and would be happy to receive contributions from the open source community.</p>",
		"id": "5n9qvrLgdQCTRLUe0NlTiB",
		"localeList": {
			"name": "Introducing lua-capnproto: better serialization in Lua Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2014-02-28T09:00:00.000+00:00",
		"slug": "introducing-lua-capnproto-better-serialization-in-lua",
		"tags": [
			{
				"id": "5fXI7jwkVL8rNyKrfpk0Lw",
				"name": "Data",
				"slug": "data"
			},
			{
				"id": "48r7QV00gLMWOIcM1CSDRy",
				"name": "Speed & Reliability",
				"slug": "speed-and-reliability"
			},
			{
				"id": "5ur0QiQkEJiNOryFohpGTE",
				"name": "Cap'n Proto",
				"slug": "capn-proto"
			},
			{
				"id": "7oLqpn3vNWao1PXv53X42G",
				"name": "LUA",
				"slug": "lua"
			}
		],
		"title": "Introducing lua-capnproto: better serialization in Lua",
		"updated_at": "2024-10-10T00:35:31.115Z",
		"url": "https://blog.cloudflare.com/introducing-lua-capnproto-better-serialization-in-lua"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}