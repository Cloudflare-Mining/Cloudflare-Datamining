{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "7",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Avery Harnish",
				"slug": "avery",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5RZ6rXXEQkSEoJ7km7L5lS/cd20e91117cf9f206a15ac270a1a019f/avery.jpg",
				"location": "Austin, TX",
				"website": "https://averyharnish.com",
				"twitter": null,
				"facebook": null
			}
		],
		"excerpt": "When I arrived at Cloudflare for an internship in the summer of 2018, I was taken on a tour, introduced to my mentor who took me out for coffee (shoutout to Preston), and given a quick whiteboard overview of how Cloudflare works.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4PotIAn8EbPH5oNpnD7v98/ed6b900d28ebc55592150147aa6b7877/trailblazing-a-development-environment-for-workers.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3JczHGqdEQBBXsAZ7vDE0l/cc3f9b114e47004a1732e50fa8ef6135/wrangler.dev_2x--1-.png\" alt=\"\" class=\"kg-image\" width=\"2000\" height=\"1117\" loading=\"lazy\"/>\n            \n            </figure><p>When I arrived at Cloudflare for an internship in the summer of 2018, I was taken on a tour, introduced to my mentor who took me out for coffee (shoutout to Preston), and given a quick whiteboard overview of how Cloudflare works. Each of the interns would work on a small project of their own and they’d try to finish them by the end of the summer. The description of the project I was given on my very first day read something along the lines of “<a href=\"/real-urls-for-amp-cached-content-using-cloudflare-workers/\">implementing signed exchanges in a Cloudflare Worker to fix the AMP URL attribution problem</a>,” which was a lot to take in at once. I asked so many questions those first couple of weeks. What are signed exchanges? Can I put these stickers on my laptop? What’s a Cloudflare Worker? Is there a limit to how much Topo Chico I can take from the fridge? What’s the <a href=\"https://blog.amp.dev/2017/02/06/whats-in-an-amp-url/\">AMP URL attribution problem</a>? Where’s the bathroom?</p><p>I got the answers to all of those questions (and more!) and eventually landed a full-time job at Cloudflare. Here’s the story of my internship and working on the Workers Developer Experience team at Cloudflare.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"getting-started-with-workers-in-2018\">Getting Started with Workers in 2018</h3>\n            <a href=\"#getting-started-with-workers-in-2018\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>After doing a lot of reading, and asking a lot more questions, it was time to start coding. I set up a Cloudflare account with a Workers subscription, and was greeted with a page that looked something like this:</p><p>I was able to change the code in the text area on the left, click “Update”, and the changes would be reflected on the right — fairly self-explanatory. There was also a testing tab which allowed me to handcraft HTTP requests with different methods and custom headers. So far so good.</p><p>As my project evolved, it became clear that I needed to leave the Workers editor behind. Anything more than a one-off script tends to require JavaScript modules and multiple files. I spent some time setting up a local development environment for myself with <a href=\"https://npmjs.com\">npm</a> and <a href=\"https://webpack.js.org/\">webpack</a> (see, purgatory: a place or state of temporary suffering. <a href=\"https://www.merriam-webster.com/dictionary/purgatory\">merriam-webster.com</a>).</p><p>After I finally got everything working, my iteration cycle looked a bit like this:</p><ol><li><p>Make a change to my code</p></li><li><p>Run <code>npm run build</code> (which ran webpack and bundled my code in a single script)</p></li><li><p>Open <code>./dist/worker.min.js</code> (the output from my build step)</p></li><li><p>Copy the entire contents of the built Worker to my clipboard</p></li><li><p>Switch to the Cloudflare Workers Dashboard</p></li><li><p>Paste my script into the Workers editor</p></li><li><p>Click update</p></li><li><p>Investigate the behavior of my recently modified script</p></li><li><p>Rinse and repeat</p></li></ol><p>There were two main things here that were decidedly <b>not</b> a fantastic developer experience:</p><ol><li><p>Inspecting the value of a variable by adding a console.log statement would take me ~2-3 minutes and involved lots of manual steps to perform a full rebuild.</p></li><li><p>I was unable to use familiar HTTP clients such as cURL and Postman without deploying to production. This was because the Workers Preview UI was an iframe nested in the dashboard.</p></li></ol><p>Luckily for me, Cloudflare Workers deploy globally incredibly quickly, so I could push the latest iteration of my Worker, wait just a few seconds for it to go live, and cURL away.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"a-better-workers-developer-experience-in-2019\">A Better Workers Developer Experience in 2019</h3>\n            <a href=\"#a-better-workers-developer-experience-in-2019\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Shortly after we shipped <a href=\"/announcing-amp-real-url/\">AMP Real URL</a>, Cloudflare released <a href=\"https://github.com/cloudflare/wrangler\">Wrangler</a>, the official CLI tool for developing Workers, and I was hired full time to work on it. Wrangler came with a feature that automated steps 2-7 of my workflow by running the command <code>wrangler preview</code>, which was a <i>significant</i> improvement. Running the command would build my Worker and open the browser automatically for me so I could see log messages and test out HTTP requests. That summer, our intern Matt Alonso created <code>wrangler preview --watch</code>. This command automatically updates the Workers preview window when changes are made to your code. You can read more about that <a href=\"/live-preview-build-and-test-workers-faster-with-wrangler-cli-1-2-0/\">here</a>. This was, yet again, another improvement over my old friend <i>Build and Open and Copy and Switch Windows and Paste Forever and Ever, Amen</i>. But there was still no way that I could test my Worker with any HTTP client I wanted without deploying to production — I was still locked in to using the nested iframe.</p><p>A few months ago we decided it was time to do something about it. To the whiteboard!</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"enter-wrangler-dev\">Enter <code>wrangler dev</code></h3>\n            <a href=\"#enter-wrangler-dev\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Most web developers are familiar with developing their applications on <code>localhost</code>, and since Wrangler is written in Rust, it means we could start up a server on localhost that would handle requests to a Worker. The idea was to somehow start a server on <code>localhost</code> and then transform incoming requests and send them off to a preview session running on a Cloudflare server.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"proof-of-concept\">Proof of Concept</h3>\n            <a href=\"#proof-of-concept\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>What we came up with ended up looking a little something like this — when a developer runs <code>wrangler dev</code>, do the following:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4REMjenya1591p3JRN44k7/09277c65ef8e5084b580f8876ef73149/wrangler.dev-flowchart_2x.png\" alt=\"\" class=\"kg-image\" width=\"4127\" height=\"3840\" loading=\"lazy\"/>\n            \n            </figure><ol><li><p>Build the Worker</p></li><li><p>Upload the Worker via the Cloudflare API as a previewable Worker</p></li><li><p>The Cloudflare API takes the uploaded script and creates a preview session, and returns an access token</p></li><li><p>Start listening for incoming HTTP requests at <code>localhost:8787</code></p></li></ol><p>   <i>Top secret fact: 8787 spells out Rust on a phone numpad</i> — <i>Happy Easter!</i></p><ol><li><p>All incoming requests to <code>localhost:8787</code> are modified:</p></li></ol><ul><li><p>All headers are prepended with <code>cf-ew-raw-</code> (for instance, <code>X-Auth-Header</code> would become <code>cf-ew-raw-X-Auth-Header</code>)</p></li><li><p>The URL is changed to <code>https://rawhttp.cloudflareworkers.com/${path}</code></p></li><li><p>The Host header is changed to <code>rawhttp.cloudflareworkers.com</code></p></li><li><p>The <code>cf-ew-preview</code> header is added with the access token returned from the API in step 3</p></li></ul><ol><li><p>After sending this request, the response is modified</p></li></ol><ul><li><p>All headers not prefixed with <code>cf-ew-raw-</code> are discarded and headers with the prefix have it removed (for instance, <code>cf-ew-raw-X-Auth-Success</code> would become <code>X-Auth-Success</code>)</p></li></ul><p>The hard part here was already done — the Workers Core team had already implemented the API to support the Preview UI. We just needed to gently nudge Wrangler and the API to be the best of friends. After some investigation into Rust’s HTTP ecosystem, we settled on using the HTTP library <a href=\"https://hyper.rs/\">hyper</a>, which I highly recommend if you’re in need of a low level HTTP library — it’s fast, correct, and the ergonomics are constantly improving. After a bit of work, we got a prototype working and carved Wrangler ❤️ Cloudflare API into the old oak tree down by <a href=\"https://en.wikipedia.org/wiki/Lady_Bird_Lake\">Lady Bird Lake</a>.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"usage\">Usage</h3>\n            <a href=\"#usage\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Let’s say I have a Workers script that looks like this:</p>\n            <pre class=\"language-js\"><code class=\"language-js\">addEventListener(&#039;fetch&#039;, event =&gt; {\n  event.respondWith(handleRequest(event.request))\n})\n\nasync function handleRequest(request) {\n  let message = &quot;Hello, World!&quot;\n  return new Response(message)\n}</pre></code>\n            <p>If I created a Wrangler project with this code and ran <code>wrangler dev</code>, this is what it looked like:</p>\n            <pre class=\"language-sh\"><code class=\"language-sh\">$ wrangler dev\n?  Listening on http://127.0.0.1:8787</pre></code>\n            <p>In another terminal session, I could run the following:</p>\n            <pre class=\"language-sh\"><code class=\"language-sh\">$ curl localhost:8787\nHello, World!</pre></code>\n            <p>It worked! Hooray!</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"just-the-right-amount-of-scope-creep\">Just the Right Amount of Scope Creep</h3>\n            <a href=\"#just-the-right-amount-of-scope-creep\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>At this point, our initial goal was complete: any HTTP client could test out a Worker before it was deployed. However, <code>wrangler dev</code> was still missing crucial functionality. When running <code>wrangler preview</code>, it’s possible to view <code>console.log</code> output in the browser editor. This is incredibly useful for debugging Workers applications, and something with a name like <code>wrangler dev</code> should include a way to view those logs as well. “This will be easy,” I said, not yet knowing what I was signing up for. Buckle up!</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"console-log-v8-and-the-chrome-devtools-protocol-oh-my\">console.log, V8, and the Chrome Devtools Protocol, Oh My!</h3>\n            <a href=\"#console-log-v8-and-the-chrome-devtools-protocol-oh-my\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>My first goal was to get a <code>Hello, World!</code> message streamed to my terminal session so that developers can debug their applications using <code>wrangler dev</code>. Let’s take the script from earlier and add a <code>console.log</code> statement to it:</p>\n            <pre class=\"language-js\"><code class=\"language-js\">addEventListener(&#039;fetch&#039;, event =&gt; {\n  event.respondWith(handleRequest(event.request))\n})\n\nasync function handleRequest(request) {\n  let message = &quot;Hello, World!&quot;\n  console.log(message) // this line is new\n  return new Response(message)\n}</pre></code>\n            <p>If you’d like to follow along, you can paste that script into the editor at <a href=\"https://cloudflareworkers.com\">cloudflareworkers.com</a> using Google Chrome.</p><p>This is what the Preview editor looks like when that script is run:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3z1nKvt6MrXFlNLph2b7kS/7180183ce4e2de323c1d6c5246f0b742/image2-4.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"1120\" loading=\"lazy\"/>\n            \n            </figure><p>You can see that <code>Hello, World!</code> has been printed to the console. This may not be the most useful example, but in more complex applications logging different variables is helpful for debugging. If you’re following along, try changing <code>console.log(message)</code> to something more interesting, like <code>console.log(request.url)</code>.</p><p>The console may look familiar to you if you’re a web developer because it’s the same interface you see when you open the Developer Tools in Google Chrome. Since Cloudflare Workers is built on top of <a href=\"https://v8.dev/\">V8</a> (more info about that <a href=\"https://developers.cloudflare.com/workers/about/how-it-works/\">here</a> and <a href=\"/cloud-computing-without-containers/\">here</a>), the Workers runtime is able to create a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\">WebSocket</a> that speaks the <a href=\"https://chromedevtools.github.io/devtools-protocol/\">Chrome Devtools Protocol</a>. This protocol allows the client (your browser, Wrangler, or anything else that supports WebSockets) to send and receive messages that contain information about the script that is running.</p><p>In order to see the messages that are being sent back and forth between our browser and the Workers runtime:</p><ol><li><p><a href=\"https://developers.google.com/web/tools/chrome-devtools/open\">Open Chrome Devtools</a></p></li><li><p>Click the Network tab at the top of the inspector</p></li><li><p>Click the filter icon underneath the Network tab (it looks like a funnel and is nested between the cancel icon and the search icon)</p></li><li><p>Click WS to filter out all requests but WebSocket connections</p></li></ol><p>Your inspector should look like this:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3wvIrTdVQF1TzfZBc5BkRZ/783589719e14255621f7d60239049ac6/image1-4.png\" alt=\"\" class=\"kg-image\" width=\"1878\" height=\"176\" loading=\"lazy\"/>\n            \n            </figure><p>Then, reload the page, and select the <code>/inspect</code> item to view its messages. It should look like this:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3AX9JjU5mwVt9LvEQ4T05m/ab69695521afe2599e670d73ac625729/image4-4.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"641\" loading=\"lazy\"/>\n            \n            </figure><p>Hey look at that! We can see messages that our browser sent to the Workers runtime to enable different portions of the developer tools for this Worker, and we can see that the runtime sent back our <code>Hello, World!</code> Pretty cool!</p><p>On the Wrangler side of things, all we had to do to get started was initialize a WebSocket connection for the current Worker, and send a message with the method <code>Runtime.enable</code> so the Workers runtime would enable the <a href=\"https://chromedevtools.github.io/devtools-protocol/v8/Runtime\">Runtime domain</a> and start sending <code>console.log</code> messages from our script.</p><p>After those initial steps, it quickly became clear that a lot more work was needed to get to a useful developer tool. There’s a lot that goes into the Chrome Devtools Inspector and most of the libraries for interacting with it are written in languages other than Rust (which we use for Wrangler). We spent a lot of time switching WebSocket libraries due to incompatibilities across operating systems (turns out TLS is hard) and <a href=\"https://github.com/EverlastingBugstopper/chrome-devtools-rs\">implementing</a> the part of the Chrome Devtools Protocol in Rust that we needed to. There’s a lot of work that still needs to be done in order to make <code>wrangler dev</code> a top notch developer tool, but we wanted to get it into the hands of developers as quickly as possible.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"try-it-out\">Try it Out!</h3>\n            <a href=\"#try-it-out\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p><code>wrangler dev</code> is currently in alpha, and we’d love it if you could try it out! You should first check out the <a href=\"https://developers.cloudflare.com/workers/quickstart\">Quick Start</a> and then move on to <a href=\"https://developers.cloudflare.com/workers/tooling/wrangler/commands/#dev-alpha-\">wrangler dev</a>. If you run into issues or have any feedback, please <a href=\"https://github.com/cloudflare/wrangler/issues/1047\">let us know</a>!</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"signing-off\">Signing Off</h3>\n            <a href=\"#signing-off\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>I’ve come a long way from where I started in 2018 and so has the Workers ecosystem. It’s been awesome helping to improve the developer experience of Workers for future interns, internal Cloudflare teams, and of course our customers. I can’t wait to see what we do next. I have <a href=\"https://github.com/cloudflare/wrangler/milestone/29\">some ideas</a> for <a href=\"https://github.com/cloudflare/wrangler/milestone/18\">what’s next</a> with Wrangler, so stay posted!</p><p>P.S. Wrangler is also <a href=\"https://github.com/cloudflare/wrangler\">open source</a>, and we are more than happy to field bug reports, feedback, and community PRs. Check out our <a href=\"https://github.com/cloudflare/wrangler/blob/master/CONTRIBUTING.md\">Contribution Guide</a> if you want to help out!</p>",
		"id": "5HJePHWveXoMEt1AC448LW",
		"localeList": {
			"name": "Trailblazing a Development Environment for Workers Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "When I arrived at Cloudflare for an internship in the summer of 2018, I was taken on a tour, introduced to my mentor who took me out for coffee (shoutout to Preston), and given a quick whiteboard overview of how Cloudflare works.",
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"published_at": "2020-04-03T12:03:00.000+01:00",
		"slug": "trailblazing-a-development-environment-for-workers",
		"tags": [
			{
				"id": "6hbkItfupogJP3aRDAq6v8",
				"name": "Cloudflare Workers",
				"slug": "workers"
			},
			{
				"id": "3CHhhmZIu8jnzcZ81VLRUQ",
				"name": "Wrangler",
				"slug": "wrangler"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			},
			{
				"id": "3vILtHLIQU7d8BaWzXAPv4",
				"name": "Internship Experience",
				"slug": "internship-experience"
			},
			{
				"id": "5cye1Bh5KxFh3pKSnX8Dsy",
				"name": "Serverless",
				"slug": "serverless"
			}
		],
		"title": "Trailblazing a Development Environment for Workers",
		"updated_at": "2024-10-09T23:11:08.985Z",
		"url": "https://blog.cloudflare.com/trailblazing-a-development-environment-for-workers"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}