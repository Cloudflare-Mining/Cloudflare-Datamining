{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "5",
	"locale": "en-us",
	"localesAvailable": [
		"zh-cn",
		"fr-fr",
		"de-de",
		"ja-jp",
		"es-es"
	],
	"post": {
		"authors": [
			{
				"name": "Ashcon Partovi",
				"slug": "ashcon",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6mLS6e7vpfh6V98eiR9MQH/f0f35aee7cf8f2300f222e85aff9abc1/ashcon.jpeg",
				"location": null,
				"website": null,
				"twitter": "@ashconpartovi",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Today, we’re excited to announce Workers KV is entering general availability and is ready for production use!",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6E3aGalXvsuXYmHagZUcbn/511f3d120ef2ffdac94b20bc6a5260af/workers-kv-is-ga.png",
		"featured": false,
		"html": "<p>Today, we’re excited to announce Workers KV is entering general availability and is ready for production use!</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3188jggqN4vJJchIXvTReV/e9476e1e9e5783948d4255f92bcb2e47/Workers-KV-GA_2x.png\" alt=\"\" class=\"kg-image\" width=\"1517\" height=\"776\" loading=\"lazy\"/>\n            \n            </figure>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"what-is-workers-kv\">What is Workers KV?</h3>\n      <a href=\"#what-is-workers-kv\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p><a href=\"https://www.cloudflare.com/products/workers-kv/\">Workers KV</a> is a highly distributed, eventually consistent, key-value store that spans Cloudflare&#39;s global edge. It allows you to store billions of key-value pairs and read them with ultra-low latency anywhere in the world. Now you can build entire applications with the performance of a CDN static cache.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"why-did-we-build-it\">Why did we build it?</h3>\n      <a href=\"#why-did-we-build-it\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p><a href=\"https://www.cloudflare.com/products/cloudflare-workers/\">Workers</a> is a platform that lets you run JavaScript on Cloudflare&#39;s global edge of 175+ data centers. With only a few lines of code, you can route HTTP requests, modify responses, or even create new responses without an origin server.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">// A Worker that handles a single redirect,\n// such a humble beginning...\naddEventListener(&quot;fetch&quot;, event =&gt; {\n  event.respondWith(handleOneRedirect(event.request))\n})\n\nasync function handleOneRedirect(request) {\n  let url = new URL(request.url)\n  let device = request.headers.get(&quot;CF-Device-Type&quot;)\n  // If the device is mobile, add a prefix to the hostname.\n  // (eg. example.com becomes mobile.example.com)\n  if (device === &quot;mobile&quot;) {\n    url.hostname = &quot;mobile.&quot; + url.hostname\n    return Response.redirect(url, 302)\n  }\n  // Otherwise, send request to the original hostname.\n  return await fetch(request)\n}</pre></code>\n            <p>Customers quickly came to us with use cases that required a way to store persistent data. Following our example above, it&#39;s easy to handle a single redirect, but what if you want to handle <b><b>billions</b></b> of them? You would have to hard-code them into your Workers script, fit it all in under 1 MB, and re-deploy it every time you wanted to make a change — yikes! That’s why we built Workers KV.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">// A Worker that can handle billions of redirects,\n// now that&#039;s more like it!\naddEventListener(&quot;fetch&quot;, event =&gt; {\n  event.respondWith(handleBillionsOfRedirects(event.request))\n})\n\nasync function handleBillionsOfRedirects(request) {\n  let prefix = &quot;/redirect&quot;\n  let url = new URL(request.url)\n  // Check if the URL is a special redirect.\n  // (eg. example.com/redirect/&lt;random-hash&gt;)\n  if (url.pathname.startsWith(prefix)) {\n    // REDIRECTS is a custom variable that you define,\n    // it binds to a Workers KV &quot;namespace.&quot; (aka. a storage bucket)\n    let redirect = await REDIRECTS.get(url.pathname.replace(prefix, &quot;&quot;))\n    if (redirect) {\n      url.pathname = redirect\n      return Response.redirect(url, 302)\n    }\n  }\n  // Otherwise, send request to the original path.\n  return await fetch(request)\n}</pre></code>\n            <p>With only a few changes from our previous example, we scaled from one redirect to billions − that&#39;s just a taste of what you can build with Workers KV.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"how-does-it-work\">How does it work?</h3>\n      <a href=\"#how-does-it-work\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Distributed data stores are often modeled using the <a href=\"https://en.wikipedia.org/wiki/CAP_theorem\">CAP Theorem</a>, which states that distributed systems can only pick between <b><b>2 out of the 3</b></b> following guarantees:</p><ul><li><p><b><b>C</b></b>onsistency - is my data the same everywhere?</p></li><li><p><b><b>A</b></b>vailability - is my data accessible all the time?</p></li><li><p><b><b>P</b></b>artition tolerance - is my data resilient to regional outages?</p></li></ul>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2q0UXWQCbVcPVUX9nrkB88/2c384717f1db76f9ecdf7065c08b770f/workers-kv-venn-diagram_2x-1.png\" alt=\"\" class=\"kg-image\" width=\"1204\" height=\"924\" loading=\"lazy\"/>\n            \n            </figure><p>Workers KV chooses to guarantee <b><b>A</b></b>vailability and <b><b>P</b></b>artition tolerance. This combination is known as <a href=\"https://en.wikipedia.org/wiki/Eventual_consistency\">eventual consistency</a>, which presents Workers KV with two unique competitive advantages:</p><ul><li><p>Reads are ultra fast (median of 12 ms) since its powered by our caching technology.</p></li><li><p>Data is available across 175+ edge data centers and resilient to regional outages.</p></li></ul><p>Although, there are tradeoffs to eventual consistency. If two clients write different values to the same key at the same time, the last client to write <b>eventually</b> &quot;wins&quot; and its value becomes globally consistent. This also means that if a client writes to a key and that same client reads that same key, the values may be inconsistent for a short amount of time.</p><p>To help visualize this scenario, here&#39;s a real-life example amongst three friends:</p><ul><li><p>Suppose Matthew, Michelle, and Lee are planning their weekly lunch.</p></li><li><p>Matthew decides they&#39;re going out for sushi.</p></li><li><p>Matthew tells Michelle their sushi plans, Michelle agrees.</p></li><li><p>Lee, not knowing the plans, tells Michelle they&#39;re actually having pizza.</p></li></ul><p>An hour later, Michelle and Lee are waiting at the pizza parlor while Matthew is sitting alone at the sushi restaurant — what went wrong? We can chalk this up to eventual consistency, because after waiting for a few minutes, Matthew looks at his updated calendar and <b>eventually</b> finds the new truth, they&#39;re going out for pizza instead.</p><p>While it may take minutes in real-life, Workers KV is much faster. It can achieve global consistency in less than 60 seconds. Additionally, when a Worker writes to a key, then <b>immediately</b> reads that same key, it can expect the values to be consistent if both operations came from the same location.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"when-should-i-use-it\">When should I use it?</h3>\n      <a href=\"#when-should-i-use-it\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Now that you understand the benefits and tradeoffs of using eventual consistency, how do you determine if it&#39;s the right storage solution for your application? Simply put, if you want global availability with ultra-fast reads, Workers KV is right for you.</p><p>However, if your application is <b><b>frequently</b></b> writing to the <b><b>same</b></b> key, there is an additional consideration. We call it &quot;the Matthew question&quot;: Are you okay with the Matthews of the world <b>occasionally</b> going to the wrong restaurant?</p><p>You can imagine use cases (like our redirect Worker example) where this doesn&#39;t make any material difference. But if you decide to keep track of a user’s bank account balance, you would not want the possibility of two balances existing at once, since they could purchase something with money they’ve already spent.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"what-can-i-build-with-it\">What can I build with it?</h3>\n      <a href=\"#what-can-i-build-with-it\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Here are a few examples of applications that have been built with KV:</p><ul><li><p>Mass redirects - handle billions of HTTP redirects.</p></li><li><p>User authentication - validate user requests to your API.</p></li><li><p>Translation keys - dynamically localize your web pages.</p></li><li><p>Configuration data - manage who can access your origin.</p></li><li><p>Step functions - sync state data between multiple APIs functions.</p></li><li><p>Edge file store - host large amounts of small files.</p></li></ul><p>We’ve highlighted several of those <a href=\"/building-with-workers-kv/\">use cases</a> in our previous blog post. We also have some more in-depth code walkthroughs, including a recently published blog post on how to build an online <a href=\"/building-a-to-do-list-with-workers-and-kv/\">To-do list with Workers KV</a>.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3oQnAPwVXWgsjCuSXuYL7q/755458cfb741e45f78c468a4729f7fc7/GQ4hrfQ.png\" alt=\"\" class=\"kg-image\" width=\"618\" height=\"487\" loading=\"lazy\"/>\n            \n            </figure>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"whats-new-since-beta\">What&#39;s new since beta?</h3>\n      <a href=\"#whats-new-since-beta\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>By far, our most common request was to make it easier to write data to Workers KV. That&#39;s why we&#39;re releasing three new ways to make that experience even better:</p>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"1-bulk-writes\">1. Bulk Writes</h4>\n      <a href=\"#1-bulk-writes\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>If you want to import your existing data into Workers KV, you don&#39;t want to go through the hassle of sending an HTTP request for <b>every</b> key-value pair. That&#39;s why we added a <a href=\"https://api.cloudflare.com/#workers-kv-namespace-write-multiple-key-value-pairs\">bulk endpoint</a> to the Cloudflare API. Now you can upload up to 10,000 pairs (up to 100 MB of data) in a single PUT request.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">curl &quot;https://api.cloudflare.com/client/v4/accounts/ \\\n     $ACCOUNT_ID/storage/kv/namespaces/$NAMESPACE_ID/bulk&quot; \\\n  -X PUT \\\n  -H &quot;X-Auth-Key: $CLOUDFLARE_AUTH_KEY&quot; \\\n  -H &quot;X-Auth-Email: $CLOUDFLARE_AUTH_EMAIL&quot; \\\n  -d &#039;[\n    {&quot;key&quot;: &quot;built_by&quot;,    value: &quot;kyle, alex, charlie, andrew, and brett&quot;},\n    {&quot;key&quot;: &quot;reviewed_by&quot;, value: &quot;joaquin&quot;},\n    {&quot;key&quot;: &quot;approved_by&quot;, value: &quot;steve&quot;}\n  ]&#039;</pre></code>\n            <p>Let&#39;s walk through an example use case: you want to off-load your website translation to Workers. Since you&#39;re reading translation keys frequently and only occasionally updating them, this application works well with the eventual consistency model of Workers KV.</p><p>In this example, we hook into <a href=\"https://crowdin.com/\">Crowdin</a>, a popular platform to manage translation data. This Worker responds to a <code>/translate</code> endpoint, downloads all your translation keys, and bulk writes them to Workers KV so you can read it later on our edge:</p>\n            <pre class=\"language-js\"><code class=\"language-js\">addEventListener(&quot;fetch&quot;, event =&gt; {\n  if (event.request.url.pathname === &quot;/translate&quot;) {\n    event.respondWith(uploadTranslations())\n  }\n})\n\nasync function uploadTranslations() {\n  // Ask crowdin for all of our translations.\n  var response = await fetch(\n    &quot;https://api.crowdin.com/api/project&quot; +\n    &quot;/:ci_project_id/download/all.zip?key=:ci_secret_key&quot;)\n  // If crowdin is responding, parse the response into\n  // a single json with all of our translations.\n  if (response.ok) {\n    var translations = await zipToJson(response)\n    return await bulkWrite(translations)\n  }\n  // Return the errored response from crowdin.\n  return response\n}\n\nasync function bulkWrite(keyValuePairs) {\n  return fetch(\n    &quot;https://api.cloudflare.com/client/v4/accounts&quot; +\n    &quot;/:cf_account_id/storage/kv/namespaces/:cf_namespace_id/bulk&quot;,\n    {\n      method: &quot;PUT&quot;,\n      headers: {\n        &quot;Content-Type&quot;: &quot;application/json&quot;,\n        &quot;X-Auth-Key&quot;: &quot;:cf_auth_key&quot;,\n        &quot;X-Auth-Email&quot;: &quot;:cf_email&quot;\n      },\n      body: JSON.stringify(keyValuePairs)\n    }\n  )\n}\n\nasync function zipToJson(response) {\n  // ... omitted for brevity ...\n  // (eg. https://stuk.github.io/jszip)\n  return [\n    {key: &quot;hello.EN&quot;, value: &quot;Hello World&quot;},\n    {key: &quot;hello.ES&quot;, value: &quot;Hola Mundo&quot;}\n  ]\n}</pre></code>\n            <p>Now, when you want to translate a page, all you have to do is read from Workers KV:</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">async function translate(keys, lang) {\n  // You bind your translations namespace to the TRANSLATIONS variable.\n  return Promise.all(keys.map(key =&gt; TRANSLATIONS.get(key + &quot;.&quot; + lang)))\n}</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h4 id=\"2-expiring-keys\">2. Expiring Keys</h4>\n      <a href=\"#2-expiring-keys\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>By default, key-value pairs stored in Workers KV last forever. However, sometimes you want your data to auto-delete after a certain amount of time. That&#39;s why we&#39;re introducing the <code>expiration</code> and <code>expirationTtl</code>options for write operations.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">// Key expires 60 seconds from now.\nNAMESPACE.put(&quot;myKey&quot;, &quot;myValue&quot;, {expirationTtl: 60})\n\n// Key expires if the UNIX epoch is in the past.\nNAMESPACE.put(&quot;myKey&quot;, &quot;myValue&quot;, {expiration: 1247788800})</pre></code>\n            \n            <pre class=\"language-bash\"><code class=\"language-bash\"># You can also set keys to expire from the Cloudflare API.\ncurl &quot;https://api.cloudflare.com/client/v4/accounts/ \\\n     $ACCOUNT_ID/storage/kv/namespaces/$NAMESPACE_ID/ \\\n     values/$KEY?expiration_ttl=$EXPIRATION_IN_SECONDS&quot;\n  -X PUT \\\n  -H &quot;X-Auth-Key: $CLOUDFLARE_AUTH_KEY&quot; \\\n  -H &quot;X-Auth-Email: $CLOUDFLARE_AUTH_EMAIL&quot; \\\n  -d &quot;$VALUE&quot;</pre></code>\n            <p>Let&#39;s say you want to block users that have been flagged as inappropriate from your website, but only for a week. With an expiring key, you can set the expire time and not have to worry about deleting it later.</p><p>In this example, we assume users and IP addresses are one of the same. If your application has authentication, you could use access tokens as the key identifier.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">addEventListener(&quot;fetch&quot;, event =&gt; {\n  var url = new URL(event.request.url)\n  // An internal API that blocks a new user IP.\n  // (eg. example.com/block/1.2.3.4)\n  if (url.pathname.startsWith(&quot;/block&quot;)) {\n    var ip = url.pathname.split(&quot;/&quot;).pop()\n    event.respondWith(blockIp(ip))\n  } else {\n    // Other requests check if the IP is blocked.\n   event.respondWith(handleRequest(event.request))\n  }\n})\n\nasync function blockIp(ip) {\n  // Values are allowed to be empty in KV,\n  // we don&#039;t need to store any extra information anyway.\n  await BLOCKED.put(ip, &quot;&quot;, {expirationTtl: 60*60*24*7})\n  return new Response(&quot;ok&quot;)\n}\n\nasync function handleRequest(request) {\n  var ip = request.headers.get(&quot;CF-Connecting-IP&quot;)\n  if (ip) {\n    var blocked = await BLOCKED.get(ip)\n    // If we detect an IP and its blocked, respond with a 403 error.\n    if (blocked) {\n      return new Response({status: 403, statusText: &quot;You are blocked!&quot;})\n    }\n  }\n  // Otherwise, passthrough the original request.\n  return fetch(request)\n}</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h4 id=\"3-larger-values\">3. Larger Values</h4>\n      <a href=\"#3-larger-values\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We&#39;ve increased our size limit on values from <code>64 kB</code> to <code>2 MB</code>. This is quite useful if you need to store buffer-based or file data in Workers KV.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1cYcxKnB6nfE9lUg6aIUZK/4cefcd37832fc703602f0c8aa37c33d6/workers-kc-file-size-update_2x.png\" alt=\"\" class=\"kg-image\" width=\"1212\" height=\"604\" loading=\"lazy\"/>\n            \n            </figure><p>Consider this scenario: you want to let your users upload their favorite GIF to their profile without having to store these GIFs as binaries in your database or managing <b>another</b> cloud storage bucket.</p><p>Workers KV is a great fit for this use case! You can create a Workers KV namespace for your users’ GIFs that is fast and reliable wherever your customers are located.</p><p>In this example, users upload a link to their favorite GIF, then a Worker downloads it and stores it to Workers KV.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">addEventListener(&quot;fetch&quot;, event =&gt; {\n  var url = event.request.url\n  var arg = request.url.split(&quot;/&quot;).pop()\n  // User sends a URI encoded link to the GIF they wish to upload.\n  // (eg. example.com/api/upload_gif/&lt;encoded-uri&gt;)\n  if (url.pathname.startsWith(&quot;/api/upload_gif&quot;)) {\n    event.respondWith(uploadGif(arg))\n    // Profile contains link to view the GIF.\n    // (eg. example.com/api/view_gif/&lt;username&gt;)\n  } else if (url.pathname.startsWith(&quot;/api/view_gif&quot;)) {\n    event.respondWith(getGif(arg))\n  }\n})\n\nasync function uploadGif(url) {\n  // Fetch the GIF from the Internet.\n  var gif = await fetch(decodeURIComponent(url))\n  var buffer = await gif.arrayBuffer()\n  // Upload the GIF as a buffer to Workers KV.\n  await GIFS.put(user.name, buffer)\n  return gif\n}\n\nasync function getGif(username) {\n  var gif = await GIFS.get(username, &quot;arrayBuffer&quot;)\n  // If the user has set one, respond with the GIF.\n  if (gif) {\n    return new Response(gif, {headers: {&quot;Content-Type&quot;: &quot;image/gif&quot;}})\n  } else {\n    return new Response({status: 404, statusText: &quot;User has no GIF!&quot;})\n  }\n}</pre></code>\n            <p>Lastly, we want to thank all of our beta customers. It was your valuable feedback that led us to develop these changes to Workers KV. Make sure to stay in touch with us, we&#39;re always looking ahead for what&#39;s next and we love hearing from you!</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"pricing\">Pricing</h3>\n      <a href=\"#pricing\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We’re also ready to announce our GA pricing. If you&#39;re one of our Enterprise customers, your pricing obviously remains unchanged.</p><ul><li><p>$0.50 / GB of data stored, 1 GB included</p></li><li><p>$0.50 / million reads, 10 million included</p></li><li><p>$5 / million write, list, and delete operations, 1 million included</p></li></ul><p>During the beta period, we learned customers don&#39;t want to just read values at our edge, they want to write values from our edge too. Since there is high demand for these edge operations, which are more costly, we have started charging non-read operations per month.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"limits\">Limits</h3>\n      <a href=\"#limits\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>As mentioned earlier, we increased our value size limit from <code>64 kB</code> to <code>2 MB</code>. We&#39;ve also removed our cap on the number of keys per namespace — it&#39;s now unlimited. Here are our GA limits:</p><ul><li><p>Up to 20 namespaces per account, each with unlimited keys</p></li><li><p>Keys of up to 512 bytes and values of up to 2 MB</p></li><li><p>Unlimited writes per second for different keys</p></li><li><p>One write per second for the same key</p></li><li><p>Unlimited reads per second per key</p></li></ul>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"try-it-out-now\">Try it out now!</h3>\n      <a href=\"#try-it-out-now\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Now open to all customers, you can start using <a href=\"https://www.cloudflare.com/products/workers-kv/\">Workers KV</a> today from your Cloudflare dashboard under the Workers tab. You can also look at our updated <a href=\"https://developers.cloudflare.com/workers/kv/\">documentation.</a></p><p>We&#39;re really excited to see what you all can build with Workers KV!</p>",
		"id": "1btTnYVZRP9LCWLguf60eI",
		"localeList": {
			"name": "Workers KV — Cloudflare's distributed database Config",
			"enUS": "English for Locale",
			"zhCN": "Translated for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "Translated for Locale",
			"deDE": "Translated for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "Translated for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "Translated for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Today, we’re excited to announce Workers KV is entering general availability and is ready for production use!",
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2019-05-21T14:00:00.000+01:00",
		"slug": "workers-kv-is-ga",
		"tags": [
			{
				"id": "5cye1Bh5KxFh3pKSnX8Dsy",
				"name": "Serverless",
				"slug": "serverless"
			},
			{
				"id": "6hbkItfupogJP3aRDAq6v8",
				"name": "Cloudflare Workers",
				"slug": "workers"
			},
			{
				"id": "q88b6J14cYlPx98w6u1If",
				"name": "Cloudflare Workers KV",
				"slug": "cloudflare-workers-kv"
			},
			{
				"id": "78aSAeMjGNmCuetQ7B4OgU",
				"name": "JavaScript",
				"slug": "javascript"
			},
			{
				"id": "6QktrXeEFcl4e2dZUTZVGl",
				"name": "Product News",
				"slug": "product-news"
			},
			{
				"id": "6lhzEBz2B56RKa4nUEAGYJ",
				"name": "Programming",
				"slug": "programming"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			},
			{
				"id": "3JAY3z7p7An94s6ScuSQPf",
				"name": "Developer Platform",
				"slug": "developer-platform"
			}
		],
		"title": "Workers KV — Cloudflare's distributed database",
		"updated_at": "2025-10-03T19:48:01.542Z",
		"url": "https://blog.cloudflare.com/workers-kv-is-ga"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}