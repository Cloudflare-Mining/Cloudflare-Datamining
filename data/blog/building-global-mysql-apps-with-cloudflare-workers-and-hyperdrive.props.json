{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "5",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Thomas Gauvin",
				"slug": "thomas-gauvin",
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2niktUqyQO5YzVIBCwrBGl/9474ec9faff3b27f7ec9013a066b9b54/Thomas_Gauvin.jpg"
			},
			{
				"name": "Andrew Repp",
				"slug": "andrew-repp",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1moTBd0N5e74Bn9NWn2ksO/9642b164dcf16e501a79e56520548aa2/andrew-repp.jpg",
				"location": "Chicago, IL, USA",
				"website": "http://andrewrepp.com",
				"twitter": null,
				"facebook": null
			},
			{
				"name": "Kirk Nickish",
				"slug": "kirk-nickish",
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7moLa3bYyUWGSpTYWzP93F/558f6a70613f5713291231ddd57448cc/Kirk_Nickish.jpg"
			},
			{
				"name": "Yagiz Nizipli",
				"slug": "yagiz-nizipli",
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/Nt978ELmW8HwrYwJDdwUz/c463d2ccaa54ed75b9c2e3f0fa0a7385/Yagiz_Nizipli.jpg"
			}
		],
		"excerpt": "MySQL comes to Cloudflare Workers and Hyperdrive: MySQL drivers and ORMs are now compatible with Workers runtime, and Hyperdrive allow you to connect to your regional database from Workers.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/66cVIUwEu4XKwAOyvv3zIO/2269528f2f33413c997040b4a8bb9574/Feature_Image.png",
		"featured": false,
		"html": "<p>Today, we’re announcing support for MySQL in Cloudflare Workers and Hyperdrive. You can now build applications on Workers that connect to your MySQL databases directly, no matter where they’re hosted, with native MySQL drivers, and with optimal performance. </p><p>Connecting to MySQL databases from Workers has been an area we’ve been focusing on <a href=\"https://blog.cloudflare.com/relational-database-connectors/\"><u>for quite some time</u></a>. We want you to build your apps on Workers with your existing data, even if that data exists in a SQL database in us-east-1. But connecting to traditional SQL databases from Workers has been challenging: it requires making stateful connections to regional databases with drivers that haven’t been designed for <a href=\"https://blog.cloudflare.com/workerd-open-source-workers-runtime/\"><u>the Workers runtime</u></a>. </p><p>After multiple attempts at solving this problem for Postgres, <a href=\"https://developers.cloudflare.com/hyperdrive/\"><u>Hyperdrive</u></a> emerged as our solution that provides the best of both worlds: it supports existing database drivers and libraries while also providing best-in-class performance. And it’s such a critical part of connecting to databases from Workers that we’re making it free (check out the <a href=\"https://blog.cloudflare.com/how-hyperdrive-speeds-up-database-access\"><u>Hyperdrive free tier announcement</u></a>).</p><p>With <a href=\"http://blog.cloudflare.com/full-stack-development-on-cloudflare-workers\"><u>new Node.js compatibility improvements</u></a> and <a href=\"http://developers.cloudflare.com/changelog/2025-04-08-hyperdrive-mysql-support/\"><u>Hyperdrive support for the MySQL wire protocol</u></a>, we’re happy to say MySQL support for Cloudflare Workers has been achieved. If you want to jump into the code and have a MySQL database on hand, this “Deploy to Cloudflare” button will get you setup with a deployed project and will create a repository so you can dig into the code. </p><a href=\"https://deploy.workers.cloudflare.com/?url=https://github.com/cloudflare/templates/tree/main/mysql-hyperdrive-template\"><img src=\"https://deploy.workers.cloudflare.com/button\" alt=\"Deploy to Cloudflare\"/></a>\n<p></p><p>Read on to learn more about how we got MySQL to work on Workers, and why Hyperdrive is critical to making connectivity to MySQL databases fast.</p>\n          <div class=\"flex anchor relative\">\n            <h2 id=\"getting-mysql-to-work-on-workers\">Getting MySQL to work on Workers</h2>\n            <a href=\"#getting-mysql-to-work-on-workers\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n          <p>Until recently, connecting to MySQL databases from Workers was not straightforward. While it’s been possible to make TCP connections from Workers <a href=\"https://blog.cloudflare.com/workers-tcp-socket-api-connect-databases/\"><u>for some time</u></a>, MySQL drivers had many dependencies on Node.js that weren’t available on the Workers runtime, and that prevented their use.</p><p>This led to workarounds being developed. PlanetScale provided a <a href=\"https://planetscale.com/blog/introducing-the-planetscale-serverless-driver-for-javascript\"><u>serverless driver for JavaScript</u></a>, which communicates with PlanetScale servers using HTTP instead of TCP to relay database messages. In a separate effort, a <a href=\"https://github.com/nora-soderlund/cloudflare-mysql\"><u>fork</u></a> of the <a href=\"https://www.npmjs.com/package/mysql\"><u>mysql</u></a> package was created to polyfill the missing Node.js dependencies and modify the <code>mysql</code> package to work on Workers. </p><p>These solutions weren’t perfect. They required using new libraries that either did not provide the level of support expected for production applications, or provided solutions that were limited to certain MySQL hosting providers. They also did not integrate with existing codebases and tooling that depended on the popular MySQL drivers (<a href=\"https://www.npmjs.com/package/mysql\"><u>mysql</u></a> and <a href=\"https://www.npmjs.com/package/mysql2\"><u>mysql2</u></a>). In our effort to enable all JavaScript developers to build on Workers, we knew that we had to support these drivers.</p>\n          <figure class=\"kg-card kg-image-card\">\n          <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3s4E4XVAbvqRwyk6aITm1h/cb9700eae49d2593c9a834fc7a09018e/1.png\" alt=\"\" class=\"kg-image\" width=\"1216\" height=\"481\" loading=\"lazy\"/>\n          </figure><p><sup><i>Package downloads from </i></sup><a href=\"https://www.npmjs.com/\"><sup><i><u>npm</u></i></sup></a><sup><i> for </i></sup><a href=\"https://www.npmjs.com/package/mysql\"><sup><i><u>mysql</u></i></sup></a><sup><i> and </i></sup><a href=\"https://www.npmjs.com/package/mysql2\"><sup><i><u>mysql2</u></i></sup></a></p><p>Improving our Node.js compatibility story was critical to get these MySQL drivers working on our platform. We first identified <a href=\"https://nodejs.org/api/net.html\"><u>net</u></a> and <a href=\"https://nodejs.org/api/stream.html\"><u>stream</u></a> as APIs that were needed by both drivers. This, complemented by Workers’ <a href=\"https://blog.cloudflare.com/more-npm-packages-on-cloudflare-workers-combining-polyfills-and-native-code/\"><u>nodejs_compat</u></a> to resolve unused Node.js dependencies with <a href=\"https://github.com/unjs/unenv\"><code><u>unenv</u></code></a>, enabled the <a href=\"https://www.npmjs.com/package/mysql\"><u>mysql</u></a> package to work on Workers:</p>\n            <pre class=\"language-JavaScript\"><code class=\"language-JavaScript\">import { createConnection } from &#039;mysql&#039;;\n\nexport default {\n async fetch(request, env, ctx): Promise&lt;Response&gt; {\n    const result = await new Promise&lt;any&gt;((resolve) =&gt; {\n\n       const connection = createConnection({\n         host: env.DB_HOST,\n         user: env.DB_USER,\n         password: env.DB_PASSWORD,\n         database: env.DB_NAME,\n\t  port: env.DB_PORT\n       });\n\n       connection.connect((error: { message : string }) =&gt; {\n          if(error) {\n            throw new Error(error.message);\n          }\n          \n          connection.query(&quot;SHOW tables;&quot;, [], (error, rows, fields) =&gt; {\n          connection.end();\n         \n          resolve({ fields, rows });\n        });\n       });\n\n      });\n\n     return new Response(JSON.stringify(result), {\n       headers: {\n         &#039;Content-Type&#039;: &#039;application/json&#039;,\n       },\n     });\n },\n} satisfies ExportedHandler&lt;Env&gt;;</pre></code>\n            <p>Further work was required to get <a href=\"https://www.npmjs.com/package/mysql2\"><u>mysql2</u></a> working: dependencies on Node.js <a href=\"https://nodejs.org/api/timers.html\"><u>timers</u></a> and the JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\"><u>eval</u></a> API remained. While we were able to land support for <a href=\"https://github.com/cloudflare/workerd/pull/3346\"><u>timers</u></a> in the Workers runtime, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\"><u>eval</u></a> was not an API that we could securely enable in the Workers runtime at this time. </p><p><a href=\"https://www.npmjs.com/package/mysql2\"><u>mysql2</u></a> uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\"><u>eval</u></a> to optimize the parsing of MySQL results containing large rows with more than 100 columns (see <a href=\"https://github.com/sidorares/node-mysql2/issues/2055#issuecomment-1614222188\"><u>benchmarks</u></a>). This blocked the driver from working on Workers, since the Workers runtime does not support this module. Luckily, <a href=\"https://github.com/sidorares/node-mysql2/pull/2289\"><u>prior effort existed</u></a> to get mysql2 working on Workers using static parsers for handling text and binary MySQL data types without using <code>eval()</code>, which provides similar performance for a majority of scenarios. </p><p>In <a href=\"https://www.npmjs.com/package/mysql2\"><u>mysql2</u></a> version <code>3.13.0</code>, a new option to disable the use of <code>eval()</code> was released to make it possible to use the driver in Cloudflare Workers:</p>\n            <pre class=\"language-JavaScript\"><code class=\"language-JavaScript\">import { createConnection  } from &#039;mysql2/promise&#039;;\n\nexport default {\n async fetch(request, env, ctx): Promise&lt;Response&gt; {\n    const connection = await createConnection({\n     host: env.DB_HOST,\n     user: env.DB_USER,\n     password: env.DB_PASSWORD,\n     database: env.DB_NAME,\n     port: env.DB_PORT\n\n     // The following line is needed for mysql2 to work on Workers (as explained above)\n     // mysql2 uses eval() to optimize result parsing for rows with &gt; 100 columns\n     // eval() is not available in Workers due to runtime limitations\n     // Configure mysql2 to use static parsing with disableEval\n     disableEval: true\n   });\n\n   const [results, fields] = await connection.query(\n     &#039;SHOW tables;&#039;\n   );\n\n   return new Response(JSON.stringify({ results, fields }), {\n     headers: {\n       &#039;Content-Type&#039;: &#039;application/json&#039;,\n       &#039;Access-Control-Allow-Origin&#039;: &#039;*&#039;,\n     },\n   });\n },\n} satisfies ExportedHandler&lt;Env&gt;;</pre></code>\n            <p>So, with these efforts, it is now possible to connect to MySQL from Workers. But, getting the MySQL drivers working on Workers was only half of the battle. To make MySQL on Workers performant for production uses, we needed to make it possible to connect to MySQL databases with Hyperdrive.</p>\n          <div class=\"flex anchor relative\">\n            <h2 id=\"supporting-mysql-in-hyperdrive\">Supporting MySQL in Hyperdrive</h2>\n            <a href=\"#supporting-mysql-in-hyperdrive\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n          <p>If you’re a MySQL developer, <a href=\"https://developers.cloudflare.com/hyperdrive/\"><u>Hyperdrive</u></a> may be new to you. Hyperdrive solves a core problem: connecting from Workers to regional SQL databases is slow. Database drivers <a href=\"https://docs.google.com/document/d/1d96f87sj2EPreNeYUNlAMVYCuODVA4yYs0G9i8dTOjQ/edit?tab=t.0\"><u>require many roundtrips</u></a> to establish a connection to a database. Without the ability to reuse these connections between Worker invocations, a lot of unnecessary latency is added to your application. </p><p>Hyperdrive solves this problem by pooling connections to your database globally and eliminating unnecessary roundtrips for connection setup. As a plus, Hyperdrive also provides integrated caching to offload popular queries from your database. We wrote an entire deep dive on how Hyperdrive does this, which you should definitely <a href=\"https://docs.google.com/document/d/1d96f87sj2EPreNeYUNlAMVYCuODVA4yYs0G9i8dTOjQ/edit?tab=t.0\"><u>check out</u></a>. </p>\n          <figure class=\"kg-card kg-image-card\">\n          <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/R8bfw57o8KEXHD7EstTmP/eee5182beb931373c25a1c42f5dd0ce3/2.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"741\" loading=\"lazy\"/>\n          </figure><p>Getting Hyperdrive to support MySQL was critical for us to be able to say “Connect from Workers to MySQL databases”. That’s easier said than done. To support a new database type, Hyperdrive needs to be able to parse the wire protocol of the database in question, in this case, the <a href=\"https://dev.mysql.com/doc/dev/mysql-server/8.4.3/PAGE_PROTOCOL.html\"><u>MySQL protocol</u></a>. Once this is accomplished, Hyperdrive can extract queries from protocol messages, cache results across Cloudflare locations, relay messages to a datacenter close to your database, and pool connections reliably close to your origin database. </p><p>Adapting Hyperdrive to parse a new language, MySQL protocol, is a challenge in its own right. But it also presented some notable differences with Postgres. While the intricacies are beyond the scope of this post, the differences in MySQL’s <a href=\"https://dev.mysql.com/doc/refman/8.4/en/authentication-plugins.html\"><u>authentication plugins</u></a> across providers and how MySQL’s connection handshake uses <a href=\"https://dev.mysql.com/doc/dev/mysql-server/latest/group__group__cs__capabilities__flags.html\"><u>capability flags</u></a> required some adaptation of Hyperdrive. In the end, we leveraged the experience we gained in building Hyperdrive for Postgres to iterate on our support for MySQL. And we’re happy to announce MySQL support is available for Hyperdrive, with all of the <a href=\"https://developers.cloudflare.com/changelog/2025-03-04-hyperdrive-pooling-near-database-and-ip-range-egress/\"><u>performance</u></a> <a href=\"https://developers.cloudflare.com/changelog/2024-12-11-hyperdrive-caching-at-edge/\"><u>improvements</u></a> we’ve made to Hyperdrive available from the get-go!</p><p>Now, you can create new Hyperdrive configurations for MySQL databases hosted anywhere (we’ve tested MySQL and MariaDB databases from AWS (including AWS Aurora), GCP, Azure, PlanetScale, and self-hosted databases). You can create Hyperdrive configurations for your MySQL databases from the dashboard or the <a href=\"https://developers.cloudflare.com/workers/wrangler/\"><u>Wrangler CLI</u></a>:</p>\n            <pre class=\"language-Rust\"><code class=\"language-Rust\">wrangler hyperdrive create mysql-hyperdrive \n--connection-string=&quot;mysql://user:password@db-host.example.com:3306/defaultdb&quot;</pre></code>\n            <p>In your Wrangler configuration file, you’ll need to set your Hyperdrive binding to the ID of the newly created Hyperdrive configuration as well as set Node.js compatibility flags:</p>\n            <pre class=\"language-Rust\"><code class=\"language-Rust\">{\n &quot;$schema&quot;: &quot;node_modules/wrangler/config-schema.json&quot;,\n &quot;name&quot;: &quot;workers-mysql-template&quot;,\n &quot;main&quot;: &quot;src/index.ts&quot;,\n &quot;compatibility_date&quot;: &quot;2025-03-10&quot;,\n &quot;observability&quot;: {\n   &quot;enabled&quot;: true\n },\n &quot;compatibility_flags&quot;: [\n   &quot;nodejs_compat&quot;\n ],\n &quot;hyperdrive&quot;: [\n   {\n     &quot;binding&quot;: &quot;HYPERDRIVE&quot;,\n     &quot;id&quot;: &quot;&lt;HYPERDRIVE_CONFIG_ID&gt;&quot;\n   }\n ]\n}</pre></code>\n            <p>From your Cloudflare Worker, the Hyperdrive binding provides you with custom connection credentials that connect to your Hyperdrive configuration. From there onward, all of your queries and database messages will be routed to your origin database by Hyperdrive, leveraging Cloudflare’s network to speed up routing.</p>\n            <pre class=\"language-JavaScript\"><code class=\"language-JavaScript\">import { createConnection  } from &#039;mysql2/promise&#039;;\n\nexport interface Env {\n HYPERDRIVE: Hyperdrive;\n}\n\nexport default {\n async fetch(request, env, ctx): Promise&lt;Response&gt; {\n  \n   // Hyperdrive provides new connection credentials to use with your existing drivers\n   const connection = await createConnection({\n     host: env.HYPERDRIVE.host,\n     user: env.HYPERDRIVE.user,\n     password: env.HYPERDRIVE.password,\n     database: env.HYPERDRIVE.database,\n     port: env.HYPERDRIVE.port,\n\n     // Configure mysql2 to use static parsing (as explained above in Part 1)\n     disableEval: true \n   });\n\n   const [results, fields] = await connection.query(\n     &#039;SHOW tables;&#039;\n   );\n\n   return new Response(JSON.stringify({ results, fields }), {\n     headers: {\n       &#039;Content-Type&#039;: &#039;application/json&#039;,\n       &#039;Access-Control-Allow-Origin&#039;: &#039;*&#039;,\n     },\n   });\n },\n} satisfies ExportedHandler&lt;Env&gt;;</pre></code>\n            <p>As you can see from this code snippet, you only need to swap the credentials in your JavaScript code for those provided by Hyperdrive to migrate your existing code to Workers. No need to change the ORMs or drivers you’re using! </p>\n          <div class=\"flex anchor relative\">\n            <h2 id=\"get-started-building-with-mysql-and-hyperdrive\">Get started building with MySQL and Hyperdrive</h2>\n            <a href=\"#get-started-building-with-mysql-and-hyperdrive\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n          <p>MySQL support for Workers and Hyperdrive has been long overdue and we’re excited to see what you build. We published a template for you to get started building your MySQL applications on Workers with Hyperdrive:</p><a href=\"https://deploy.workers.cloudflare.com/?url=https://github.com/cloudflare/templates/tree/main/mysql-hyperdrive-template\"><img src=\"https://deploy.workers.cloudflare.com/button\" alt=\"Deploy to Cloudflare\"/></a>\n<p></p><p>As for what’s next, we’re going to continue iterating on our support for MySQL during the beta to support more of the MySQL protocol and MySQL-compatible databases. We’re also going to continue to expand the feature set of Hyperdrive to make it more flexible for your full-stack workloads and more performant for building full-stack global apps on Workers.</p><p>Finally, whether you’re using MySQL, PostgreSQL, or any of the other compatible databases, we think you should be using Hyperdrive to get the best performance. And because we want to enable you to build on Workers regardless of your preferred database, <a href=\"https://blog.cloudflare.com/how-hyperdrive-speeds-up-database-access\"><u>we’re making Hyperdrive available to the Workers free plan. </u></a></p><p>We want to hear your feedback on MySQL, Hyperdrive, and building global applications with Workers. Join the #hyperdrive channel in our <a href=\"http://discord.cloudflare.com/\"><u>Developer Discord</u></a> to ask questions, share what you’re building, and talk to our Product &amp; Engineering teams directly.</p><p>Thank you to <a href=\"https://github.com/wellwelwel\"><u>Weslley Araújo</u></a>, <a href=\"https://github.com/sidorares\"><u>Andrey Sidorov</u></a>, <a href=\"https://github.com/shiyuhang0\"><u>Shi Yuhang</u></a>, <a href=\"https://github.com/Mini256\"><u>Zhiyuan Liang</u></a>, <a href=\"https://github.com/nora-soderlund\"><u>Nora Söderlund</u></a> and other open-source contributors who helped push this initiative forward.</p>",
		"id": "77Nbj8Tnnrr6vMWsDSFekZ",
		"localeList": {
			"name": "blog-english-only",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "MySQL comes to Cloudflare Workers and Hyperdrive: your favorite MySQL drivers and ORMs are now compatible with the Workers runtime, and Hyperdrive allows you to connect to your regional database from Workers with optimal performance. ",
		"metadata": {
			"title": "Build global MySQL apps using Cloudflare Workers and Hyperdrive",
			"description": "MySQL comes to Cloudflare Workers and Hyperdrive: your favorite MySQL drivers and ORMs are now compatible with the Workers runtime, and Hyperdrive allows you to connect to your regional database from Workers with optimal performance.",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1zEmlwRLIuWBKT99PuaBDU/186ae77085f27d37df6338b6a1118813/OG_Share_2024__30_.png"
		},
		"primary_author": {},
		"published_at": "2025-04-08T14:00+00:00",
		"slug": "building-global-mysql-apps-with-cloudflare-workers-and-hyperdrive",
		"tags": [
			{
				"id": "2xCnBweKwOI3VXdYsGVbMe",
				"name": "Developer Week",
				"slug": "developer-week"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			},
			{
				"id": "715fxP0LCYITiFP6JZ7rkX",
				"name": "MySQL",
				"slug": "mysql"
			},
			{
				"id": "6hbkItfupogJP3aRDAq6v8",
				"name": "Cloudflare Workers",
				"slug": "workers"
			},
			{
				"id": "5EP9xxxSTGvFx3RIxjqIgP",
				"name": "Hyperdrive",
				"slug": "hyperdrive"
			}
		],
		"title": "Build global MySQL apps using Cloudflare Workers and Hyperdrive",
		"updated_at": "2025-04-08T13:00:03.206Z",
		"url": "https://blog.cloudflare.com/building-global-mysql-apps-with-cloudflare-workers-and-hyperdrive"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}