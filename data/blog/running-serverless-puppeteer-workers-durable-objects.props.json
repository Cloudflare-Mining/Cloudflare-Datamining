{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "3",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Tanushree Sharma",
				"slug": "tanushree",
				"bio": "Product Manager, Cloudflare Workers",
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/77c5gQJtSO9WoLGws7OZef/e429d24838ca9eaa433be9015e69d938/tanushree.jpg",
				"location": "Austin",
				"website": null,
				"twitter": "@_tanushreeeee",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "We’ve heard from developers that configuring and maintaining their own serverless browser automation systems can be quite painful. The Workers Browser Rendering API solves this",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3OJFuPzbh7O6f2CFrQTfOl/eafe854b1a8cffa1e1233fe25fc85e60/running-serverless-puppeteer-workers-durable-objects.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6q1qWS257ltTlrgJ2rOFcf/baaa779be33983d718fa574c7794adf9/Running-Serverless-Puppeteer-with-Workers-and-Durable-Objects.png\" alt=\"Running Serverless Puppeteer with Workers and Durable Objects\" class=\"kg-image\" width=\"1600\" height=\"900\" loading=\"lazy\"/>\n            \n            </figure><p>Last year, we <a href=\"/introducing-workers-browser-rendering-api/\">announced the Browser Rendering API</a> – letting users running Puppeteer, a browser automation library, directly in Workers. Puppeteer is one of the most popular libraries used to interact with a headless browser instance to accomplish tasks like taking screenshots, generating PDFs, crawling web pages, and testing <a href=\"https://www.cloudflare.com/learning/security/what-is-web-application-security/\">web applications</a>. We’ve heard from developers that configuring and maintaining their own serverless browser automation systems can be quite painful.</p><p>The <a href=\"https://developers.cloudflare.com/browser-rendering/\">Workers Browser Rendering API</a> solves this. It makes the Puppeteer library available directly in your Worker, connected to a real web browser, without the need to configure and manage infrastructure or keep browser sessions warm yourself. You can use <a href=\"https://www.npmjs.com/package/@cloudflare/puppeteer\">@cloudflare/puppeteer</a> to run the full Puppeteer API directly on Workers!</p><p>We’ve seen so much interest from the developer community since launching last year. While the Browser Rendering API is still in beta (sign up to our <a href=\"https://www.cloudflare.com/lp/workers-browser-rendering-api/?ref=blog.cloudflare.com&cf_target_id=99BC25CE5278572504B986049859D8A2\">waitlist</a> to get access), we wanted to share a way to get more out of our <a href=\"https://developers.cloudflare.com/browser-rendering/platform/limits/\">current limits</a> by using the Browser Rendering API with <a href=\"https://developers.cloudflare.com/durable-objects/\">Durable Objects</a>. We’ll also be sharing pricing for the Rendering API, so you can build knowing exactly what you’ll pay for.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"building-a-responsive-web-design-testing-tool-with-the-browser-rendering-api\">Building a responsive web design testing tool with the Browser Rendering API</h3>\n            <a href=\"#building-a-responsive-web-design-testing-tool-with-the-browser-rendering-api\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>As a designer or frontend developer, you want to make sure that content is well-designed for visitors browsing on different screen sizes. With the number of possible devices that users are browsing on are growing, it becomes difficult to test all the possibilities manually. While there are many testing tools on the market, we want to show how easy it is to create your own Chromium based tool with the Workers Browser Rendering API and Durable Objects.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/OQNeORd8VW4RffHGH8ndq/b94872dfb08664a524eae20227785acf/pasted-image-0--6--2.png\" alt=\"\" class=\"kg-image\" width=\"852\" height=\"236\" loading=\"lazy\"/>\n            \n            </figure><p>We’ll be using the Worker to handle any incoming requests, pass them to the Durable Object to take screenshots and store them in an R2 bucket. The Durable Object is used to create a browser session that’s persistent. By using <a href=\"https://developers.cloudflare.com/durable-objects/api/alarms-in-durable-objects/\">Durable Object Alarms</a> we can keep browsers open for longer and reuse browser sessions across requests.</p><p>Let’s dive into how we can build this application:</p><ol><li><p>Create a Worker with a Durable Object, Browser Rendering API binding and R2 bucket. This is the resulting wrangler.toml:</p></li></ol>\n            <pre class=\"language-bash\"><code class=\"language-bash\">name = &quot;rendering-api-demo&quot;\nmain = &quot;src/index.js&quot;\ncompatibility_date = &quot;2023-09-04&quot;\ncompatibility_flags = [ &quot;nodejs_compat&quot;]\naccount_id = &quot;c05e6a39aa4ccdd53ad17032f8a4dc10&quot;\n\n\n# Browser Rendering API binding\nbrowser = { binding = &quot;MYBROWSER&quot; }\n\n# Bind an R2 Bucket\n[[r2_buckets]]\nbinding = &quot;BUCKET&quot;\nbucket_name = &quot;screenshots&quot;\n\n# Binding to a Durable Object\n[[durable_objects.bindings]]\nname = &quot;BROWSER&quot;\nclass_name = &quot;Browser&quot;\n\n[[migrations]]\ntag = &quot;v1&quot; # Should be unique for each entry\nnew_classes = [&quot;Browser&quot;] # Array of new classes</pre></code>\n            <p>2. Define the Worker</p><p>This Worker simply passes the request onto the Durable Object.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">export default {\n\tasync fetch(request, env) {\n\n\t\tlet id = env.BROWSER.idFromName(&quot;browser&quot;);\n\t\tlet obj = env.BROWSER.get(id);\n\t  \n\t\t// Send a request to the Durable Object, then await its response.\n\t\tlet resp = await obj.fetch(request.url);\n\t\tlet count = await resp.text();\n\t  \n\t\treturn new Response(&quot;success&quot;);\n\t}\n};</pre></code>\n            <p>3. Define the Durable Object class</p>\n            <pre class=\"language-js\"><code class=\"language-js\">const KEEP_BROWSER_ALIVE_IN_SECONDS = 60;\n\nexport class Browser {\n\tconstructor(state, env) {\n\t\tthis.state = state;\n\t\tthis.env = env;\n\t\tthis.keptAliveInSeconds = 0;\n\t\tthis.storage = this.state.storage;\n\t}\n  \n\tasync fetch(request) {\n\t\t// screen resolutions to test out\n\t\tconst width = [1920, 1366, 1536, 360, 414]\n\t\tconst height = [1080, 768, 864, 640, 896]\n\n\t\t// use the current date and time to create a folder structure for R2\n\t\tconst nowDate = new Date()\n\t\tvar coeff = 1000 * 60 * 5\n\t\tvar roundedDate = (new Date(Math.round(nowDate.getTime() / coeff) * coeff)).toString();\n\t\tvar folder = roundedDate.split(&quot; GMT&quot;)[0]\n\n\t\t//if there&#039;s a browser session open, re-use it\n\t\tif (!this.browser) {\n\t\t\tconsole.log(`Browser DO: Starting new instance`);\n\t\t\ttry {\n\t\t\t  this.browser = await puppeteer.launch(this.env.MYBROWSER);\n\t\t\t} catch (e) {\n\t\t\t  console.log(`Browser DO: Could not start browser instance. Error: ${e}`);\n\t\t\t}\n\t\t  }\n\t\t\n\t\t// Reset keptAlive after each call to the DO\n\t\tthis.keptAliveInSeconds = 0;\n\t\t\n\t\tconst page = await this.browser.newPage();\n\n\t\t// take screenshots of each screen size \n\t\tfor (let i = 0; i &lt; width.length; i++) {\n\t\t\tawait page.setViewport({ width: width[i], height: height[i] });\n\t\t\tawait page.goto(&quot;https://workers.cloudflare.com/&quot;);\n\t\t\tconst fileName = &quot;screenshot_&quot; + width[i] + &quot;x&quot; + height[i]\n\t\t\tconst sc = await page.screenshot({\n\t\t\t\tpath: fileName + &quot;.jpg&quot;\n\t\t\t}\n\t\t\t);\n\n\t\t\tthis.env.BUCKET.put(folder + &quot;/&quot;+ fileName + &quot;.jpg&quot;, sc);\n\t\t  }\n\t\t\n\t\t// Reset keptAlive after performing tasks to the DO.\n\t\tthis.keptAliveInSeconds = 0;\n\n\t\t// set the first alarm to keep DO alive\n\t\tlet currentAlarm = await this.storage.getAlarm();\n\t\tif (currentAlarm == null) {\n\t\tconsole.log(`Browser DO: setting alarm`);\n\t\tconst TEN_SECONDS = 10 * 1000;\n\t\tthis.storage.setAlarm(Date.now() + TEN_SECONDS);\n\t\t}\n\t\t\n\t\tawait this.browser.close();\n\t\treturn new Response(&quot;success&quot;);\n\t}\n\n\tasync alarm() {\n\t\tthis.keptAliveInSeconds += 10;\n\t\n\t\t// Extend browser DO life\n\t\tif (this.keptAliveInSeconds &lt; KEEP_BROWSER_ALIVE_IN_SECONDS) {\n\t\t  console.log(`Browser DO: has been kept alive for ${this.keptAliveInSeconds} seconds. Extending lifespan.`);\n\t\t  this.storage.setAlarm(Date.now() + 10 * 1000);\n\t\t} else console.log(`Browser DO: cxceeded life of ${KEEP_BROWSER_ALIVE_IN_SECONDS}. Browser DO will be shut down in 10 seconds.`);\n\t  }\n\n  }</pre></code>\n            <p>That’s it! With less than a hundred lines of code, you can fully customize a powerful tool to automate responsive web design testing. You can even incorporate it into your CI pipeline to automatically test different window sizes with each build and verify the result is as expected by using an automated library like <a href=\"https://www.npmjs.com/package/pixelmatch\">pixelmatch</a>.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"how-much-will-this-cost\">How much will this cost?</h3>\n            <a href=\"#how-much-will-this-cost\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>We’ve spoken to many customers deploying a Puppeteer service on their own infrastructure, on <a href=\"https://www.cloudflare.com/learning/cloud/what-is-a-public-cloud/\">public cloud containers</a> or <a href=\"https://www.cloudflare.com/learning/serverless/glossary/function-as-a-service-faas/\">functions</a> or using managed services. The common theme that we’ve heard is that these services are costly – costly to maintain and expensive to run.</p><p>While you won’t be billed for the Browser Rendering API yet, we want to be transparent with you about costs you start building. We know it’s important to understand the pricing structure so that you don’t get a surprise bill and so that you can design your application efficiently.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6gFIbTnuDafnmpIH2FpQUX/94ce188a354578aae872971f974fd4b4/pasted-image-0--7--2.png\" alt=\"\" class=\"kg-image\" width=\"1316\" height=\"468\" loading=\"lazy\"/>\n            \n            </figure><p>You pay based on two usage metrics:</p><ol><li><p>Number of sessions: A Browser Session is a new instance of a browser being launched</p></li><li><p>Number of concurrent sessions: Concurrent Sessions is the number of browser instances open at once</p></li></ol><p>Using Durable Objects to persist browser sessions improves performance by eliminating the time that it takes to spin up a new browser session. Since it re-uses sessions, it cuts down on the number of concurrent sessions needed. We highly encourage this model of session re-use if you expect to see consistent traffic for applications that you build on the Browser Rendering API.</p><p>If you have feedback about this pricing, we’re all ears. Feel free to reach out through <a href=\"https://discord.gg/8Gs9T6jN\">Discord</a> (channel name: browser-rendering-api-beta) and share your thoughts.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"get-started\">Get Started</h3>\n            <a href=\"#get-started\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Sign up to our <a href=\"https://www.cloudflare.com/lp/workers-browser-rendering-api/?ref=blog.cloudflare.com&cf_target_id=99BC25CE5278572504B986049859D8A2\">waitlist</a> to get access to the Workers Browser Rendering API. We’re so excited to see what you build! Share your creations with us on Twitter/X <a href=\"https://www.twitter.com/cloudflaredev\">@CloudflareDev</a> or on our Discord community.</p>",
		"id": "341i4XnnUcmAjy5VZm855W",
		"localeList": {
			"name": "Running Serverless Puppeteer with Workers and Durable Objects Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "We’ve heard from developers that configuring and maintaining their own serverless browser automation systems can be quite painful. The Workers Browser Rendering API solves this",
		"metadata": {
			"title": "Running Serverless Puppeteer with Workers and Durable Objects",
			"description": "We’ve heard from developers that configuring and maintaining their own serverless browser automation systems can be quite painful. The Workers Browser Rendering API solves this",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2su2HyYQz8VT1AMWQg5RRs/e7186be164276f500d0e9b875bf4106d/running-serverless-puppeteer-workers-durable-objects-dKLqRb.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2023-09-28T14:00:38.000+01:00",
		"slug": "running-serverless-puppeteer-workers-durable-objects",
		"tags": [
			{
				"id": "1Cv5JjXzKWKEA10JdYbXu1",
				"name": "Birthday Week",
				"slug": "birthday-week"
			},
			{
				"id": "6QktrXeEFcl4e2dZUTZVGl",
				"name": "Product News",
				"slug": "product-news"
			},
			{
				"id": "5v2UZdTRX1Rw9akmhexnxs",
				"name": "Durable Objects",
				"slug": "durable-objects"
			},
			{
				"id": "78aSAeMjGNmCuetQ7B4OgU",
				"name": "JavaScript",
				"slug": "javascript"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			}
		],
		"title": "Running Serverless Puppeteer with Workers and Durable Objects",
		"updated_at": "2024-10-09T23:25:53.960Z",
		"url": "https://blog.cloudflare.com/running-serverless-puppeteer-workers-durable-objects"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}