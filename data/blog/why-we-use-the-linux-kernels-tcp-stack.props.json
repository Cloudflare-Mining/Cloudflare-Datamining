{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "5",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Marek Majkowski",
				"slug": "marek-majkowski",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1JuU5qavgwVeqR8BAUrd6U/3a0d0445d41c9a3c42011046efe9c37b/marek-majkowski.jpeg",
				"location": null,
				"website": null,
				"twitter": "@majek04",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "A recent blog post posed the question Why do we use the Linux kernel's TCP stack?. It triggered a very interesting discussion on Hacker News.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1Yf1URYfUbGWfDebsATxIr/2c69025d54e1d12e81fa4ff8e2ce2bae/why-we-use-the-linux-kernels-tcp-stack.jpg",
		"featured": false,
		"html": "<p>A recent blog post posed the question <a href=\"http://jvns.ca/blog/2016/06/30/why-do-we-use-the-linux-kernels-tcp-stack/\">Why do we use the Linux kernel&#39;s TCP stack?</a>. It triggered a very interesting <a href=\"https://news.ycombinator.com/item?id=12021195\">discussion on Hacker News</a>.</p><p>I&#39;ve also thought about this question while working at CloudFlare. My experience mostly comes from working with thousands of production machines here and I can try to answer the question from that perspective.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5lHPHaLdbARQnTO8oLpyLU/ce8e6da33c84a2a143a64d3b5d91b0d0/225724064_46fec2a98c_b.jpg\" alt=\"\" class=\"kg-image\" width=\"1024\" height=\"683\" loading=\"lazy\"/>\n            \n            </figure><p><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC BY 2.0</a> <a href=\"https://www.flickr.com/photos/jvetterli/225724064/\">image</a> by <a href=\"https://www.flickr.com/photos/jvetterli\">John Vetterli</a></p><p>Let&#39;s start with a broader question - what is the point of running an operating system at all? If you planned on running a single application, having to use a kernel consisting of multiple million lines of code may sound like a burden.</p><p>But in fact most of us decide to run some kind of OS and we do that for two reasons. Firstly, the OS layer adds hardware independence and easy to use APIs. With these we can focus on writing the code for any machine - not only the specialized hardware we have at the moment. Secondly, the OS adds a time sharing layer. This allows us to run more than one application at a time. Whether it&#39;s a second HTTP server or just a bash session, this ability to share resources between multiple processes is critical. All of the resources exposed by the kernel can be shared between multiple processes!</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"userspace-networking\">Userspace Networking</h3>\n      <a href=\"#userspace-networking\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>This is no different for the networking stack. By using the general purpose operating system network stack we gain the ability to run multiple network applications. This is lost if we dedicate the network card hardware to a single application in order to run a userspace network stack. By claiming the network card from one process you lose the ability to run, say an SSH session, concurrently with your servers.</p><p>As crazy as it sounds, this is exactly what most off the shelf userspace network stack technologies propose. The common term for this is &quot;full kernel bypass&quot;. The idea is to bypass the kernel and use network hardware directly from userspace process.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2e9Ajl5eitNX8yqNI61glE/ac93c061a09ed55f59a7340c7787f38c/18174650566_bb7caa8a17_z.jpg\" alt=\"\" class=\"kg-image\" width=\"640\" height=\"360\" loading=\"lazy\"/>\n            \n            </figure><p><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC BY 2.0</a> <a href=\"https://www.flickr.com/photos/audiotecna/18174650566/in/photolist-tG2Qqf-doZFcH-5dUQtz-9TLCRR-5dUEPB-7KN1DT-5ZfUg4-39Fax6-5dUJot-5dUGxP-5dZ53w-5PA2W1-7A1AjN-km3MZn-ddgZzC-km5vtd-dHCLzh-7jVVb3-GwBUem-9TPrad-aWf6UZ-7yJAxD-c7YYMY-aMEM2V-4FLyP-a2UGuD-a2UFck-a2XwUQ-bgVJ9H-a2UGm6-a2Xx9C-a2UFyP-a2XwGf-a2XxS1-a2UGC2-a2UGQD-a2XxEm-a2UGap-5dUGiK-a2UFDp-7KRXV3-5dUGMP-a2UF9t-a2UFNg-4aBxT-fVMCS1-6CZhV1-a2Xydw-a2XxnC-a2UG2x\">image</a> by <a href=\"https://www.flickr.com/photos/audiotecna/\">Audiotecna MÃºsica</a></p><p>In the Linux ecosystem there are a few available technologies. Not all are open source:</p><ul><li><p><a href=\"http://www.ntop.org/products/packet-capture/pf_ring/\">PF_RING</a></p></li><li><p><a href=\"https://github.com/snabbco/snabb\">Snabbswitch</a></p></li><li><p><a href=\"http://dpdk.org/\">DPDK</a></p></li><li><p><a href=\"http://info.iet.unipi.it/~luigi/netmap/\">Netmap</a></p></li></ul><p>I&#39;ve written about these in <a href=\"/kernel-bypass/\">a previous post</a>. All of these technologies require handing over the full network card to a single process. In other words: it&#39;s totally possible to write your own network stack, make it brilliant, focusing on super features, and optimize for performance. But there is a big cost incurred - you will be restricted to running at most one process for each network card.</p><p>There is a small twist about virtualized network cards (VFs), but let&#39;s cut it here - it doesn&#39;t work. I talked about this in <a href=\"/kernel-bypass/#virtualizationapproach\">the &quot;Virtualization approach&quot; paragraph</a>.</p><p>But even with all these road blocks, I can&#39;t just dismiss the benefits of kernel bypass. Many people do run custom network stacks and they do it for one of two reasons:</p><ul><li><p>latency</p></li><li><p>performance (lower CPU cost, better throughput)</p></li></ul><p>The latency is very important for the HFT (high frequency trading) folks. Traders can afford custom hardware and fancy proprietary network stacks. I would feel very uncomfortable running a closed source TCP stack.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"kernel-bypass-at-cloudflare\">Kernel bypass at CloudFlare</h3>\n      <a href=\"#kernel-bypass-at-cloudflare\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Having said that, at CloudFlare we do use kernel bypass. We are in the second group - we care about performance. More specifically we suffer from IRQ storms. The Linux networking stack has a limit on how many packets per second it can handle. When the limit is reached all CPUs become busy just receiving packets. In that case either the packets are dropped or the applications are starved of CPU. While we don&#39;t have to deal with IRQ storms during our normal operation, this does happen when we are the target of an L3 (layer 3 OSI) DDoS attack. This is a type of attack where the target is flooded with arbitrary packets not belonging to valid connections - typically spoofed packets.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6iCkTUfur8J5kg3FT7JgbT/f4ea5557ad8e7cc552abca2c878d18fa/5939812628_7f22121e62_z.jpg\" alt=\"\" class=\"kg-image\" width=\"640\" height=\"478\" loading=\"lazy\"/>\n            \n            </figure><p><a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC BY-SA 2.0</a> <a href=\"https://www.flickr.com/photos/howardlake/5939812628/in/photolist-a3T6my-mvx2SL-mvx9GN-mvvYag-X6CLx-Xb9mh-bmjkSU-amciaJ-4MpEAP-4Vgs6Q-6cRVcG-c9FET9-e2Gx4d-4VcdZV-65y4Bs-GRMfH-6Vd9JY-92mK5y-92mJP3-dyhTr2-9grVVr-34A4qk-352xtB-7h1LK3-6daUPd-4UmGDb-4MtQh9-dUMgRP-7jMHn4-92iD1a-352xFk-4MpDUx-3577LS-352xzz-3577Ff-4pZZiN-bH5CK-3577rA-3577dN-aK4MAg-7jMGnT-352xiF-3577Vh-92i9MD-352xmi-6z6jjL-34EAF3-3577yW-34EAzq-2iCSpN\">image</a> by <a href=\"https://www.flickr.com/photos/howardlake/\">Howard Lake</a></p><p>During some attacks we are flooded with up to 3M packets per second (pps) per server. A general rule is that Linux iptables can handle about 1Mpps on a decent server, while still having enough CPU for applications. This number can be increased by proper tuning.</p><p>With this scale of attack the Linux kernel is not enough for us. We must work around it. We don&#39;t use the previously mentioned &quot;full kernel bypass&quot;, but instead we run what we call a &quot;partial kernel bypass&quot;. With this the kernel retains the ownership of the network card, and allows us to perform a bypass only on a single &quot;RX queue&quot;. We use <a href=\"https://www.solarflare.com/\">Solarflare</a>&#39;s EFVI API on Solarflare NICs. To support Intel NICs we added a partial kernel bypass feature to Netmap: that&#39;s described <a href=\"/single-rx-queue-kernel-bypass-with-netmap/\">in this blog post</a>. With this technique we can offload our anti-DDoS iptables to a very fast userspace process. This saves Linux from processing attack packets, therefore avoiding IRQ storms situations.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"what-about-a-full-userspace-tcp-stack\">What about a full userspace TCP stack?</h3>\n      <a href=\"#what-about-a-full-userspace-tcp-stack\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>My colleagues regularly ask me about: <i>Why don&#39;t we just run our NGINX with Solarflare </i><a href=\"http://www.openonload.org/\"><i>OpenOnload</i></a><i> framework, using a super fast userspace TCP?</i></p><p>Yes, it would be faster, but there is no evidence it will actually make much of a practical difference. Most of the CPU used on our servers goes to the userspace NGINX processes and not to the operating system. The CPU is mostly spent on usual NGINX bookkeeping and our Lua application logic, not on network handling. I estimate with bypass we could save about 5-10% CPU, which is (currently) not worth the effort.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3cf9h0MnfwGNzl7G3YTHd/57387ab6ecaa94d7423a449d580da60e/8239882623_e54c104393_z.jpg\" alt=\"\" class=\"kg-image\" width=\"640\" height=\"379\" loading=\"lazy\"/>\n            \n            </figure><p><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC BY 2.0</a> <a href=\"https://www.flickr.com/photos/bakaotaku/8239882623/in/photolist-dy8y2M-5agSvS-HDgU1f-dye34N-ByBo-5QRSqj-4tw51P-g21SvY-7HotRb-7mUrEM-8CYXCb-pK97Yk-dT1LP2-dQU7DB-ocj55o-aT9gyV-oSXTr1-8JKS8q-9uaRmj-nGYc4N-Mh7K-bPdqrz-qfYS3U-ByBi-dVREbd-ByBy-A4vY2-HyXi7f-4aMV1X-4D8agk-p2upRe-ByBL-dWeHpZ-ByBr-58UcmL-pTHFMp-9u7QJK-9u7QMn-dSg4wP-dT7tjG-7FEZv8-7FEZuP-p4thUV-e7ZWar-ByBG-qnQuCg-5kmcHN-cXGcRA-a4K5t6-guWTgr\">image</a> by <a href=\"https://www.flickr.com/photos/bakaotaku/\">Charlie</a></p><p>Next, using kernel bypass for NGINX would interfere with our usual debugging tools. <a href=\"https://github.com/openresty/nginx-systemtap-toolkit\">Our systemtap scripts</a> would become useless. Linux netstat statistics will stop recording critical events and tcpdump won&#39;t work anymore.</p><p>Then there is the issue of our DDoS mitigation stack. We are heavy users of iptables, as I documented in <a href=\"https://www.youtube.com/watch?v=pCVTEx1ouyk\">this BlackHat presentation</a>. Custom TCP stacks just don&#39;t have things like &quot;hashlimits&quot; and &quot;ipsets&quot;.</p><p>But not only firewall features. The Linux TCP stack has some extremely useful non-trivial support for things like <a href=\"http://www.ietf.org/rfc/rfc4821.txt\">RFC4821</a> with the <code>sys.net.ipv4.tcp_mtu_probing</code> sysctl. Support for this is critical when a user is behind an ICMP black hole. Read more <a href=\"/path-mtu-discovery-in-practice/\">in this blog posts about PMTU</a>.</p><p>Finally, each TCP stack comes with its own set of bugs and quirks. We&#39;ve documented three non-obvious quirks in the Linux TCP stack:</p><ul><li><p><a href=\"/the-story-of-one-latency-spike/\">Garbage collector kicking in on a read buffer</a>;</p></li><li><p>Problems with too many <a href=\"/revenge-listening-sockets/\">listening sockets</a>;</p></li><li><p><a href=\"/the-curious-case-of-slow-downloads/\">What it means for a socket to be writeable</a>.</p></li></ul><p>Imagine debugging issues like that in a closed source or a young TCP stack (or both!).</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"conclusion\">Conclusion</h3>\n      <a href=\"#conclusion\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>There are two general themes: first, there is no stable open-source partial kernel bypass technology yet. We hope Netmap will occupy this niche, and <a href=\"/partial-kernel-bypass-merged-netmap/\">we are actively supporting it with our patches</a>. Second, the Linux TCP stack has many critical features and very good debugging capabilities. It will take years to compete with this rich ecosystem.</p><p>For these reasons it&#39;s unlikely userspace networking will become mainstream. In practice I can think only of a few reasonable applications of kernel bypass techniques:</p><ul><li><p>Software switches or routers. Here you want to hand over network cards to the application, deal with raw packets and skip the kernel altogether.</p></li><li><p>Dedicated loadbalancers. Similarly, if the machine is only doing packet shuffling skipping the kernel makes sense.</p></li><li><p>Partial bypass for selected high throughput / low latency applications. This is the setup we use for our DDoS mitigations. Unfortunately I&#39;m not aware of a stable open source TCP stack that fits this category.</p></li></ul><p>For the general user the Linux network stack is the right choice. Although it&#39;s less exciting than rewriting TCP stacks, we should focus on <a href=\"/how-to-achieve-low-latency/\">understanding the Linux stack performance</a> and fixing its problems. There are some <a href=\"http://lists.openwall.net/netdev/2016/01/15/51\">serious initiatives underway</a> to improve the performance of the good old Linux TCP stack.</p>",
		"id": "7pa7J0jrgQInzEN7HxNd1k",
		"localeList": {
			"name": "Why we use the Linux kernel's TCP stack Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2016-07-07T12:50:34.000+01:00",
		"slug": "why-we-use-the-linux-kernels-tcp-stack",
		"tags": [
			{
				"id": "5NpgoTJYJjhgjSLaY7Gt3p",
				"name": "TCP",
				"slug": "tcp"
			},
			{
				"id": "6QVJOBzgKXUO9xAPEpqxvK",
				"name": "Reliability",
				"slug": "reliability"
			},
			{
				"id": "383iv0UQ6Lp0GZwOAxGq2p",
				"name": "Linux",
				"slug": "linux"
			}
		],
		"title": "Why we use the Linux kernel's TCP stack",
		"updated_at": "2025-10-03T18:29:17.436Z",
		"url": "https://blog.cloudflare.com/why-we-use-the-linux-kernels-tcp-stack"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}