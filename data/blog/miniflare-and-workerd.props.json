{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "3",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Brendan Coll",
				"slug": "brendan-coll",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5HxsE0M7scLF33HEpNCGmy/454f35a3dcaa8bd132d3fc3d0c1b5dfb/brendan-coll.png",
				"location": null,
				"website": null,
				"twitter": "@_mrbbot",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Today, we’re taking local development to the next level by releasing Miniflare 3, powered by the open-source workerd runtime, along with support for migrating existing dashboard projects and using real data locally.",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6g7C6YSupvMvqX1ELb7tzB/7a4020d05884551dc1a16b580fc5a872/miniflare-and-workerd.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/dwWDZZWvAwOWqtzMwqqA8/0ed1217e005b7d723b60acf47de62e95/image3-38.png\" alt=\"\" class=\"kg-image\" width=\"1200\" height=\"675\" loading=\"lazy\"/>\n            \n            </figure><p>Local development gives you a fully-controllable and easy-to-debug testing environment. At the start of this year, we brought this experience to Workers developers by <a href=\"/miniflare/\">launching Miniflare 2.0</a>: a local Cloudflare Workers simulator. Miniflare 2 came with features like step-through debugging support, detailed <code>console.log</code>s, pretty <a href=\"https://miniflare.dev/developing/source-maps\">source-mapped</a> error pages, <a href=\"https://miniflare.dev/developing/live-reload\">live reload</a> and a highly-configurable <a href=\"https://miniflare.dev/testing/jest\">unit testing environment</a>. Not only that, but we also incorporated Miniflare into Wrangler, our Workers CLI, to enable <code>wrangler dev</code>’s --<code>local</code> mode.</p><p>Today, we’re taking local development to the next level! In addition to introducing new support for migrating existing projects to your local development environment, we&#39;re making it easier to work with your remote data—locally! Most importantly, we&#39;re releasing a much more accurate Miniflare 3, powered by the <a href=\"/workerd-open-source-workers-runtime/\">recently open-sourced <code>workerd</code> runtime</a>—the same runtime used by Cloudflare Workers!</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"enabling-local-development-with-workerd\">Enabling local development with workerd</h3>\n            <a href=\"#enabling-local-development-with-workerd\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>One of the superpowers of having a local development environment is that you can test changes without affecting users in production. A great local environment offers a level of fidelity on par with production.</p><p>The way we originally approached local development was with Miniflare 2, which reimplemented Workers runtime APIs in JavaScript. Unfortunately, there were <a href=\"https://github.com/cloudflare/miniflare/issues?page=1&q=is%3Aissue+label%3A%22behaviour+mismatch%22\">subtle behavior mismatches</a> between these re-implementations and the real Workers runtime. These types of issues are really difficult for developers to debug, as they don’t appear locally, and step-through debugging of deployed Workers isn’t possible yet. For example, the following Worker returns responses successfully in Miniflare 2, so we might assume it’s safe to publish:</p>\n            <pre class=\"language-ts\"><code class=\"language-ts\">let cachedResponsePromise;\nexport default {\n  async fetch(request, env, ctx) {\n    // Let&#039;s imagine this fetch takes a few seconds. To speed up our worker, we\n    // decide to only fetch on the first request, and reuse the result later.\n    // This works fine in Miniflare 2, so we must be good right?\n    cachedResponsePromise ??= fetch(&quot;https://example.com&quot;);\n    return (await cachedResponsePromise).clone();\n  },\n};</pre></code>\n            <p>However, as soon as we send multiple requests to our deployed Worker, it fails with <code>Error: Cannot perform I/O on behalf of a different request</code>. The problem here is that response bodies created in one request’s handler cannot be accessed from a different request&#39;s handler. This limitation allows Cloudflare to improve overall Worker performance, but it was almost impossible for Miniflare 2 to detect these types of issues locally. In this particular case, the best solution is to <a href=\"https://developers.cloudflare.com/workers/examples/cache-using-fetch/\">cache using <code>fetch</code> itself</a>.</p><p>Additionally, because the Workers runtime uses a very recent version of V8, it supports some JavaScript features that aren’t available in all versions of Node.js. This meant a few features implemented in Workers, like <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast\"><code>Array#findLast</code></a>, weren’t always available in Miniflare 2.</p><p>With the Workers runtime <a href=\"/workerd-open-source-workers-runtime/\">now open-sourced</a>, Miniflare 3 can leverage the same implementations that are deployed on Cloudflare’s network, giving bug-for-bug compatibility and practically eliminating behavior mismatches. ?</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6VB6hw88YFoVMQWokJ0eIr/dda37612c76ed09051c4e997cf789c70/image4-26.png\" alt=\"\" class=\"kg-image\" width=\"1544\" height=\"784\" loading=\"lazy\"/>\n            \n            </figure><p>Miniflare 3’s new simplified architecture using worked</p><p>This radically simplifies our implementation too. We were able to remove <b>over 50,000</b> lines of code from Miniflare 2. Of course, we still kept all the Miniflare special-sauce that makes development fun like live reload and detailed logging. ?</p><!--kg-card-begin: html--><a href=\"https://github.com/cloudflare/miniflare/pull/392\"><img src=\"/content/images/2022/11/image5-15.png\"></a>\n<p></p><!--kg-card-end: html-->\n          <div class=\"flex anchor relative\">\n            <h3 id=\"local-development-with-real-data\">Local development with real data</h3>\n            <a href=\"#local-development-with-real-data\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>We know that many developers choose to test their Workers remotely on the Cloudflare network as it gives them the ability to test against real data. Testing against fake data in staging and local environments is sometimes difficult, as it never quite matches the real thing.</p><p>With Miniflare 3, we’re blurring the lines between local and remote development, by bringing real data to your machine as an experimental opt-in feature. If enabled, Miniflare will read and write data to namespaces on the Cloudflare network, as your Worker would when deployed. This is only supported with <a href=\"https://developers.cloudflare.com/workers/runtime-apis/kv/\">Workers KV</a> for now, but we’re exploring similar solutions for <a href=\"https://developers.cloudflare.com/r2/\">R2</a> and <a href=\"/introducing-d1/\">D1</a>.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6lSKVsotKwkVeNIXGo3XoK/c10227a6bec12bb7ea72c44e72cb3f39/image2-46.png\" alt=\"\" class=\"kg-image\" width=\"1068\" height=\"1034\" loading=\"lazy\"/>\n            \n            </figure><p>Miniflare’s system for accessing real KV data, reads and writes are cached locally for future accesses</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"a-new-default-for-wrangler\">A new default for Wrangler</h3>\n            <a href=\"#a-new-default-for-wrangler\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>With Miniflare 3 now effectively as accurate as the real Workers environment, and the ability to access real data locally, we’re revisiting the decision to make remote development the initial Wrangler experience. In a future update, <code><b>wrangler dev --local</b></code><b> will become the default</b>. <code>--local</code> will no longer be required. Benchmarking suggests this will bring an approximate <b>10x reduction to startup</b> and a massive <b>60x reduction to script reload</b> times! Over the next few weeks, we’ll be focusing on further optimizing Wrangler’s performance to bring you the fastest Workers development experience yet!</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4qal4ZCSp4RwfzHJf5FTBa/43d3f6e244136954aeb084c7c798d632/image1-63.png\" alt=\"lower is better, startup: time until HTTP response received containing expected body, reload: time from writing file until HTTP response received containing new body, mean average over 13 runs discarding first 3 plotted, tested on MacBook Pro 14-inch 2021\" class=\"kg-image\" width=\"1420\" height=\"580\" loading=\"lazy\"/>\n            \n            </figure>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"wrangler-init-from-dash\"><code>wrangler init --from-dash</code></h3>\n            <a href=\"#wrangler-init-from-dash\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>We want all developers to be able to take advantage of the improved local experience, so we’re making it easy to start a local Wrangler project from an existing Worker that’s been developed in the Cloudflare dashboard. With <a href=\"https://nodejs.org/\">Node.js</a> installed, run <code>`npx wrangler init` --`from-dash &lt;your_worker_name&gt;`</code>in your terminal to set up a new project with all your existing code and bindings such as KV namespaces configured. You can now seamlessly continue development of your application locally, taking advantage of all the developer experience improvements Wrangler and Miniflare provide. When you’re ready to deploy your worker, run <code>npx wrangler publish</code>.</p>\n          <div class=\"flex anchor relative\">\n            <h3 id=\"looking-to-the-future\">Looking to the future</h3>\n            <a href=\"#looking-to-the-future\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n            </a>\n          </div>\n        <p>Over the next few months, the Workers team is planning to further improve the local development experience with a specific focus on automated testing. Already, we’ve released a <a href=\"https://developers.cloudflare.com/workers/wrangler/api/#unstable_dev\">preliminary API</a> for programmatic end-to-end tests with <code>wrangler dev</code>, but we’re also investigating ways of bringing <a href=\"https://miniflare.dev/testing/jest\">Miniflare 2’s Jest/Vitest environments</a> to <code>workerd</code>. We’re also considering creating extensions for popular IDEs to make developing workers even easier. ?</p><p>Miniflare 3.0 is now included in Wrangler! Try it out by running <code>npx wrangler@latest dev --experimental-local</code>. Let us know what you think in the <code>#wrangler</code> channel on the <a href=\"https://discord.gg/cloudflaredev\">Cloudflare Developers Discord</a>, and please <a href=\"https://github.com/cloudflare/wrangler2/issues/new/choose\">open a GitHub issue</a> if you hit any unexpected behavior.</p>",
		"id": "QtR4nYtrKq40SS7vGNN9N",
		"localeList": {
			"name": "Doubling down on local development with Workers: Miniflare meets workerd Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Today, we’re taking local development to the next level by releasing Miniflare 3, powered by the open-source workerd runtime, along with support for migrating existing dashboard projects and using real data locally.",
		"metadata": {
			"title": "Doubling down on local development with Workers: Miniflare meets workerd",
			"description": "Today, we’re taking local development to the next level by releasing Miniflare 3, powered by the open-source workerd runtime, along with support for migrating existing dashboard projects and using real data locally.",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6zm47oZFF7nrCQaLrwp6ih/81b61e4552ba4e4d9f8651db5e27ceec/miniflare-and-workerd-57B9km.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2022-11-18T14:00:00.000+00:00",
		"slug": "miniflare-and-workerd",
		"tags": [
			{
				"id": "2xCnBweKwOI3VXdYsGVbMe",
				"name": "Developer Week",
				"slug": "developer-week"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			},
			{
				"id": "5yuXznFNNcoXUxXumthQN1",
				"name": "Miniflare",
				"slug": "miniflare"
			},
			{
				"id": "3CHhhmZIu8jnzcZ81VLRUQ",
				"name": "Wrangler",
				"slug": "wrangler"
			}
		],
		"title": "Doubling down on local development with Workers: Miniflare meets workerd",
		"updated_at": "2024-10-09T23:21:19.903Z",
		"url": "https://blog.cloudflare.com/miniflare-and-workerd"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}