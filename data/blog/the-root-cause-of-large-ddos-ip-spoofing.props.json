{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "7",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Marek Majkowski",
				"slug": "marek-majkowski",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1JuU5qavgwVeqR8BAUrd6U/3a0d0445d41c9a3c42011046efe9c37b/marek-majkowski.jpeg",
				"location": null,
				"website": null,
				"twitter": "@majek04",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "A week ago we published a story about new amplification attacks using memcached protocol on UDP port 11211. A few things happened since then: Github announced it was a target of 1.3Tbps memcached attack.\nOVH and Arbor reported similar large attacks with the peak reported at 1.7Tbps.\n\n",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1eit9rMZCFT8TJ1eXjggf6/beaa2c22c263e2e80ab862623ef0698f/the-root-cause-of-large-ddos-ip-spoofing.jpg",
		"featured": false,
		"html": "<p>A week ago we published a story about new amplification attacks using <a href=\"/memcrashed-major-amplification-attacks-from-port-11211/\">memcached protocol on UDP port 11211</a>. A few things happened since then:</p><ul><li><p><a href=\"https://githubengineering.com/ddos-incident-report/\">Github announced it was a target of 1.3Tbps memcached attack</a>.</p></li><li><p><a href=\"https://twitter.com/olesovhcom/status/969328679410110466\">OVH</a> and <a href=\"https://www.arbornetworks.com/blog/asert/netscout-arbor-confirms-1-7-tbps-ddos-attack-terabit-attack-era-upon-us/\">Arbor</a> reported similar large attacks with the peak reported at 1.7Tbps.</p></li></ul><p>Let&#39;s take a deep breath and discuss why such large DDoS attacks are even possible on the modern internet.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"large-attacks-use-ip-spoofing\">Large attacks use IP spoofing</h3>\n      <a href=\"#large-attacks-use-ip-spoofing\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3b8jURO2bONlcO2WGnhlMM/29f11f4659fcb6b32a270af731e8e774/8426525097_cf3ed2db55_z.jpg\" alt=\"8426525097_cf3ed2db55_z\" class=\"kg-image\" width=\"640\" height=\"538\" loading=\"lazy\"/>\n            \n            </figure><p><a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC BY-SA 2.0</a> <a href=\"https://www.flickr.com/photos/dapuglet/8426525097\">image</a> by <a href=\"https://www.flickr.com/photos/dapuglet\">DaPuglet</a></p><p>All the gigantic headline-grabbing attacks are what we call &quot;L3&quot; (Layer 3 OSI<a href=\"#fn1\">[1]</a>). This kind of attack has a common trait - the malicious software sends as many <i>packets</i> as possible onto the network. For greater speed these packets are hand crafted by attackers - they are not generated using high-level, well-behaved libraries. Packets are mashed together as a series of bytes and fired onto the network to inflict the greatest damage.</p><p>L3 attacks can be divided into two categories, depending on where the attacker directs their traffic:</p><ul><li><p><b>Direct</b>: where the traffic is sent directly against a victim IP. A SYN flood is a common attack of this type.</p></li><li><p><b>Amplification</b>: the traffic is sent to vulnerable UDP servers. They in turn reflect and amplify it by sending large responses to the unbeknown victim.</p></li></ul><p>Both of these types of attack require the attacker to do IP spoofing<a href=\"#fn2\">[2]</a>.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/69j7sPB842FEqIYqTZarM1/f7b98bfaa5ade81c371a7fa6cf64ae27/sp-spoofing.png\" alt=\"all\" class=\"kg-image\" width=\"1534\" height=\"778\" loading=\"lazy\"/>\n            \n            </figure><p>IP Spoofing happens when the attacker sends IP packets with a fake source IP address. It&#39;s like forging a return address on a letter and pretending to be someone else.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1Zk2SmjPo99V5u14YGPg6A/bf570c97e7d2833effdc73af40eb4e2a/sp-impersonation.png\" alt=\"all\" class=\"kg-image\" width=\"1514\" height=\"734\" loading=\"lazy\"/>\n            \n            </figure><p>Spoofing source IP addresses is not technically challenging. Every machine connected to the internet can transmit any bytes of their choosing - including setting arbitrary values in the source IP address field. It&#39;s just that such packets can do a great deal of damage when they are permitted onto the wide internet.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"direct-attacks\">Direct attacks</h3>\n      <a href=\"#direct-attacks\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2RLRuWep9G88grfxQjIZQ/7c02ea21f031cab4659a1ac9ea3968f6/sp-direct2.png\" alt=\"sp-direct2\" class=\"kg-image\" width=\"1498\" height=\"410\" loading=\"lazy\"/>\n            \n            </figure><p>In direct attacks the traffic is sent directly towards the victim. There is a bright side of this - the target can investigate the source IPs! Since Cloudflare is often a target of such attacks, occasionally we look at the data and have some fun.</p><p>To visualize the source IPs of the attacks, it&#39;s best to use <a href=\"https://en.wikipedia.org/wiki/Hilbert_curve\">Hilbert Curves</a>. Randall Munroe popularized this technique <a href=\"https://www.xkcd.com/195/\">in this famous XKCD</a>. The general idea is great - draw all 2**32 IPs on a two dimensional map by employing fancy math.</p>\n            <figure class=\"kg-card kg-image-card \">\n            <a href=https://www.xkcd.com/195/>\n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/nQ7gTMuhRfQSSaz9HrHMZ/34b01e314f77554fa5afb53738b2f107/map_of_the_internet.jpg\" alt=\"\" class=\"kg-image\" width=\"740\" height=\"1076\" loading=\"lazy\"/>\n            </a>\n            </figure><p>Here are a couple of direct attacks doing IP spoofing that we saw in past.</p>\n            <figure class=\"kg-card kg-image-card \">\n            <a href=http://staging.blog.mrk.cfdata.org/content/images/2018/03/sp-all.png>\n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1ejCnyqbR5n6vIVLbU991f/306fc6d6e76d9c9c81b030fbd9db3f15/sp-all.png\" alt=\"all\" class=\"kg-image\" width=\"768\" height=\"768\" loading=\"lazy\"/>\n            </a>\n            </figure><p>In the first one, the attacker was spoofing indiscriminately all over the IP space, including multicast IP ranges, reserved blocks, and military prefixes.</p><p>What&#39;s even more funny, the attacker even spoofed the 127.0.0.0/8 range. Indeed, we can confirm the dreadful source of attacks - 127.0.0.1 - hits on regular basis.</p>\n            <figure class=\"kg-card kg-image-card \">\n            <a href=https://www.xkcd.com/742/>\n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2CnFZIPisaECgB70GVPlSi/17da870c6a4c8e38dd8dc08fea968721/campfire.png\" alt=\"\" class=\"kg-image\" width=\"273\" height=\"276\" loading=\"lazy\"/>\n            </a>\n            </figure><p>Here is another example. During this one some IP ranges - reserved multicast and 127.0.0.0/8 - were not used:</p>\n            <figure class=\"kg-card kg-image-card \">\n            <a href=http://staging.blog.mrk.cfdata.org/content/images/2018/03/sp-almost-all.png>\n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4SnANgChNGXCkiPkCD9KRk/a539fea1e075ead111d02e8f527874f1/sp-almost-all.png\" alt=\"Almost all\" class=\"kg-image\" width=\"768\" height=\"768\" loading=\"lazy\"/>\n            </a>\n            </figure><p>Were attackers smart enough to skip the reserved source IPs? Unlikely. A plausible interpretation is that the traffic flows through a router that filters these obviously wrong sources.</p><p>We&#39;ve also seen attackers that prefer left:</p>\n            <figure class=\"kg-card kg-image-card \">\n            <a href=http://staging.blog.mrk.cfdata.org/content/images/2018/03/sp-left.png>\n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1YF0qGWVqxGymlFeHnlTT9/09385bfd28bda562cdc58d7084d076ca/sp-left.png\" alt=\"Left\" class=\"kg-image\" width=\"1067\" height=\"1067\" loading=\"lazy\"/>\n            </a>\n            </figure><p>Or right side of the internet:</p>\n            <figure class=\"kg-card kg-image-card \">\n            <a href=http://staging.blog.mrk.cfdata.org/content/images/2018/03/sp-right.png>\n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/77B2PZlTqFiIYfpYtiYmQj/6e93a61e4aebd0b542a30dd69e25c079/sp-right.png\" alt=\"Right\" class=\"kg-image\" width=\"768\" height=\"768\" loading=\"lazy\"/>\n            </a>\n            </figure><p>We&#39;ve seen many more exciting spoofed IP source patterns. The take away is: during direct attacks, you can&#39;t trust the source IPs! Attackers can set them to values of their choosing. Using source IPs in mitigations might not work, drawing them on geographical map makes no sense.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"amplification-attacks\">Amplification attacks</h3>\n      <a href=\"#amplification-attacks\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/77rMR7zOrvsFO2P0PudoH7/c0082b6ac84c93f07ff0a611e849c178/sp-amplification.png\" alt=\"all\" class=\"kg-image\" width=\"1508\" height=\"870\" loading=\"lazy\"/>\n            \n            </figure><p>In amplification attacks the traffic sent by the attacker has different characteristics .</p><ul><li><p>The source IP is spoofed and set to the <b>victim&#39;s IP address</b>.</p></li><li><p>Traffic is sent vulnerable amplification servers.</p></li></ul><p>The victim can only see the IPs of the vulnerable servers. Most common visualizations show them on a globe somehow. For example in the recent memcached-based attacks here is the map of abused servers:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5V6l37ozbptHDZ9qin6CSB/e00d027c1d4a208f4f2d5499bca8747d/sp-ips-per-pop.png\" alt=\"sp-ips-per-pop\" class=\"kg-image\" width=\"2056\" height=\"1118\" loading=\"lazy\"/>\n            \n            </figure>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"why-is-ip-spoofing-a-thing\">Why is IP Spoofing a thing?</h3>\n      <a href=\"#why-is-ip-spoofing-a-thing\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>The attacks discussed so far rely on IP spoofing. But why is IP spoofing even possible?</p><p>It&#39;s a side effect of the design of the internet.</p><p>There are three properties of the internet that make it impossible to verify if the packet is legitimate on the receiving side.</p><ul><li><p>First there&#39;s <a href=\"https://en.wikipedia.org/wiki/Multihoming\">&quot;multihoming&quot;</a> - a feature allowing the internet to be inter-connected. With multihoming networks can have more than a single internet provider. On the receiving side we don&#39;t know how many providers the sender has, and there is no way to ensure that a specific path is legitimate.</p></li><li><p>Next, there&#39;s the internet&#39;s dynamic nature. The paths can change over time, which makes it fragile to deploy static filtering rules. Even if we knew that certain IP ranges can reach us only from one path, that can change over time.</p></li><li><p>Then there&#39;s the routing asymmetry. The naive rule &quot;a best path from me to you must be the same as from you to me&quot; breaks at Tier 2 and Tier 1 layers. In the real world, the path in either direction differs, so we can&#39;t use best paths as hints for filtering rules.</p></li></ul><p>Effective filtering preventing IP spoofing can only be done on the edge of the network - at the last-mile ISPs. Even doing this is hard. If I haven&#39;t convinced you yet, here&#39;s a more concrete example illustrating the problem.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"foocorp-example\">FooCorp example</h3>\n      <a href=\"#foocorp-example\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6pbmNmF6McJmL1eSuqZzwd/2e37237bbe525acc6fbea0a504dfd537/sp-foocorp-a.png\" alt=\"sp-foocorp-a\" class=\"kg-image\" width=\"763\" height=\"230\" loading=\"lazy\"/>\n            \n            </figure><p>Let me introduce an example company, FooCorp which owns the IP ranges: 192.0.2.0/24 and 2001:db8::/48.</p><p>This company resides in a shiny office building in Snowville, Utah, and is connected to the internet by a single cable, operated by a carrier named UtahCom.</p><p>Say we, at Cloudflare, are very worried about these specific IP ranges, and want to ensure that nobody other than FooCorp can ever spoof them. And suppose we are also directly connected to the UtahCom carrier.</p><p>It&#39;s all nice and pretty! By looking at the picture we can know that all the traffic with source IPs in 192.0.2.0/24 and 2001:db8::/48 must surely be delivered <i>via</i> UtahCom. Fighting IP spoofing is trivial! We can easily block source IPss 192.0.2.0/24 and 2001:db8::/48 coming from any other provider, right?</p><p>Unfortunately, this is not how the internet works.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3Wo6CKRNDb90Tu9T0Q8L82/0a78d6a7793bd0cf1f8289ff32fe7ac3/sp-foocorp-b-1.png\" alt=\"sp-foocorp-b-1\" class=\"kg-image\" width=\"760\" height=\"318\" loading=\"lazy\"/>\n            \n            </figure><p>One day FooCorp decided to get a second internet connection, from say IdahoCom. Cloudflare is also connected to IdahoCom and...</p><p>... at this moment all our IP spoofing assumptions break. Traffic sourced from 192.0.2.0/24, 2001:db8::/48 can now be sent EITHER via UtahCom OR IdahoCom! From Cloudflare - the receiver - point of view, we pretty much can&#39;t do any source IP filtering now!</p><p>Moreover, even if we saw packets from FooCorp IPs, sent from, say IndonesiaCom, we still can&#39;t really filter them. It is very possible that FooCorp just got yet more internet connectivity ... with a satelite connection I guess ... from Indonesia. Unlikely as it sounds, this is totally plasuible.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/15ruqBn2p1MjUuHDRqqY3L/1074c95ae283de0d99015147cd431aba/sp-foocorp-c.png\" alt=\"sp-foocorp-c\" class=\"kg-image\" width=\"761\" height=\"314\" loading=\"lazy\"/>\n            \n            </figure><p>To add insult to injury, UtahCom&#39;s IP filtering logic is also not banal. While it definitely should not allow FooCorp to send traffic from arbitary source IPs, it can&#39;t really filter the packets from IPs 192.0.2.0/24, 2001:db8::/48 coming from other providers. For example, what if UtahCom and IdahoCom are interconnected, they could totally exchange 192.0.2.0/24, 2001:db8::/48 traffic between themselves!</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"solving-the-problem\">Solving the problem</h3>\n      <a href=\"#solving-the-problem\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Solving IP spoofing is hard and must be done in the last mile (as close to the source of the traffic as possible). The internet community understood that years ago and wrote down the famous BCP38:</p><ul><li><p><a href=\"https://tools.ietf.org/html/bcp38\">https://tools.ietf.org/html/bcp38</a></p></li></ul><p>It digs deeper into what I explained above. Only the last mile ISPs can perform the source IP filtering and prevent IP spoofing. The internet carriers can&#39;t really do much about it.</p><p>Or can they?</p>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"internet-carriers\">Internet Carriers</h4>\n      <a href=\"#internet-carriers\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>It turns out internet carriers can help. There are two things they can do.</p><p>First, they can clean up their networks, and set their filtering right. While it&#39;s impossible to ensure that nobody else spoofed FooCorp&#39;s 192.0.2.0/24, 2001:db8::/48 ranges, it is totally possible to make sure that FooCorp can&#39;t spoof others!</p><p>It&#39;s not trivial though. In principle, the IP ranges of FooCorp can change over time, but such events should require informing carriers, presenting <a href=\"http://www.ksfiber.net/wp-content/uploads/Sample-BGP-LetterOfAgency.pdf\">Letter of Authorization</a> and validating <a href=\"https://www.apnic.net/manage-ip/apnic-services/routing-registry/\">IRR databases</a> (see also <a href=\"http://www.radb.net/features/\">RADb</a>).</p><p>Next, while large Tier 1 and Tier 2 providers can&#39;t do source IP filtering, they can help with investigations. Remember - during large amplification attacks, the attacker spoofs <i>the victim</i> IP ranges. During attacks large carriers should help with debugging and be able to identify which of their paying customers pretended to be the victim!</p><p>To be able to do this some carriers maintain internal netflow/IPFIX infrastructure. The community should start asking the carriers tough questions - do you have visibility into who spoofed traffic? Do you do netflow internally and can you effectively use it?</p><p>I&#39;m sure Github would like to know who faked their source IPs in order to generate 1.3Tbps amplification.</p>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"internet-exchanges\">Internet Exchanges</h4>\n      <a href=\"#internet-exchanges\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Internet exchanges face the same attribution issue. When spoofing happens, it&#39;s often impossible to figure out which participant originated it. Internet exchanges should put together tools allowing participants to trace who originated the spoofed traffic.</p><p>Some internet exchanges do this already, but most don&#39;t.</p>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"hardware-vendors\">Hardware vendors</h4>\n      <a href=\"#hardware-vendors\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>A common technique to prohibit IP spoofing is called <a href=\"https://en.wikipedia.org/wiki/Reverse_path_forwarding#Unicast_RPF_confusion\">Strict uRPF</a>. While it can&#39;t be used on the Tier 1 layer, since it assumes internet routing symmetry, uRPF definitely is useful in last-mile deployments.</p><p>Vendors should ship their hardware with secure defaults. Things like &quot;DHCP Snooping&quot; and &quot;IP Source Verify&quot; should be enabled by default on switches, and &quot;Strict uRPF&quot; on routers. Read more in this <a href=\"https://www.internetsociety.org/wp-content/uploads/2017/08/ISOC-AntiSpoofing-20150909-en-2.pdf\">paper by Internet Society</a>.</p><p>On the same note, if you are using Linux for routing you can turn on strict uRPF with sysctl:</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">for fname in /proc/sys/net/ipv4/conf/*/rp_filter; do\\\n    echo 1 | sudo tee $fname; \\\ndone</pre></code>\n            \n    <div class=\"flex anchor relative\">\n      <h4 id=\"you\">You</h4>\n      <a href=\"#you\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Finally, everyone else can help the <a href=\"https://www.caida.org/projects/spoofer/\">&quot;Spoofer&quot; project</a> run by <a href=\"http://www.caida.org/home/\">caida.org</a>. &quot;Spoofer&quot; assesses networks by running an agent on your laptop, periodically probing the network.</p><p>Users, especially heavy travelers, might consider installing the agent software to help Caida to get greater coverage of end-user ISPs.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"final-thoughts\">Final thoughts</h3>\n      <a href=\"#final-thoughts\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>In the past, the industry has struggled with DNS and NTP protocols being vulnerable to amplification attacks. These days we are fighting SSDP, CLDAP and Memcached amplifications. I&#39;m certain in future there will be many more broken UDP protocols that could be used for amplification.</p><p>The lasting solution to the problem is to focus on fighting IP spoofing itself. Without IP spoofing, the internet would be a much calmer place.</p><p>As for now, attackers doing IP spoofing are invincible. Normal internet participants have no tools to track them. Without attribution it&#39;s hard to respond to malicious activity, for example with legal measures. The war is very much asymmetric in favor of the spoofers. To change that we must start actively fighting the spoofing problem.</p><hr/><ol><li><p>I&#39;m going to claim that all the large attacks require IP spoofing. A notable exception are the large <a href=\"https://krebsonsecurity.com/2016/09/krebsonsecurity-hit-with-record-ddos/\">GRE Mirai attacks</a> that didn&#39;t employ spoofing of any kind. <a href=\"#fnref1\">↩︎</a></p></li><li><p>This is a simplification. Direct attacks don&#39;t strictly require IP spoofing, but very much benefit from it. Without IP spoofing the mitigation would be rather straightforward - just block the abusive source IPs. To avoid this and cover their tracks, the attackers usually do employ IP spoofing though. <a href=\"#fnref2\">↩︎</a></p></li></ol>",
		"id": "7umYtVx7vQjAZYJOtPFENj",
		"localeList": {
			"name": "The real cause of large DDoS - IP Spoofing Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2018-03-06T15:46:02.000+00:00",
		"slug": "the-root-cause-of-large-ddos-ip-spoofing",
		"tags": [
			{
				"id": "5kIxDMJCg3PXQxVINDL0Cw",
				"name": "Attacks",
				"slug": "attacks"
			},
			{
				"id": "64g1G2mvZyb6PjJsisO09T",
				"name": "DDoS",
				"slug": "ddos"
			},
			{
				"id": "6QVJOBzgKXUO9xAPEpqxvK",
				"name": "Reliability",
				"slug": "reliability"
			},
			{
				"id": "6Mp7ouACN2rT3YjL1xaXJx",
				"name": "Security",
				"slug": "security"
			}
		],
		"title": "The real cause of large DDoS - IP Spoofing",
		"updated_at": "2025-10-03T18:32:11.699Z",
		"url": "https://blog.cloudflare.com/the-root-cause-of-large-ddos-ip-spoofing"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}