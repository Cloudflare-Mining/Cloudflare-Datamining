{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "4",
	"locale": "en-us",
	"localesAvailable": [
		"zh-cn",
		"ja-jp",
		"es-es"
	],
	"post": {
		"authors": [
			{
				"name": "Matt Silverlock",
				"slug": "silverlock",
				"bio": "Director of Product at Cloudflare.",
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7xP5qePZD9eyVtwIesXYxh/e714aaa573161ec9eb48d59bd1aa6225/silverlock.jpeg",
				"location": null,
				"website": null,
				"twitter": "@elithrar",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "Announcing the beta of Cloudflare Pub/Sub, our programmable, serverless message broker built on the open MQTT messaging standard",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/39cdBeceFzHD5BjEvZ6r0I/c4dd673d91f88a5f63b21bbb249bdc48/announcing-pubsub-programmable-mqtt-messaging.png",
		"featured": false,
		"html": "<p><i>This post is also available in </i><a href=\"/zh-cn/announcing-pubsub-programmable-mqtt-messaging-zh-cn/\"><i>简体中文</i></a><i>, </i><a href=\"/ja-jp/announcing-pubsub-programmable-mqtt-messaging-ja-jp/\"><i>日本語</i></a><i>, </i><a href=\"/es-es/announcing-pubsub-programmable-mqtt-messaging-es-es/\"><i>Español</i></a><i>.</i></p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/55VlABQ44OeATPuW7eZIzQ/abbe5df4ecea8e7cf8aaf70ee6221f8e/image1-26.png\" alt=\"Announcing Pub/Sub: Programmable MQTT-based Messaging\" class=\"kg-image\" width=\"1920\" height=\"1013\" loading=\"lazy\"/>\n            \n            </figure><p>One of the underlying questions that drives Platform Week is “how do we enable developers to build full stack applications on Cloudflare?”. With Workers as a serverless environment for easily deploying distributed-by-default applications, <a href=\"https://developers.cloudflare.com/workers/learning/how-kv-works/\">KV</a> and <a href=\"https://developers.cloudflare.com/workers/learning/using-durable-objects/\">Durable Objects</a> for caching and coordination, and <a href=\"https://developers.cloudflare.com/r2\">R2</a> as our zero-egress cost <a href=\"https://www.cloudflare.com/learning/cloud/what-is-object-storage/\">object store</a>, we’ve continued to discuss what else we need to build to help developers both build new apps and/or bring existing ones over to Cloudflare’s Developer Platform.</p><p>With that in mind, we’re excited to announce the private beta of Cloudflare Pub/Sub, a <i>programmable</i> message bus built on the ubiquitous and industry-standard MQTT protocol supported by tens of millions of existing devices today.</p><p>In a nutshell, Pub/Sub allows you to:</p><ul><li><p>Publish event, telemetry or sensor data from any MQTT capable client (and in the future, other client-facing protocols)</p></li><li><p>Write code that can filter, aggregate and/or modify messages <i>as they’re published to the broker</i> using Cloudflare Workers, and before they’re distributed to subscribers, without the need to ferry messages to a single “cloud region”</p></li><li><p>Push events from applications in other clouds, or from on-prem, with Pub/Sub acting as a programmable event router or a hook into persistent data storage (such as R2 or KV)</p></li><li><p>Move logic out of the client, where it can be hard (or risky!) to push updates, or where running code on devices raises the materials cost (CPU, memory), while still keeping latency as low as possible (your code runs in <a href=\"https://www.cloudflare.com/network/\">every location</a>).</p></li></ul><p>And there’s likely a long list of things we haven’t even predicted yet. We’ve seen developers <a href=\"https://workers.cloudflare.com/built-with\">build incredible things</a> on top of Cloudflare Workers, and we’re excited to see what they build with the power of a programmable message bus like Pub/Sub, too.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"why-and-what-is-mqtt\">Why, and what is, MQTT?</h3>\n      <a href=\"#why-and-what-is-mqtt\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>If you haven’t heard of <a href=\"https://mqtt.org/\">MQTT</a> before, you might be surprised to know that it’s one of the most pervasive “messaging protocols” deployed today. There are tens of millions (at least!) of devices that speak MQTT today, from connected payment terminals through to autonomous vehicles, cell phones, and even video games. Sensor readings, telemetry, financial transactions and/or mobile notifications &amp; messages are all common use-cases for MQTT, and the flexibility of the protocol allows developers to make trade-offs around reliability, topic hierarchy and persistence specific to their use-case.</p><p>We chose MQTT as the foundation for Cloudflare Pub/Sub as we believe in building on top of open, accessible standards, as we did when we chose the Service Worker API as the foundation for Workers, and with our recently announced participation in the <a href=\"/introducing-the-wintercg/\">Winter Community Group around server-side runtime APIs.</a> We also wanted to enable existing clients an easy path to benefit from Cloudflare’s scale and programmability, and ensure that developers have a rich ecosystem of client libraries in languages they’re familiar with today.</p><p>Beyond that, however, we also think MQTT meets the needs of a modern “publish-subscribe” messaging service. It has flexible delivery guarantees, TLS for transport encryption (no bespoke crypto!), a scalable topic creation and subscription model, extensible per-message metadata, and importantly, it provides a well-defined specification with clear error messages.</p><p>With that in mind, we expect to support many more “on-ramps” to Pub/Sub: a lot of the best parts of MQTT can be abstracted away from clients who might want to talk to us over HTTP or WebSockets.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"building-blocks\">Building Blocks</h3>\n      <a href=\"#building-blocks\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Given the ability to write code that acts on every message published to a Pub/Sub Broker, what does it look like in practice?</p><p>Here’s a simple-but-illustrative example of handling Pub/Sub messages directly in a Worker. We have clients (in this case, payment terminals) reporting back transaction data, and we want to capture the number of transactions processed in each region, so we can track transaction volumes over time.</p><p>Specifically, we:</p><ol><li><p>Filter on a specific topic prefix for messages we care about</p></li><li><p>Parse the message for a specific key:value pair as a metric</p></li><li><p>Write that metric directly into <a href=\"/workers-analytics-engine\">Workers Analytics Engine</a>, our new serverless time-series analytics service, so we can directly query it with GraphQL.</p></li></ol><p>This saves us having to stand up and maintain an external metrics service, configure another cloud service, or think about how it will scale: we can do it all directly on Cloudflare.</p>\n            <pre class=\"language-typescript\"><code class=\"language-typescript\">\nasync function pubsub(\n  messages: Array&lt;PubSubMessage&gt;,\n  env: any,\n  ctx: ExecutionContext\n): Promise&lt;Array&lt;PubSubMessage&gt;&gt; {\n  \n  for (let msg of messages) {\n    // Extract a value from the payload and write it to Analytics Engine\n    // In this example, a transactionsProcessed counter that our clients are sending\n    // back to us.\n    if (msg.topic.startsWith(“/transactions/”)) {\n      // This is non-blocking, and doesn’t hold up our message\n      // processing.\n      env.TELEMETRY.writeDataPoint({\n        // We label this metric so that we can query against these labels\n        labels: [`${msg.broker}.${msg.namespace}`, msg.payload.region, msg.payload.merchantId],\n        metrics: [msg.payload.transactionsProcessed ?? 0]\n      });\n    }\n  }\n\n  // Return our messages back to the Broker\n  return messages;\n}\n\nconst worker = {\n  async fetch(req: Request, env: any, ctx: ExecutionContext) {\n    // Critical: you must validate the incoming request is from your Broker\n    // In the future, Workers will be able to do this on your behalf for Workers\n    // in the same account as your Pub/Sub Broker.\n    if (await isValidBrokerRequest(req)) {\n\n      // Parse the incoming PubSub messages\n      let incomingMessages: Array&lt;PubSubMessage&gt; = await req.json();\n      \n      // Pass the message to our pubsub handler, and capture the returned\n      // messages\n      let outgoingMessages = await pubsub(incomingMessages, env, ctx);\n\n      // Re-serialize the messages and return a HTTP 200 so our Broker\n      // knows we’ve successfully handled them\n      return new Response(JSON.stringify(outgoingMessages), { status: 200 });\n    }\n\n    return new Response(&quot;not a valid Broker request&quot;, { status: 403 });\n  },\n};\n\nexport default worker;</pre></code>\n            <p>We can then query these metrics directly using a familiar language: SQL. Our query takes the metrics we’ve written and gives us a breakdown of transactions processed by our payment devices, grouped by merchant (and again, all on Cloudflare):</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">SELECT\n  label_2 as region,\n  label_3 as merchantId,\n  sum(metric_1) as total_transactions\nFROM TELEMETRY\nWHERE\n  metric_1 &gt; 0\n  AND timestamp &gt;= now() - 604800\nGROUP BY\n  region,\n  merchantId\nORDER BY\n  total_transactions DESC\nLIMIT 10</pre></code>\n            <p>You could replace or augment the calls to Analytics Engine with any number of examples:</p><ul><li><p>Asynchronously writing messages (using <a href=\"https://developers.cloudflare.com/workers/runtime-apis/fetch-event/#waituntil\">ctx.waitUntil</a>) on specific topics to our R2 <a href=\"https://www.cloudflare.com/learning/cloud/what-is-object-storage/\">object storage</a> without blocking message delivery</p></li><li><p>Rewriting messages on-the-fly with data <a href=\"https://developers.cloudflare.com/workers/runtime-apis/kv/\">populated from KV</a>, before the message is pushed to subscribers</p></li><li><p>Aggregate messages based on their payload and HTTP POST them to legacy infrastructure hosted outside of Cloudflare</p></li></ul><p>Pub/Sub gives you a way to get data into Cloudflare’s network, filter, aggregate and/or mutate it, and push it back out to subscribers — whether there’s 10, 1,000 or 10,000 of them listening on that topic.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"where-are-we-headed\">Where are we headed?</h3>\n      <a href=\"#where-are-we-headed\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>As we often like to say: we’re just getting started. The private beta for Pub/Sub is just the beginning of our journey, and we have a long list of capabilities we’re already working on.</p><p>Critically, one of our priorities is to cover as much of the MQTT v5.0 specification as we can, so that customers can migrate existing deployments and have it “just work”. Useful capabilities like <a href=\"https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901250\">shared subscriptions</a> that allow you to load-balance messages across many subscribers; <a href=\"https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901242\">wildcard subscriptions</a> (both single- and multi-tier) for aggregation use cases, stronger delivery guarantees (<a href=\"https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901234\">QoS</a>), and support for additional authentication modes (specifically, Mutual TLS) are just a few of the things we’re working on.</p><p>Beyond that, we’re focused on making sure Pub/Sub’s developer experience is the best it  can be, and during the beta we’ll be:</p><ul><li><p>Supporting a new set of “pubsub” sub-commands in <a href=\"https://www.npmjs.com/package/wrangler\">Wrangler</a>, our developer CLI, so that getting started is as low-friction as possible</p></li><li><p>Building ‘native’ bindings (similar to how <a href=\"https://developers.cloudflare.com/workers/runtime-apis/kv/\">Workers KV</a> operates) that allow you to publish messages and subscribe to topics directly from Worker code, regardless of whether the message originates from (or is destined for) a client beyond Cloudflare</p></li><li><p>Exploring more ways to publish &amp; subscribe from non-MQTT based clients, including HTTP requests and WebSockets, so that integrating existing code is even easier.</p></li></ul><p>Our <a href=\"https://developers.cloudflare.com/pub-sub/\">developer documentation</a> will cover these capabilities as we land them.</p><p>We’re also aware that pricing is a huge part of developer experience, and are committed to ensuring that there is an accessible and flexible free tier. We want to enable developers to experiment, prototype and solve problems we haven’t thought of yet. We’ll be sharing more on pricing during the course of the beta.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"getting-started\">Getting Started</h3>\n      <a href=\"#getting-started\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>If you want to start using Pub/Sub, <a href=\"https://www.cloudflare.com/cloudflare-pub-sub-lightweight-messaging-private-beta/\">sign up for the private beta</a>: we plan to start enabling access within the next month. We’re looking forward to collecting feedback from developers and seeing what folks start to build.</p><p>In the meantime, review the <a href=\"https://developers.cloudflare.com/pub-sub/\">brand-new Pub/Sub developer documentation</a> to understand how Pub/Sub works under the hood, the MQTT protocol, and how it integrates with Cloudflare Workers.</p>",
		"id": "1QZruLuBkHiM4vy3PILeP8",
		"localeList": {
			"name": "Announcing Pub/Sub: Programmable MQTT-based Messaging Config",
			"enUS": "English for Locale",
			"zhCN": "Translated for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "Translated for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "Translated for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Announcing the beta of Cloudflare Pub/Sub, our programmable, serverless message broker built on the open MQTT messaging standard",
		"metadata": {
			"title": "Announcing Pub/Sub: Programmable MQTT-based Messaging",
			"description": "Announcing the beta of Cloudflare Pub/Sub, our programmable, serverless message broker built on the open MQTT messaging standard",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/2bPwmTTZUVGLLo55Nu1qQo/d95c3fcff3d69cc1fd0ebd4a29dc592c/announcing-pubsub-programmable-mqtt-messaging-lV9aiw.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2022-05-12T13:59:22.000+01:00",
		"slug": "announcing-pubsub-programmable-mqtt-messaging",
		"tags": [
			{
				"id": "1VkRSlsXf1AYB3QvlWU1JK",
				"name": "Platform Week",
				"slug": "platform-week"
			},
			{
				"id": "4broVyCeNUWcCLQWJN5lQm",
				"name": "IoT",
				"slug": "iot"
			}
		],
		"title": "Announcing Pub/Sub: Programmable MQTT-based Messaging",
		"updated_at": "2024-10-09T23:18:30.606Z",
		"url": "https://blog.cloudflare.com/announcing-pubsub-programmable-mqtt-messaging"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}