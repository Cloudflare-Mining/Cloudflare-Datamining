{
	"footerBlurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
	"initialReadingTime": "9",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Alex Krivit",
				"slug": "alex",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1e9gtWsffhoAWG0rTN45cR/35204e3d77d1a90feeb57a32e388daca/alex.jpg",
				"location": null,
				"website": null,
				"twitter": "@ackriv",
				"facebook": null,
				"publiclyIndex": true
			}
		],
		"excerpt": "This is Part 1 of what will be a year-long series documenting our journey to re-architect our systems to be the best, fastest, most-scalable purge in the industry ",
		"feature_image": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/38U9IIBJaf4blWZCIR7JAO/3313277600dc73530a4375fe2f53f995/part1-coreless-purge.png",
		"featured": false,
		"html": "<p></p><p>There is a famous <a href=\"https://skeptics.stackexchange.com/questions/19836/has-phil-karlton-ever-said-there-are-only-two-hard-things-in-computer-science\">quote</a> attributed to a Netscape engineer: “There are only two difficult problems in computer science: cache invalidation and naming things.” While naming things does oddly take up an inordinate amount of time, cache invalidation shouldn’t.</p><p>In the past we’ve written about Cloudflare’s <a href=\"/benchmarking-edge-network-performance/\">incredibly fast</a> response times, whether content is cached on our global network or not. If content is cached, it can be served from a Cloudflare cache server, which are distributed across the globe and are generally a lot closer in physical proximity to the visitor. This saves the visitor’s request from needing to go all the way back to an origin server for a response. But what happens when a webmaster updates something on their origin and would like these caches to be updated as well? This is where cache “purging” (also known as “invalidation”) comes in.</p><p>Customers thinking about setting up a CDN and caching infrastructure consider questions like:</p><ul><li><p>How do different caching invalidation/purge mechanisms compare?</p></li><li><p>How many times a day/hour/minute do I expect to purge content?</p></li><li><p>How quickly can the cache be purged when needed?</p></li></ul><p>This blog will discuss why invalidating cached assets is hard, what Cloudflare has done to make it easy (because we care about your experience as a developer), and the engineering work we’re putting in this year to make the performance and scalability of our purge services <b>the best in the industry</b>.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"what-makes-purging-difficult-also-makes-it-useful\">What makes purging difficult also makes it useful</h3>\n      <a href=\"#what-makes-purging-difficult-also-makes-it-useful\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p><b>(i) Scale</b>The first thing that complicates cache invalidation is doing it at scale. With data centers in over 270 cities around the globe, our most popular users’ assets can be replicated at every corner of our network. This also means that a purge request needs to be distributed to all data centers where that content is cached. When a data center receives a purge request, it needs to locate the cached content to ensure that subsequent visitor requests for that content are not served stale/outdated data. Requests for the purged content should be forwarded to the origin for a fresh copy, which is then re-cached on its way back to the user.</p><p>This process repeats for every data center in Cloudflare’s fleet. And due to Cloudflare’s massive network, maintaining this consistency when certain data centers may be unreachable or go offline, is what makes purging at scale difficult.</p><p>Making sure that every data center gets the purge command and remains up-to-date with its content logs is only part of the problem. Getting the purge request to data centers quickly so that content is updated uniformly is the next reason why cache invalidation is hard.  </p><p><b>(ii) Speed</b>When purging an asset, race conditions abound. Requests for an asset can happen at any time, and may not follow a pattern of predictability. Content can also change unpredictably. Therefore, when content changes and a purge request is sent, it must be distributed across the globe quickly. If purging an individual asset, say an image, takes too long, some visitors will be served the new version, while others are served outdated content. This data inconsistency degrades user experience, and can lead to confusion as to which version is the “right” version. Websites can sometimes even break in their entirety due to this purge latency (e.g. by upgrading versions of a non-backwards compatible JavaScript library).</p><p>Purging at speed is also difficult when combined with Cloudflare’s massive global footprint. For example, if a purge request is traveling at the speed of light between Tokyo and Cape Town (both cities where Cloudflare has data centers), just the transit alone (no authorization of the purge request or execution) would take <a href=\"https://wondernetwork.com/pings/Cape%20Town/Tokyo\">over 180ms on average</a> based on submarine cable placement. Purging a smaller network footprint may reduce these speed concerns while making purge times appear faster, but does so at the expense of worse performance for customers who want to make sure that their cached content is fast for everyone.</p><p><b>(iii) Scope</b>The final thing that makes purge difficult is making sure that only the unneeded web assets are invalidated. Maintaining a cache is important for egress cost savings and response speed. Webmasters’ origins could be knocked over by a thundering herd of requests, if they choose to purge all content needlessly. It’s a delicate balance of purging just enough: too much can result in both monetary and downtime costs, and too little will result in visitors receiving outdated content.</p><p>At Cloudflare, what to invalidate in a data center is often dictated by the type of purge. <a href=\"https://developers.cloudflare.com/cache/how-to/purge-cache#purge-everything\"><b>Purge everything</b></a>, as you could probably guess, purges all cached content associated with a website. <a href=\"https://developers.cloudflare.com/cache/how-to/purge-cache#purge-cache-by-prefix-enterprise-only\"><b>Purge by prefix</b></a> purges content based on a URL prefix. <a href=\"https://developers.cloudflare.com/cache/how-to/purge-cache\"><b>Purge by hostname</b></a> can invalidate content based on a hostname. <a href=\"https://developers.cloudflare.com/cache/how-to/purge-cache#purge-by-single-file-by-url\"><b>Purge by URL</b></a> or single file purge focuses on purging specified URLs. Finally, <a href=\"https://developers.cloudflare.com/cache/how-to/purge-cache#purge-using-cache-tags\"><b>Purge by tag</b></a> purges assets that are marked with <a href=\"https://developers.cloudflare.com/cache/how-to/purge-cache#add-cache-tag-http-response-headers\">Cache-Tag headers</a>. These markers offer webmasters flexibility in grouping assets together. When a purge request for a tag comes into a data center, all assets marked with that tag will be invalidated.</p><p>With that overview in mind, the remainder of this blog will focus on putting each element of invalidation together to benchmark the performance of Cloudflare’s purge pipeline and provide context for what performance means in the real-world. We’ll be reviewing how fast Cloudflare can invalidate cached content across the world. This will provide a baseline analysis for how quick our purge systems are presently, which we will use to show how much we will improve by the time we launch our new purge system later this year.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"how-does-purge-work-currently\">How does purge work currently?</h3>\n      <a href=\"#how-does-purge-work-currently\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    \n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/28UAdSGwGwCAnskZpb2wfm/511150372628a278ee2910105ebcc2e2/Cored-Purge.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"738\" loading=\"lazy\"/>\n            \n            </figure><p>In general, purge takes the following route through Cloudflare’s data centers.</p><ul><li><p>A purge request is initiated via the API or UI. This request specifies how our data centers should identify the assets to be purged. This can be accomplished via cache-tag header(s), URL(s), entire hostnames, and much more.</p></li><li><p>The request is received by any Cloudflare data center and is identified to be a purge request. It is then routed to a Cloudflare core data center (a set of a few data centers responsible for network management activities).</p></li><li><p>When a core data center receives it, the request is processed by a number of internal services that (for example) make sure the request is being sent from an account with the appropriate authorization to purge the asset. Following this, the request gets fanned out globally to all Cloudflare data centers using our distribution service.</p></li><li><p>When received by a data center, the purge request is processed and all assets with the matching identification criteria are either located and removed, or marked as stale. These stale assets are not served in response to requests and are instead re-pulled from the origin.</p></li><li><p>After being pulled from the origin, the response is written to cache again, replacing the purged version.</p></li></ul><p>Now let’s look at this process in practice. Below we describe Cloudflare’s purge benchmarking that uses real-world performance data from our purge pipeline.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"benchmarking-purge-performance-design\">Benchmarking purge performance design</h3>\n      <a href=\"#benchmarking-purge-performance-design\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>In order to understand how performant Cloudflare’s purge system is, we measured the time it took from sending the purge request to the moment that the purge is complete and the asset is no longer served from cache.  </p><p>In general, the process of measuring purge speeds involves: (i) ensuring that a particular piece of content is cached, (ii) sending the command to invalidate the cache, (iii) simultaneously checking our internal system logs for how the purge request is routed through our infrastructure, and (iv) measuring when the asset is removed from cache (first miss).</p><p>This process measures how quickly cache is invalidated from the perspective of an average user.</p><ul><li><p><b>Clock starts</b>As noted above, in this experiment we’re using sampled RUM data from our purge systems. The goal of this experiment is to benchmark current data for how long it can take to purge an asset on Cloudflare across different regions. Once the asset was cached in a region on Cloudflare, we identify when a purge request is received for that asset. At that same instant, the clock started for this experiment. We include in this time any retrys that we needed to make (due to data centers missing the initial purge request) to ensure that the purge was done consistently across our network. The clock continues as the request transits our purge pipeline  (data center &gt; core &gt; fanout &gt; purge from all data centers).  </p></li><li><p><b>Clock stops</b>What caused the clock to stop was the purged asset being removed from cache, meaning that the data center is no longer serving the asset from cache to visitor’s requests. Our internal logging measures the precise moment that the cache content has been removed or expired and from that data we were able to determine the following benchmarks for our purge types in various regions.  </p></li></ul>\n    <div class=\"flex anchor relative\">\n      <h4 id=\"results\">Results</h4>\n      <a href=\"#results\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We’ve divided our benchmarks in two ways: by purge type and by region.</p><p>We singled out Purge by URL because it identifies a single target asset to be purged. While that asset can be stored in multiple locations, the amount of data to be purged is strictly defined.</p><p>We’ve combined all other types of purge (everything, tag, prefix, hostname) together because the amount of data to be removed is highly variable. Purging a whole website or by assets identified with cache tags could mean we need to find and remove a multitude of content from many different data centers in our network.</p><p>Secondly, we have segmented our benchmark measurements by regions and specifically we confined the benchmarks to specific data center servers in the region because we were concerned about clock skews between different data centers. This is the reason why we limited the test to the same cache servers so that even if there was skew, they’d all be skewed in the same way.  </p><p>We took the latency from the representative data centers in each of the following regions and the global latency. Data centers were not evenly distributed in each region, but in total represent about 90 different cities around the world:  </p><ul><li><p>Africa</p></li><li><p>Asia Pacific Region (APAC)</p></li><li><p>Eastern Europe (EEUR)</p></li><li><p>Eastern North America (ENAM)</p></li><li><p>Oceania</p></li><li><p>South America (SA)</p></li><li><p>Western Europe (WEUR)</p></li><li><p>Western North America (WNAM)</p></li></ul><p>The <b>global</b> latency numbers represent the purge data from all Cloudflare data centers in over 270 cities globally. In the results below, global latency numbers may be larger than the regional numbers because it represents all of our data centers instead of only a regional portion so outliers and retries might have an outsized effect.</p><p>Below are the results for how quickly our current purge pipeline was able to invalidate content by purge type and region. All times are represented in seconds and divided into P50, P75, and P99 <a href=\"https://en.wikipedia.org/wiki/Quantile\">quantiles</a>. Meaning for “P50” that 50% of the purges were at the indicated latency or faster.  </p><p><b>Purge By URL</b></p><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">P50</th>\n<th style=\"text-align:center\">P75</th>\n<th style=\"text-align:center\">P99</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>AFRICA</strong></td>\n<td style=\"text-align:center\">0.95s</td>\n<td style=\"text-align:center\">1.94s</td>\n<td style=\"text-align:center\">6.42s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>APAC</strong></td>\n<td style=\"text-align:center\">0.91s</td>\n<td style=\"text-align:center\">1.87s</td>\n<td style=\"text-align:center\">6.34s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>EEUR</strong></td>\n<td style=\"text-align:center\">0.84s</td>\n<td style=\"text-align:center\">1.66s</td>\n<td style=\"text-align:center\">6.30s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>ENAM</strong></td>\n<td style=\"text-align:center\">0.85s</td>\n<td style=\"text-align:center\">1.71s</td>\n<td style=\"text-align:center\">6.27s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>OCEANIA</strong></td>\n<td style=\"text-align:center\">0.95s</td>\n<td style=\"text-align:center\">1.96s</td>\n<td style=\"text-align:center\">6.40s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>SA</strong></td>\n<td style=\"text-align:center\">0.91s</td>\n<td style=\"text-align:center\">1.86s</td>\n<td style=\"text-align:center\">6.33s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>WEUR</strong></td>\n<td style=\"text-align:center\">0.84s</td>\n<td style=\"text-align:center\">1.68s</td>\n<td style=\"text-align:center\">6.30s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>WNAM</strong></td>\n<td style=\"text-align:center\">0.87s</td>\n<td style=\"text-align:center\">1.74s</td>\n<td style=\"text-align:center\">6.25s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>GLOBAL</strong></td>\n<td style=\"text-align:center\"><strong>1.31s</strong></td>\n<td style=\"text-align:center\"><strong>1.80s</strong></td>\n<td style=\"text-align:center\"><strong>6.35s</strong></td>\n</tr>\n</tbody>\n</table><p><b>Purge Everything, by Tag, by Prefix, by Hostname</b></p><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">P50</th>\n<th style=\"text-align:center\">P75</th>\n<th style=\"text-align:center\">P99</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>AFRICA</strong></td>\n<td style=\"text-align:center\">1.42s</td>\n<td style=\"text-align:center\">1.93s</td>\n<td style=\"text-align:center\">4.24s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>APAC</strong></td>\n<td style=\"text-align:center\">1.30s</td>\n<td style=\"text-align:center\">2.00s</td>\n<td style=\"text-align:center\">5.11s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>EEUR</strong></td>\n<td style=\"text-align:center\">1.24s</td>\n<td style=\"text-align:center\">1.77s</td>\n<td style=\"text-align:center\">4.07s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>ENAM</strong></td>\n<td style=\"text-align:center\">1.08s</td>\n<td style=\"text-align:center\">1.62s</td>\n<td style=\"text-align:center\">3.92s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>OCEANIA</strong></td>\n<td style=\"text-align:center\">1.16s</td>\n<td style=\"text-align:center\">1.70s</td>\n<td style=\"text-align:center\">4.01s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>SA</strong></td>\n<td style=\"text-align:center\">1.25s</td>\n<td style=\"text-align:center\">1.79s</td>\n<td style=\"text-align:center\">4.106s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>WEUR</strong></td>\n<td style=\"text-align:center\">1.19s</td>\n<td style=\"text-align:center\">1.73s</td>\n<td style=\"text-align:center\">4.04s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>WNAM</strong></td>\n<td style=\"text-align:center\">0.9995s</td>\n<td style=\"text-align:center\">1.53s</td>\n<td style=\"text-align:center\">3.83s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>GLOBAL</strong></td>\n<td style=\"text-align:center\"><strong>1.57s</strong></td>\n<td style=\"text-align:center\"><strong>2.32s</strong></td>\n<td style=\"text-align:center\"><strong>5.97s</strong></td>\n</tr>\n</tbody>\n</table><p>A general note about these benchmarks — the data represented here was taken from over 48 hours (two days) of RUM purge latency data in May 2022. If you are interested in how quickly your content can be invalidated on Cloudflare, we suggest you <a href=\"https://dash.cloudflare.com/sign-up\">test our platform</a> with your website.</p><p>Those numbers are good and much faster than most of our competitors. Even in the worst case, we see the time from when you tell us to purge an item to when it is removed globally is less than seven seconds. In most cases, it’s less than a second. That’s great for most applications, but we want to be even faster. Our goal is to get cache purge to as close as theoretically possible to the speed of light limit for a network our size, which is 200ms.</p><p>Intriguingly, LEO satellite networks may be able to provide even lower global latency than fiber optics because of the straightness of the paths between satellites that use laser links. We&#39;ve done calculations of latency between LEO satellites that suggest that there are situations in which going to space will be the fastest path between two points on Earth. We&#39;ll let you know if we end up using laser-space-purge.</p><p>Just as we have with network performance, we are going to relentlessly measure our cache performance as well as the cache performance of our competitors. We won’t be satisfied until we verifiably are the fastest everywhere. To do that, we’ve built a new cache purge architecture which we’re confident will make us the fastest cache purge in the industry.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"our-new-architecture\">Our new architecture</h3>\n      <a href=\"#our-new-architecture\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>Through the end of 2022, we will continue this blog series incrementally showing how we will become the fastest, most-scalable purge system in the industry. We will continue to update you with how our purge system is developing  and benchmark our data along the way.</p><p>Getting there will involve rearchitecting and optimizing our purge service, which hasn’t received a systematic redesign in over a decade. We’re excited to do our development in the open, and bring you along on our journey.</p><p>So what do we plan on updating?</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"introducing-coreless-purge\">Introducing Coreless Purge</h3>\n      <a href=\"#introducing-coreless-purge\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>The first version of our cache purge system was designed on top of a set of central core services including authorization, authentication, request distribution, and filtering among other features that made it a high-reliability service. These core components had ultimately become a bottleneck in terms of scale and performance as our network continues to expand globally. While most of our purge dependencies have been containerized, the message queue used was still running on bare metals, which led to increased operational overhead when our system needed to scale.</p><p>Last summer, we built a proof of concept for a completely decentralized cache invalidation system using in-house tech – Cloudflare <a href=\"https://developers.cloudflare.com/workers/\">Workers</a> and <a href=\"https://developers.cloudflare.com/workers/learning/using-durable-objects/\">Durable Objects</a>. Using Durable Objects as a queuing mechanism gives us the flexibility to scale horizontally by adding more Durable Objects as needed and can reduce time to purge with quick regional fanouts of purge requests.</p><p>In the new purge system we’re ripping out the reliance on core data centers and moving all that functionality to every data center, we’re calling it <b>coreless purge</b>.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4lwTbQG2Tj9eivYVv2KWBi/8a9d3abc8e17bfb3ae2eebb3f262dd6b/Coreless-Purge.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"741\" loading=\"lazy\"/>\n            \n            </figure><p>Here’s a general overview of how coreless purge will work:</p><ul><li><p>A purge request will be initiated via the API or UI. This request will specify how we should identify the assets to be purged.</p></li><li><p>The request will be routed to the nearest Cloudflare data center where it is identified to be a purge request and be passed to a Worker that will perform several of the key functions that currently occur in the core (like authorization, filtering, etc).</p></li><li><p>From there, the Worker will pass the purge request to a Durable Object in the data center. The Durable Object will queue all the requests and broadcast them to every data center when they are ready to be processed.</p></li><li><p>When the Durable Object broadcasts the purge request to every data center, another Worker will pass the request to the service in the data center that will invalidate the content in cache (executes the purge).</p></li></ul><p>We believe this re-architecture of our system built by stringing together multiple services from the Workers platform will help improve both the speed and scalability of the purge requests we will be able to handle.</p>\n    <div class=\"flex anchor relative\">\n      <h3 id=\"conclusion\">Conclusion</h3>\n      <a href=\"#conclusion\" aria-hidden=\"true\" class=\"relative sm:absolute sm:-left-5\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentcolor\" d=\"m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z\"></path></svg>\n      </a>\n    </div>\n    <p>We’re going to spend a lot of time building and optimizing purge because, if there’s one thing we learned here today, it&#39;s that cache invalidation is a difficult problem but those are exactly the types of problems that get us out of bed in the morning.</p><p>If you want to help us optimize our purge pipeline, we’re <a href=\"https://www.cloudflare.com/careers/jobs/?department=default&location=default\">hiring</a>.</p>",
		"id": "60eg6IRY58lTNwkSmE1vFX",
		"localeList": {
			"name": "Part 1: Rethinking Cache Purge, Fast and Scalable Global Cache Invalidation Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "This is Part 1 of what will be a year-long series documenting our journey to re-architect our systems to be the best, fastest, most-scalable purge in the industry ",
		"metadata": {
			"title": "Part 1: Rethinking Cache Purge, Fast and Scalable Global Cache Invalidation",
			"description": "This is Part 1 of what will be a year-long series documenting our journey to re-architect our systems to be the best, fastest, most-scalable purge in the industry ",
			"imgPreview": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/5v1smDQXSxCHoNSk6kods7/093d3559ab9620f8dd0a497dee7ee27c/part1-coreless-purge-prW9es.png"
		},
		"primary_author": {},
		"publicly_index": true,
		"published_at": "2022-05-14T15:50:50.000+01:00",
		"slug": "part1-coreless-purge",
		"tags": [
			{
				"id": "1VkRSlsXf1AYB3QvlWU1JK",
				"name": "Platform Week",
				"slug": "platform-week"
			},
			{
				"id": "48r7QV00gLMWOIcM1CSDRy",
				"name": "Speed & Reliability",
				"slug": "speed-and-reliability"
			},
			{
				"id": "6QktrXeEFcl4e2dZUTZVGl",
				"name": "Product News",
				"slug": "product-news"
			}
		],
		"title": "Part 1: Rethinking Cache Purge, Fast and Scalable Global Cache Invalidation",
		"updated_at": "2025-10-24T11:30:08.768Z",
		"url": "https://blog.cloudflare.com/part1-coreless-purge"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.icon_aria_label": "Search",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"search.result_stat_empty": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong>",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"search.autocomplete_title": "Insert a query. Press enter to send",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}