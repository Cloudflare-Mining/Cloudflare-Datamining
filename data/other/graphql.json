{
	"AccountAccessLoginRequestsAdaptiveGroups": {
		"__description": "Access login requests",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of access login API events processed",
		"dimensions": "List of dimensions to group by"
	},
	"AccountAccessLoginRequestsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountAccessLoginRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of access login API events processed, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountAccessLoginRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"appId": "Access application ID",
		"approvingPolicyId": "Policy ID that approved the user",
		"cfRayId": "CF ray id",
		"country": "Country tag",
		"date": "The date the access login event was emitted",
		"datetime": "The date and time the access login event was emitted",
		"datetimeMinute": "The date and time the access login event was emitted truncated to the minute",
		"deviceId": "Device ID",
		"hasExistingJWT": "Has existing JWT (0 = false, 1 = true)",
		"hasGatewayEnabled": "Has Gateway enabled (0 = false, 1 = true)",
		"hasWarpEnabled": "Has WARP enabled (0 = false, 1 = true)",
		"identityProvider": "Identity provider",
		"ipAddress": "User IP address",
		"isSuccessfulLogin": "If the login was successful (0 = false, 1 = true)",
		"mtlsCertSerialId": "MTLS certificate serial ID",
		"mtlsCommonName": "MTLS common name",
		"mtlsStatus": "MTLS status (may show error message if status is not successful)",
		"serviceTokenId": "Service token ID",
		"serviceTokenVersion": "Service token version",
		"userUuid": "User UUID"
	},
	"AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAccessLoginRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Advanced DNS Protection",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"dnsQueryName": "The requested domain name in the DNS query",
		"dnsQueryType": "The query type in the DNS query",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"mitigationReason": "Reason for applying a mitigation to the packet, if any",
		"mitigationScope": "Whether the packet matched a local or global mitigation, if any (possible values: local, global)",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
		"verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Advanced TCP Protection",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"mitigationReason": "Reason for applying a mitigation to the packet, if any",
		"mitigationScope": "Whether the packet matched a local or global mitigation, if any (possible values: local, global)",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"protocolState": "State of the packet in the context of the protocol, if available",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
		"verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountAegisIpUtilizationAdaptiveGroups": {
		"__description": "Beta. Aegis IP utilization metrics",
		"avg": "The avg of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountAegisIpUtilizationAdaptiveGroupsAvg": {
		"__description": "",
		"utilization": "Average utilization (%)"
	},
	"AccountAegisIpUtilizationAdaptiveGroupsDimensions": {
		"__description": "",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"popUtilizationKey": "PoP, Aegis IP and origin. Can be used as a grouping key"
	},
	"AccountAegisIpUtilizationAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAegisIpUtilizationAdaptiveGroupsMax": {
		"__description": "",
		"utilization": "Maximum utilization (%) in a single datacenter"
	},
	"AccountAegisIpUtilizationAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAiGatewayCacheAdaptiveGroups": {
		"__description": "AI Gateway Cache",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of requests for an account with caching enabled: including hits and misses",
		"dimensions": "List of dimensions to group by"
	},
	"AccountAiGatewayCacheAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of requests for an account with caching enabled: including hits and misses, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountAiGatewayCacheAdaptiveGroupsDimensions": {
		"__description": "",
		"cacheOp": "Cache Hit or Miss: 1 = cache hit, 0 = cache miss",
		"date": "The date when trigger was triggerd",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"gateway": "Gateway name",
		"model": "Which model was the request sent to",
		"provider": "Which provider was the request sent to",
		"tokensIn": "Number of tokens in the request",
		"tokensOut": "Number of tokens in the response"
	},
	"AccountAiGatewayCacheAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAiGatewayCacheAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAiGatewayErrorsAdaptiveGroups": {
		"__description": "AI Gateway Errors",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of errors",
		"dimensions": "List of dimensions to group by"
	},
	"AccountAiGatewayErrorsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of errors, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountAiGatewayErrorsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date when trigger was triggerd",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"gateway": "Gateway name",
		"model": "Which models was the request sent to",
		"provider": "Which provider was the request sent to"
	},
	"AccountAiGatewayErrorsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAiGatewayErrorsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAiGatewayRequestsAdaptiveGroups": {
		"__description": "AI Gateway Requests",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed requests",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountAiGatewayRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed requests, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountAiGatewayRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"cached": "Was the response served from cache?: 1 = cache hit, 0 = cache misss",
		"cost": "Cost per request",
		"date": "The date when trigger was triggered",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"error": "Was the response an error: 1 , 0 for no error",
		"gateway": "Gateway name",
		"metadataKeys": "Metadata keys saved on ai-gateway request",
		"metadataRaw": "Metadata saved in on ai-gateway request",
		"metadataValues": "Metadata values saved on ai-gateway request",
		"model": "Which models was the request sent to",
		"prompts": "Prompts used on ai-gateway request",
		"promptsIds": "Prompts Ids used on ai-gateway request",
		"promptsVersions": "Prompts versions used on ai-gateway request",
		"provider": "Which provider was the request sent to",
		"rateLimited": "Was the request rate limited?: 1 = rate limit applied, 0 = rate limit not applied",
		"statusCode": "HTTP Status Code of provider response",
		"tokensIn": "Number of tokens in the request",
		"tokensOut": "Number of tokens in the response",
		"wholesale": "Was the request use wholesale: 1 = applied, 0 = not applied"
	},
	"AccountAiGatewayRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAiGatewayRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAiGatewayRequestsAdaptiveGroupsSum": {
		"__description": "",
		"cachedRequests": "Sum of cached requests",
		"cachedTokensIn": "Sum of cached tokens in",
		"cachedTokensOut": "Sum of cached tokens out",
		"cost": "Total cost\"",
		"erroredRequests": "Sum of errored requests",
		"uncachedTokensIn": "Sum of uncached tokens in",
		"uncachedTokensOut": "Sum of uncached tokens out"
	},
	"AccountAiGatewayRequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"cachedRequests": "Confidence interval for the corresponding point estimate",
		"cachedTokensIn": "Confidence interval for the corresponding point estimate",
		"cachedTokensOut": "Confidence interval for the corresponding point estimate",
		"cost": "Confidence interval for the corresponding point estimate",
		"erroredRequests": "Confidence interval for the corresponding point estimate",
		"uncachedTokensIn": "Confidence interval for the corresponding point estimate",
		"uncachedTokensOut": "Confidence interval for the corresponding point estimate"
	},
	"AccountAiGatewaySizeAdaptiveGroups": {
		"__description": "AI Gateway Stored Rows",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountAiGatewaySizeAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date when trigger was triggerd",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"gateway": "Gateway name",
		"logManagement": "Log Management active or not: 1 = active, 0 = not active",
		"rows": "Number of rows stored in a gateway"
	},
	"AccountAiGatewaySizeAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAiGatewaySizeAdaptiveGroupsMax": {
		"__description": "",
		"rows": "Max of stored rows"
	},
	"AccountAiGatewaySizeAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAiInferenceAdaptive": {
		"__description": "AI Inference logs with adaptive sampling",
		"audioSeconds": "Audio seconds",
		"costMetricName1": "Name for cost metric 1",
		"costMetricName2": "Name for cost metric 2",
		"costMetricValue1": "Value for cost metric 1",
		"costMetricValue2": "Value for cost metric 2",
		"datetime": "The date when inferance was triggered",
		"errorCode": "Error code",
		"inferenceSteps": "Inference steps",
		"inferenceTimeMs": "Inference time ms",
		"inputLength": "Input length",
		"inputTokens": "Input tokens",
		"modelId": "ModelId that was trigger to inference",
		"modelIsBeta": "Model that was trigger to inference is Beta",
		"neurons": "Monetization unit",
		"outputTokens": "Output tokens",
		"processedPixels": "Processed pixels",
		"processedTiles": "Processed tiles",
		"requestBytesIn": "Request size in bytes",
		"requestBytesOut": "Request size out bytes",
		"requestSource": "Source who triggered (worker binding, pages binding, rest api)",
		"sampleInterval": "ABR sample interval",
		"totalTiles": "Total tiles"
	},
	"AccountAiInferenceAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountAiInferenceAdaptiveGroups": {
		"__description": "Aggregated AI Inference logs with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of inferences for an account",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountAiInferenceAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of inferences for an account, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountAiInferenceAdaptiveGroupsDimensions": {
		"__description": "",
		"costMetricName1": "Name for cost metric 1",
		"costMetricName2": "Name for cost metric 2",
		"costMetricValue1": "Value for cost metric 1",
		"costMetricValue2": "Value for cost metric 2",
		"date": "The date when the inference starts",
		"datetime": "The date when the inference starts",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"datetimeSixHours": "The date and time truncated to six hours",
		"errorCode": "Error code",
		"inferenceTimeMs": "Inference time ms",
		"modelId": "ModelId that was trigger to inference",
		"modelIsBeta": "Model that was trigger to inference is Beta",
		"neurons": "Monetization unit",
		"requestBytesIn": "Request size in bytes",
		"requestBytesOut": "Request size out bytes",
		"requestSource": "Source who triggered (worker binding, pages binding, rest api)"
	},
	"AccountAiInferenceAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAiInferenceAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAiInferenceAdaptiveGroupsSum": {
		"__description": "",
		"totalAudioSeconds": "Total audio seconds",
		"totalCostMetricValue1": "Total value for cost metric 1",
		"totalCostMetricValue2": "Total value for cost metric 2",
		"totalInferenceSteps": "Total inference steps",
		"totalInferenceTimeMs": "Total inference time ms",
		"totalInputLength": "Total input length",
		"totalInputTokens": "Total input tokens",
		"totalNeurons": "Total neurons",
		"totalOutputTokens": "Total output tokens",
		"totalProcessedPixels": "Total processed pixels",
		"totalProcessedTiles": "Total processed tiles",
		"totalRequestBytesIn": "Total bytes in per request",
		"totalRequestBytesOut": "Total bytes out per request",
		"totalTiles": "Total tiles"
	},
	"AccountAiInferenceAdaptiveGroupsSumConfidence": {
		"__description": "",
		"totalAudioSeconds": "Confidence interval for the corresponding point estimate",
		"totalCostMetricValue1": "Confidence interval for the corresponding point estimate",
		"totalCostMetricValue2": "Confidence interval for the corresponding point estimate",
		"totalInferenceSteps": "Confidence interval for the corresponding point estimate",
		"totalInferenceTimeMs": "Confidence interval for the corresponding point estimate",
		"totalInputLength": "Confidence interval for the corresponding point estimate",
		"totalInputTokens": "Confidence interval for the corresponding point estimate",
		"totalNeurons": "Confidence interval for the corresponding point estimate",
		"totalOutputTokens": "Confidence interval for the corresponding point estimate",
		"totalProcessedPixels": "Confidence interval for the corresponding point estimate",
		"totalProcessedTiles": "Confidence interval for the corresponding point estimate",
		"totalRequestBytesIn": "Confidence interval for the corresponding point estimate",
		"totalRequestBytesOut": "Confidence interval for the corresponding point estimate",
		"totalTiles": "Confidence interval for the corresponding point estimate"
	},
	"AccountAiInferenceAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountAutoRAGConfigAPIAdaptiveGroups": {
		"__description": "AutoRAG Config API Search Analytics",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountAutoRAGConfigAPIAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountAutoRAGConfigAPIAdaptiveGroupsDimensions": {
		"__description": "",
		"aiPromptIncluded": "Whether the prompt for AI Search is included (0 = false, 1 = true)",
		"aiSearchDurationMs": "The time in milliseconds it took to do generate a response with AI Search",
		"aiSearchInputSizeTokens": "The size in tokens of the input for response generation with AI Search",
		"aiSearchModel": "The model used for AI Search, if it was used",
		"aiSearchResultSizeTokens": "The size in tokens of the AI Search generated response",
		"chuckSizeTokensArray": "An array of file sizes of the files returned in this search",
		"chunkOverlap": "How much overlap exists between contiguous chunks",
		"chunkSize": "The size of text chunks",
		"date": "The date when trigger was triggered",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"doReranking": "Whether re-ranking was used when performing this search task (0 = false, 1 = true)",
		"doRewrite": "Whether to do query rewriting when performing searches with this RAG (0 = false, 1 = true)",
		"embeddingModel": "The model used to generate embeddings",
		"enableChunking": "Whether chunking is enabled for this AutoRAG (0 = false, 1 = true)",
		"fileIdArray": "An array of IDs of the files returned in this search",
		"filenameArray": "An array of names of the files returned in this search",
		"getFilesDurationMs": "The time in milliseconds it took to retrieve files for this search",
		"getQueryVectorsAvgDurationMs": "The time in milliseconds it took to generate embeddings for this search's query",
		"getResultVectorsAvgDurationMs": "The time in milliseconds it took to retrieve stored file embeddings",
		"isStream": "Whether the search response was streamed or not (0 = false, 1 = true)",
		"maxResults": "THe max number of results that can be returned",
		"numChunksToRetrieve": "The time in milliseconds it took to generate embeddings for this search's query",
		"numResults": "The number of returned results",
		"querySizeTokens": "The size of the given query in tokens",
		"rag": "AutoRAG Id",
		"regenerateMarkdown": "Whether to this search implied regenerating markdown for returned results (0 = false, 1 = true)",
		"rerankingModel": "The reranking model used in this search",
		"rewriteDurationMs": "The time in milliseconds that it took to rewrite the query",
		"rewriteInputSizeTokens": "The size in tokens of the rewritten input",
		"rewriteModel": "The model used for rewriting queries",
		"rewritePromptIncluded": "Whether the rewrite prompt is included (0 = false, 1 = true)",
		"rewriteResultSizeTokens": "The size in tokens of the rewritten query",
		"scoreArray": "An array of matching scores of the files returned in this search",
		"scoreThreshold": "The score threshold over which matches are included in the result",
		"searchType": "AutoRAG Search Type",
		"totalDurationMs": "The total time in milliseconds that performing this search took"
	},
	"AccountAutoRAGConfigAPIAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAutoRAGConfigAPIAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountAutoRAGConfigAPIAdaptiveGroupsSum": {
		"__description": "",
		"aiSearchCount": "The number of AI Searches for this RAG",
		"searchCount": "The number of Searches for this RAG"
	},
	"AccountAutoRAGConfigAPIAdaptiveGroupsSumConfidence": {
		"__description": "",
		"aiSearchCount": "Confidence interval for the corresponding point estimate",
		"searchCount": "Confidence interval for the corresponding point estimate"
	},
	"AccountAutoRAGEngineAdaptiveGroups": {
		"__description": "AutoRAG Engine Ingestion Analytics",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountAutoRAGEngineAdaptiveGroupsDimensions": {
		"__description": "",
		"completed": "Number of completed items",
		"date": "The date when trigger was triggered",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"errored": "Number of errored items",
		"queued": "Number of queued items",
		"rag": "AutoRAG Id",
		"running": "Number of running items",
		"sourceType": "AutoRAG Source Type"
	},
	"AccountAutoRAGEngineAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountAutoRAGEngineAdaptiveGroupsMax": {
		"__description": "",
		"completed": "Max of completed items",
		"errored": "Max of errored items",
		"queued": "Max of queued items",
		"running": "Max of running items"
	},
	"AccountAutoRAGEngineAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountBrowserIsolationSessionsAdaptiveGroups": {
		"__description": "Aggregated count of Browser Isolation sessions",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of browser sessions",
		"dimensions": "List of dimensions to group by"
	},
	"AccountBrowserIsolationSessionsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of browser sessions, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountBrowserIsolationSessionsAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": ""
	},
	"AccountBrowserIsolationSessionsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountBrowserIsolationSessionsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountBrowserIsolationUserActionsAdaptiveGroups": {
		"__description": "Aggregated count of Browser Isolation User Actions matches",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of user actions",
		"dimensions": "List of dimensions to group by"
	},
	"AccountBrowserIsolationUserActionsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of user actions, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountBrowserIsolationUserActionsAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "",
		"decision": "Decision applied to user action. Possible values are allow | block",
		"type": "User action type. Possible values are copy | paste | download | upload | print"
	},
	"AccountBrowserIsolationUserActionsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountBrowserIsolationUserActionsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountBrowserRenderingApiAdaptiveGroups": {
		"__description": "Aggregated Browser Rendering API events with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of Browser Rendering REST API requests for an account",
		"dimensions": "List of dimensions to group by"
	},
	"AccountBrowserRenderingApiAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of Browser Rendering REST API requests for an account, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountBrowserRenderingApiAdaptiveGroupsDimensions": {
		"__description": "",
		"browserSessionEndTime": "End date and time of the browser session pertaining to the request",
		"browserSessionStartTime": "Start date and time of the browser session pertaining to the request",
		"date": "The date of the event",
		"datetimeFifteenMinutes": "The date and time of the event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the event truncated to five minutes",
		"datetimeHour": "The date and time of the event truncated to the hour",
		"datetimeMinute": "The date and time of the event truncated to the minute",
		"endpoint": "Browser Rendering REST API endpoint of the request",
		"requestEndTime": "End date and time of the request",
		"requestStartTime": "Start date and time of the request",
		"sessionId": "Browser session ID",
		"status": "HTTP response status code",
		"tier": "Account tier: 'free' or 'paid' for accounts with Workers Free or Paid plan, correspondingly"
	},
	"AccountBrowserRenderingApiAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountBrowserRenderingApiAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroups": {
		"__description": "Aggregated Browser Rendering worker binding sessions with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of sessions for an account",
		"dimensions": "List of dimensions to group by",
		"max": "The maximum value for a metric per dimension",
		"uniq": ""
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroupsAvg": {
		"__description": "",
		"avgConcurrentSessions": "Average concurrent browser sessions"
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of sessions for an account, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroupsDimensions": {
		"__description": "",
		"concurrentSessions": "Number of browser sessions used concurrently at the time of the event",
		"date": "The date of the event",
		"datetimeFifteenMinutes": "The date and time of the event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the event truncated to five minutes",
		"datetimeHour": "The date and time of the event truncated to the hour",
		"datetimeMinute": "The date and time of the event truncated to the minute",
		"sessionId": "Browser session ID"
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroupsMax": {
		"__description": "",
		"maxConcurrentSessions": "Maximum concurrent browser sessions"
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountBrowserRenderingBindingSessionsAdaptiveGroupsUniq": {
		"__description": "",
		"sessionIdCount": "Unique browser sessions"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroups": {
		"__description": "Aggregated Browser Rendering and Browser Rendering REST API browser sessions with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of Browser Rendering and Browser Rendering REST API browser sessions for an account",
		"dimensions": "List of dimensions to group by",
		"max": "The maximum value for a metric per dimension",
		"min": "The minimum value for a metric per dimension",
		"sum": "The total value for a metric per dimension"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsAvg": {
		"__description": "",
		"avgSessionDurationMs": "Average browser session duration in ms"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of Browser Rendering and Browser Rendering REST API browser sessions for an account, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The total value for a metric per dimension, with confidence intervals"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date of the event",
		"datetimeFifteenMinutes": "The date and time of the event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the event truncated to five minutes",
		"datetimeHour": "The date and time of the event truncated to the hour",
		"datetimeMinute": "The date and time of the event truncated to the minute",
		"sessionDurationMs": "Browser session duration in ms",
		"sessionEnd": "End date and time of the browser session",
		"sessionId": "Browser session ID",
		"sessionStart": "Start date and time of the browser session"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsMax": {
		"__description": "",
		"maxSessionDurationMs": "Max browser session duration in ms"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsMin": {
		"__description": "",
		"minSessionDurationMs": "Min browser session duration in ms"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsSum": {
		"__description": "",
		"totalSessionDurationMs": "Total browser sessions duration in ms"
	},
	"AccountBrowserRenderingBrowserTimeUsageAdaptiveGroupsSumConfidence": {
		"__description": "",
		"totalSessionDurationMs": "Confidence interval for the corresponding point estimate"
	},
	"AccountBrowserRenderingEventsAdaptive": {
		"__description": "Browser Rendering events with adaptive sampling",
		"browserCloseReason": "Browser session close code. Enum (-1, N/A) (0, Unknown) (1, NormalClosure) (2, BrowserIdle) (3, ClientClosedEarly) (4, ChromiumChrashed) (5, ClientAbnormalClosure) (6, ServerAbnormalClosure) (7, ClientError) (8, ServerError) (9, WorkerError) (10, ClientNeverConnected) (11, BrowserSessionEvicted) (12, UsedBrowserTimeLimitExceeded)\n",
		"browserEndTime": "Browser session end time",
		"browserStartTime": "Browser session start time",
		"concurrentSessions": "Number of browser sessions used concurrently at the time of the event",
		"connectionEndTime": "When worker ended devtools connection to browser session",
		"connectionId": "Worker connection ID, when available",
		"connectionStartTime": "When worker started devtools connection to browser session",
		"datetime": "The time of the event",
		"sampleInterval": "ABR sample interval",
		"scriptName": "Name of worker who initiated the request",
		"sessionId": "Browser session ID"
	},
	"AccountBrowserRenderingEventsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountBrowserRenderingEventsAdaptiveGroups": {
		"__description": "Aggregated Browser Rendering events with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of events for an account",
		"dimensions": "List of dimensions to group by",
		"max": "The maximum value for a metric per dimension",
		"min": "The minimum value for a metric per dimension",
		"uniq": ""
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsAvg": {
		"__description": "",
		"avgConcurrentSessions": "Average concurrent browser sessions"
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of events for an account, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"browserCloseReason": "Browser session close code. Enum (-1, N/A) (0, Unknown) (1, NormalClosure) (2, BrowserIdle) (3, ClientClosedEarly) (4, ChromiumChrashed) (5, ClientAbnormalClosure) (6, ServerAbnormalClosure) (7, ClientError) (8, ServerError) (9, WorkerError) (10, ClientNeverConnected) (11, BrowserSessionEvicted) (12, UsedBrowserTimeLimitExceeded)\n",
		"concurrentSessions": "Number of browser sessions used concurrently at the time of the event",
		"connectionId": "Worker connection ID, when available",
		"date": "The date of the event",
		"datetimeFifteenMinutes": "The date and time of the event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the event truncated to five minutes",
		"datetimeHour": "The date and time of the event truncated to the hour",
		"datetimeMinute": "The date and time of the event truncated to the minute",
		"scriptName": "Name of worker who initiated the request",
		"sessionId": "Browser session ID"
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsMax": {
		"__description": "",
		"finalBrowserCloseReason": "Browser close reason",
		"latestBrowserEndTime": "Browser end time"
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsMin": {
		"__description": "",
		"earliestBrowserStartTime": "Browser start time"
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountBrowserRenderingEventsAdaptiveGroupsUniq": {
		"__description": "",
		"connectionIdCount": "Unique worker connections",
		"sessionIdCount": "Unique browser sessions"
	},
	"AccountBrowserRenderingEventsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountCallsStatusAdaptive": {
		"__description": "(TESTING ONLY, NOT FOR PRODUCTION) Raw Calls events with adaptive sampling",
		"appId": "The appId that generated traffic",
		"datetime": "The date and time the event was recorded",
		"event": "The description of the event related to a session or a track",
		"sessionId": "The generated string that identifies a PeerConnection",
		"trackId": "The track identifier provided to us within a PeerConnection"
	},
	"AccountCallsStatusAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountCallsStatusAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountCallsTurnUsageAdaptiveGroups": {
		"__description": "Aggregated Calls TURN bandwidth usage with adaptive sampling\"",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountCallsTurnUsageAdaptiveGroupsAvg": {
		"__description": "",
		"concurrentConnectionsFifteenMinutes": "Average concurrent connections when grouped by datetimeFifteenMinutes",
		"concurrentConnectionsFiveMinutes": "Average concurrent connections when grouped by datetimeFiveMinutes",
		"concurrentConnectionsHour": "Average concurrent connections when grouped by datetimeHour",
		"concurrentConnectionsMinute": "Average concurrent connections when grouped by datetimeMinute"
	},
	"AccountCallsTurnUsageAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"concurrentConnectionsFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"concurrentConnectionsFiveMinutes": "Confidence interval for the corresponding point estimate",
		"concurrentConnectionsHour": "Confidence interval for the corresponding point estimate",
		"concurrentConnectionsMinute": "Confidence interval for the corresponding point estimate"
	},
	"AccountCallsTurnUsageAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountCallsTurnUsageAdaptiveGroupsDimensions": {
		"__description": "",
		"customIdentifier": "The customIdentifier (provided when credential was generated) that generated traffic",
		"datacenterCity": "City of the Cloudflare datacenter",
		"datacenterCode": "IATA airport code of the Cloudflare datacenter",
		"datacenterCountry": "Country of the Cloudflare datacenter",
		"datacenterRegion": "Region of the Cloudflare datacenter",
		"date": "Calls TURN bandwidth metrics date",
		"datetimeFifteenMinutes": "Calls TURN bandwidth metrics timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Calls TURN bandwidth metrics timestamp, truncated to five minutes",
		"datetimeHour": "Calls TURN bandwidth metrics timestamp, truncated to the hour",
		"datetimeMinute": "Calls TURN bandwidth metrics timestamp, truncated to the minute",
		"keyId": "The credentials created by this keyId that generated traffic",
		"username": "The username from credential that generated traffic"
	},
	"AccountCallsTurnUsageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountCallsTurnUsageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountCallsTurnUsageAdaptiveGroupsSum": {
		"__description": "",
		"egressBytes": "The total bytes sent by Calls TURN, observed over the queried time period",
		"ingressBytes": "The total bytes received by Calls TURN, observed over the queried time period"
	},
	"AccountCallsTurnUsageAdaptiveGroupsSumConfidence": {
		"__description": "",
		"egressBytes": "Confidence interval for the corresponding point estimate",
		"ingressBytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountCallsUsageAdaptiveGroups": {
		"__description": "Beta. Aggregated Calls SFU bandwidth usage with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountCallsUsageAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountCallsUsageAdaptiveGroupsDimensions": {
		"__description": "",
		"appId": "The appId that generated traffic",
		"date": "Calls bandwidth metrics date",
		"datetimeFifteenMinutes": "Calls bandwidth metrics timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Calls bandwidth metrics timestamp, truncated to five minutes",
		"datetimeHour": "Calls bandwidth metrics timestamp, truncated to the hour",
		"datetimeMinute": "Calls bandwidth metrics timestamp, truncated to the minute",
		"sessionId": "The generated string that identifies a PeerConnection",
		"trackId": "The track identifier provided to us within a PeerConnection",
		"trackType": "Describes if the track contains video, audio, or data"
	},
	"AccountCallsUsageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountCallsUsageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountCallsUsageAdaptiveGroupsSum": {
		"__description": "",
		"egressBytes": "The total bytes sent by Calls, observed over the queried time period",
		"ingressBytes": "The total bytes received by Calls, observed over the queried time period"
	},
	"AccountCallsUsageAdaptiveGroupsSumConfidence": {
		"__description": "",
		"egressBytes": "Confidence interval for the corresponding point estimate",
		"ingressBytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Cloudflare CDN traffic",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationDeviceTag": "Device tag associated with the destination IP of the packet",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"mitigationSystem": "Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall)",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"popName": "Cloudflare PoP that received the packet (unique site identifier)",
		"prefixTag": "IP prefix tag associated with the packet",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceDeviceTag": "Device tag associated with the source IP of the packet",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet"
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountCdnNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountCloudchamberMetricsAdaptiveGroups": {
		"__description": "Metrics for Cloudchamber applications and deployments",
		"avg": "The average value of a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of metrics received",
		"dimensions": "List of dimensions to group by",
		"max": "Maximum value of a metric per dimension",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountCloudchamberMetricsAdaptiveGroupsAvg": {
		"__description": "",
		"cpuLoad": "Average CPU load",
		"gpuMemory": "Average GPU memory usage",
		"memory": "Average memory usage",
		"rxBandwidth": "<small>DEPRECATED (Replaced by rxBandwidthBps):</small> Average RX bandwidth",
		"rxBandwidthBps": "Average RX bandwidth in bps",
		"txBandwidth": "<small>DEPRECATED (Replaced by txBandwidthBps):</small> Average TX bandwidth",
		"txBandwidthBps": "Average TX bandwidth in bps"
	},
	"AccountCloudchamberMetricsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of metrics received, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountCloudchamberMetricsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationId": "The application ID",
		"date": "The date the metric was received",
		"datetimeFifteenMinutes": "The date and time the metric was received, truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time the metric was received, truncated to five minutes",
		"datetimeHour": "The date and time the metric was received, truncated to one hour",
		"datetimeMinute": "The date and time the metric was received, truncated to one minute",
		"datetimeSixHours": "The date and time the metric was received, truncated to six hours",
		"deploymentId": "The deployment ID",
		"durableObjectId": "If set, this metric was emitted while assigned to a durable object",
		"location": "Location",
		"placementId": "The placement ID",
		"procType": "Process type",
		"region": "Region"
	},
	"AccountCloudchamberMetricsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountCloudchamberMetricsAdaptiveGroupsMax": {
		"__description": "",
		"cpuLoad": "Maximum CPU load",
		"diskAvailable": "Total disk space available, in bytes",
		"diskUsage": "Disk usage, in bytes",
		"diskUsagePercentage": "Disk usage as a percentage of total disk space",
		"gpuMemory": "Maximum GPU memory usage",
		"memory": "Maximum memory usage",
		"rxBandwidth": "<small>DEPRECATED (Replaced by rxBandwidthBps):</small> Maximum RX bandwidth",
		"rxBandwidthBps": "Maximum RX bandwidth",
		"rxBytes": "<small>DEPRECATED (Replaced by sum { rxBytes }):</small> Total bytes received",
		"txBandwidth": "<small>DEPRECATED (Replaced by txBandwidthBps):</small> Maximum TX bandwidth",
		"txBandwidthBps": "Maximum TX bandwidth",
		"txBytes": "<small>DEPRECATED (Replaced by sum { txBytes }):</small> Total bytes transmitted"
	},
	"AccountCloudchamberMetricsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountCloudchamberMetricsAdaptiveGroupsQuantiles": {
		"__description": "",
		"cpuLoadP50": "CPU load (50th percentile)",
		"cpuLoadP90": "CPU load (90th percentile)",
		"cpuLoadP99": "CPU load (99th percentile)",
		"diskUsageP50": "Disk usage in bytes (50th percentile)",
		"diskUsageP90": "Disk usage in bytes (90th percentile)",
		"diskUsageP99": "Disk usage in bytes (99th percentile)",
		"diskUsagePercentageP50": "Disk usage as a percentage of total disk space (50th percentile)",
		"diskUsagePercentageP90": "Disk usage as a percentage of total disk space (90th percentile)",
		"diskUsagePercentageP99": "Disk usage as a percentage of total disk space (99th percentile)",
		"gpuMemoryP50": "GPU memory usage (50th percentile)",
		"gpuMemoryP90": "GPU memory usage (90th percentile)",
		"gpuMemoryP99": "GPU memory usage (99th percentile)",
		"memoryP50": "Memory usage (50th percentile)",
		"memoryP90": "Memory usage (90th percentile)",
		"memoryP99": "Memory usage (99th percentile)",
		"rxBandwidthBpsP50": "RX bandwidth (50th percentile)",
		"rxBandwidthBpsP90": "RX bandwidth (90th percentile)",
		"rxBandwidthBpsP99": "RX bandwidth (99th percentile)",
		"rxBandwidthP50": "<small>DEPRECATED (Replaced by rxBandwidthBpsP50):</small> RX bandwidth (50th percentile)",
		"rxBandwidthP90": "<small>DEPRECATED (Replaced by rxBandwidthBpsP90):</small> RX bandwidth (90th percentile)",
		"rxBandwidthP99": "<small>DEPRECATED (Replaced by rxBandwidthBpsP99):</small> RX bandwidth (99th percentile)",
		"txBandwidthBpsP50": "TX bandwidth (50th percentile)",
		"txBandwidthBpsP90": "TX bandwidth (90th percentile)",
		"txBandwidthBpsP99": "TX bandwidth (99th percentile)",
		"txBandwidthP50": "<small>DEPRECATED (Replaced by txBandwidthBpsP50):</small> TX bandwidth (50th percentile)",
		"txBandwidthP90": "<small>DEPRECATED (Replaced by txBandwidthBpsP90):</small> TX bandwidth (90th percentile)",
		"txBandwidthP99": "<small>DEPRECATED (Replaced by txBandwidthBpsP99):</small> TX bandwidth (99th percentile)"
	},
	"AccountCloudchamberMetricsAdaptiveGroupsSum": {
		"__description": "",
		"rxBytes": "Sum of bytes received",
		"txBytes": "Sum of bytes transmitted"
	},
	"AccountCloudchamberMetricsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"rxBytes": "Confidence interval for the corresponding point estimate",
		"txBytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroups": {
		"__description": "Cloudflare tunnel Device Analytics",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"egressBitRate": "Sum of egress bits received, divided by 1 second, providing a per-second egress bit rate when grouped by datetime",
		"egressBitRateDay": "Sum of egress bits received, divided by 86400 seconds, providing a per-second egress bit rate when grouped by date",
		"egressBitRateFifteenMinutes": "Sum of egress bits received, divided by 900 seconds, providing a per-second egress bit rate when grouped by datetimeFifteenMinutes",
		"egressBitRateFiveMinutes": "Sum of egress bits received, divided by 300 seconds, providing a per-second egress bit rate when grouped by datetimeFiveMinutes",
		"egressBitRateHour": "Sum of egress bits received, divided by 3600 seconds, providing a per-second egress bit rate when grouped by datetimeHour",
		"egressBitRateMinute": "Sum of egress bits received, divided by 60 seconds, providing a per-second egress bit rate when grouped by datetimeMinute",
		"egressBitRateTenSeconds": "Sum of egress bits received, divided by 10 seconds, providing a per-second egress bit rate when grouped by datetimeTenSeconds",
		"sampleInterval": "Average sample interval applied to the data"
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"egressBitRate": "Confidence interval for the corresponding point estimate",
		"egressBitRateDay": "Confidence interval for the corresponding point estimate",
		"egressBitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"egressBitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"egressBitRateHour": "Confidence interval for the corresponding point estimate",
		"egressBitRateMinute": "Confidence interval for the corresponding point estimate",
		"egressBitRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"connectionDuration": "Duration of the network connection in milliseconds.",
		"date": "Date that the connection was started",
		"datetime": "Date and time the connection was started",
		"datetimeFifteenMinutes": "Date and time that the connection was started, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the connection was started, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the connection was started, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the connection was started, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the connection was started rounded to the start of the nearest ten seconds",
		"destinationCountry": "Destination country for the network connection. Only available for public addresses.",
		"destinationIP": "Destination IP of the network connection.",
		"destinationPort": "Destination port of the network connection.",
		"deviceID": "Identifier of the Cloudflare tunnel connector to which the network session was routed to.",
		"deviceName": "Name of the Cloudflare tunnel connector to which the network session was routed to.",
		"onRamp": "On ramp path to the Cloudflare tunnel: Warp, Magic Tunnel",
		"protocol": "Network Protocol of the network connection. Available values: [UDP,TCP,ICMP,ICMPv6]",
		"sourceCountry": "Source country for the network connection. Only available for public addresses.",
		"sourceIP": "Source IP of the network connection.",
		"sourcePort": "Source port of the network connection.",
		"tcpHandshakeDuration": "Duration of the TCP Handshake for TCP connections in milliseconds."
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits",
		"egressBits": "Sum of egress bits"
	},
	"AccountCloudflareTunnelsAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"egressBits": "Confidence interval for the corresponding point estimate"
	},
	"AccountContainersMetricsAdaptiveGroups": {
		"__description": "Metrics for Cloudchamber applications and deployments",
		"avg": "The average value of a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of metrics received",
		"dimensions": "List of dimensions to group by",
		"max": "Maximum value of a metric per dimension",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountContainersMetricsAdaptiveGroupsAvg": {
		"__description": "",
		"cpuLoad": "Average CPU load",
		"gpuMemory": "Average GPU memory usage",
		"memory": "Average memory usage",
		"rxBandwidth": "<small>DEPRECATED (Replaced by rxBandwidthBps):</small> Average RX bandwidth",
		"rxBandwidthBps": "Average RX bandwidth in bps",
		"txBandwidth": "<small>DEPRECATED (Replaced by txBandwidthBps):</small> Average TX bandwidth",
		"txBandwidthBps": "Average TX bandwidth in bps"
	},
	"AccountContainersMetricsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of metrics received, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountContainersMetricsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationId": "The application ID",
		"date": "The date the metric was received",
		"datetimeFifteenMinutes": "The date and time the metric was received, truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time the metric was received, truncated to five minutes",
		"datetimeHour": "The date and time the metric was received, truncated to one hour",
		"datetimeMinute": "The date and time the metric was received, truncated to one minute",
		"datetimeSixHours": "The date and time the metric was received, truncated to six hours",
		"deploymentId": "The deployment ID",
		"durableObjectId": "If set, this metric was emitted while assigned to a durable object",
		"location": "Location",
		"placementId": "The placement ID",
		"procType": "Process type",
		"region": "Region"
	},
	"AccountContainersMetricsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountContainersMetricsAdaptiveGroupsMax": {
		"__description": "",
		"cpuLoad": "Maximum CPU load",
		"diskAvailable": "Total disk space available, in bytes",
		"diskUsage": "Disk usage, in bytes",
		"diskUsagePercentage": "Disk usage as a percentage of total disk space",
		"gpuMemory": "Maximum GPU memory usage",
		"memory": "Maximum memory usage",
		"rxBandwidth": "<small>DEPRECATED (Replaced by rxBandwidthBps):</small> Maximum RX bandwidth",
		"rxBandwidthBps": "Maximum RX bandwidth",
		"rxBytes": "<small>DEPRECATED (Replaced by sum { rxBytes }):</small> Total bytes received",
		"txBandwidth": "<small>DEPRECATED (Replaced by txBandwidthBps):</small> Maximum TX bandwidth",
		"txBandwidthBps": "Maximum TX bandwidth",
		"txBytes": "<small>DEPRECATED (Replaced by sum { txBytes }):</small> Total bytes transmitted"
	},
	"AccountContainersMetricsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountContainersMetricsAdaptiveGroupsQuantiles": {
		"__description": "",
		"cpuLoadP50": "CPU load (50th percentile)",
		"cpuLoadP90": "CPU load (90th percentile)",
		"cpuLoadP99": "CPU load (99th percentile)",
		"diskUsageP50": "Disk usage in bytes (50th percentile)",
		"diskUsageP90": "Disk usage in bytes (90th percentile)",
		"diskUsageP99": "Disk usage in bytes (99th percentile)",
		"diskUsagePercentageP50": "Disk usage as a percentage of total disk space (50th percentile)",
		"diskUsagePercentageP90": "Disk usage as a percentage of total disk space (90th percentile)",
		"diskUsagePercentageP99": "Disk usage as a percentage of total disk space (99th percentile)",
		"gpuMemoryP50": "GPU memory usage (50th percentile)",
		"gpuMemoryP90": "GPU memory usage (90th percentile)",
		"gpuMemoryP99": "GPU memory usage (99th percentile)",
		"memoryP50": "Memory usage (50th percentile)",
		"memoryP90": "Memory usage (90th percentile)",
		"memoryP99": "Memory usage (99th percentile)",
		"rxBandwidthBpsP50": "RX bandwidth (50th percentile)",
		"rxBandwidthBpsP90": "RX bandwidth (90th percentile)",
		"rxBandwidthBpsP99": "RX bandwidth (99th percentile)",
		"rxBandwidthP50": "<small>DEPRECATED (Replaced by rxBandwidthBpsP50):</small> RX bandwidth (50th percentile)",
		"rxBandwidthP90": "<small>DEPRECATED (Replaced by rxBandwidthBpsP90):</small> RX bandwidth (90th percentile)",
		"rxBandwidthP99": "<small>DEPRECATED (Replaced by rxBandwidthBpsP99):</small> RX bandwidth (99th percentile)",
		"txBandwidthBpsP50": "TX bandwidth (50th percentile)",
		"txBandwidthBpsP90": "TX bandwidth (90th percentile)",
		"txBandwidthBpsP99": "TX bandwidth (99th percentile)",
		"txBandwidthP50": "<small>DEPRECATED (Replaced by txBandwidthBpsP50):</small> TX bandwidth (50th percentile)",
		"txBandwidthP90": "<small>DEPRECATED (Replaced by txBandwidthBpsP90):</small> TX bandwidth (90th percentile)",
		"txBandwidthP99": "<small>DEPRECATED (Replaced by txBandwidthBpsP99):</small> TX bandwidth (99th percentile)"
	},
	"AccountContainersMetricsAdaptiveGroupsSum": {
		"__description": "",
		"rxBytes": "Sum of bytes received",
		"txBytes": "Sum of bytes transmitted"
	},
	"AccountContainersMetricsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"rxBytes": "Confidence interval for the corresponding point estimate",
		"txBytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountD1AnalyticsAdaptiveGroups": {
		"__description": "Beta. Aggregated D1 analytics with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of requests to D1 processed",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountD1AnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"queryBatchResponseBytes": "The total number of bytes in the response, including all returned rows and metadata (average/mean).",
		"queryBatchTimeMs": "Query batch response time in milliseconds (average/mean).",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountD1AnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of requests to D1 processed, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountD1AnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"databaseId": "The UUID of a D1 database",
		"databaseRole": "The role of the D1 database that served the request. One of [primary, replica]",
		"date": "The date the D1 request was received",
		"datetimeFifteenMinutes": "The date and time the D1 request was received truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time the D1 request was received truncated to five minutes",
		"datetimeHour": "The date and time the D1 request was received truncated to the hour",
		"datetimeMinute": "The date and time the D1 request was received truncated to the minute",
		"datetimeSixHours": "The date and time the D1 request was received truncated to start of six hour window",
		"servedByInstance": "A consistent identifier of the D1 database instance (whether primary or replica) that served the request.",
		"servedByRegion": "The region of the D1 database that served the request. One of [WNAM, ENAM, WEUR, EEUR, APAC, OC]"
	},
	"AccountD1AnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountD1AnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountD1AnalyticsAdaptiveGroupsQuantiles": {
		"__description": "",
		"queryBatchResponseBytesP50": "The total number of bytes in the response, including all returned rows and metadata (50th percentile).",
		"queryBatchResponseBytesP90": "The total number of bytes in the response, including all returned rows and metadata (90th percentile).",
		"queryBatchTimeMsP50": "Query batch response time in milliseconds (50th percentile).",
		"queryBatchTimeMsP90": "Query batch response time in milliseconds (90th percentile)."
	},
	"AccountD1AnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"queryBatchResponseBytes": "The total number of bytes in the response, including all returned rows and metadata.",
		"readQueries": "The number of read queries.",
		"rowsRead": "The number of rows your queries read.",
		"rowsWritten": "The number of rows your queries wrote.",
		"writeQueries": "The number of write queries."
	},
	"AccountD1AnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"queryBatchResponseBytes": "Confidence interval for the corresponding point estimate",
		"readQueries": "Confidence interval for the corresponding point estimate",
		"rowsRead": "Confidence interval for the corresponding point estimate",
		"rowsWritten": "Confidence interval for the corresponding point estimate",
		"writeQueries": "Confidence interval for the corresponding point estimate"
	},
	"AccountD1QueriesAdaptiveGroups": {
		"__description": "Beta. D1 query metrics with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of D1 queries processed",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountD1QueriesAdaptiveGroupsAvg": {
		"__description": "",
		"queryDurationMs": "The average duration queries in D1 took, observed over the queried time period.",
		"rowsRead": "The average number of rows scanned, observed over the queried time period.",
		"rowsReturned": "The average number of rows returned, observed over the queried time period.",
		"rowsWritten": "The average number of rows written, observed over the queried time period.",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountD1QueriesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of D1 queries processed, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountD1QueriesAdaptiveGroupsDimensions": {
		"__description": "",
		"databaseId": "The UUID of a D1 database",
		"databaseRole": "The role of the D1 database that served the request. One of [primary, replica]",
		"date": "D1 query sample timestamp",
		"datetimeFifteenMinutes": "D1 query sample timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "D1 query sample timestamp, truncated to five minutes",
		"datetimeHour": "D1 query sample timestamp, truncated to the hour",
		"datetimeMinute": "D1 query sample timestamp, truncated to the minute",
		"datetimeSixHours": "D1 query sample timestamp, truncated to start of six hour window",
		"error": "The error D1 returned (if any) after attempting to run a query.",
		"query": "The SQL query that ran on a D1 database, with parameterized values replaced with placeholders.",
		"servedByInstance": "A consistent identifier of the D1 database instance (whether primary or replica) that served the request.",
		"servedByRegion": "The region of the D1 database that served the request. One of [WNAM, ENAM, WEUR, EEUR, APAC, OC]"
	},
	"AccountD1QueriesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountD1QueriesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountD1QueriesAdaptiveGroupsQuantiles": {
		"__description": "",
		"queryDurationMsP50": "50th percentile Query Duration (milliseconds)",
		"queryDurationMsP95": "95th percentile Query Duration (milliseconds)",
		"queryDurationMsP99": "99th percentile Query Duration (milliseconds)"
	},
	"AccountD1QueriesAdaptiveGroupsSum": {
		"__description": "",
		"queryDurationMs": "The total duration queries in D1 took, observed over the queried time period.",
		"rowsRead": "The total number of rows scanned, observed over the queried time period.",
		"rowsReturned": "The total number of rows returned, observed over the queried time period.",
		"rowsWritten": "The total number of rows written, observed over the queried time period."
	},
	"AccountD1QueriesAdaptiveGroupsSumConfidence": {
		"__description": "",
		"queryDurationMs": "Confidence interval for the corresponding point estimate",
		"rowsRead": "Confidence interval for the corresponding point estimate",
		"rowsReturned": "Confidence interval for the corresponding point estimate",
		"rowsWritten": "Confidence interval for the corresponding point estimate"
	},
	"AccountD1StorageAdaptiveGroups": {
		"__description": "Beta. D1 storage with adaptive sampling",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountD1StorageAdaptiveGroupsDimensions": {
		"__description": "",
		"databaseId": "The UUID of a D1 database",
		"date": "D1 storage sample timestamp",
		"datetimeFifteenMinutes": "D1 storage sample timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "D1 storage sample timestamp, truncated to five minutes",
		"datetimeHour": "D1 storage sample timestamp, truncated to the hour",
		"datetimeMinute": "D1 storage sample timestamp, truncated to the minute",
		"datetimeSixHours": "D1 storage sample timestamp, truncated to start of six hour window"
	},
	"AccountD1StorageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountD1StorageAdaptiveGroupsMax": {
		"__description": "",
		"databaseSizeBytes": "The maximum size of the database (measured in bytes) observed over the queried time period."
	},
	"AccountD1StorageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountDnsAnalyticsAdaptive": {
		"__description": "Analytics data for DNS queries",
		"coloName": "IATA airport code of the data center that processed the query",
		"date": "Date on which the query was received",
		"datetime": "Time at which the query was received",
		"destinationIP": "Cloudflare edge IP address that the query was received at",
		"ipVersion": "Internet Protocol version over which the query was received",
		"protocol": "Transport protocol over which the query was received",
		"queryName": "DNS query name without trailing dot",
		"querySize": "Size of the DNS query in bytes",
		"queryType": "DNS query type",
		"responseCached": "Whether the DNS response was served from cache",
		"responseCode": "DNS response code",
		"responseSize": "Size of the DNS response in bytes",
		"responseStale": "Whether a stale DNS response was served from cache",
		"sampleInterval": "ABR sample interval",
		"sourceIP": "IP address of the client that sent the query (usually this is the resolver's IP address)",
		"upstreamIP": "Upstream server that the query was forwarded to",
		"zoneTag": "Zone query attributed to"
	},
	"AccountDnsAnalyticsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountDnsAnalyticsAdaptiveGroups": {
		"__description": "Analytics data for DNS queries",
		"avg": "Average of a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of queries per dimension",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension"
	},
	"AccountDnsAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"processingTimeUs": "Average processing time in microseconds",
		"sampleInterval": "Average sample interval"
	},
	"AccountDnsAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of queries per dimension, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountDnsAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"coloName": "IATA airport code of the data center that processed the query",
		"date": "Date on which the query was received",
		"datetime": "Time at which the query was received",
		"datetimeFifteenMinutes": "Time at which the query was received, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Time at which the query was received, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Time at which the query was received, truncated to multiple of 30 minutes",
		"datetimeHour": "Time at which the query was received, truncated to the hour",
		"datetimeMinute": "Time at which the query was received, truncated to the minute",
		"destinationIP": "Cloudflare edge IP address that the query was received at",
		"ipVersion": "Internet Protocol version over which the query was received",
		"protocol": "Transport protocol over which the query was received",
		"queryName": "DNS query name without trailing dot",
		"querySizeBucket": "Size of the DNS query in bytes (in multiples of 16)",
		"queryType": "DNS query type",
		"responseCached": "Whether the DNS response was served from cache",
		"responseCode": "DNS response code",
		"responseSizeBucket": "Size of the DNS response in bytes (in multiples of 16)",
		"responseStale": "Whether a stale DNS response was served from cache",
		"sourceIP": "IP address of the client that sent the query (usually this is the resolver's IP address)",
		"upstreamIP": "Upstream server that the query was forwarded to",
		"zoneTag": "Zone query attributed to"
	},
	"AccountDnsAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDnsAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountDnsAnalyticsAdaptiveGroupsQuantiles": {
		"__description": "",
		"processingTimeUsP50": "50th percentile processing time in microseconds (median)",
		"processingTimeUsP90": "90th percentile processing time in microseconds",
		"processingTimeUsP99": "99th percentile processing time in microseconds"
	},
	"AccountDnsAnalyticsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountDnsFirewallAnalyticsAdaptive": {
		"__description": "Analytics data for DNS Firewall queries",
		"clusterName": "DNS Firewall cluster name",
		"clusterTag": "DNS Firewall cluster tag",
		"coloName": "IATA airport code of the data center that processed the query",
		"date": "Date on which the query was received",
		"datetime": "Time at which the query was received",
		"destinationIP": "Cloudflare edge IP address that the query was received at, this will be one of your cluster IPs.",
		"ipVersion": "Internet Protocol version over which the query was received",
		"protocol": "Transport protocol over which the query was received",
		"queryName": "DNS query name without trailing dot",
		"querySize": "Size of the DNS query in bytes",
		"queryType": "DNS query type",
		"responseCached": "Whether the DNS response was served from cache",
		"responseCode": "DNS response code",
		"responseReason": "Indicates why the DNS Firewall responded to the query in the way it did",
		"responseSize": "Size of the DNS response in bytes",
		"responseStale": "Whether a stale DNS response was served from cache",
		"sampleInterval": "ABR sample interval",
		"sourceIP": "IP address of the client that sent the query (usually this is the resolver's IP address)",
		"upstreamIP": "Upstream server that the query was forwarded to"
	},
	"AccountDnsFirewallAnalyticsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountDnsFirewallAnalyticsAdaptiveGroups": {
		"__description": "Analytics data for DNS Firewall queries",
		"avg": "Average of a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of queries per dimension",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension"
	},
	"AccountDnsFirewallAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"processingTimeUs": "Average processing time in microseconds",
		"sampleInterval": "Average sample interval"
	},
	"AccountDnsFirewallAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of queries per dimension, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountDnsFirewallAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"clusterName": "DNS Firewall cluster name",
		"clusterTag": "ID of DNS Firewall cluster",
		"coloName": "IATA airport code of the data center that processed the query",
		"date": "Date on which the query was received",
		"datetime": "Time at which the query was received",
		"datetimeFifteenMinutes": "Time at which the query was received, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Time at which the query was received, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Time at which the query was received, truncated to multiple of 30 minutes",
		"datetimeHour": "Time at which the query was received, truncated to the hour",
		"datetimeMinute": "Time at which the query was received, truncated to the minute",
		"destinationIP": "Cloudflare edge IP address that the query was received at, this will be one of your cluster IPs.",
		"ipVersion": "Internet Protocol version over which the query was received",
		"protocol": "Transport protocol over which the query was received",
		"queryName": "DNS query name without trailing dot",
		"querySizeBucket": "Size of the DNS query in bytes (in multiples of 16)",
		"queryType": "DNS query type",
		"responseCached": "Whether the DNS response was served from cache",
		"responseCode": "DNS response code",
		"responseReason": "Indicates why the DNS Firewall responded to the query in the way it did",
		"responseSizeBucket": "Size of the DNS response in bytes (in multiples of 16)",
		"responseStale": "Whether a stale DNS response was served from cache",
		"sourceIP": "IP address of the client that sent the query (usually this is the resolver's IP address)",
		"upstreamIP": "Upstream server that the query was forwarded to"
	},
	"AccountDnsFirewallAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDnsFirewallAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountDnsFirewallAnalyticsAdaptiveGroupsQuantiles": {
		"__description": "",
		"processingTimeUsP50": "50th percentile processing time in microseconds (median)",
		"processingTimeUsP90": "90th percentile processing time in microseconds",
		"processingTimeUsP99": "99th percentile processing time in microseconds"
	},
	"AccountDnsFirewallAnalyticsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountDosdAttackAnalyticsGroups": {
		"__description": "Attack analytics metadata for attacks detected by dosd",
		"attackId": "Unique identifier of the mitigation that matched the packet, if any",
		"attackType": "<small>DEPRECATED (Use attackVector for a richer description of the attack):</small> Type of attack traffic",
		"attackVector": "Description of attack vector",
		"bits": "Sum of bits received during the attack",
		"commonTcpFlags": "Common TCP flags used by attack traffic, if any",
		"commonTcpFlagsNames": "Names of common TCP flags used by attack traffic, if any",
		"destinationIp": "Fixed destination IP used by attack traffic, if any",
		"destinationPort": "Fixed destination port used by attack traffic, if any",
		"droppedBits": "Sum of bits dropped during the attack",
		"droppedPackets": "Sum of packets dropped during the attack",
		"endDatetime": "Date and time that the attack ended; not available for ongoing attacks",
		"ipProtocol": "Fixed protocol used by attack traffic, if any",
		"ipProtocolName": "Fixed protocol used by attack traffic, if any",
		"mitigationReason": "Type of mitigation applied to attack traffic",
		"mitigationScope": "Whether mitigation was applied in only some locations or globally",
		"mitigationType": "Type of mitigation applied to attack traffic",
		"packets": "Sum of packets received during the attack",
		"ruleId": "Unique identifier of the rule that matched the packet, if any",
		"ruleName": "Human-readable name of the rule that matched the packet, if any",
		"rulesetId": "Unique identifier of the ruleset containing the rule that matched the packet, if any",
		"rulesetOverrideId": "Unique identifier of the ruleset override containing the rule that matched the packet, if any",
		"sourceIp": "Fixed source IP used by attack traffic, if any",
		"sourcePort": "Fixed source port used by attack traffic, if any",
		"startDatetime": "Date and time that the attack started",
		"tcpFlags": "Fixed TCP flags used by attack traffic, if any",
		"tcpFlagsNames": "Names of fixed TCP flags used by attack traffic, if any"
	},
	"AccountDosdAttackAnalyticsGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDosdAttackAnalyticsGroupsOrderBy": {
		"__description": ""
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for dosd",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"attackId": "Unique identifier of the mitigation that matched the packet, if any",
		"attackVector": "Attack vector of the rule that matched the packet, if any",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"mitigationReason": "Reason for applying a mitigation to the packet, if any",
		"mitigationScope": "Whether the packet matched a local or global mitigation, if any (possible values: local, global)",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"protocolState": "State of the packet in the context of the protocol, if available",
		"ruleId": "Unique identifier of the rule that matched the packet, if any",
		"ruleName": "Human-readable name of the rule that matched the packet, if any",
		"rulesetId": "Unique identifier of the ruleset containing the rule that matched the packet, if any",
		"rulesetOverrideId": "Unique identifier of the ruleset override containing the rule that matched the packet, if any",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
		"verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountDosdNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroups": {
		"__description": "Durable Objects invocations with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"max": "The max value for a metric",
		"min": "The min value for a metric",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Request datetime, truncated to start of a day",
		"datetime": "Request datetime",
		"datetimeHour": "Request datetime, truncated to start of an hour",
		"datetimeMinute": "Request datetime, truncated to start of a minute",
		"datetimeSixHours": "Request datetime, truncated to start of six hour window",
		"environmentName": "The name of the script environment",
		"namespaceId": "Durable Object namespace ID",
		"objectId": "Durable Object ID as a hex string",
		"scriptName": "The name of the script",
		"status": "Status of the worker invocation"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsMax": {
		"__description": "",
		"responseBodySize": "Maximum response body size for one request - bytes",
		"wallTime": "Maximum wall time for one request - microseconds"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsMin": {
		"__description": "",
		"responseBodySize": "Minimum response body size for one request - bytes",
		"wallTime": "Minimum wall time for one request - microseconds"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsQuantiles": {
		"__description": "",
		"responseBodySizeP25": "Response body size 25th percentile - bytes",
		"responseBodySizeP50": "Response body size 50th percentile - bytes",
		"responseBodySizeP75": "Response body size 75th percentile - bytes",
		"responseBodySizeP90": "Response body size 90th percentile - bytes",
		"responseBodySizeP99": "Response body size 99th percentile - bytes",
		"responseBodySizeP999": "Response body size 99.9th percentile - bytes",
		"wallTimeP25": "Wall time 25th percentile - microseconds",
		"wallTimeP50": "Wall time 50th percentile - microseconds",
		"wallTimeP75": "Wall time 75th percentile - microseconds",
		"wallTimeP90": "Wall time 90th percentile - microseconds",
		"wallTimeP99": "Wall time 99th percentile - microseconds",
		"wallTimeP999": "Wall time 99.9th percentile - microseconds"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsSum": {
		"__description": "",
		"errors": "Sum of errors",
		"requests": "Sum of requests",
		"responseBodySize": "Sum of response body sizes",
		"wallTime": "Sum of wall time"
	},
	"AccountDurableObjectsInvocationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"errors": "Confidence interval for the corresponding point estimate",
		"requests": "Confidence interval for the corresponding point estimate",
		"responseBodySize": "Confidence interval for the corresponding point estimate",
		"wallTime": "Confidence interval for the corresponding point estimate"
	},
	"AccountDurableObjectsPeriodicGroups": {
		"__description": "Durable Objects periodic metrics",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"max": "The max value for a metric",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountDurableObjectsPeriodicGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountDurableObjectsPeriodicGroupsDimensions": {
		"__description": "",
		"date": "Datetime the metrics period started, truncated to start of a day",
		"datetimeHour": "Datetime the metrics period started, truncated to start of an hour",
		"datetimeMinute": "Datetime the metrics period started, truncated to start of a minute",
		"datetimeSixHours": "Datetime the metrics period started, truncated to start of six hour window",
		"namespaceId": "Durable Object namespace ID",
		"objectId": "Durable Object ID as a hex string"
	},
	"AccountDurableObjectsPeriodicGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDurableObjectsPeriodicGroupsMax": {
		"__description": "",
		"activeWebsocketConnections": "Maximum active websocket connections in the time window"
	},
	"AccountDurableObjectsPeriodicGroupsOrderBy": {
		"__description": ""
	},
	"AccountDurableObjectsPeriodicGroupsSum": {
		"__description": "",
		"activeTime": "Sum of active time - microseconds",
		"cpuTime": "Sum of CPU time - microseconds",
		"duration": "Sum of Duration - GB*s",
		"exceededCpuErrors": "Sum of CPU exceeded errors",
		"exceededMemoryErrors": "Sum of memory exceeded errors",
		"fatalInternalErrors": "Sum of fatal internal server errors",
		"inboundWebsocketMsgCount": "Sum of incoming websocket messages",
		"outboundWebsocketMsgCount": "Sum of outbound websocket messages",
		"rowsRead": "Sum of rows read (by sqlite backed DOs)",
		"rowsWritten": "Sum of rows written (by sqlite backed DOs)",
		"storageDeletes": "Sum of storage deletes (by non-sqlite backed DOs)",
		"storageReadUnits": "Sum of storage reads - in 4KB units (by non-sqlite backed DOs)",
		"storageWriteUnits": "Sum of storage writes - in 4KB units (by non-sqlite backed DOs)",
		"subrequests": "Sum of subrequests"
	},
	"AccountDurableObjectsPeriodicGroupsSumConfidence": {
		"__description": "",
		"activeTime": "Confidence interval for the corresponding point estimate",
		"cpuTime": "Confidence interval for the corresponding point estimate",
		"duration": "Confidence interval for the corresponding point estimate",
		"exceededCpuErrors": "Confidence interval for the corresponding point estimate",
		"exceededMemoryErrors": "Confidence interval for the corresponding point estimate",
		"fatalInternalErrors": "Confidence interval for the corresponding point estimate",
		"inboundWebsocketMsgCount": "Confidence interval for the corresponding point estimate",
		"outboundWebsocketMsgCount": "Confidence interval for the corresponding point estimate",
		"rowsRead": "Confidence interval for the corresponding point estimate",
		"rowsWritten": "Confidence interval for the corresponding point estimate",
		"storageDeletes": "Confidence interval for the corresponding point estimate",
		"storageWriteUnits": "Confidence interval for the corresponding point estimate",
		"subrequests": "Confidence interval for the corresponding point estimate"
	},
	"AccountDurableObjectsSqlStorageGroups": {
		"__description": "Storage metrics for SQL-backed Durable Objects.",
		"dimensions": "List of dimensions to group by",
		"max": "The max value for a metric"
	},
	"AccountDurableObjectsSqlStorageGroupsDimensions": {
		"__description": "",
		"date": "Datetime that the storage usage was recorded, truncated to start of a day",
		"datetimeHour": "Datetime that the storage usage was recorded, truncated to start of an hour",
		"datetimeMinute": "Datetime that the storage usage was recorded, truncated to start of a minute",
		"namespaceId": "Durable Object namespace ID"
	},
	"AccountDurableObjectsSqlStorageGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDurableObjectsSqlStorageGroupsMax": {
		"__description": "",
		"storedBytes": "Max of stored bytes"
	},
	"AccountDurableObjectsSqlStorageGroupsOrderBy": {
		"__description": ""
	},
	"AccountDurableObjectsStorageGroups": {
		"__description": "Durable Objects storage metrics",
		"dimensions": "List of dimensions to group by",
		"max": "The max value for a metric"
	},
	"AccountDurableObjectsStorageGroupsDimensions": {
		"__description": "",
		"date": "Datetime that the storage usage was recorded, truncated to start of a day",
		"datetimeHour": "Datetime that the storage usage was recorded, truncated to start of an hour"
	},
	"AccountDurableObjectsStorageGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDurableObjectsStorageGroupsMax": {
		"__description": "",
		"storedBytes": "Max of stored bytes"
	},
	"AccountDurableObjectsStorageGroupsOrderBy": {
		"__description": ""
	},
	"AccountDurableObjectsSubrequestsAdaptiveGroups": {
		"__description": "Durable Objects subrequests with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountDurableObjectsSubrequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountDurableObjectsSubrequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Request datetime, truncated to start of a day",
		"datetime": "Request datetime",
		"datetimeHour": "Request datetime, truncated to start of an hour",
		"datetimeMinute": "Request datetime, truncated to start of a minute",
		"datetimeSixHours": "Request datetime, truncated to start of six hour window",
		"environmentName": "The name of the script environment",
		"namespaceId": "Durable Object namespace ID",
		"objectId": "Durable Object ID as a hex string",
		"scriptName": "The name of the script"
	},
	"AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountDurableObjectsSubrequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountDurableObjectsSubrequestsAdaptiveGroupsSum": {
		"__description": "",
		"requestBodySizeUncached": "Outgoing Durable Objects fetch request body size in bytes where the request was not cached"
	},
	"AccountDurableObjectsSubrequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requestBodySizeUncached": "Confidence interval for the corresponding point estimate"
	},
	"AccountFbmAttackAnalyticsGroups": {
		"__description": "FBM analytics metadata for attacks detected by dosd",
		"attackId": "Unique identifier of the mitigation that matched the packet, if any",
		"attackType": "<small>DEPRECATED (Use attackVector for a richer description of the attack):</small> Type of attack traffic",
		"attackVector": "Description of attack vector",
		"bits": "Sum of bits received during the attack",
		"commonTcpFlags": "Common TCP flags used by attack traffic, if any",
		"commonTcpFlagsNames": "Names of common TCP flags used by attack traffic, if any",
		"destinationIp": "Fixed destination IP used by attack traffic, if any",
		"destinationPort": "Fixed destination port used by attack traffic, if any",
		"droppedBits": "Sum of bits dropped during the attack",
		"droppedPackets": "Sum of packets dropped during the attack",
		"endDatetime": "Date and time that the attack ended; not available for ongoing attacks",
		"ipProtocol": "Fixed protocol used by attack traffic, if any",
		"ipProtocolName": "Fixed protocol used by attack traffic, if any",
		"mitigationReason": "Type of mitigation applied to attack traffic",
		"mitigationScope": "Whether mitigation was applied in only some locations or globally",
		"mitigationType": "Type of mitigation applied to attack traffic",
		"packets": "Sum of packets received during the attack",
		"ruleId": "Unique identifier of the rule that matched the packet, if any",
		"ruleName": "Human-readable name of the rule that matched the packet, if any",
		"rulesetId": "Unique identifier of the ruleset containing the rule that matched the packet, if any",
		"rulesetOverrideId": "Unique identifier of the ruleset override containing the rule that matched the packet, if any",
		"sourceIp": "Fixed source IP used by attack traffic, if any",
		"sourcePort": "Fixed source port used by attack traffic, if any",
		"startDatetime": "Date and time that the attack started",
		"tcpFlags": "Fixed TCP flags used by attack traffic, if any",
		"tcpFlagsNames": "Names of fixed TCP flags used by attack traffic, if any"
	},
	"AccountFbmAttackAnalyticsGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountFbmAttackAnalyticsGroupsOrderBy": {
		"__description": ""
	},
	"AccountFilter_InputObject": {
		"__description": ""
	},
	"AccountFirewallEventsAdaptive": {
		"__description": "Raw Firewall events with adaptive sampling",
		"action": "The code of the first-class action the Cloudflare Firewall took on this request",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botScore": "The final score originated from bot management detections.",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "The ASN number of the visitor",
		"clientCountryName": "Country from which request originated",
		"clientIP": "The visitor's IP address (IPv4 or IPv6)",
		"clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
		"clientRefererHost": "The referer host",
		"clientRefererPath": "The referer path requested by visitor",
		"clientRefererQuery": "The referer query-string was requested by the visitor",
		"clientRefererScheme": "The referer url scheme requested by the visitor",
		"clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
		"clientRequestHTTPMethodName": "The HTTP method used by the visitor",
		"clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
		"clientRequestPath": "The path requested by visitor",
		"clientRequestQuery": "The query-string was requested by the visitor",
		"clientRequestScheme": "The url scheme requested by the visitor",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"description": "The description of the rule triggered by this request",
		"edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
		"edgeResponseStatus": "HTTP response status code returned to browser",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"ja4Signals": "Inter-request statistics computed for this JA4 across Cloudflare's entire global edge network",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"kind": "The kind of event, currently only possible values are: firewall",
		"leakedCredentialCheckResult": "The distinct result of checking for leaked credentials",
		"matchIndex": "Rules match index in the chain",
		"metadata": "Additional product-specific information. Metadata is organized in key:value pairs",
		"originResponseStatus": "HTTP origin response status code returned to browser",
		"originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
		"rayName": "The RayId of the request",
		"ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
		"ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
		"rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
		"sampleInterval": "ABR sample interval",
		"source": "The Cloudflare security product triggered by this request",
		"userAgent": "visitor's user-agent string",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafMlAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafAttackScore</code>):</small> Beta. Overall request score generated by the WAF detection module",
		"wafMlSqliAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafSqliAttackScore</code>):</small> Beta. WAF ML score for an SQLi attack",
		"wafMlXssAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafXssAttackScore</code>):</small> Beta. WAF ML score for an XSS attack",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"zoneTag": "Associated zone",
		"zoneVersion": "The version of a zone"
	},
	"AccountFirewallEventsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountFirewallEventsAdaptiveGroups": {
		"__description": "Aggregated Firewall events with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The sum of sample interval values",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountFirewallEventsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"AccountFirewallEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The sum of sample interval values, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountFirewallEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "The code of the first-class action the Cloudflare Firewall took on this request",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botScore": "The final score originated from bot management detections.",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "The ASN number of the visitor",
		"clientCountryName": "Country from which request originated",
		"clientIP": "The visitor's IP address (IPv4 or IPv6)",
		"clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
		"clientRefererHost": "The referer host",
		"clientRefererPath": "The referer path requested by visitor",
		"clientRefererQuery": "The referer query-string was requested by the visitor",
		"clientRefererScheme": "The referer url scheme requested by the visitor",
		"clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
		"clientRequestHTTPMethodName": "The HTTP method used by the visitor",
		"clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
		"clientRequestPath": "The path requested by visitor",
		"clientRequestQuery": "The query-string was requested by the visitor",
		"clientRequestScheme": "The url scheme requested by the visitor",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"description": "The description of the rule triggered by this request",
		"edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
		"edgeResponseStatus": "HTTP response status code returned to browser",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"kind": "The kind of event, currently only possible values are: firewall",
		"matchIndex": "Rules match index in the chain",
		"originResponseStatus": "HTTP origin response status code returned to browser",
		"originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
		"rayName": "The RayId of the request",
		"ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
		"ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
		"rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
		"sampleInterval": "ABR sample interval",
		"source": "The Cloudflare security product triggered by this request",
		"userAgent": "visitor's user-agent string",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafMlAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafAttackScore</code>):</small> Beta. Overall request score generated by the WAF ML detection module",
		"wafMlSqliAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafSqliAttackScore</code>):</small> Beta. WAF ML score for an SQLi attack",
		"wafMlXssAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafXssAttackScore</code>):</small> Beta. WAF ML score for an XSS attack",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"zoneTag": "Associated zone",
		"zoneVersion": "The version of a zone"
	},
	"AccountFirewallEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountFirewallEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountFirewallEventsAdaptiveGroupsSum": {
		"__description": "",
		"botDetectionIdArray": "Array of bot management detection ids",
		"botDetectionIdCountArray": "Count array of bot management detection ids. Elements in this array correspond to elements in botDetectionIdArray by index.",
		"botDetectionTagArray": "Array of bot management detection tags",
		"botDetectionTagCountArray": "Count array of bot management detection tags. Elements in this array correspond to elements in botDetectionTagArray by index.",
		"fraudDetectionIdArray": "Array of fraud detection ids",
		"fraudDetectionIdCountArray": "Count array of fraud detection ids. Elements in this array correspond to elements in fraudDetectionIdArray by index.",
		"fraudDetectionTagArray": "Array of fraud detection tags",
		"fraudDetectionTagCountArray": "Count array of fraud detection tags. Elements in this array correspond to elements in fraudDetectionTagArray by index."
	},
	"AccountFirewallEventsAdaptiveJa4SignalsElem": {
		"__description": "",
		"signalName": "Signal name",
		"signalValue": "Signal value"
	},
	"AccountFirewallEventsAdaptiveMetadataElem": {
		"__description": "",
		"key": "The key of the metadata. Key format can vary by Cloudflare security product and can change over time.",
		"value": "The value of the metadata. Value format can vary by Cloudflare security product and can change over time."
	},
	"AccountFirewallEventsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for flowtrackd",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"mitigationReason": "Reason for applying a mitigation to the packet, if any",
		"mitigationScope": "Whether the packet matched a local or global mitigation, if any (possible values: local, global)",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"protocolState": "State of the packet in the context of the protocol, if available",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
		"verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroups": {
		"__description": "Aggregated metrics about downstream (client to edge) L4 Gateway Sessions. Metrics are reported on TCP or UDP session close",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of downstream sessions",
		"dimensions": "List of dimensions to group by",
		"quantiles": "",
		"sum": ""
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of downstream sessions, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroupsDimensions": {
		"__description": "",
		"coloCode": "IATA Airport code that represents the city in which a Cloudflare data center (colo) is located",
		"coloCountry": "ISO 3166-1 alpha-2 code that represents the country in which a Cloudflare data center (colo) is located",
		"date": "Start timestamp of this session, truncated to date",
		"datetimeFifteenMinutes": "Start timestamp of this session, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Start timestamp of this session, truncated to multiple of 5 minutes",
		"datetimeHour": "Start timestamp of this session, truncated to the hour",
		"datetimeMinute": "Start timestamp of this session, truncated to the minute",
		"quicErrorCode": "QUIC specific error code. Possible values are https://www.iana.org/assignments/quic/quic.xhtml#quic-transport-error-codes",
		"rttUs": "Last Round Trip Time estimation for this session in microseconds",
		"sessionId": "Identifier for this session",
		"sourceIP": "IP address of the client making this session",
		"tokenAuthStatus": "Client token authentication status. Possible values are success | failed with invalid token and upto date token key ID | failed with invalid token due to outdated/missing token key ID | failed due to reused token",
		"tokenSigningRegion": "Broad location assigned to client in this session",
		"transport": "Transport protocol used for this session. Possible values are tcp | quic | udp",
		"transportHandshakeDurationUs": "Time taken for TCP/TLS or QUIC handshake in microsecond",
		"transportStatus": "Transport Status. Possible values are unknown | success | failure"
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroupsQuantiles": {
		"__description": "",
		"tokenAuthDurationUsP50": "Time taken for Client Token Authentication in microseconds",
		"transportHandshakeDurationUsP50": "Time taken for TCP/TLS or QUIC handshake in microseconds"
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroupsSum": {
		"__description": "",
		"bytesRecvd": "Total bytes received in this session",
		"bytesSent": "Total bytes sent in this session",
		"clientBytesRetransmitted": "Total bytes retransmitted by client in this session",
		"packetsRecvd": "Total number of packets received in this session",
		"packetsSent": "Total number of packets sent in this session",
		"tokenAuthDurationUs": "Time taken for client token authentication in microseconds"
	},
	"AccountGatewayL4DownstreamSessionsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytesRecvd": "Confidence interval for the corresponding point estimate",
		"bytesSent": "Confidence interval for the corresponding point estimate",
		"clientBytesRetransmitted": "Confidence interval for the corresponding point estimate",
		"packetsRecvd": "Confidence interval for the corresponding point estimate",
		"packetsSent": "Confidence interval for the corresponding point estimate",
		"tokenAuthDurationUs": "Confidence interval for the corresponding point estimate"
	},
	"AccountGatewayL4SessionsAdaptiveGroups": {
		"__description": "BETA - Aggregate counts of Gateway L4 sessions with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of Gateway L4 sessions",
		"dimensions": "List of dimensions to group by"
	},
	"AccountGatewayL4SessionsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of Gateway L4 sessions, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountGatewayL4SessionsAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "action taken by gateway",
		"applicationIds": "IDs of the applications that matched the session parameters",
		"applicationNames": "Names of the applications that matched the session parameters",
		"categoryIds": "IDs of the categories that matched the session parameters",
		"categoryNames": "Names of the categories that matched the session parameters",
		"coloCode": "Colo Code of edge server",
		"datetime": "Datetime that the session was started",
		"datetimeHour": "Datetime that the session was started truncated to hours",
		"datetimeMinute": "Datetime that the session was started truncated to minutes",
		"destinationIp": "The destination IP address for the session",
		"destinationPort": "The destination port for the session",
		"detectedProtocol": "The detected protocol of network traffic",
		"deviceId": "The device ID of the gateway user who initiated the session",
		"dstIpContinent": "Continent code of the session destination IP address",
		"dstIpCountry": "Country code of the session destination IP address",
		"email": "The email address of the gateway user who initiated the session",
		"proxyEndpoint": "The proxy endpoint used on this session",
		"sessionId": "The network session unique identifier",
		"sni": "The SNI pulled from the session tls handshake, if present",
		"sourceInternalIp": "Local LAN IP of the device. Only available when connected via a GRE/IPsec tunnel on-ramp",
		"sourceIp": "The source IP address for the session",
		"sourcePort": "The source port for the session",
		"srcIpContinent": "Continent code of the session source IP address",
		"srcIpCountry": "Country code of the session source IP address",
		"transport": "<small>DEPRECATED (Field is replaced with <code>transportProtocol</code>):</small> The transport protocol used in the session, one of (0, tcp) (1, quic) (2, udp). Deprecated, please use transportProtocol",
		"transportProtocol": "The transport protocol used in the session, one of (0, tcp) (1, quic) (2, udp)",
		"userId": "The ID of the gateway user who initiated the session",
		"virtualNetworkId": "The ID of the virtual nework the device was connected to",
		"virtualNetworkName": "The name of the virtual nework the device was connected to"
	},
	"AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayL4SessionsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroups": {
		"__description": "Aggregated metrics about upstream (edge to client) L4 Gateway Sessions. Metrics are reported on TCP, QUIC or UDP session close",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of upstream sessions",
		"dimensions": "List of dimensions to group by",
		"quantiles": "",
		"sum": ""
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of upstream sessions, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroupsDimensions": {
		"__description": "",
		"coloCode": "IATA Airport code that represents the city in which a Cloudflare data center (colo) is located",
		"coloCountry": "ISO 3166-1 alpha-2 code that represents the country in which a Cloudflare data center (colo) is located",
		"date": "Start timestamp of this session, truncated to date",
		"datetimeFifteenMinutes": "Start timestamp of this session, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Start timestamp of this session, truncated to multiple of 5 minutes",
		"datetimeHour": "Start timestamp of this session, truncated to the hour",
		"datetimeMinute": "Start timestamp of this session, truncated to the minute",
		"destinationIP": "IP address of the origin server",
		"domainName": "SNI domain name for this session",
		"downstreamSessionId": "Downstream session identifier of this session",
		"httpConnectReqStatus": "Client HTTP CONNECT request status. Possible values are unknown | success | failure",
		"quicErrorCode": "QUIC error code. Possible values are https://www.iana.org/assignments/quic/quic.xhtml#quic-transport-error-codes",
		"rttUs": "Last Round Trip Time estimation for this session in microseconds",
		"tokenSigningRegion": "Broad location assigned to client in this session",
		"totalTunnelSetupDurationUs": "Total time taken for tunnel setup in microseconds",
		"transport": "Transport protocol used for this session. Possible values are tcp | quic | udp",
		"transportStatus": "Transport status. Possible values are unknown | success | failure"
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroupsQuantiles": {
		"__description": "",
		"connectReqHandlingDurationUsP50": "Time taken for CONNECT request handling in microseconds",
		"totalTunnelSetupDurationUsP50": "Total time taken for tunnel setup in microseconds",
		"tunnelSetupDurationUsP50": "Time taken to setup the tunnel in microseconds"
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroupsSum": {
		"__description": "",
		"bytesRecvd": "Total bytes received in this session",
		"bytesSent": "Total bytes sent in this session",
		"connectReqHandlingDurationUs": "Time taken for CONNECT request handling in microseconds",
		"originBytesRetransmitted": "Total bytes retransmitted by origin in this session",
		"packetsRecvd": "Total number of packets received in this session",
		"packetsSent": "Total number of packets sent in this session",
		"totalTunnelSetupDurationUs": "Total time taken for tunnel setup in microseconds",
		"tunnelSetupDurationUs": "Time taken for tunnel setup in microseconds"
	},
	"AccountGatewayL4UpstreamSessionsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytesRecvd": "Confidence interval for the corresponding point estimate",
		"bytesSent": "Confidence interval for the corresponding point estimate",
		"connectReqHandlingDurationUs": "Confidence interval for the corresponding point estimate",
		"originBytesRetransmitted": "Confidence interval for the corresponding point estimate",
		"packetsRecvd": "Confidence interval for the corresponding point estimate",
		"packetsSent": "Confidence interval for the corresponding point estimate",
		"totalTunnelSetupDurationUs": "Confidence interval for the corresponding point estimate",
		"tunnelSetupDurationUs": "Confidence interval for the corresponding point estimate"
	},
	"AccountGatewayL7RequestsAdaptiveGroups": {
		"__description": "BETA - Aggregate counts of Gateway L7 requests with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of Gateway L7 requests",
		"dimensions": "List of dimensions to group by"
	},
	"AccountGatewayL7RequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of Gateway L7 requests, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountGatewayL7RequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "action taken by gateway",
		"applicationIds": "IDs of the applications that matched the request parameters",
		"applicationNames": "Names of the applications that matched the request parameters",
		"categoryIds": "IDs of the categories that matched the request parameters",
		"categoryNames": "Names of the categories that matched the request parameters",
		"coloCode": "Colo Code of edge server",
		"datetime": "Datetime that the request happened",
		"datetimeHour": "Datetime that the request happened truncated to hours",
		"datetimeMinute": "Datetime that the request happened truncated to minutes",
		"deviceId": "The device ID of the gateway user who made the request",
		"dstIpContinent": "Continent code of the request destination IP address",
		"dstIpCountry": "Country code of the request destination IP address",
		"email": "The email address of the gateway user who made the request",
		"httpHost": "The destination host for the request",
		"httpStatusCode": "HTTP status code gateway returned to the user. 0 if nothing was returned(e.g client disconnected)",
		"isIsolated": "Indicates whether this request was made through an isolated link",
		"privateAppAUD": "Access private app AUD",
		"proxyEndpoint": "The proxy endpoint used on this request",
		"quarantined": "Indicates if the request content was quarantined",
		"redirectTargetURI": "The URI to which the user was redirected",
		"requestId": "The request unique identifier",
		"sourceInternalIp": "Local LAN IP of the device. Only available when connected via a GRE/IPsec tunnel on-ramp",
		"srcIpContinent": "Continent code of the request source IP address",
		"srcIpCountry": "Country code of the request source IP address",
		"untrustedCertificateAction": "Action taken when an untrusted origin certificate error occurs",
		"url": "The request URL",
		"userId": "The ID of the gateway user who made the request",
		"virtualNetworkId": "The ID of the virtual nework the device was connected to",
		"virtualNetworkName": "The name of the virtual nework the device was connected to"
	},
	"AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayL7RequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountGatewayResolverByCategoryAdaptiveGroups": {
		"__description": "BETA - Aggregate counts of Gateway Resolver queries by category with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of Gateway Resolver queries",
		"dimensions": "List of dimensions to group by"
	},
	"AccountGatewayResolverByCategoryAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of Gateway Resolver queries, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountGatewayResolverByCategoryAdaptiveGroupsDimensions": {
		"__description": "",
		"authoritativeNameserverIps": "List of IPs of the authoritative nameservers that provided the answers, if any",
		"categoryId": "ID of the category that was assigned to the domain",
		"cnames": "List of resolved intermediate cname domains",
		"customResolverAddress": "Address at which the custom resolver query was resolved at",
		"customResolverCacheStatus": "Whether the custom resolver response was cached or not",
		"customResolverResponseCode": "Response code recieved from the custom resolver 0 => unknown 27 => dnsFirewallSuccess 29 => dnsFirewallCustomerRatelimit 31 => dnsFirewallUpstreamFailure 32 => dnsFirewallUpstreamServfail\n",
		"datetime": "The date and time the DNS query was resolved",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to minutes",
		"dohSubdomain": "The destination DoH subdomain the DNS query was made to",
		"dotSubdomain": "The destination DoT subdomain the DNS query was made to",
		"edeErrors": "List of returned Extended DNS Error Codes",
		"internalDnsFallbackStrategy": "The fallback strategy applied over the internal DNS response. Empty if no fallback strategy was applied",
		"internalDnsRCode": "The return code sent back by the internal DNS service",
		"internalDnsViewId": "The DNS internal view identifier that was sent to the internal DNS service",
		"internalDnsZoneId": "The DNS zone identifier returned by the internal DNS service",
		"locationId": "The uuid identifying the customer Location used when resolving",
		"matchedApplicationId": "ID of the application the domain belongs to",
		"matchedApplicationName": "Name of the application the domain belongs to",
		"policyId": "ID of the policy/rule that was applied, if any",
		"policyName": "Name of the policy that was applied, if any",
		"resolvedIpContinents": "Continent code of each resolved IP, if any",
		"resolvedIpCountries": "Country code of each resolved IP, if any",
		"resolvedIps": "List of resolved IPs in the response, if any",
		"resolverDecision": "Enum identifier for the decision made by gateway-resolver, one of: (0, unknown) (1, allowedByQueryName) (2, blockedByQueryName) (3, blockedByCategory) (4, allowedOnNoLocation) (5, allowedOnNoPolicyMatch) (6, blockedAlwaysCategory) (7, overrideForSafeSearch) (8, overrideApplied) (9, blockedRule) (10, allowedRule)\n",
		"resolverPolicyId": "ID of the resolver policy/rule that was applied, if any",
		"resolverPolicyName": "Name of the resolver policy that was applied, if any",
		"resourceRecordClasses": "Resource records' classes",
		"resourceRecordNames": "Resource records' names",
		"resourceRecordRDatas": "Resource records' rdata values",
		"resourceRecordTTLs": "Resource records' TTL values",
		"resourceRecordTypes": "Resource records' types",
		"srcIpContinent": "Continent code of the source IP address making the DNS query",
		"srcIpCountry": "Country code of the source IP address making the DNS query"
	},
	"AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayResolverByCategoryAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountGatewayResolverByCustomResolverGroups": {
		"__description": "Stats on dns custom resolvers",
		"avg": "The average value for a metric",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of Gateway Resolver queries",
		"dimensions": "List of dimensions to group by",
		"max": "Maximum response time"
	},
	"AccountGatewayResolverByCustomResolverGroupsAvg": {
		"__description": "",
		"customResolverTimeInMs": "Average latency",
		"sampleInterval": "Average sample interval"
	},
	"AccountGatewayResolverByCustomResolverGroupsConfidence": {
		"__description": "",
		"count": "The number of Gateway Resolver queries, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountGatewayResolverByCustomResolverGroupsDimensions": {
		"__description": "",
		"cacheStatus": "whether the response was cached or not",
		"customResolverAddress": "address at which custom resolver query was resolved at",
		"customResolverResponseCode": "Response code recieved from the custom resolver 0 => unknown 27 => dnsFirewallSuccess 29 => dnsFirewallCustomerRatelimit 31 => dnsFirewallUpstreamFailure 32 => dnsFirewallUpstreamServfail\n",
		"customResolverTimeInMs": "time took for custom resolver to respond",
		"datetime": "The date and time the DNS query was resolved",
		"locationId": "The uuid identifying the customer Location used when resolving",
		"queryName": "Name of the query, e.g. one.dash.cloudflare.com",
		"resolverDecision": "Enum identifier for the decision made by gateway-resolver, one of: (0, unknown) (1, allowedByQueryName) (2, blockedByQueryName) (3, blockedByCategory) (4, allowedOnNoLocation) (5, allowedOnNoPolicyMatch) (6, blockedAlwaysCategory) (7, overrideForSafeSearch) (8, overrideApplied) (9, blockedRule) (10, allowedRule)\n"
	},
	"AccountGatewayResolverByCustomResolverGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayResolverByCustomResolverGroupsMax": {
		"__description": "",
		"customResolverTimeInMs": "Maximum response time"
	},
	"AccountGatewayResolverByCustomResolverGroupsOrderBy": {
		"__description": ""
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroups": {
		"__description": "Total time spent on executing firewall rules at the edge",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of Gateway Resolver queries",
		"dimensions": "List of dimensions to group by",
		"max": "Maximum execution time",
		"quantiles": "Quantiles of a rule execution performance"
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of Gateway Resolver queries, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "Request timestamp",
		"datetimeMonth": "Request timestamp month"
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsMax": {
		"__description": "",
		"executionTime": "Maximum execution time"
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsQuantiles": {
		"__description": "",
		"executionTimeMsP25": "Execution time performance of 25th percentile in milliseconds",
		"executionTimeMsP50": "Execution time performance of 50th percentile in milliseconds",
		"executionTimeMsP75": "Execution time performance of 75th percentile in milliseconds",
		"executionTimeMsP90": "Execution time performance of 90th percentile in milliseconds",
		"executionTimeMsP95": "Execution time performance of 95th percentile in milliseconds",
		"executionTimeMsP98": "Execution time performance of 98th percentile in milliseconds",
		"executionTimeMsP99": "Execution time performance of 99th percentile in milliseconds"
	},
	"AccountGatewayResolverQueriesAdaptiveGroups": {
		"__description": "BETA - Aggregate counts of Gateway Resolver queries with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of Gateway Resolver queries",
		"dimensions": "List of dimensions to group by"
	},
	"AccountGatewayResolverQueriesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of Gateway Resolver queries, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountGatewayResolverQueriesAdaptiveGroupsDimensions": {
		"__description": "",
		"authoritativeNameserverIps": "List of IPs of the authoritative nameservers that provided the answers, if any",
		"categoryIds": "Json array of categories for this query",
		"categoryNames": "List of matching categories names for this query",
		"cnames": "List of resolved intermediate cname domains",
		"customResolverAddress": "Address at which the custom resolver query was resolved at",
		"customResolverCacheStatus": "Whether the custom resolver response was cached or not",
		"customResolverResponseCode": "Response code recieved from the custom resolver 0 => unknown 27 => dnsFirewallSuccess 29 => dnsFirewallCustomerRatelimit 31 => dnsFirewallUpstreamFailure 32 => dnsFirewallUpstreamServfail\n",
		"datetime": "The date and time the DNS query was resolved",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to minutes",
		"dohSubdomain": "The destination DoH subdomain the DNS query was made to",
		"dotSubdomain": "The destination DoT subdomain the DNS query was made to",
		"edeErrors": "List of returned Extended DNS Error Codes",
		"internalDnsFallbackStrategy": "The fallback strategy applied over the internal DNS response. Empty if no fallback strategy was applied",
		"internalDnsRCode": "The return code sent back by the internal DNS service",
		"internalDnsViewId": "The DNS internal view identifier that was sent to the internal DNS service",
		"internalDnsZoneId": "The DNS zone identifier returned by the internal DNS service",
		"locationId": "The uuid identifying the customer Location used when resolving",
		"locationName": "The name identifying the customer Location used when resolving",
		"matchedApplicationId": "ID of the application the domain belongs to",
		"matchedApplicationName": "Name of the application the domain belongs to",
		"matchedIndicatorFeedIds": "Json array of indicator feed IDs for this query that matched rule",
		"matchedIndicatorFeedNames": "List of indicator feed names for this query",
		"policyId": "ID of the policy/rule that was applied, if any",
		"policyName": "Name of the policy that was applied, if any",
		"queryName": "Name of the query, e.g. one.dash.cloudflare.com",
		"queryNameReversed": "Name of the query in reverse order, e.g. com.cloudflare.dash.one",
		"resolvedIpContinents": "Continent code of each resolved IP, if any",
		"resolvedIpCountries": "Country code of each resolved IP, if any",
		"resolvedIps": "List of resolved IPs in the response, if any",
		"resolverDecision": "Enum identifier for the decision made by gateway-resolver, one of: (0, unknown) (1, allowedByQueryName) (2, blockedByQueryName) (3, blockedByCategory) (4, allowedOnNoLocation) (5, allowedOnNoPolicyMatch) (6, blockedAlwaysCategory) (7, overrideForSafeSearch) (8, overrideApplied) (9, blockedRule) (10, allowedRule)\n",
		"resolverPolicyId": "ID of the resolver policy/rule that was applied, if any",
		"resolverPolicyName": "Name of the resolver policy that was applied, if any",
		"resourceRecordClasses": "Resource records' classes",
		"resourceRecordNames": "Resource records' names",
		"resourceRecordRDatas": "Resource records' rdata values",
		"resourceRecordTTLs": "Resource records' TTL values",
		"resourceRecordTypes": "Resource records' types",
		"scheduleInfo": "Json object of schedule releated information",
		"srcIpContinent": "Continent code of the source IP address making the DNS query",
		"srcIpCountry": "Country code of the source IP address making the DNS query"
	},
	"AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountGatewayResolverQueriesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountHttpRequests1dGroups": {
		"__description": "Daily rollups of request data",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension",
		"uniq": "The number of unique values for a metric per dimension"
	},
	"AccountHttpRequests1dGroupsAvg": {
		"__description": "",
		"bytes": "",
		"edgeRequestBytes": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountHttpRequests1dGroupsBrowserMapElem": {
		"__description": "",
		"pageViews": "Successful requests for HTML content",
		"uaBrowserFamily": "Browser type"
	},
	"AccountHttpRequests1dGroupsClientHTTPVersionMapElem": {
		"__description": "",
		"clientHTTPProtocol": "HTTP version",
		"requests": ""
	},
	"AccountHttpRequests1dGroupsClientSSLMapElem": {
		"__description": "",
		"clientSSLProtocol": "Protocol version",
		"requests": ""
	},
	"AccountHttpRequests1dGroupsContentTypeMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"edgeResponseContentTypeName": "Content type returned to client",
		"requests": ""
	},
	"AccountHttpRequests1dGroupsCountryMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"AccountHttpRequests1dGroupsDimensions": {
		"__description": "",
		"date": "Request date"
	},
	"AccountHttpRequests1dGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountHttpRequests1dGroupsIpClassMapElem": {
		"__description": "",
		"ipType": "IP class",
		"requests": ""
	},
	"AccountHttpRequests1dGroupsOrderBy": {
		"__description": ""
	},
	"AccountHttpRequests1dGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"AccountHttpRequests1dGroupsSum": {
		"__description": "",
		"browserMap": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"clientHTTPVersionMap": "",
		"clientSSLMap": "",
		"contentTypeMap": "",
		"countryMap": "",
		"edgeRequestBytes": "Bytes sent from client",
		"encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
		"encryptedRequests": "Requests served using SSL/TLS protocol",
		"ipClassMap": "",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": "",
		"threats": "Requests classified as threats"
	},
	"AccountHttpRequests1dGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"AccountHttpRequests1dGroupsUniq": {
		"__description": "",
		"uniques": "A number of unique IPs"
	},
	"AccountHttpRequests1hGroups": {
		"__description": "Hourly rollups of request data",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension",
		"uniq": "The number of unique values for a metric per dimension"
	},
	"AccountHttpRequests1hGroupsAvg": {
		"__description": "",
		"bytes": "",
		"edgeRequestBytes": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountHttpRequests1hGroupsBrowserMapElem": {
		"__description": "",
		"pageViews": "Successful requests for HTML content",
		"uaBrowserFamily": "Browser type"
	},
	"AccountHttpRequests1hGroupsClientHTTPVersionMapElem": {
		"__description": "",
		"clientHTTPProtocol": "HTTP version",
		"requests": ""
	},
	"AccountHttpRequests1hGroupsClientSSLMapElem": {
		"__description": "",
		"clientSSLProtocol": "Protocol version",
		"requests": ""
	},
	"AccountHttpRequests1hGroupsContentTypeMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"edgeResponseContentTypeName": "Content type returned to client",
		"requests": ""
	},
	"AccountHttpRequests1hGroupsCountryMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"AccountHttpRequests1hGroupsDimensions": {
		"__description": "",
		"date": "Request date",
		"datetime": "Request datetime truncated to the hour"
	},
	"AccountHttpRequests1hGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountHttpRequests1hGroupsIpClassMapElem": {
		"__description": "",
		"ipType": "IP class",
		"requests": ""
	},
	"AccountHttpRequests1hGroupsOrderBy": {
		"__description": ""
	},
	"AccountHttpRequests1hGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"AccountHttpRequests1hGroupsSum": {
		"__description": "",
		"browserMap": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"clientHTTPVersionMap": "",
		"clientSSLMap": "",
		"contentTypeMap": "",
		"countryMap": "",
		"edgeRequestBytes": "Bytes sent from client",
		"encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
		"encryptedRequests": "Requests served using SSL/TLS protocol",
		"ipClassMap": "",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": "",
		"threats": "Requests classified as threats"
	},
	"AccountHttpRequests1hGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"AccountHttpRequests1hGroupsUniq": {
		"__description": "",
		"uniques": "A number of unique IPs"
	},
	"AccountHttpRequests1mGroups": {
		"__description": "Minutely rollups of request data",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension",
		"uniq": "The number of unique values for a metric per dimension"
	},
	"AccountHttpRequests1mGroupsAvg": {
		"__description": "",
		"bytes": "",
		"edgeRequestBytes": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountHttpRequests1mGroupsBrowserMapElem": {
		"__description": "",
		"pageViews": "Successful requests for HTML content",
		"uaBrowserFamily": "Browser type"
	},
	"AccountHttpRequests1mGroupsClientHTTPVersionMapElem": {
		"__description": "",
		"clientHTTPProtocol": "HTTP version",
		"requests": ""
	},
	"AccountHttpRequests1mGroupsClientSSLMapElem": {
		"__description": "",
		"clientSSLProtocol": "Protocol version",
		"requests": ""
	},
	"AccountHttpRequests1mGroupsContentTypeMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"edgeResponseContentTypeName": "Content type returned to client",
		"requests": ""
	},
	"AccountHttpRequests1mGroupsCountryMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"AccountHttpRequests1mGroupsDimensions": {
		"__description": "",
		"date": "Request date",
		"datetime": "Request datetime, truncated to the minute",
		"datetimeDay": "Request datetime truncated to the day",
		"datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime truncated to the hour",
		"datetimeMinute": "<small>DEPRECATED (Field is replaced with <code>datetime</code>):</small> Request datetime truncated to the minute"
	},
	"AccountHttpRequests1mGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountHttpRequests1mGroupsIpClassMapElem": {
		"__description": "",
		"ipType": "IP class",
		"requests": ""
	},
	"AccountHttpRequests1mGroupsOrderBy": {
		"__description": ""
	},
	"AccountHttpRequests1mGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"AccountHttpRequests1mGroupsSum": {
		"__description": "",
		"browserMap": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"clientHTTPVersionMap": "",
		"clientSSLMap": "",
		"contentTypeMap": "",
		"countryMap": "",
		"edgeRequestBytes": "Bytes sent from client",
		"encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
		"encryptedRequests": "Requests served using SSL/TLS protocol",
		"ipClassMap": "",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": "",
		"threats": "Requests classified as threats"
	},
	"AccountHttpRequests1mGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"AccountHttpRequests1mGroupsUniq": {
		"__description": "",
		"uniques": "A number of unique IPs"
	},
	"AccountHttpRequestsAdaptive": {
		"__description": "Raw HTTP requests with adaptive sampling",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botManagementDecision": "Judgement of the bot management system",
		"botScore": "The final score originated from bot management detections.",
		"botScoreBucketBy10": "Range of the bot management score",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"cacheReserveUsed": "Used Cache Reserve to serve the response",
		"cacheStatus": "Cache status",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "The ASN number of the visitor",
		"clientCountryName": "Country from which request originated",
		"clientDeviceType": "",
		"clientIP": "The visitor's IP address (IPv4 or IPv6)",
		"clientRefererHost": "The referrer host",
		"clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
		"clientRequestHTTPMethodName": "HTTP method of client request",
		"clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
		"clientRequestPath": "The path requested by visitor",
		"clientRequestQuery": "Query parameters of client request",
		"clientRequestReferer": "HTTP request referrer",
		"clientRequestScheme": "The url scheme requested by the visitor",
		"clientSSLProtocol": "SSL protocol version",
		"coloCode": "",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeDnsResponseTimeMs": "The time elapsed resolving a CNAME if it was required to reach your origin",
		"edgeResponseContentTypeName": "",
		"edgeResponseStatus": "HTTP response status code returned to browser",
		"edgeTimeToFirstByteMs": "The time elapsed between processing the first byte of the request until when we started sending a response",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"isCrossZoneSubrequest": "'1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise.",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"ja4Signals": "Inter-request statistics computed for this JA4 across Cloudflare's entire global edge network",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"leakedCredentialCheckResult": "The distinct result of checking for leaked credentials",
		"originASN": "",
		"originASNDescription": "ASN associated with origin",
		"originIP": "",
		"originResponseDurationMs": "",
		"originResponseStatus": "HTTP origin response status code returned to browser",
		"rayName": "The RayId of the request",
		"requestSource": "",
		"securityAction": "The code of the first-class action the Cloudflare Firewall took on this request",
		"securitySource": "The Cloudflare security product triggered by this request",
		"sessionIdHash": "API Security Session ID hash",
		"upperTierColoName": "",
		"userAgent": "visitor's user-agent string",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"xRequestedWith": "The X-Requested-With header of the client request",
		"zoneTag": "Associated zone",
		"zoneVersion": "The version of a zone"
	},
	"AccountHttpRequestsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountHttpRequestsAdaptiveGroups": {
		"__description": "Aggregated HTTP requests data with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"ratio": "The ratio of a range of status codes, between 0 and 1",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountHttpRequestsAdaptiveGroupsAvg": {
		"__description": "",
		"crossZoneSubrequests": "The proportion of requests that were inititiated by a Cloudflare Worker on another zone",
		"edgeDnsResponseTimeMs": "",
		"edgeTimeToFirstByteMs": "",
		"originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
		"sampleInterval": ""
	},
	"AccountHttpRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountHttpRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botManagementDecision": "Judgement of the bot management system",
		"botScore": "The final score originated from bot management detections.",
		"botScoreBucketBy10": "Range of the bot management score",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"cacheReserveUsed": "Used Cache Reserve to serve the response",
		"cacheStatus": "",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "",
		"clientCountryName": "Country from which request originated",
		"clientDeviceType": "",
		"clientIP": "",
		"clientRefererHost": "The referrer host",
		"clientRequestHTTPHost": "Host requested by the client",
		"clientRequestHTTPMethodName": "HTTP method of client request",
		"clientRequestHTTPProtocol": "HTTP protocol version",
		"clientRequestPath": "Path of client request",
		"clientRequestQuery": "Query parameters of client request",
		"clientRequestReferer": "HTTP request referrer",
		"clientRequestScheme": "HTTP request URI scheme (http/https)",
		"clientSSLProtocol": "SSL protocol version",
		"coloCode": "",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeDnsResponseTimeMs": "The time elapsed resolving a CNAME if it was required to reach your origin",
		"edgeResponseContentTypeName": "",
		"edgeResponseStatus": "",
		"edgeTimeToFirstByteMs": "The time elapsed between processing the first byte of the request until when we started sending a response",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"isCrossZoneSubrequest": "'1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise.",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"leakedCredentialCheckResult": "The distinct result of checking for leaked credentials",
		"originASN": "",
		"originASNDescription": "ASN associated with origin",
		"originIP": "",
		"originResponseDurationMs": "",
		"originResponseStatus": "HTTP response status code returned by the origin",
		"requestSource": "",
		"sampleInterval": "ABR sample interval",
		"securityAction": "The code of the first-class action the Cloudflare Firewall took on this request",
		"securitySource": "The Cloudflare security product triggered by this request",
		"sessionIdHash": "API Security Session ID hash",
		"upperTierColoName": "",
		"userAgent": "",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"xRequestedWith": "The X-Requested-With header of the client request",
		"zoneTag": "Associated zone",
		"zoneVersion": "The version of a zone"
	},
	"AccountHttpRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountHttpRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountHttpRequestsAdaptiveGroupsQuantiles": {
		"__description": "",
		"edgeDnsResponseTimeMsP50": "50th percentile DNS Response Time (milliseconds)",
		"edgeDnsResponseTimeMsP95": "95th percentile DNS Response Time (milliseconds)",
		"edgeDnsResponseTimeMsP99": "99th percentile DNS Response Time (milliseconds)",
		"edgeResponseBytesP50": "50th percentile Bytes returned to client",
		"edgeResponseBytesP95": "95th percentile Bytes returned to client",
		"edgeResponseBytesP99": "99th percentile Bytes returned to client",
		"edgeTimeToFirstByteMsP50": "50th percentile Time To First Byte (milliseconds)",
		"edgeTimeToFirstByteMsP95": "95th percentile Time To First Byte (milliseconds)",
		"edgeTimeToFirstByteMsP99": "99th percentile Time To First Byte (milliseconds)",
		"originResponseDurationMsP50": "50th percentile Origin Response Duration (milliseconds)",
		"originResponseDurationMsP95": "95th percentile Origin Response Duration (milliseconds)",
		"originResponseDurationMsP99": "99th percentile Origin Response Duration (milliseconds)"
	},
	"AccountHttpRequestsAdaptiveGroupsRatio": {
		"__description": "",
		"status4xx": "",
		"status5xx": ""
	},
	"AccountHttpRequestsAdaptiveGroupsSum": {
		"__description": "",
		"botDetectionIdArray": "Array of bot management detection ids",
		"botDetectionIdCountArray": "Count array of bot management detection ids. Elements in this array correspond to elements in botDetectionIdArray by index.",
		"botDetectionTagArray": "Array of bot management detection tags",
		"botDetectionTagCountArray": "Count array of bot management detection tags. Elements in this array correspond to elements in botDetectionTagArray by index.",
		"crossZoneSubrequests": "The number of requests that were inititiated by a Cloudflare Worker on another zone",
		"edgeDnsResponseTimeMs": "",
		"edgeRequestBytes": "",
		"edgeResponseBytes": "",
		"edgeTimeToFirstByteMs": "",
		"fraudDetectionIdArray": "Array of fraud detection ids",
		"fraudDetectionIdCountArray": "Count array of fraud detection ids. Elements in this array correspond to elements in fraudDetectionIdArray by index.",
		"fraudDetectionTagArray": "Array of fraud detection tags",
		"fraudDetectionTagCountArray": "Count array of fraud detection tags. Elements in this array correspond to elements in fraudDetectionTagArray by index.",
		"originResponseDurationMs": "",
		"visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
	},
	"AccountHttpRequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"crossZoneSubrequests": "Confidence interval for the corresponding point estimate",
		"edgeDnsResponseTimeMs": "Confidence interval for the corresponding point estimate",
		"edgeRequestBytes": "Confidence interval for the corresponding point estimate",
		"edgeResponseBytes": "Confidence interval for the corresponding point estimate",
		"edgeTimeToFirstByteMs": "Confidence interval for the corresponding point estimate",
		"originResponseDurationMs": "Confidence interval for the corresponding point estimate",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"AccountHttpRequestsAdaptiveJa4SignalsElem": {
		"__description": "",
		"signalName": "Signal name",
		"signalValue": "Signal value"
	},
	"AccountHttpRequestsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountHttpRequestsOverviewAdaptiveGroups": {
		"__description": "A high-level summary of HTTP requests made by end users.",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"ratio": "The ratio of a metric in comparison to the rest of the traffic, between 0 and 1",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsAvg": {
		"__description": "",
		"originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
		"sampleInterval": "Average sample interval"
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsDimensions": {
		"__description": "",
		"clientCountryName": "Country from which request originated",
		"clientRequestHTTPProtocol": "HTTP protocol version",
		"clientSSLProtocol": "SSL protocol version",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeResponseContentTypeName": "Content type returned to client",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"userAgentBrowser": "Browser parsed from the user agent",
		"zoneVersion": "The version of a zone"
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsRatio": {
		"__description": "",
		"cachedBytes": "",
		"cachedRequests": "",
		"encryptedBytes": "",
		"encryptedRequests": "",
		"status4xx": "",
		"status5xx": ""
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsSum": {
		"__description": "",
		"bytes": "",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
	},
	"AccountHttpRequestsOverviewAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytes": "Confidence interval for the corresponding point estimate",
		"cachedBytes": "Confidence interval for the corresponding point estimate",
		"cachedRequests": "Confidence interval for the corresponding point estimate",
		"pageViews": "Confidence interval for the corresponding point estimate",
		"requests": "Confidence interval for the corresponding point estimate",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"AccountHyperdriveQueriesAdaptiveGroups": {
		"__description": "Hyperdrive query events with adaptive sampling.",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of Hyperdrive queries",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountHyperdriveQueriesAdaptiveGroupsAvg": {
		"__description": "",
		"connectionLatency": "Average latency (in milliseconds) of retrieving a connection to the origin database",
		"queryBytes": "Average size (in bytes) of queries handled by Hyperdrive",
		"queryLatency": "Average latency (in milliseconds) of serving a query using Hyperdrive",
		"resultBytes": "Average size (in bytes) of query results served by Hyperdrive",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountHyperdriveQueriesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of Hyperdrive queries, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountHyperdriveQueriesAdaptiveGroupsDimensions": {
		"__description": "",
		"cacheStatus": "The cache status of the Hyperdrive query event",
		"coloCode": "IATA airport code for the Cloudflare datacenter where the query was handled.",
		"configId": "The ID of the Hyperdrive Config",
		"date": "Hyperdrive query event timestamp, truncated to start of a day",
		"datetime": "Hyperdrive query event timestamp",
		"datetimeHour": "Hyperdrive query event timestamp, truncated to start of hour",
		"datetimeMinute": "Hyperdrive query event timestamp, truncated to start of minute",
		"eventStatus": "The result of the Hyperdrive event: 'error' or 'complete'. Error events may not have complete data.",
		"isFree": "Whether the query originates from a Hyperdrive config on the free tier"
	},
	"AccountHyperdriveQueriesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountHyperdriveQueriesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountHyperdriveQueriesAdaptiveGroupsSum": {
		"__description": "",
		"clientWriteLatency": "Total latency (in milliseconds) of sending query results back to client",
		"connectionLatency": "Total latency (in milliseconds) of retrieving a connection to the origin database",
		"originReadLatency": "Total latency (in milliseconds) of receiving responses from origin to Hyperdrive",
		"originWriteLatency": "Total latency (in milliseconds) of sending queries to origin from Hyperdrive",
		"queryBytes": "Total size (in bytes) of queries handled by Hyperdrive",
		"queryLatency": "Total latency (in milliseconds) of serving a query using Hyperdrive",
		"resultBytes": "Total size (in bytes) of query results served by Hyperdrive"
	},
	"AccountHyperdriveQueriesAdaptiveGroupsSumConfidence": {
		"__description": "",
		"clientWriteLatency": "Confidence interval for the corresponding point estimate",
		"connectionLatency": "Confidence interval for the corresponding point estimate",
		"originReadLatency": "Confidence interval for the corresponding point estimate",
		"originWriteLatency": "Confidence interval for the corresponding point estimate",
		"queryBytes": "Confidence interval for the corresponding point estimate",
		"queryLatency": "Confidence interval for the corresponding point estimate",
		"resultBytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountImagesRequestsAdaptiveGroups": {
		"__description": "A high-level summary of Cloudflare Images served to end users.",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountImagesRequestsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"AccountImagesRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountImagesRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute"
	},
	"AccountImagesRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountImagesRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountImagesRequestsAdaptiveGroupsSum": {
		"__description": "",
		"requests": ""
	},
	"AccountImagesRequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requests": "Confidence interval for the corresponding point estimate"
	},
	"AccountImagesUniqueTransformations": {
		"__description": "Image unique transfromations per day",
		"date": "The date uniques are calculated for",
		"transformations": "Number of unique image transformations per day in sliding window"
	},
	"AccountImagesUniqueTransformationsFilter_InputObject": {
		"__description": ""
	},
	"AccountImagesUniqueTransformationsOrderBy": {
		"__description": ""
	},
	"AccountKvOperationsAdaptiveGroups": {
		"__description": "KV operations data with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of requests",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension",
		"min": "The min of values for a metric per dimension",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountKvOperationsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountKvOperationsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of requests, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountKvOperationsAdaptiveGroupsDimensions": {
		"__description": "",
		"actionType": "The type of the action (read, write, delete, list)",
		"date": "Message operation timestamp, truncated to start of a day",
		"datetime": "Message operation timestamp",
		"datetimeHour": "Message operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Message operation timestamp, truncated to start of an minute",
		"namespaceId": "The hexa-encoded namespace id",
		"responseStatusCode": "The http status code of the response.",
		"result": "The result of the action (hot_read, cold_read, deleted, uploaded, error, not_found)"
	},
	"AccountKvOperationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountKvOperationsAdaptiveGroupsMax": {
		"__description": "",
		"latencyMs": "Max latency",
		"objectBytes": "Max object bytes"
	},
	"AccountKvOperationsAdaptiveGroupsMin": {
		"__description": "",
		"latencyMs": "Min latency",
		"objectBytes": "Min object bytes"
	},
	"AccountKvOperationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountKvOperationsAdaptiveGroupsQuantiles": {
		"__description": "",
		"latencyMsP25": "25th percentile latency (milliseconds)",
		"latencyMsP50": "50th percentile latency (milliseconds)",
		"latencyMsP75": "75th percentile latency (milliseconds)",
		"latencyMsP90": "90th percentile latency (milliseconds)",
		"latencyMsP99": "99th percentile latency (milliseconds)",
		"latencyMsP999": "99.9th percentile latency (milliseconds)"
	},
	"AccountKvOperationsAdaptiveGroupsSum": {
		"__description": "",
		"objectBytes": "Total bytes of all objects",
		"requests": "Total number of requests"
	},
	"AccountKvOperationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"objectBytes": "Confidence interval for the corresponding point estimate",
		"requests": "Confidence interval for the corresponding point estimate"
	},
	"AccountKvStorageAdaptiveGroups": {
		"__description": "KV stored data with adaptive sampling",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountKvStorageAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Message operation timestamp, truncated to start of a day",
		"datetime": "Message operation timestamp",
		"datetimeHour": "Message operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Message operation timestamp, truncated to start of an minute",
		"namespaceId": "The hexa-encoded namespace id"
	},
	"AccountKvStorageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountKvStorageAdaptiveGroupsMax": {
		"__description": "",
		"byteCount": "Max number of bytes",
		"keyCount": "Max number of keys"
	},
	"AccountKvStorageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountLiveInputEventsAdaptive": {
		"__description": "Live input events with adaptive sampling",
		"coloCode": "Ingest colo",
		"datetime": "The time of the event",
		"eventCode": "Event code",
		"eventDescription": "Event description",
		"inputId": "Live input ID"
	},
	"AccountLiveInputEventsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountLiveInputEventsAdaptiveGroups": {
		"__description": "Aggregated live input events with adaptive sampling",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of segments stored",
		"dimensions": "List of dimensions to group by",
		"max": "The maximum value for a metric per dimension",
		"min": "The minimum value for a metric per dimension"
	},
	"AccountLiveInputEventsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Per-second bit rate when grouped by datetime",
		"bitRateFifteenMinutes": "Per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Per-second bit rate when grouped by datetimeMinute",
		"gopByteSize": "Average GOP size in bytes",
		"gopDuration": "Average GOP duration in ms",
		"gopUploadTime": "Average GOP upload time in ms",
		"uploadDurationRatio": "Average upload to duration ratio"
	},
	"AccountLiveInputEventsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate"
	},
	"AccountLiveInputEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"count": "Number of segments stored, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountLiveInputEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "Live input events timestamp",
		"datetimeFifteenMinutes": "The date and time of the event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the event truncated to five minutes",
		"datetimeHour": "The date and time of the event truncated to the hour",
		"datetimeMinute": "The date and time of the event truncated to the minute",
		"eventCode": "Event code",
		"inputId": "Live input ID"
	},
	"AccountLiveInputEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountLiveInputEventsAdaptiveGroupsMax": {
		"__description": "",
		"gopByteSize": "Max GOP size in bytes",
		"gopDuration": "Max GOP duration in ms",
		"gopUploadTime": "Max GOP upload time in ms",
		"uploadDurationRatio": "Max upload to duration ratio"
	},
	"AccountLiveInputEventsAdaptiveGroupsMin": {
		"__description": "",
		"gopByteSize": "Min GOP size in bytes",
		"gopDuration": "Min GOP duration in ms",
		"gopUploadTime": "Min GOP upload time in ms",
		"uploadDurationRatio": "Min upload to duration ratio"
	},
	"AccountLiveInputEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountLiveInputEventsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountLogExplorerIngestionAdaptiveGroups": {
		"__description": "Ingestion metrics for Log Explorer",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountLogExplorerIngestionAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountLogExplorerIngestionAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Ingestion date",
		"datetimeFifteenMinutes": "Ingestion time, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Ingestion time, truncated to multiple of 5 minutes",
		"datetimeHour": "Ingestion time, truncated to the hour",
		"datetimeMinute": "Ingestion time, truncated to the minute"
	},
	"AccountLogExplorerIngestionAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountLogExplorerIngestionAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountLogExplorerIngestionAdaptiveGroupsSum": {
		"__description": "",
		"billableBytes": "Total billable bytes ingested to Log Explorer",
		"totalBytes": "Total bytes ingested to Log Explorer"
	},
	"AccountLogExplorerIngestionAdaptiveGroupsSumConfidence": {
		"__description": "",
		"billableBytes": "Confidence interval for the corresponding point estimate",
		"totalBytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountLogpushHealthAdaptiveGroups": {
		"__description": "Beta. Logpush job health metrics",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"max": "Maximum value of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountLogpushHealthAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval",
		"uploadDuration": "Average upload duration in seconds"
	},
	"AccountLogpushHealthAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountLogpushHealthAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Date that we completed pushing the log batch",
		"datetime": "Datetime that we completed pushing the log batch",
		"datetimeFifteenMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 5 minutes",
		"datetimeHour": "Datetime that we completed pushing the log batch, truncated to the hour",
		"datetimeMinute": "Datetime that we completed pushing the log batch, truncated to the minute",
		"destinationType": "Destination type, e.g. 'S3' or 'GCS'",
		"error": "Error message",
		"final": "Cloudflare may attempt to push a batch of logs multiple times if we encounter a failure. This field will be set to 1 if this was the last push attempt for this batch of logs. If this field is set to 0, it means the push failed but another retry was attempted. If this field is set to 1 and status >= 300, then the batch of logs failed to push and log data was lost. If you want to count the total number of logs that succeeded or failed, you should always set final = 1.",
		"jobId": "The Logpush Job ID",
		"status": "HTTP response status code of the log destination",
		"success": "1 when the upload was successful without error, otherwise 0"
	},
	"AccountLogpushHealthAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountLogpushHealthAdaptiveGroupsMax": {
		"__description": "",
		"timestamp": "Latest timestamp of upload attempts"
	},
	"AccountLogpushHealthAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountLogpushHealthAdaptiveGroupsSum": {
		"__description": "",
		"bytes": "Bytes of uncompressed log data in upload attempts",
		"bytesCompressed": "Bytes of compressed log data in upload attempts",
		"records": "A count of the total number of records in upload attempts.",
		"uploads": "A count of the total number of upload attempts"
	},
	"AccountLogpushHealthAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytes": "Confidence interval for the corresponding point estimate",
		"bytesCompressed": "Confidence interval for the corresponding point estimate",
		"records": "Confidence interval for the corresponding point estimate",
		"uploads": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicEndpointHealthCheckAdaptiveGroups": {
		"__description": "Magic Endpoint Healthcheck events with adaptive sampling.",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of health checks",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of value for a metric per dimension"
	},
	"AccountMagicEndpointHealthCheckAdaptiveGroupsAvg": {
		"__description": "",
		"lossPercentage": "Average calculated percentage (0-100) for endpoint healthchecks",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountMagicEndpointHealthCheckAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of health checks, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMagicEndpointHealthCheckAdaptiveGroupsDimensions": {
		"__description": "",
		"checkId": "The ID of the check associated with the healthcheck",
		"checkType": "The type of check associated with the healthcheck",
		"date": "Healthcheck event timestamp, truncated to the day",
		"datetime": "Healthcheck event timestamp",
		"datetimeFifteenMinutes": "Healthcheck event timestamp, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Calculation event timestamp, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Healthcheck event timestamp, truncated to multiple of 30 minutes",
		"datetimeHour": "Healthcheck event timestamp, truncated to the hour",
		"datetimeMinute": "Healthcheck event timestamp, truncated to the minute",
		"endpoint": "The endpoint of the check associated with the healthcheck",
		"name": "The name associated with the healthcheck"
	},
	"AccountMagicEndpointHealthCheckAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicEndpointHealthCheckAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicEndpointHealthCheckAdaptiveGroupsSum": {
		"__description": "",
		"failures": "Total failures",
		"total": "Total number of health check events"
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Magic Firewall",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationDeviceTag": "Device tag associated with the destination IP of the packet",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"ruleId": "Unique identifier of the rule that matched the packet, if any",
		"rulesetId": "Unique identifier of the ruleset containing the rule that matched the packet, if any",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceDeviceTag": "Device tag associated with the source IP of the packet",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
		"verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Magic Firewall Ratelimiting",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationDeviceTag": "Device tag associated with the destination IP of the packet",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"ruleId": "Unique identifier of the rule that matched the packet, if any",
		"rulesetId": "Unique identifier of the ruleset containing the rule that matched the packet, if any",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceDeviceTag": "Device tag associated with the source IP of the packet",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
		"verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountMagicFirewallRateLimitNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicFirewallSamplesAdaptiveGroups": {
		"__description": "Data to visualize traffic allowed and blocked by Magic Firewall rules",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMagicFirewallSamplesAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMagicFirewallSamplesAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "Date and time that the packet was received",
		"datetimeFiveMinute": "<small>DEPRECATED (Deprecated in favor of datetimeFiveMinutes):</small> Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"ruleId": "Unique identifier of the rule that matched the packet, if any"
	},
	"AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicFirewallSamplesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicFirewallSamplesAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountMagicFirewallSamplesAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Magic IDS",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationDeviceTag": "Device tag associated with the destination IP of the packet",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceDeviceTag": "Device tag associated with the source IP of the packet",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
		"verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Magic Transit traffic",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"egressTunnelID": "GRE or IPSec Egress Tunnel ID for Magic WAN and Magic Transit traffic",
		"egressTunnelName": "GRE or IPSec Egress Tunnel name for Magic WAN and Magic Transit traffic",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ingressTunnelID": "GRE or IPSec Ingress Tunnel ID for Magic WAN and Magic Transit traffic",
		"ingressTunnelName": "GRE or IPSec Ingress Tunnel name for Magic WAN and Magic Transit traffic",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"mitigationSystem": "Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall)",
		"offRamp": "Offramp method for Magic WAN and Magic Transit traffic - GRE, IPSec, CNI, Warp, Cloudflared",
		"onRamp": "Onramp method for Magic WAN and Magic Transit traffic - GRE, IPSec, CNI, Warp, Cloudflared",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"trafficType": "Custom protocol or traffic type for Magic Wan and Magic Transit traffic - Unidirectional and Bidirectional Tunnel Health Check",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet"
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountMagicTransitNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicTransitTunnelHealthCheckSLOsAdaptiveGroups": {
		"__description": "Magic Transit Tunnel Health Check SLO events with adaptive sampling.",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of SLO calculations",
		"dimensions": "List of dimensions to group by",
		"max": "The maximum value for a metric per dimension"
	},
	"AccountMagicTransitTunnelHealthCheckSLOsAdaptiveGroupsAvg": {
		"__description": "",
		"effectiveSlo": "Average calculated SLI for tunnel health checks",
		"sampleInterval": "The average value used for sample interval",
		"slo": "Average target SLO"
	},
	"AccountMagicTransitTunnelHealthCheckSLOsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of SLO calculations, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMagicTransitTunnelHealthCheckSLOsAdaptiveGroupsDimensions": {
		"__description": "",
		"alertType": "The alert type of the notification policy",
		"date": "SLO calculation event timestamp, truncated to the day",
		"datetime": "SLO calculation event timestamp",
		"datetimeFifteenMinutes": "SLO calculation event timestamp, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "SLO calculation event timestamp, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "SLO calculation event timestamp, truncated to multiple of 30 minutes",
		"datetimeHour": "SLO calculation event timestamp, truncated to the hour",
		"datetimeMinute": "SLO calculation event timestamp, truncated to the minute",
		"policyId": "The ID of the notification policy associated with the calculation",
		"siteName": "The name of the site the tunnel is associated with",
		"status": "The health status of the tunnel",
		"tunnelId": "The ID of the tunnel",
		"tunnelName": "The name of the tunnel"
	},
	"AccountMagicTransitTunnelHealthCheckSLOsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicTransitTunnelHealthCheckSLOsAdaptiveGroupsMax": {
		"__description": "",
		"slo": "Maximum target SLO"
	},
	"AccountMagicTransitTunnelHealthCheckSLOsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicTransitTunnelHealthChecksAdaptiveGroups": {
		"__description": "Beta. Magic Transit Health check results for customer GRE Tunnels with adaptive sampling (ABR).",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of healthcheck results",
		"dimensions": "List of dimensions to group by"
	},
	"AccountMagicTransitTunnelHealthChecksAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval per dimension",
		"tunnelState": "Combined Tunnel State aggregated from multiple results. 0 is down, 0.5 is degraded and 1 is healthy"
	},
	"AccountMagicTransitTunnelHealthChecksAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of healthcheck results, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMagicTransitTunnelHealthChecksAdaptiveGroupsDimensions": {
		"__description": "",
		"active": "Returns 1 if the colo had traffic for this tunnel in the last 6 hours, otherwise 0",
		"datetime": "The time the healthcheck request was sent",
		"datetimeFifteenMinutes": "The time the healthcheck request was sent, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "The time the healthcheck request was sent, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "The time the healthcheck request was sent, truncated to multiple of 30 minutes",
		"datetimeHour": "The time the healthcheck request was sent, truncated to the hour",
		"datetimeMinute": "The time the healthcheck request was sent, truncated to the last minute",
		"edgeColoCity": "City of the Cloudflare datacenter from where the healthcheck was run",
		"edgeColoCode": "IATA airport code of the Cloudflare datacenter from where the healthcheck was run",
		"edgeColoCountry": "Country of the Cloudflare datacenter from where the healthcheck was run",
		"edgeColoName": "The name of the Cloudflare datacenter from where the healthcheck was run",
		"edgeColoRegion": "Region of the Cloudflare datacenter from where the healthcheck was run",
		"edgePopName": "The name of the Cloudflare POP from where the healthcheck was run",
		"remoteTunnelIPv4": "IP address of the remote end of the tunnel",
		"resultStatus": "The status of the request",
		"siteName": "Human friendly site name associated with the tunnel",
		"tunnelName": "Human friendly tunnel name"
	},
	"AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicTransitTunnelHealthChecksAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroups": {
		"__description": "Bandwidth usage metric of a Magic Transit tunnel.",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"edgeColoCity": "City where the Cloudflare datacenter that received the packet is located",
		"edgeColoCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"edgeColoCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"edgeColoGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"edgeColoName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"edgePopName": "Cloudflare PoP that received the packet (unique site identifier)",
		"egressTunnelID": "GRE, IPSec or CNI Egress Tunnel ID for Magic WAN and Magic Transit traffic",
		"egressTunnelName": "GRE, IPSec or CNIec Egress Tunnel name for Magic WAN and Magic Transit traffic",
		"ingressTunnelID": "GRE, IPSec or CNI Ingress Tunnel ID for Magic WAN and Magic Transit traffic",
		"ingressTunnelName": "GRE, IPSec or CNI Ingress Tunnel name for Magic WAN and Magic Transit traffic",
		"offRamp": "Offramp method for Magic WAN and Magic Transit traffic - GRE, IPSec, CNI, Warp, Cloudflared",
		"onRamp": "Onramp method for Magic WAN and Magic Transit traffic - GRE, IPSec, CNI, Warp, Cloudflared",
		"tunnelName": "Tunnel device name"
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountMagicTransitTunnelTrafficAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountMagicWANConnectorMetricsAdaptiveGroups": {
		"__description": "Magic WAN Connector Metrics (deprecated)",
		"avg": "",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMagicWANConnectorMetricsAdaptiveGroupsAvg": {
		"__description": "",
		"cpuLoadPercentage": "Average CPU load percentage",
		"cpuTemperature": "Average CPU temperature",
		"diskUsagePercentage": "Average Disk usage percentage",
		"memoryUsagePercentage": "Average Memory usage percentage",
		"rxBitrateFiveMinute": "Rx Bitrate over 5 minutes",
		"rxBitrateMinute": "Rx Bitrate over 1 minute",
		"rxPacketrateFiveMinute": "Rx Packet rate over 5 minutes",
		"rxPacketrateMinute": "Rx Packet rate over 1 minute",
		"txBitrateFiveMinute": "Tx Bitrate over 5 minutes",
		"txBitrateMinute": "Tx Bitrate over 1 minute",
		"txPacketrateFiveMinute": "Tx Packet rate over 5 minutes",
		"txPacketrateMinute": "Tx Packet rate over 1 minute"
	},
	"AccountMagicWANConnectorMetricsAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "The date and time the event was recorded",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"mconnConnectorID": "Customer connector identifier",
		"mconnInterfaceName": "Name of connector interface",
		"mconnInterfaceType": "Interface type LAN, WAN or IPSEC",
		"mconnSiteID": "Customer site identifier"
	},
	"AccountMagicWANConnectorMetricsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMagicWANConnectorMetricsAdaptiveGroupsMax": {
		"__description": "",
		"haState": "current connector ha state",
		"interfaceCount": "Number of interfaces of a given Type"
	},
	"AccountMagicWANConnectorMetricsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetryEventsAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector events with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Recorded Event count",
		"dimensions": "List of dimensions to group by"
	},
	"AccountMconnTelemetryEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Recorded Event count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetryEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"kind": "Event kind"
	},
	"AccountMconnTelemetryEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetryEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetryEventsStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector events with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Recorded Event count",
		"dimensions": "List of dimensions to group by"
	},
	"AccountMconnTelemetryEventsStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Recorded Event count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetryEventsStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"kind": "Event kind"
	},
	"AccountMconnTelemetryEventsStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetryEventsStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector snapshots of DHCP leases with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot DHCP lease count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot DHCP lease count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesAdaptiveGroupsDimensions": {
		"__description": "",
		"clientId": "Client ID of the device the IP Address was leased to",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"hostname": "Hostname of the device the IP Address was leased to",
		"interfaceName": "Name of the network interface",
		"ipAddress": "IP Address that was leased",
		"macAddress": "MAC Address of the device the IP Address was leased to"
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesAdaptiveGroupsMax": {
		"__description": "",
		"expiryTime": "Expiry time of the DHCP lease (seconds since the Unix epoch)"
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector snapshots of DHCP leases with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot DHCP lease count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot DHCP lease count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"clientId": "Client ID of the device the IP Address was leased to",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"hostname": "Hostname of the device the IP Address was leased to",
		"interfaceName": "Name of the network interface",
		"ipAddress": "IP Address that was leased",
		"macAddress": "MAC Address of the device the IP Address was leased to"
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroupsMax": {
		"__description": "",
		"expiryTime": "Expiry time of the DHCP lease (seconds since the Unix epoch)"
	},
	"AccountMconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDisksAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector disk snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Disk count",
		"dimensions": "List of dimensions to group by",
		"max": "",
		"sum": ""
	},
	"AccountMconnTelemetrySnapshotDisksAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Disk count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotDisksAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"name": "Device name"
	},
	"AccountMconnTelemetrySnapshotDisksAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDisksAdaptiveGroupsMax": {
		"__description": "",
		"inProgress": "I/Os currently in progress",
		"major": "Device major number",
		"minor": "Device minor number"
	},
	"AccountMconnTelemetrySnapshotDisksAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDisksAdaptiveGroupsSum": {
		"__description": "",
		"discards": "Discards completed successfully (delta)",
		"discardsMerged": "Discards merged (delta)",
		"flushes": "Flushes completed successfully (delta)",
		"merged": "Reads merged (delta)",
		"reads": "Reads completed successfully (delta)",
		"sectorsDiscarded": "Sectors discarded (delta)",
		"sectorsRead": "Sectors read successfully (delta)",
		"sectorsWritten": "Sectors written successfully (delta)",
		"writes": "Writes completed (delta)",
		"writesMerged": "Writes merged (delta)"
	},
	"AccountMconnTelemetrySnapshotDisksStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector disk snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Disk count",
		"dimensions": "List of dimensions to group by",
		"max": "",
		"sum": ""
	},
	"AccountMconnTelemetrySnapshotDisksStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Disk count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotDisksStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"name": "Device name"
	},
	"AccountMconnTelemetrySnapshotDisksStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDisksStagingAdaptiveGroupsMax": {
		"__description": "",
		"inProgress": "I/Os currently in progress",
		"major": "Device major number",
		"minor": "Device minor number"
	},
	"AccountMconnTelemetrySnapshotDisksStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotDisksStagingAdaptiveGroupsSum": {
		"__description": "",
		"discards": "Discards completed successfully (delta)",
		"discardsMerged": "Discards merged (delta)",
		"flushes": "Flushes completed successfully (delta)",
		"merged": "Reads merged (delta)",
		"reads": "Reads completed successfully (delta)",
		"sectorsDiscarded": "Sectors discarded (delta)",
		"sectorsRead": "Sectors read successfully (delta)",
		"sectorsWritten": "Sectors written successfully (delta)",
		"writes": "Writes completed (delta)",
		"writesMerged": "Writes merged (delta)"
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector interface address snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Interface Address count",
		"dimensions": "List of dimensions to group by"
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Interface Address count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"interfaceName": "Name of the network interface",
		"ipAddress": "IP address of the network interface"
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector interface address snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Interface Address count",
		"dimensions": "List of dimensions to group by"
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Interface Address count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"interfaceName": "Name of the network interface",
		"ipAddress": "IP address of the network interface"
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotInterfaceAddressesStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotInterfacesAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector interface snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Interface count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotInterfacesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Interface count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotInterfacesAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"name": "Name of the network interface",
		"operstate": "UP/DOWN state of the network interface"
	},
	"AccountMconnTelemetrySnapshotInterfacesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotInterfacesAdaptiveGroupsMax": {
		"__description": "",
		"speed": "Speed of the network interface (bits per second)"
	},
	"AccountMconnTelemetrySnapshotInterfacesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotInterfacesStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector interface snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Interface count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotInterfacesStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Interface count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotInterfacesStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"name": "Name of the network interface",
		"operstate": "UP/DOWN state of the network interface"
	},
	"AccountMconnTelemetrySnapshotInterfacesStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotInterfacesStagingAdaptiveGroupsMax": {
		"__description": "",
		"speed": "Speed of the network interface (bits per second)"
	},
	"AccountMconnTelemetrySnapshotInterfacesStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotMountsAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector mount snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Mount count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotMountsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Mount count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotMountsAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"fileSystem": "File system on disk (EXT4, NTFS, etc.)",
		"kind": "Kind of disk (HDD, SSD, etc.)",
		"mountPoint": "Path where disk is mounted",
		"name": "Name of the disk mount"
	},
	"AccountMconnTelemetrySnapshotMountsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotMountsAdaptiveGroupsMax": {
		"__description": "",
		"availableBytes": "Available disk size (bytes)",
		"isReadOnly": "Determines whether the disk is read-only",
		"isRemovable": "Determines whether the disk is removable",
		"totalBytes": "Total disk size (bytes)"
	},
	"AccountMconnTelemetrySnapshotMountsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotMountsStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector mount snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Mount count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotMountsStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Mount count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotMountsStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"fileSystem": "File system on disk (EXT4, NTFS, etc.)",
		"kind": "Kind of disk (HDD, SSD, etc.)",
		"mountPoint": "Path where disk is mounted",
		"name": "Name of the disk mount"
	},
	"AccountMconnTelemetrySnapshotMountsStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotMountsStagingAdaptiveGroupsMax": {
		"__description": "",
		"availableBytes": "Available disk size (bytes)",
		"isReadOnly": "Determines whether the disk is read-only",
		"isRemovable": "Determines whether the disk is removable",
		"totalBytes": "Total disk size (bytes)"
	},
	"AccountMconnTelemetrySnapshotMountsStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotNetdevsAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector netdev snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Netdev count",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountMconnTelemetrySnapshotNetdevsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Netdev count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotNetdevsAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"name": "Name of the network device"
	},
	"AccountMconnTelemetrySnapshotNetdevsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotNetdevsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotNetdevsAdaptiveGroupsSum": {
		"__description": "",
		"recvBytes": "Total bytes received (delta)",
		"recvCompressed": "Compressed packets received (delta)",
		"recvDrop": "Packets dropped (delta)",
		"recvErrs": "Bad packets received (delta)",
		"recvFifo": "FIFO overruns (delta)",
		"recvFrame": "Frame alignment errors (delta)",
		"recvMulticast": "Multicast packets received (delta)",
		"recvPackets": "Total packets received (delta)",
		"sentBytes": "Total bytes transmitted (delta)",
		"sentCarrier": "Number of packets not sent due to carrier errors (delta)",
		"sentColls": "Number of collisions (delta)",
		"sentCompressed": "Number of compressed packets transmitted (delta)",
		"sentDrop": "Number of packets dropped during transmission (delta)",
		"sentErrs": "Number of transmission errors (delta)",
		"sentFifo": "FIFO overruns (delta)",
		"sentPackets": "Total packets transmitted (delta)"
	},
	"AccountMconnTelemetrySnapshotNetdevsStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector netdev snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Netdev count",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountMconnTelemetrySnapshotNetdevsStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Netdev count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotNetdevsStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"name": "Name of the network device"
	},
	"AccountMconnTelemetrySnapshotNetdevsStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotNetdevsStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotNetdevsStagingAdaptiveGroupsSum": {
		"__description": "",
		"recvBytes": "Total bytes received (delta)",
		"recvCompressed": "Compressed packets received (delta)",
		"recvDrop": "Packets dropped (delta)",
		"recvErrs": "Bad packets received (delta)",
		"recvFifo": "FIFO overruns (delta)",
		"recvFrame": "Frame alignment errors (delta)",
		"recvMulticast": "Multicast packets received (delta)",
		"recvPackets": "Total packets received (delta)",
		"sentBytes": "Total bytes transmitted (delta)",
		"sentCarrier": "Number of packets not sent due to carrier errors (delta)",
		"sentColls": "Number of collisions (delta)",
		"sentCompressed": "Number of compressed packets transmitted (delta)",
		"sentDrop": "Number of packets dropped during transmission (delta)",
		"sentErrs": "Number of transmission errors (delta)",
		"sentFifo": "FIFO overruns (delta)",
		"sentPackets": "Total packets transmitted (delta)"
	},
	"AccountMconnTelemetrySnapshotThermalsAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector thermal snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Thermal count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotThermalsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Thermal count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotThermalsAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"label": "Sensor identifier for the component"
	},
	"AccountMconnTelemetrySnapshotThermalsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotThermalsAdaptiveGroupsMax": {
		"__description": "",
		"criticalCelcius": "Critical failure temperature of the component (degrees Celsius)",
		"currentCelcius": "Current temperature of the component (degrees Celsius)",
		"maxCelcius": "Maximum temperature of the component (degrees Celsius)"
	},
	"AccountMconnTelemetrySnapshotThermalsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotThermalsStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector thermal snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Thermal count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotThermalsStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Thermal count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotThermalsStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"label": "Sensor identifier for the component"
	},
	"AccountMconnTelemetrySnapshotThermalsStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotThermalsStagingAdaptiveGroupsMax": {
		"__description": "",
		"criticalCelcius": "Critical failure temperature of the component (degrees Celsius)",
		"currentCelcius": "Current temperature of the component (degrees Celsius)",
		"maxCelcius": "Maximum temperature of the component (degrees Celsius)"
	},
	"AccountMconnTelemetrySnapshotThermalsStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotTunnelsAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector tunnel snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Tunnels count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotTunnelsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Tunnels count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotTunnelsAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"interfaceName": "The tunnel interface name (i.e. xfrm1, xfrm3.99, etc.)",
		"tunnelId": "Tunnel identifier"
	},
	"AccountMconnTelemetrySnapshotTunnelsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotTunnelsAdaptiveGroupsMax": {
		"__description": "",
		"healthValue": "Numeric value associated with tunnel state (0 = unknown, 1 = healthy, 2 = degraded, 3 = down)"
	},
	"AccountMconnTelemetrySnapshotTunnelsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotTunnelsStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector tunnel snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot Tunnels count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotTunnelsStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot Tunnels count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotTunnelsStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"interfaceName": "The tunnel interface name (i.e. xfrm1, xfrm3.99, etc.)",
		"tunnelId": "Tunnel identifier"
	},
	"AccountMconnTelemetrySnapshotTunnelsStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotTunnelsStagingAdaptiveGroupsMax": {
		"__description": "",
		"healthValue": "Numeric value associated with tunnel state (0 = unknown, 1 = healthy, 2 = degraded, 3 = down)"
	},
	"AccountMconnTelemetrySnapshotTunnelsStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotsAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector system snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotsAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"version": "Version"
	},
	"AccountMconnTelemetrySnapshotsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotsAdaptiveGroupsMax": {
		"__description": "",
		"cpuCount": "Count of processors/cores",
		"haValue": "Numeric value associated with high availability state (0 = disabled, 1 = active, 2 = standby, 3 = stopped, 4 = fault)",
		"kernelBtime": "Boot time (seconds since Unix epoch)",
		"kernelProcessesRunning": "Number of processes in runnable state",
		"loadAverage15m": "The fifteen-minute load average",
		"loadAverage1m": "The one-minute load average",
		"loadAverage5m": "The five-minute load average",
		"memoryActiveBytes": "Memory that has been used more recently",
		"memoryAvailableBytes": "Estimate of how much memory is available for starting new applications",
		"memoryBuffersBytes": "Relatively temporary storage for raw disk blocks",
		"memoryCachedBytes": "In-memory cache for files read from the disk",
		"memoryFreeBytes": "The sum of LowFree and HighFree",
		"memoryInactiveBytes": "Memory which has been less recently used",
		"memoryTotalBytes": "Total usable RAM"
	},
	"AccountMconnTelemetrySnapshotsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotsStagingAdaptiveGroups": {
		"__description": "Aggregated Magic WAN Connector system snapshots with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Snapshot count",
		"dimensions": "List of dimensions to group by",
		"max": ""
	},
	"AccountMconnTelemetrySnapshotsStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Snapshot count, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountMconnTelemetrySnapshotsStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"connectorId": "Connector identifier",
		"datetimeFifteenMinutes": "Timestamp bucketed by 15 minutes",
		"datetimeFiveMinutes": "Timestamp bucketed by 5 minutes",
		"datetimeHour": "Timestamp bucketed by hour",
		"datetimeMinute": "Timestamp bucketed by minute",
		"datetimeSixHours": "Timestamp bucketed by 6 hours",
		"version": "Version"
	},
	"AccountMconnTelemetrySnapshotsStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMconnTelemetrySnapshotsStagingAdaptiveGroupsMax": {
		"__description": "",
		"cpuCount": "Count of processors/cores",
		"haValue": "Numeric value associated with high availability state (0 = disabled, 1 = active, 2 = standby, 3 = stopped, 4 = fault)",
		"kernelBtime": "Boot time (seconds since Unix epoch)",
		"kernelProcessesRunning": "Number of processes in runnable state",
		"loadAverage15m": "The fifteen-minute load average",
		"loadAverage1m": "The one-minute load average",
		"loadAverage5m": "The five-minute load average",
		"memoryActiveBytes": "Memory that has been used more recently",
		"memoryAvailableBytes": "Estimate of how much memory is available for starting new applications",
		"memoryBuffersBytes": "Relatively temporary storage for raw disk blocks",
		"memoryCachedBytes": "In-memory cache for files read from the disk",
		"memoryFreeBytes": "The sum of LowFree and HighFree",
		"memoryInactiveBytes": "Memory which has been less recently used",
		"memoryTotalBytes": "Total usable RAM"
	},
	"AccountMconnTelemetrySnapshotsStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMediaUniqueTransformations": {
		"__description": "Media unique transfromations per day",
		"date": "The date uniques are calculated for",
		"transformations": "Number of unique media transformations per day in sliding window"
	},
	"AccountMediaUniqueTransformationsFilter_InputObject": {
		"__description": ""
	},
	"AccountMediaUniqueTransformationsOrderBy": {
		"__description": ""
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroups": {
		"__description": "AWS VPC Flow data collected through Magic Network Monitoring",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"egressBitRate": "Sum of egress bits received, divided by 1 second, providing a per-second egress bit rate when grouped by datetime",
		"egressBitRateDay": "Sum of egress bits received, divided by 86400 seconds, providing a per-second egress bit rate when grouped by date",
		"egressBitRateFifteenMinutes": "Sum of egress bits received, divided by 900 seconds, providing a per-second egress bit rate when grouped by datetimeFifteenMinutes",
		"egressBitRateFiveMinutes": "Sum of egress bits received, divided by 300 seconds, providing a per-second egress bit rate when grouped by datetimeFiveMinutes",
		"egressBitRateHour": "Sum of egress bits received, divided by 3600 seconds, providing a per-second egress bit rate when grouped by datetimeHour",
		"egressBitRateMinute": "Sum of egress bits received, divided by 60 seconds, providing a per-second egress bit rate when grouped by datetimeMinute",
		"egressBitRateTenSeconds": "Sum of egress bits received, divided by 10 seconds, providing a per-second egress bit rate when grouped by datetimeTenSeconds",
		"egressPacketRate": "Sum of egress packets received, divided by 1 second, providing a per-second egress packet rate when grouped by datetime",
		"egressPacketRateDay": "Sum of egress packets received, divided by 86400 seconds, providing a per-second egress packet rate when grouped by date",
		"egressPacketRateFifteenMinutes": "Sum of egress packets received, divided by 900 seconds, providing a per-second egress packet rate when grouped by datetimeFifteenMinutes",
		"egressPacketRateFiveMinutes": "Sum of egress packets received, divided by 300 seconds, providing a per-second egress packet rate when grouped by datetimeFiveMinutes",
		"egressPacketRateHour": "Sum of egress packets received, divided by 3600 seconds, providing a per-second egress packet rate when grouped by datetimeHour",
		"egressPacketRateMinute": "Sum of egress packets received, divided by 60 seconds, providing a per-second egress packet rate when grouped by datetimeMinute",
		"egressPacketRateTenSeconds": "Sum of egress packets received, divided by 10 seconds, providing a per-second egress packet rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds",
		"sampleInterval": "Average sample interval applied to the data"
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"egressBitRate": "Confidence interval for the corresponding point estimate",
		"egressBitRateDay": "Confidence interval for the corresponding point estimate",
		"egressBitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"egressBitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"egressBitRateHour": "Confidence interval for the corresponding point estimate",
		"egressBitRateMinute": "Confidence interval for the corresponding point estimate",
		"egressBitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"egressPacketRate": "Confidence interval for the corresponding point estimate",
		"egressPacketRateDay": "Confidence interval for the corresponding point estimate",
		"egressPacketRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"egressPacketRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"egressPacketRateHour": "Confidence interval for the corresponding point estimate",
		"egressPacketRateMinute": "Confidence interval for the corresponding point estimate",
		"egressPacketRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsDimensions": {
		"__description": "",
		"accountID": "The AWS account ID of the owner of the source network interface for which traffic is recorded.",
		"action": "The action that is associated with the traffic: ACCEPT, REJECT.",
		"azID": "The ID of the Availability Zone that contains the network interface for which traffic is recorded.",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAddress": "IP to which the data was sent",
		"destinationPort": "Value of the Destination Port header field in the packet",
		"ecsClusterArn": "AWS Resource Name (ARN) of the ECS cluster if the traffic is from a running ECS task.",
		"ecsClusterName": "Name of the ECS cluster if the traffic is from a running ECS task.",
		"ecsContainerID": "Docker runtime ID of the container if the traffic is from a running ECS task.",
		"ecsContainerInstanceArn": "ARN of the ECS container instance if the traffic is from a running ECS task on an EC2 instance.",
		"ecsContainerInstanceID": "ID of the ECS container instance if the traffic is from a running ECS task on an EC2 instance.",
		"ecsSecondContainerID": "Docker runtime ID of the second container if the traffic is from a running ECS task.",
		"ecsServiceName": "Name of the ECS service if the traffic is from a running ECS task and the ECS task is started by an ECS service.",
		"ecsTaskArn": "ARN of the ECS task if the traffic is from a running ECS task.",
		"ecsTaskDefinitionArn": "ARN of the ECS task definition if the traffic is from a running ECS task.",
		"ecsTaskID": "ID of the ECS task if the traffic is from a running ECS task.",
		"end": "The time, in Unix seconds, when the last packet of the flow was received within the aggregation interval.",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"firehoseStream": "Identification of the AWS firehose stream exporting flows",
		"flowDirection": "The direction of the flow with respect to the interface where traffic is captured.",
		"instanceID": "The ID of the instance that's associated with the network interface for which the traffic is recorded.",
		"interfaceID": "The ID of the network interface for which the traffic is recorded.",
		"logStatus": "The logging status of the flow log: OK, NODATA, SKIPDATA.",
		"pktDestinationAddress": "The packet-level (original) destination IP address for the traffic.",
		"pktDstAwsService": "The name of the subset of IP address ranges for the pktDstaddr field, if the destination IP address is for an AWS service.",
		"pktSourceAddress": "The packet-level (original) source IP address of the traffic.",
		"pktSrcAwsService": "The name of the subset of IP address ranges for the pktSrcaddr field, if the source IP address is for an AWS service.",
		"protocol": "Layer 4 protocol",
		"protocolString": "Human-readable string representation of the protocol",
		"region": "The Region that contains the network interface for which traffic is recorded.",
		"rejectReason": "Reason why traffic was rejected.",
		"ruleIDs": "List of flow matching rules",
		"sourceAddress": "IP from which the data was sent",
		"sourcePort": "Value of the Source Port header field in the packet",
		"start": "The time, in Unix seconds, when the first packet of the flow was received within the aggregation interval.",
		"sublocationID": "The ID of the sublocation that contains the network interface for which traffic is recorded.",
		"sublocationType": "The type of sublocation that's returned in the sublocationID field.",
		"subnetID": "The ID of the subnet that contains the network interface for which the traffic is recorded.",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"trafficPath": "The path that egress traffic takes to the destination.",
		"version": "Version of the record schema",
		"vpcFlowVersion": "The VPC Flow Logs version.",
		"vpcID": "The ID of the VPC that contains the network interface for which the traffic is recorded."
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits",
		"egressBits": "Sum of egress bits",
		"egressPackets": "Sum of egress packets",
		"packets": "Sum of packets"
	},
	"AccountMnmAWSVPCFlowDataAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"egressBits": "Confidence interval for the corresponding point estimate",
		"egressPackets": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountMnmFlowDataAdaptiveGroups": {
		"__description": "Flow data collected through Magic Network Monitoring",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountMnmFlowDataAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"egressBitRate": "Sum of egress bits received, divided by 1 second, providing a per-second egress bit rate when grouped by datetime",
		"egressBitRateDay": "Sum of egress bits received, divided by 86400 seconds, providing a per-second egress bit rate when grouped by date",
		"egressBitRateFifteenMinutes": "Sum of egress bits received, divided by 900 seconds, providing a per-second egress bit rate when grouped by datetimeFifteenMinutes",
		"egressBitRateFiveMinutes": "Sum of egress bits received, divided by 300 seconds, providing a per-second egress bit rate when grouped by datetimeFiveMinutes",
		"egressBitRateHour": "Sum of egress bits received, divided by 3600 seconds, providing a per-second egress bit rate when grouped by datetimeHour",
		"egressBitRateMinute": "Sum of egress bits received, divided by 60 seconds, providing a per-second egress bit rate when grouped by datetimeMinute",
		"egressBitRateTenSeconds": "Sum of egress bits received, divided by 10 seconds, providing a per-second egress bit rate when grouped by datetimeTenSeconds",
		"egressPacketRate": "Sum of egress packets received, divided by 1 second, providing a per-second egress packet rate when grouped by datetime",
		"egressPacketRateDay": "Sum of egress packets received, divided by 86400 seconds, providing a per-second egress packet rate when grouped by date",
		"egressPacketRateFifteenMinutes": "Sum of egress packets received, divided by 900 seconds, providing a per-second egress packet rate when grouped by datetimeFifteenMinutes",
		"egressPacketRateFiveMinutes": "Sum of egress packets received, divided by 300 seconds, providing a per-second egress packet rate when grouped by datetimeFiveMinutes",
		"egressPacketRateHour": "Sum of egress packets received, divided by 3600 seconds, providing a per-second egress packet rate when grouped by datetimeHour",
		"egressPacketRateMinute": "Sum of egress packets received, divided by 60 seconds, providing a per-second egress packet rate when grouped by datetimeMinute",
		"egressPacketRateTenSeconds": "Sum of egress packets received, divided by 10 seconds, providing a per-second egress packet rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds",
		"sampleInterval": "Average sample interval applied to the data"
	},
	"AccountMnmFlowDataAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"egressBitRate": "Confidence interval for the corresponding point estimate",
		"egressBitRateDay": "Confidence interval for the corresponding point estimate",
		"egressBitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"egressBitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"egressBitRateHour": "Confidence interval for the corresponding point estimate",
		"egressBitRateMinute": "Confidence interval for the corresponding point estimate",
		"egressBitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"egressPacketRate": "Confidence interval for the corresponding point estimate",
		"egressPacketRateDay": "Confidence interval for the corresponding point estimate",
		"egressPacketRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"egressPacketRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"egressPacketRateHour": "Confidence interval for the corresponding point estimate",
		"egressPacketRateMinute": "Confidence interval for the corresponding point estimate",
		"egressPacketRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountMnmFlowDataAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountMnmFlowDataAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAS": "Autonomous System to which the data is directed. Corresponds to DstAS field in the packet",
		"destinationAddress": "IP to which the data was sent",
		"destinationPort": "Value of the Destination Port header field in the packet",
		"deviceID": "Device ID of the warp client exporting MNM flows",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"ipToS": "Defines the IP Type Of Service (TOS)",
		"ipToSEncap": "Defines the IP Type Of Service (TOS) for encapsulated traffic",
		"protocol": "Layer 4 protocol",
		"protocolString": "Human-readable string representation of the protocol",
		"routerAddress": "IP of the router that sampled the flows",
		"ruleIDs": "List of flow matching rules",
		"sourceAS": "Autonomous System from which the data was sent. Corresponds to SrcAS field in the packet",
		"sourceAddress": "IP from which the data was sent",
		"sourcePort": "Value of the Source Port header field in the packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"version": "Version of the record schema"
	},
	"AccountMnmFlowDataAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountMnmFlowDataAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountMnmFlowDataAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits",
		"egressBits": "Sum of egress bits",
		"egressPackets": "Sum of egress packets",
		"packets": "Sum of packets"
	},
	"AccountMnmFlowDataAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"egressBits": "Confidence interval for the corresponding point estimate",
		"egressPackets": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountNelReportsAdaptiveGroups": {
		"__description": "Data to visualize network error logs",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of NEL Reports",
		"dimensions": "List of dimensions to group by"
	},
	"AccountNelReportsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountNelReportsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of NEL Reports, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountNelReportsAdaptiveGroupsDimensions": {
		"__description": "",
		"clientIPASN": "Client ASN",
		"clientIPASNDescription": "Client ASN Description",
		"clientIPCountry": "Client Country",
		"clientIPCountryCode": "2 letter client country code using ISO 3166-1 alpha-2 syntax",
		"clientIPVersion": "IP Version the client used to connect",
		"date": "Request date from browser",
		"datetime": "Request datetime from browser",
		"datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime from browser, truncated to the hour",
		"datetimeMinute": "Request datetime from browser, truncated to the minute",
		"lastKnownGoodColoCode": "IATA airport code of colo the client connected to",
		"phase": "The phase of connection the error occurred in",
		"protocol": "HTTP Protocol used when the error occured",
		"type": "The type of error in the phase"
	},
	"AccountNelReportsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountNelReportsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountOhttpMetricsAdaptive": {
		"__description": "oHTTP request metrics with adaptive sampling",
		"bytesToClient": "Bytes returned to client",
		"bytesToGateway": "Total bytes received from the client",
		"colo": "The airport code of the Cloudflare datacenter that served this request",
		"datetime": "The date and time the event was recorded",
		"gatewayStatusCode": "The status code returned by the gateway",
		"relayStatusCode": "The status code returned by the relay"
	},
	"AccountOhttpMetricsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountOhttpMetricsAdaptiveGroups": {
		"__description": "Aggregated oHTTP request metrics with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of HTTP requests",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountOhttpMetricsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of HTTP requests, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountOhttpMetricsAdaptiveGroupsDimensions": {
		"__description": "",
		"colo": "The airport code of the Cloudflare datacenter that served this request",
		"date": "Ohttp requests metrics date",
		"datetimeFifteenMinutes": "Ohttp requests metrics timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Ohttp requests metrics timestamp, truncated to five minutes",
		"datetimeHour": "Ohttp requests metrics timestamp, truncated to the hour",
		"datetimeMinute": "Ohttp requests metrics timestamp, truncated to the minute",
		"endpoint": "The appId that generated traffic",
		"gatewayStatusCode": "Status code returned by the gateway",
		"relayStatusCode": "Status code returned by the relay"
	},
	"AccountOhttpMetricsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountOhttpMetricsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountOhttpMetricsAdaptiveGroupsSum": {
		"__description": "",
		"bytesToClient": "The total bytes sent from gateway to client, observed over the queried time period",
		"bytesToGateway": "The total bytes from client to gateway, observed over the queried time period",
		"clientRequestErrors": "The total number of client request errors, observed over the queried time period",
		"gatewayResponseErrors": "The total number of gateway response errors, observed over the queried time period"
	},
	"AccountOhttpMetricsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytesToClient": "Confidence interval for the corresponding point estimate",
		"bytesToGateway": "Confidence interval for the corresponding point estimate",
		"clientRequestErrors": "Confidence interval for the corresponding point estimate",
		"gatewayResponseErrors": "Confidence interval for the corresponding point estimate"
	},
	"AccountOhttpMetricsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroups": {
		"__description": "Pages Functions invocations with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Request datetime, truncated to start of a day",
		"datetime": "Request datetime",
		"datetimeHour": "Request datetime, truncated to start of an hour",
		"datetimeMinute": "Request datetime, truncated to start of an minute",
		"datetimeSixHours": "Request datetime, truncated to start of six hour window",
		"scriptName": "The name of the script",
		"status": "Status of the worker invocation",
		"usageModel": "Usage model of the worker invocation"
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsQuantiles": {
		"__description": "",
		"cpuTimeP50": "CPU time 50th percentile - microseconds",
		"cpuTimeP75": "CPU time 75th percentile - microseconds",
		"cpuTimeP99": "CPU time 99th percentile - microseconds",
		"cpuTimeP999": "CPU time 99.9th percentile - microseconds",
		"durationP50": "Duration 50th percentile - GB*s",
		"durationP75": "Duration 75th percentile - GB*s",
		"durationP99": "Duration 99th percentile - GB*s",
		"durationP999": "Duration 99.9th percentile - GB*s"
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsSum": {
		"__description": "",
		"clientDisconnects": "Sum of client disconnects",
		"duration": "Sum of Duration - GB*s",
		"errors": "Sum of Errors",
		"requests": "Sum of Requests",
		"responseBodySize": "Sum of Response Body Sizes",
		"subrequests": "Sum of Subrequests",
		"wallTime": "Sum of Wall Time"
	},
	"AccountPagesFunctionsInvocationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"clientDisconnects": "Confidence interval for the corresponding point estimate",
		"duration": "Confidence interval for the corresponding point estimate",
		"errors": "Confidence interval for the corresponding point estimate",
		"requests": "Confidence interval for the corresponding point estimate",
		"responseBodySize": "Confidence interval for the corresponding point estimate",
		"subrequests": "Confidence interval for the corresponding point estimate",
		"wallTime": "Confidence interval for the corresponding point estimate"
	},
	"AccountPipelinesDeliveryAdaptiveGroups": {
		"__description": "Beta. Data delivered via Workers Pipelines",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of delivery events",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountPipelinesDeliveryAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of delivery events, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountPipelinesDeliveryAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Delivery operation timestamp, truncated to start of a day",
		"datetime": "Delivery operation timestamp",
		"datetimeHour": "Delivery operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Delivery operation timestamp, truncated to start of an minute",
		"pipelineId": "The pipeline ID"
	},
	"AccountPipelinesDeliveryAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountPipelinesDeliveryAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountPipelinesDeliveryAdaptiveGroupsSum": {
		"__description": "",
		"deliveredBytes": "Total amount of bytes delivered"
	},
	"AccountPipelinesDeliveryAdaptiveGroupsSumConfidence": {
		"__description": "",
		"deliveredBytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountPipelinesIngestionAdaptiveGroups": {
		"__description": "Beta. Data ingested via Workers Pipelines",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of ingestion events",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountPipelinesIngestionAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of ingestion events, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountPipelinesIngestionAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Ingestion operation timestamp, truncated to start of a day",
		"datetime": "Ingestion operation timestamp",
		"datetimeHour": "Ingestion operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Ingestion operation timestamp, truncated to start of an minute",
		"pipelineId": "The pipeline ID"
	},
	"AccountPipelinesIngestionAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountPipelinesIngestionAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountPipelinesIngestionAdaptiveGroupsSum": {
		"__description": "",
		"ingestedBytes": "Total amount of bytes ingested",
		"ingestedRecords": "Total number of records ingested"
	},
	"AccountPipelinesIngestionAdaptiveGroupsSumConfidence": {
		"__description": "",
		"ingestedBytes": "Confidence interval for the corresponding point estimate",
		"ingestedRecords": "Confidence interval for the corresponding point estimate"
	},
	"AccountPipelinesOperatorAdaptiveGroups": {
		"__description": "Aggregated Pipelines source metrics with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountPipelinesOperatorAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountPipelinesOperatorAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Delivery operation timestamp, truncated to start of a day",
		"datetime": "Delivery operation timestamp",
		"datetimeHour": "Delivery operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Delivery operation timestamp, truncated to start of a minute",
		"pipelineId": "The pipeline ID",
		"streamId": "The Stream ID"
	},
	"AccountPipelinesOperatorAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountPipelinesOperatorAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountPipelinesOperatorAdaptiveGroupsSum": {
		"__description": "",
		"bytesIn": "Total number of bytes ingested",
		"decodeErrors": "Number of messages that could not be deserialized in the stream schema",
		"recordsIn": "Total number of records ingestesd"
	},
	"AccountPipelinesOperatorAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytesIn": "Confidence interval for the corresponding point estimate",
		"decodeErrors": "Confidence interval for the corresponding point estimate",
		"recordsIn": "Confidence interval for the corresponding point estimate"
	},
	"AccountPipelinesOperatorStagingAdaptiveGroups": {
		"__description": "Aggregated Pipelines source metrics with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountPipelinesOperatorStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountPipelinesOperatorStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Delivery operation timestamp, truncated to start of a day",
		"datetime": "Delivery operation timestamp",
		"datetimeHour": "Delivery operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Delivery operation timestamp, truncated to start of a minute",
		"pipelineId": "The pipeline ID",
		"streamId": "The Stream ID"
	},
	"AccountPipelinesOperatorStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountPipelinesOperatorStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountPipelinesOperatorStagingAdaptiveGroupsSum": {
		"__description": "",
		"bytesIn": "Total number of bytes ingested",
		"decodeErrors": "Number of messages that could not be deserialized in the stream schema",
		"messagesIn": "Total number of messages ingested"
	},
	"AccountPipelinesOperatorStagingAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytesIn": "Confidence interval for the corresponding point estimate",
		"decodeErrors": "Confidence interval for the corresponding point estimate",
		"messagesIn": "Confidence interval for the corresponding point estimate"
	},
	"AccountPipelinesSinkAdaptiveGroups": {
		"__description": "Aggregated Pipelines sink metrics with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountPipelinesSinkAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountPipelinesSinkAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Delivery operation timestamp, truncated to start of a day",
		"datetime": "Delivery operation timestamp",
		"datetimeHour": "Delivery operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Delivery operation timestamp, truncated to start of a minute",
		"pipelineId": "The pipeline ID",
		"sinkId": "The Sink ID"
	},
	"AccountPipelinesSinkAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountPipelinesSinkAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountPipelinesSinkAdaptiveGroupsSum": {
		"__description": "",
		"bytesWritten": "Total number of bytes written to the sink, after compression",
		"filesWritten": "Number of files written",
		"recordsWritten": "Total number of records written to the sink",
		"rowGroupsWritten": "Number of Parquet Row Groups written",
		"uncompressedBytesWritten": "Total number of bytes written before compression"
	},
	"AccountPipelinesSinkAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytesWritten": "Confidence interval for the corresponding point estimate",
		"filesWritten": "Confidence interval for the corresponding point estimate",
		"recordsWritten": "Confidence interval for the corresponding point estimate",
		"rowGroupsWritten": "Confidence interval for the corresponding point estimate",
		"uncompressedBytesWritten": "Confidence interval for the corresponding point estimate"
	},
	"AccountPipelinesSinkStagingAdaptiveGroups": {
		"__description": "Aggregated Pipelines sink metrics with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountPipelinesSinkStagingAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountPipelinesSinkStagingAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Delivery operation timestamp, truncated to start of a day",
		"datetime": "Delivery operation timestamp",
		"datetimeHour": "Delivery operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Delivery operation timestamp, truncated to start of a minute",
		"pipelineId": "The pipeline ID",
		"streamId": "The Stream ID"
	},
	"AccountPipelinesSinkStagingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountPipelinesSinkStagingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountPipelinesSinkStagingAdaptiveGroupsSum": {
		"__description": "",
		"bytesWritten": "Total number of bytes written to the sink, after compression",
		"filesWritten": "Number of files written",
		"recordsWritten": "Total number of records written to the sink",
		"rowGroupsWritten": "Number of Parquet Row Groups written",
		"uncompressedBytesWritten": "Total number of bytes written before compression"
	},
	"AccountPipelinesSinkStagingAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytesWritten": "Confidence interval for the corresponding point estimate",
		"filesWritten": "Confidence interval for the corresponding point estimate",
		"recordsWritten": "Confidence interval for the corresponding point estimate",
		"rowGroupsWritten": "Confidence interval for the corresponding point estimate",
		"uncompressedBytesWritten": "Confidence interval for the corresponding point estimate"
	},
	"AccountQueueBacklogAdaptiveGroups": {
		"__description": "Beta. Queue backlog data with adaptive sampling. Queues that are not being written to, or read from, will not return data, even if they have a backlog.",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by"
	},
	"AccountQueueBacklogAdaptiveGroupsAvg": {
		"__description": "",
		"bytes": "The average size of the backlog in bytes for sample interval",
		"messages": "The average number of messages in the backlog for sample interval",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountQueueBacklogAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Message operation timestamp, truncated to start of a day",
		"datetime": "Message operation timestamp",
		"datetimeFifteenMinutes": "Message operation timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Message operation timestamp, truncated to five minutes",
		"datetimeHour": "Message operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Message operation timestamp, truncated to start of an minute",
		"datetimeSixHours": "Message operation timestamp, truncated to start of six hour window",
		"queueId": "The ID of the Queue"
	},
	"AccountQueueBacklogAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountQueueBacklogAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountQueueConsumerMetricsAdaptiveGroups": {
		"__description": "Beta. Queue consumer metrics with adaptive sampling. Inactive queues will not return data.",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by"
	},
	"AccountQueueConsumerMetricsAdaptiveGroupsAvg": {
		"__description": "",
		"concurrency": "The average concurrency of the queue",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountQueueConsumerMetricsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Message operation timestamp, truncated to start of a day",
		"datetime": "Message operation timestamp",
		"datetimeFifteenMinutes": "Message operation timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Message operation timestamp, truncated to five minutes",
		"datetimeHour": "Message operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Message operation timestamp, truncated to start of an minute",
		"datetimeSixHours": "Message operation timestamp, truncated to start of six hour window",
		"queueId": "The ID of the Queue"
	},
	"AccountQueueConsumerMetricsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountQueueConsumerMetricsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountQueueDelayedBacklogAdaptiveGroups": {
		"__description": "Beta. Queue delayed backlog data with adaptive sampling. Queues that are not being written to, or read from, will not return data, even if they have a backlog.",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by"
	},
	"AccountQueueDelayedBacklogAdaptiveGroupsAvg": {
		"__description": "",
		"messages": "The average number of messages in the delayed backlog for sample interval",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountQueueDelayedBacklogAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Message operation timestamp, truncated to start of a day",
		"datetime": "Message operation timestamp",
		"datetimeFifteenMinutes": "Message operation timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Message operation timestamp, truncated to five minutes",
		"datetimeHour": "Message operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Message operation timestamp, truncated to start of an minute",
		"datetimeSixHours": "Message operation timestamp, truncated to start of six hour window",
		"queueId": "The ID of the Queue"
	},
	"AccountQueueDelayedBacklogAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountQueueDelayedBacklogAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountQueueMessageOperationsAdaptiveGroups": {
		"__description": "Beta. Queue message operation data with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of Message Operations",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountQueueMessageOperationsAdaptiveGroupsAvg": {
		"__description": "",
		"lagTime": "The average time in milliseconds between when the message was written to the queue and the current operation over the sample interval. Will always be 0 for WriteMessage operations.",
		"retryCount": "The average number of retries per message operation. A retry occurs after an unsucessful delivery, if the queue is configured to retry failed attempts. Only applicable to ReadMessage and DeleteMessage operations. Will always be 0 for WriteMessage operations.",
		"sampleInterval": "The average value used for sample interval"
	},
	"AccountQueueMessageOperationsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of Message Operations, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountQueueMessageOperationsAdaptiveGroupsDimensions": {
		"__description": "",
		"actionType": "The type of the Queue message operation",
		"consumerType": "The queue consumer type for the operation. Only applicable for ReadMessage and DeleteMessge action types.",
		"date": "Message operation timestamp, truncated to start of a day",
		"datetime": "Message operation timestamp",
		"datetimeFifteenMinutes": "Message operation timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Message operation timestamp, truncated to five minutes",
		"datetimeHour": "Message operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Message operation timestamp, truncated to start of an minute",
		"datetimeSixHours": "Message operation timestamp, truncated to start of six hour window",
		"outcome": "The outcome of the operation. Only applicable to DeleteMessage action types. Can be 'success', 'dlq', or 'fail'. Always 'none' for other operations.",
		"queueId": "The ID of the Queue"
	},
	"AccountQueueMessageOperationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountQueueMessageOperationsAdaptiveGroupsMax": {
		"__description": "",
		"messageSize": "Max Message Size"
	},
	"AccountQueueMessageOperationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountQueueMessageOperationsAdaptiveGroupsSum": {
		"__description": "",
		"billableOperations": "Number of Billable Operations (some message operations count as multiple billable operations)",
		"bytes": "Total size (in bytes) of message operations"
	},
	"AccountQueueMessageOperationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"billableOperations": "Confidence interval for the corresponding point estimate",
		"bytes": "Confidence interval for the corresponding point estimate"
	},
	"AccountR2OperationsAdaptiveGroups": {
		"__description": "Beta. R2 operations with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountR2OperationsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountR2OperationsAdaptiveGroupsDimensions": {
		"__description": "",
		"actionStatus": "Status of the R2 operation",
		"actionType": "The name of the R2 operation",
		"bucketName": "The name of the R2 bucket, if applicable to this request",
		"date": "Request timestamp, truncated to start of a day",
		"datetime": "Request timestamp",
		"datetimeHour": "Request timestamp, truncated to start of an hour",
		"datetimeMinute": "Request timestamp, truncated to start of an minute",
		"objectName": "The name of the R2 object, if applicable to this request",
		"responseStatusCode": "HTTP status code returned by R2",
		"storageClass": "The storage class that applies to this request"
	},
	"AccountR2OperationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountR2OperationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountR2OperationsAdaptiveGroupsSum": {
		"__description": "",
		"requests": "Sum of Requests",
		"responseBytes": "Sum of retrieved bytes",
		"responseObjectSize": "Sum of Response Object Sizes"
	},
	"AccountR2OperationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requests": "Confidence interval for the corresponding point estimate",
		"responseBytes": "Confidence interval for the corresponding point estimate",
		"responseObjectSize": "Confidence interval for the corresponding point estimate"
	},
	"AccountR2StorageAdaptiveGroups": {
		"__description": "Beta. R2 storage with adaptive sampling",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountR2StorageAdaptiveGroupsDimensions": {
		"__description": "",
		"bucketName": "The name of the R2 bucket, if applicable to this request",
		"date": "Storage sample timestamp, truncated to start of a day",
		"datetime": "Storage sample timestamp",
		"datetimeHour": "Storage sample timestamp, truncated to start of an hour",
		"datetimeMinute": "Storage sample timestamp, truncated to start of an minute",
		"storageClass": "The storage class that applies to this request"
	},
	"AccountR2StorageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountR2StorageAdaptiveGroupsMax": {
		"__description": "",
		"metadataSize": "Max of metadata size",
		"objectCount": "Max of object count",
		"payloadSize": "Max of payload size",
		"uploadCount": "Max of upload count"
	},
	"AccountR2StorageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountRumPageloadEventsAdaptiveGroups": {
		"__description": "Beta. Aggregated RUM pageload event metrics with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of pages viewed by end-users",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountRumPageloadEventsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountRumPageloadEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of pages viewed by end-users, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountRumPageloadEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"bot": "Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise.",
		"countryName": "Client country ISO 3166 alpha2 code",
		"customTagInternalSxg": "Signed Exchange enabled status",
		"date": "Request date from browser",
		"datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime from browser, truncated to the hour",
		"datetimeMinute": "Request datetime from browser, truncated to the minute",
		"deviceType": "Device type used for view the page",
		"refererHost": "Host of the HTTP request referer",
		"refererPath": "Path of the HTTP request referer",
		"refererScheme": "Scheme of the HTTP request referer (http or https)",
		"requestHost": "HTTP Host of the web page URL",
		"requestPath": "Path of the web page URL",
		"requestScheme": "Scheme of the web page URL (http or https)",
		"siteTag": "The key value to identify a site",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent"
	},
	"AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountRumPageloadEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountRumPageloadEventsAdaptiveGroupsSum": {
		"__description": "",
		"visits": "The number of pages viewed by end-users that were initiated from a different website (i.e. where the Document.referrer does not match the hostname)"
	},
	"AccountRumPageloadEventsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"AccountRumPerformanceEventsAdaptiveGroups": {
		"__description": "Beta. Aggregated RUM performance event metrics with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of pages viewed by end-users",
		"dimensions": "List of dimensions to group by",
		"quantiles": "",
		"sum": ""
	},
	"AccountRumPerformanceEventsAdaptiveGroupsAvg": {
		"__description": "",
		"connectionTime": "Connection time",
		"dnsTime": "Domain lookup time",
		"firstContentfulPaint": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
		"firstPaint": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
		"loadEventTime": "The time taken for the load event",
		"pageLoadTime": "The time to download and display the entire content of a web page in the browser window",
		"pageRenderTime": "The time to download and display the entire content of a web page in the browser window",
		"requestTime": "The time between initiating the request and receiving the first byte of the response",
		"responseTime": "The time between receiving the first byte and the last byte of the response",
		"sampleInterval": "Average sample interval"
	},
	"AccountRumPerformanceEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of pages viewed by end-users, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountRumPerformanceEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"bot": "Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise.",
		"countryName": "Client country ISO 3166 alpha2 code",
		"customTagInternalSxg": "Signed Exchange enabled status",
		"date": "Request date from browser",
		"datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime from browser, truncated to the hour",
		"datetimeMinute": "Request datetime from browser, truncated to the minute",
		"deviceType": "Device type used for view the page",
		"refererHost": "Host of the HTTP request referer",
		"refererPath": "Path of the HTTP request referer",
		"refererScheme": "Scheme of the HTTP request referer (http or https)",
		"requestHost": "HTTP Host of the web page URL",
		"requestPath": "Path of the web page URL",
		"requestScheme": "Scheme of the web page URL (http or https)",
		"siteTag": "The key value to identify a site",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent"
	},
	"AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountRumPerformanceEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountRumPerformanceEventsAdaptiveGroupsQuantiles": {
		"__description": "",
		"connectionTimeP50": "Connection time",
		"connectionTimeP75": "Connection time",
		"connectionTimeP90": "Connection time",
		"connectionTimeP99": "Connection time",
		"dnsTimeP50": "Domain lookup time",
		"dnsTimeP75": "Domain lookup time",
		"dnsTimeP90": "Domain lookup time",
		"dnsTimeP99": "Domain lookup time",
		"firstContentfulPaintP50": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
		"firstContentfulPaintP75": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
		"firstContentfulPaintP90": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
		"firstContentfulPaintP99": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
		"firstPaintP50": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
		"firstPaintP75": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
		"firstPaintP90": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
		"firstPaintP99": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
		"loadEventTimeP50": "The time taken for the load event",
		"loadEventTimeP75": "The time taken for the load event",
		"loadEventTimeP90": "The time taken for the load event",
		"loadEventTimeP99": "The time taken for the load event",
		"pageLoadTimeP50": "The time to download and display the entire content of a web page in the browser window",
		"pageLoadTimeP75": "The time to download and display the entire content of a web page in the browser window",
		"pageLoadTimeP90": "The time to download and display the entire content of a web page in the browser window",
		"pageLoadTimeP99": "The time to download and display the entire content of a web page in the browser window",
		"pageRenderTimeP50": "The time to download and display the entire content of a web page in the browser window",
		"pageRenderTimeP75": "The time to download and display the entire content of a web page in the browser window",
		"pageRenderTimeP90": "The time to download and display the entire content of a web page in the browser window",
		"pageRenderTimeP99": "The time to download and display the entire content of a web page in the browser window",
		"requestTimeP50": "The time between initiating the request and receiving the first byte of the response",
		"requestTimeP75": "The time between initiating the request and receiving the first byte of the response",
		"requestTimeP90": "The time between initiating the request and receiving the first byte of the response",
		"requestTimeP99": "The time between initiating the request and receiving the first byte of the response",
		"responseTimeP50": "The time between receiving the first byte and the last byte of the response",
		"responseTimeP75": "The time between receiving the first byte and the last byte of the response",
		"responseTimeP90": "The time between receiving the first byte and the last byte of the response",
		"responseTimeP99": "The time between receiving the first byte and the last byte of the response"
	},
	"AccountRumPerformanceEventsAdaptiveGroupsSum": {
		"__description": "",
		"visits": "The number of pages viewed by end-users that were initiated from a different website (i.e. where the Document.referrer does not match the hostname)"
	},
	"AccountRumPerformanceEventsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"AccountRumWebVitalsEventsAdaptive": {
		"__description": "Beta. RUM Web Vitals event metrics with adaptive sampling",
		"bot": "Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise.",
		"countryName": "Client country ISO 3166 alpha2 code",
		"cumulativeLayoutShift": "Cumulative Layout Shift (Core Web Vitals) (-1 indicates N/A)",
		"cumulativeLayoutShiftCurrentRect": "Layout values of the rectangular area after the changes",
		"cumulativeLayoutShiftElement": "DOM selector name of the largest layout shift",
		"cumulativeLayoutShiftPath": "Observed path of the Cumulative Layout Shift (Core Web Vitals)",
		"cumulativeLayoutShiftPreviousRect": "Layout values of the rectangular area before the changes",
		"customTagInternalSxg": "Signed Exchange enabled status",
		"date": "Request date from browser",
		"datetime": "Request datetime from browser",
		"datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime from browser, truncated to the hour",
		"datetimeMinute": "Request datetime from browser, truncated to the minute",
		"deviceType": "Device type used for view the page",
		"refererHost": "Host of the HTTP request referer",
		"refererPath": "Path of the HTTP request referer",
		"refererScheme": "Scheme of the HTTP request referer (http or https)",
		"requestHost": "HTTP Host of the web page URL",
		"requestPath": "Path of the web page URL",
		"requestScheme": "Scheme of the web page URL (http or https)",
		"sampleInterval": "ABR sample interval",
		"siteTag": "The key value to identify a site",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent"
	},
	"AccountRumWebVitalsEventsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountRumWebVitalsEventsAdaptiveGroups": {
		"__description": "Beta. Aggregated RUM Web Vitals event metrics with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of pages viewed by end-users",
		"dimensions": "List of dimensions to group by",
		"quantiles": "",
		"sum": ""
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsAvg": {
		"__description": "",
		"cumulativeLayoutShift": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
		"firstContentfulPaint": "First Contentful Paint in microseconds (negative value indicates N/A)",
		"firstInputDelay": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"interactionToNextPaint": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
		"largestContentfulPaint": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"lcpElementRenderDelay": "Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A)",
		"lcpResourceLoadDelay": "Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A)",
		"lcpResourceLoadTime": "Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A)",
		"sampleInterval": "Average sample interval",
		"timeToFirstByte": "Time to First Byte in microseconds (negative value indicates N/A)"
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of pages viewed by end-users, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"bot": "Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise.",
		"countryName": "Client country ISO 3166 alpha2 code",
		"cumulativeLayoutShiftElement": "DOM selector name of the largest layout shift",
		"cumulativeLayoutShiftPath": "Observed path of the Cumulative Layout Shift (Core Web Vitals)",
		"customTagInternalSxg": "Signed Exchange enabled status",
		"date": "Request date from browser",
		"datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime from browser, truncated to the hour",
		"datetimeMinute": "Request datetime from browser, truncated to the minute",
		"deviceType": "Device type used for view the page",
		"firstInputDelayElement": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> DOM selector name of the input delay",
		"firstInputDelayName": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> Action name of the input delay",
		"firstInputDelayPath": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> Observed path of the First Input Delay (Core Web Vitals)",
		"interactionToNextPaintElement": "DOM selector name of the interaction",
		"interactionToNextPaintName": "Action name of the interaction",
		"interactionToNextPaintPath": "Observed path of the Cumulative Layout Shift (Core Web Vitals)",
		"largestContentfulPaintElement": "DOM selector name of the largest object",
		"largestContentfulPaintObjectHost": "Host of the largest object",
		"largestContentfulPaintObjectPath": "Path of the largest object",
		"largestContentfulPaintObjectScheme": "Scheme of the largest object (http or https)",
		"largestContentfulPaintPath": "Observed path of the Largest Contentful Paint (Core Web Vitals)",
		"lcpFetchPriority": "Fetch priority of the LCP element.",
		"lcpInitiatorType": "Initiator type of the LCP element.",
		"refererHost": "Host of the HTTP request referer",
		"refererPath": "Path of the HTTP request referer",
		"refererScheme": "Scheme of the HTTP request referer (http or https)",
		"requestHost": "HTTP Host of the web page URL",
		"requestPath": "Path of the web page URL",
		"requestScheme": "Scheme of the web page URL (http or https)",
		"siteTag": "The key value to identify a site",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent"
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsQuantiles": {
		"__description": "",
		"cumulativeLayoutShiftP50": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
		"cumulativeLayoutShiftP75": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
		"cumulativeLayoutShiftP90": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
		"cumulativeLayoutShiftP99": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
		"firstContentfulPaintP50": "First Contentful Paint in microseconds (negative value indicates N/A)",
		"firstContentfulPaintP75": "First Contentful Paint in microseconds (negative value indicates N/A)",
		"firstContentfulPaintP90": "First Contentful Paint in microseconds (negative value indicates N/A)",
		"firstContentfulPaintP99": "First Contentful Paint in microseconds (negative value indicates N/A)",
		"firstInputDelayP50": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"firstInputDelayP75": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"firstInputDelayP90": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"firstInputDelayP99": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"interactionToNextPaintP50": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
		"interactionToNextPaintP75": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
		"interactionToNextPaintP90": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
		"interactionToNextPaintP99": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
		"largestContentfulPaintP50": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"largestContentfulPaintP75": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"largestContentfulPaintP90": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"largestContentfulPaintP99": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
		"lcpElementRenderDelayP50": "Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A)",
		"lcpElementRenderDelayP75": "Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A)",
		"lcpElementRenderDelayP90": "Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A)",
		"lcpElementRenderDelayP99": "Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A)",
		"lcpResourceLoadDelayP50": "Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A)",
		"lcpResourceLoadDelayP75": "Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A)",
		"lcpResourceLoadDelayP90": "Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A)",
		"lcpResourceLoadDelayP99": "Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A)",
		"lcpResourceLoadTimeP50": "Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A)",
		"lcpResourceLoadTimeP75": "Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A)",
		"lcpResourceLoadTimeP90": "Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A)",
		"lcpResourceLoadTimeP99": "Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A)",
		"timeToFirstByteP50": "Time to First Byte in microseconds (negative value indicates N/A)",
		"timeToFirstByteP75": "Time to First Byte in microseconds (negative value indicates N/A)",
		"timeToFirstByteP90": "Time to First Byte in microseconds (negative value indicates N/A)",
		"timeToFirstByteP99": "Time to First Byte in microseconds (negative value indicates N/A)"
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsSum": {
		"__description": "",
		"clsGood": "Cumulative Layout Shift (Core Web Vitals), count of Good occurrences (under 0.1)",
		"clsNeedsImprovement": "Cumulative Layout Shift (Core Web Vitals), count of Needs Improvement occurrences (between 0.1 and 0.25)",
		"clsPoor": "Cumulative Layout Shift (Core Web Vitals), count of Poor occurrences (over 0.25)",
		"clsTotal": "Cumulative Layout Shift (Core Web Vitals), total count",
		"fcpGood": "First Contentful Paint, count of Good occurrences (under 1.8 s)",
		"fcpNeedsImprovement": "First Contentful Paint, count of Needs Improvement occurrences (between 1.8 s and 3 s)",
		"fcpPoor": "First Contentful Paint, count of Poor occurrences (over 3 s)",
		"fcpTotal": "First Contentful Paint, total count",
		"fidGood": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals), count of Good occurrences (under 100 ms)",
		"fidNeedsImprovement": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals), count of Needs Improvement occurrences (between 100 ms and 300ms)",
		"fidPoor": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals), count of Poor occurrences (over 300 ms)",
		"fidTotal": "<small>DEPRECATED (FirstInputDelay is replaced by InteractionToNextPaint. Please use INP instead.):</small> First Input Delay (Core Web Vitals), total count",
		"inpGood": "Interaction to Next Paint, count of Good occurrences (under 200 ms)",
		"inpNeedsImprovement": "Interaction to Next Paint, count of Needs Improvement occurrences (between 200 ms and 500ms)",
		"inpPoor": "Interaction to Next Paint, count of Poor occurrences (over 500 ms)",
		"inpTotal": "Interaction to Next Paint, total count",
		"lcpGood": "Largest Contentful Paint (Core Web Vitals), count of Good occurrences (under 2.5 sec)",
		"lcpNeedsImprovement": "Largest Contentful Paint (Core Web Vitals), count of Needs Improvement occurrences (between 2.5 sec and 4.0 sec)",
		"lcpPoor": "Largest Contentful Paint (Core Web Vitals), count of Poor occurrences (over 4.0 sec)",
		"lcpTotal": "Largest Contentful Paint (Core Web Vitals), total count",
		"ttfbGood": "Time to First Byte, count of Good occurrences (under 800 ms)",
		"ttfbNeedsImprovement": "Time to First Byte, count of Needs Improvement occurrences (between 800 ms and 1800ms)",
		"ttfbPoor": "Time to First Byte, count of Poor occurrences (over 500 ms)",
		"ttfbTotal": "Time to First Byte, total count",
		"visits": "The number of pages viewed by end-users that were initiated from a different website (i.e. where the Document.referrer does not match the hostname)"
	},
	"AccountRumWebVitalsEventsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"clsGood": "Confidence interval for the corresponding point estimate",
		"clsNeedsImprovement": "Confidence interval for the corresponding point estimate",
		"clsPoor": "Confidence interval for the corresponding point estimate",
		"clsTotal": "Confidence interval for the corresponding point estimate",
		"fcpGood": "Confidence interval for the corresponding point estimate",
		"fcpNeedsImprovement": "Confidence interval for the corresponding point estimate",
		"fcpPoor": "Confidence interval for the corresponding point estimate",
		"fcpTotal": "Confidence interval for the corresponding point estimate",
		"inpGood": "Confidence interval for the corresponding point estimate",
		"inpNeedsImprovement": "Confidence interval for the corresponding point estimate",
		"inpPoor": "Confidence interval for the corresponding point estimate",
		"inpTotal": "Confidence interval for the corresponding point estimate",
		"lcpGood": "Confidence interval for the corresponding point estimate",
		"lcpNeedsImprovement": "Confidence interval for the corresponding point estimate",
		"lcpPoor": "Confidence interval for the corresponding point estimate",
		"lcpTotal": "Confidence interval for the corresponding point estimate",
		"ttfbGood": "Confidence interval for the corresponding point estimate",
		"ttfbNeedsImprovement": "Confidence interval for the corresponding point estimate",
		"ttfbPoor": "Confidence interval for the corresponding point estimate",
		"ttfbTotal": "Confidence interval for the corresponding point estimate",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"AccountRumWebVitalsEventsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountSettings": {
		"__description": "Access and limitations for an account",
		"MagicWANConnectorMetricsAdaptiveGroups": "",
		"accessLoginRequestsAdaptiveGroups": "",
		"advancedDnsProtectionNetworkAnalyticsAdaptiveGroups": "",
		"advancedTcpProtectionNetworkAnalyticsAdaptiveGroups": "",
		"aegisIpUtilizationAdaptiveGroups": "",
		"aiGatewayCacheAdaptiveGroups": "",
		"aiGatewayErrorsAdaptiveGroups": "",
		"aiGatewayRequestsAdaptiveGroups": "",
		"aiGatewaySizeAdaptiveGroups": "",
		"aiInferenceAdaptive": "",
		"aiInferenceAdaptiveGroups": "",
		"autoRAGConfigAPIAdaptiveGroups": "",
		"autoRAGEngineAdaptiveGroups": "",
		"browserIsolationSessionsAdaptiveGroups": "",
		"browserIsolationUserActionsAdaptiveGroups": "",
		"browserRenderingApiAdaptiveGroups": "",
		"browserRenderingBindingSessionsAdaptiveGroups": "",
		"browserRenderingBrowserTimeUsageAdaptiveGroups": "",
		"browserRenderingEventsAdaptive": "",
		"browserRenderingEventsAdaptiveGroups": "",
		"callsStatusAdaptive": "",
		"callsTurnUsageAdaptiveGroups": "",
		"callsUsageAdaptiveGroups": "",
		"cdnNetworkAnalyticsAdaptiveGroups": "",
		"cloudchamberMetricsAdaptiveGroups": "",
		"cloudflareTunnelsAnalyticsAdaptiveGroups": "",
		"containersMetricsAdaptiveGroups": "",
		"d1AnalyticsAdaptiveGroups": "",
		"d1QueriesAdaptiveGroups": "",
		"d1StorageAdaptiveGroups": "",
		"dnsAnalyticsAdaptive": "",
		"dnsAnalyticsAdaptiveGroups": "",
		"dnsFirewallAnalyticsAdaptive": "",
		"dnsFirewallAnalyticsAdaptiveGroups": "",
		"dosdAttackAnalyticsGroups": "",
		"dosdNetworkAnalyticsAdaptiveGroups": "",
		"durableObjectsInvocationsAdaptiveGroups": "",
		"durableObjectsPeriodicGroups": "",
		"durableObjectsSqlStorageGroups": "",
		"durableObjectsStorageGroups": "",
		"durableObjectsSubrequestsAdaptiveGroups": "",
		"fbmAttackAnalyticsGroups": "",
		"firewallEventsAdaptive": "",
		"firewallEventsAdaptiveGroups": "",
		"flowtrackdNetworkAnalyticsAdaptiveGroups": "",
		"gatewayL4DownstreamSessionsAdaptiveGroups": "",
		"gatewayL4SessionsAdaptiveGroups": "",
		"gatewayL4UpstreamSessionsAdaptiveGroups": "",
		"gatewayL7RequestsAdaptiveGroups": "",
		"gatewayResolverByCategoryAdaptiveGroups": "",
		"gatewayResolverByCustomResolverGroups": "",
		"gatewayResolverByRuleExecutionPerformanceAdaptiveGroups": "",
		"gatewayResolverQueriesAdaptiveGroups": "",
		"httpRequests1dGroups": "",
		"httpRequests1hGroups": "",
		"httpRequests1mGroups": "",
		"httpRequestsAdaptive": "",
		"httpRequestsAdaptiveGroups": "",
		"httpRequestsOverviewAdaptiveGroups": "",
		"hyperdriveQueriesAdaptiveGroups": "",
		"imagesRequestsAdaptiveGroups": "",
		"imagesUniqueTransformations": "",
		"kvOperationsAdaptiveGroups": "",
		"kvStorageAdaptiveGroups": "",
		"liveInputEventsAdaptive": "",
		"liveInputEventsAdaptiveGroups": "",
		"logExplorerIngestionAdaptiveGroups": "",
		"logpushHealthAdaptiveGroups": "",
		"magicEndpointHealthCheckAdaptiveGroups": "",
		"magicFirewallNetworkAnalyticsAdaptiveGroups": "",
		"magicFirewallRateLimitNetworkAnalyticsAdaptiveGroups": "",
		"magicFirewallSamplesAdaptiveGroups": "",
		"magicIDPSNetworkAnalyticsAdaptiveGroups": "",
		"magicTransitNetworkAnalyticsAdaptiveGroups": "",
		"magicTransitTunnelHealthCheckSLOsAdaptiveGroups": "",
		"magicTransitTunnelHealthChecksAdaptiveGroups": "",
		"magicTransitTunnelTrafficAdaptiveGroups": "",
		"mconnTelemetryEventsAdaptiveGroups": "",
		"mconnTelemetryEventsStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotDhcpLeasesAdaptiveGroups": "",
		"mconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotDisksAdaptiveGroups": "",
		"mconnTelemetrySnapshotDisksStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotInterfaceAddressesAdaptiveGroups": "",
		"mconnTelemetrySnapshotInterfaceAddressesStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotInterfacesAdaptiveGroups": "",
		"mconnTelemetrySnapshotInterfacesStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotMountsAdaptiveGroups": "",
		"mconnTelemetrySnapshotMountsStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotNetdevsAdaptiveGroups": "",
		"mconnTelemetrySnapshotNetdevsStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotThermalsAdaptiveGroups": "",
		"mconnTelemetrySnapshotThermalsStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotTunnelsAdaptiveGroups": "",
		"mconnTelemetrySnapshotTunnelsStagingAdaptiveGroups": "",
		"mconnTelemetrySnapshotsAdaptiveGroups": "",
		"mconnTelemetrySnapshotsStagingAdaptiveGroups": "",
		"mediaUniqueTransformations": "",
		"mnmAWSVPCFlowDataAdaptiveGroups": "",
		"mnmFlowDataAdaptiveGroups": "",
		"nelReportsAdaptiveGroups": "",
		"ohttpMetricsAdaptive": "",
		"ohttpMetricsAdaptiveGroups": "",
		"pagesFunctionsInvocationsAdaptiveGroups": "",
		"pipelinesDeliveryAdaptiveGroups": "",
		"pipelinesIngestionAdaptiveGroups": "",
		"pipelinesOperatorAdaptiveGroups": "",
		"pipelinesOperatorStagingAdaptiveGroups": "",
		"pipelinesSinkAdaptiveGroups": "",
		"pipelinesSinkStagingAdaptiveGroups": "",
		"queueBacklogAdaptiveGroups": "",
		"queueConsumerMetricsAdaptiveGroups": "",
		"queueDelayedBacklogAdaptiveGroups": "",
		"queueMessageOperationsAdaptiveGroups": "",
		"r2OperationsAdaptiveGroups": "",
		"r2StorageAdaptiveGroups": "",
		"rumPageloadEventsAdaptiveGroups": "",
		"rumPerformanceEventsAdaptiveGroups": "",
		"rumWebVitalsEventsAdaptive": "",
		"rumWebVitalsEventsAdaptiveGroups": "",
		"sinkholeRequestLogsAdaptive": "",
		"sinkholeRequestLogsAdaptiveGroups": "",
		"sippyOperationsAdaptiveGroups": "",
		"spectrumNetworkAnalyticsAdaptiveGroups": "",
		"storageTraces": "",
		"streamCMCDAdaptiveGroups": "",
		"streamMinutesViewedAdaptiveGroups": "",
		"turnstileAdaptiveGroups": "",
		"vectorizeQueriesAdaptiveGroups": "",
		"vectorizeStorageAdaptiveGroups": "",
		"vectorizeV2OperationsAdaptiveGroups": "",
		"vectorizeV2QueriesAdaptiveGroups": "",
		"vectorizeV2StorageAdaptiveGroups": "",
		"vectorizeV2WritesAdaptiveGroups": "",
		"videoBufferEventsAdaptiveGroups": "",
		"videoPlaybackEventsAdaptiveGroups": "",
		"videoQualityEventsAdaptiveGroups": "",
		"warpDeviceAdaptiveGroups": "",
		"workerPlacementAdaptiveGroups": "",
		"workersAnalyticsEngineAdaptiveGroups": "",
		"workersBuildsBuildMinutesAdaptiveGroups": "",
		"workersInvocationsAdaptive": "",
		"workersInvocationsScheduled": "",
		"workersOverviewDataAdaptiveGroups": "",
		"workersOverviewRequestsAdaptiveGroups": "",
		"workersSubrequestsAdaptiveGroups": "",
		"workflowsAdaptive": "",
		"workflowsAdaptiveGroups": "",
		"zarazTrackAdaptiveGroups": "",
		"zarazTriggersAdaptiveGroups": "",
		"zeroTrustPrivateNetworkDiscoveryGroups": ""
	},
	"AccountSinkholeRequestLogsAdaptive": {
		"__description": "Sinkhole Request Logs",
		"body": "The request body",
		"datetime": "The date and time the event was recorded",
		"destinationAddress": "The destination IP address of the request",
		"headers": "The request headers. If a header has multiple values, the values are comma separated. Each header is newline separated.",
		"host": "The host the request was sent to",
		"method": "The request method",
		"r2Path": "The path to the object within the R2 bucket linked to this sinkhole that stores overflow body and header data. Blank if neither headers nor body was larger than 256 bytes.",
		"referrer": "The referrer of the request",
		"sampleInterval": "ABR sample interval",
		"sinkholeId": "The ID of the sinkhole that logged the request",
		"sourceAddress": "The sender's IP address",
		"uri": "The request uri",
		"url": "The request url",
		"userAgent": "The request user agent"
	},
	"AccountSinkholeRequestLogsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountSinkholeRequestLogsAdaptiveGroups": {
		"__description": "Sinkhole Request Logs",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of requests logged",
		"dimensions": "List of dimensions to group by"
	},
	"AccountSinkholeRequestLogsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of requests logged, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountSinkholeRequestLogsAdaptiveGroupsDimensions": {
		"__description": "",
		"body": "The request body",
		"datetime": "The date and time the event was recorded",
		"destinationAddress": "The destination IP address of the request",
		"headers": "The request headers. If a header has multiple values, the values are comma separated. Each header is newline separated.",
		"host": "The host the request was sent to",
		"method": "The request method",
		"r2Path": "The path to the object within the R2 bucket linked to this sinkhole that stores overflow body and header data. Blank if neither headers nor body was larger than 256 bytes.",
		"referrer": "The referrer of the request",
		"sinkholeId": "The ID of the sinkhole that logged the request",
		"sourceAddress": "The sender's IP address",
		"uri": "The request uri",
		"url": "The request url",
		"userAgent": "The request user agent"
	},
	"AccountSinkholeRequestLogsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountSinkholeRequestLogsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountSinkholeRequestLogsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountSippyOperationsAdaptiveGroups": {
		"__description": "Sippy operations with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of Sippy operations",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountSippyOperationsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of Sippy operations, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountSippyOperationsAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "Operation's name",
		"bucket": "Name of the R2 bucket",
		"date": "Operation timestamp, truncated to start of a day",
		"datetime": "Operation timestamp",
		"datetimeHour": "Operation timestamp, truncated to start of an hour",
		"datetimeMinute": "Operation timestamp, truncated to start of an minute",
		"initiator": "Operation's initiator (eyeball / Sippy)",
		"object": "Object key the operation was made for",
		"size": "Number of bytes transferred as part of the operation",
		"status": "Operation's response HTTP code",
		"target": "Operation's target (upstream / R2)"
	},
	"AccountSippyOperationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountSippyOperationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountSippyOperationsAdaptiveGroupsSum": {
		"__description": "",
		"size": "Total bytes transferred"
	},
	"AccountSippyOperationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"size": "Confidence interval for the corresponding point estimate"
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroups": {
		"__description": "Network analytics data for Spectrum traffic",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
		"bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
		"bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
		"bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
		"bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
		"bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
		"bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
		"packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
		"packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
		"packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
		"packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
		"packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
		"packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
		"packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsAvgConfidence": {
		"__description": "",
		"bitRate": "Confidence interval for the corresponding point estimate",
		"bitRateDay": "Confidence interval for the corresponding point estimate",
		"bitRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"bitRateHour": "Confidence interval for the corresponding point estimate",
		"bitRateMinute": "Confidence interval for the corresponding point estimate",
		"bitRateTenSeconds": "Confidence interval for the corresponding point estimate",
		"packetRate": "Confidence interval for the corresponding point estimate",
		"packetRateDay": "Confidence interval for the corresponding point estimate",
		"packetRateFifteenMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateFiveMinutes": "Confidence interval for the corresponding point estimate",
		"packetRateHour": "Confidence interval for the corresponding point estimate",
		"packetRateMinute": "Confidence interval for the corresponding point estimate",
		"packetRateTenSeconds": "Confidence interval for the corresponding point estimate"
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"avg": "The average of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"applicationTag": "Application tag associated with the packet",
		"coloCity": "City where the Cloudflare datacenter that received the packet is located",
		"coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
		"coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
		"coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
		"coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
		"date": "Date that the packet was received",
		"datetime": "Date and time that the packet was received",
		"datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
		"datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
		"datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
		"datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
		"datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
		"destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
		"destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
		"destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
		"destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
		"destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
		"direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
		"ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
		"greChecksum": "Value of the Checkusm header field in the GRE packet",
		"greEthertype": "Value of the Ethertype header field in the GRE packet",
		"greHeaderLength": "Length of the GRE packet header, in bytes",
		"greKey": "Value of the Key header field in the GRE packet",
		"greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
		"greVersion": "Value of the Version header field in the GRE packet",
		"icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
		"icmpCode": "Value of the Code header field in the ICMP packet",
		"icmpType": "Value of the Type header field in the ICMP packet",
		"ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
		"ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
		"ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
		"ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
		"ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
		"ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
		"ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
		"ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
		"ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
		"ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
		"ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
		"ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
		"ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
		"ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
		"ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
		"ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
		"ipv4Identification": "Value of the Identification header field in the IPv4 packet",
		"ipv4Options": "List of Options numbers included in the IPv4 packet header",
		"ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
		"ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
		"ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
		"ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
		"ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
		"leaseTag": "IP lease tag associated with the packet",
		"mitigationSystem": "Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall)",
		"outcome": "The action that was taken on the packet (possible values: pass, drop)",
		"prefixTag": "IP prefix tag associated with the packet",
		"sampleInterval": "ABR sample interval",
		"sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
		"sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
		"sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
		"sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
		"sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
		"tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
		"tcpChecksum": "Value of the Checkusm header field in the TCP packet",
		"tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
		"tcpFlags": "Value of the Flags header field in the TCP packet",
		"tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
		"tcpMss": "Value of the MSS option header field in the TCP packet",
		"tcpOptions": "List of Options numbers included in the TCP packet header",
		"tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
		"tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
		"tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
		"tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
		"tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
		"tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
		"tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
		"tcpWindowSize": "Value of the Window Size header field in the TCP packet",
		"udpChecksum": "Value of the Checkusm header field in the UDP packet",
		"udpPayloadLength": "Value of the Payload Length header field in the UDP packet"
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"bits": "Sum of bits received",
		"packets": "Sum of packets received"
	},
	"AccountSpectrumNetworkAnalyticsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bits": "Confidence interval for the corresponding point estimate",
		"packets": "Confidence interval for the corresponding point estimate"
	},
	"AccountStorageTraces": {
		"__description": "Storage Tracing Information",
		"containerId": "The container that this resource is stored under.",
		"datetime": "Storage trace timestamp",
		"resourceId": "The identifier to access this resource in the container.",
		"serviceId": "The identifier of the storage service that houses the resourse.",
		"traceId": "The ID that this trace entry is under.",
		"userAccountId": "The AccountID of the user who owns the resource."
	},
	"AccountStorageTracesFilter_InputObject": {
		"__description": ""
	},
	"AccountStorageTracesOrderBy": {
		"__description": ""
	},
	"AccountStreamCMCDAdaptiveGroups": {
		"__description": "Stream CMCD data",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"max": "The maximum value for a metric per dimension",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension",
		"uniq": "The number of unique values for a metric per dimension"
	},
	"AccountStreamCMCDAdaptiveGroupsAvg": {
		"__description": "",
		"bufferLength": "Average buffer length",
		"bufferStarvationDuration": "Average buffer starvation duration in milliseconds",
		"encodedBitrate": "Average encoded bitrate",
		"initialBufferStarvationDuration": "Average buffer starvation duration at the start of viewing in milliseconds",
		"measuredThroughput": "Average throughput"
	},
	"AccountStreamCMCDAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountStreamCMCDAdaptiveGroupsDimensions": {
		"__description": "",
		"bufferLength": "Buffer length of the requested object",
		"bufferStarvation": "1 if the buffer was starved between the last request and this request, 0 if not",
		"bufferStarvationDuration": "Buffer starvation duration in milliseconds",
		"contentId": "Content ID",
		"country": "Viewer country",
		"creatorId": "Creator ID",
		"datetime": "Ingest event timestamp",
		"datetimeFifteenMinutes": "The date and time of the ingest event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the ingest event truncated to five minutes",
		"datetimeHour": "The date and time of the ingest event truncated to the hour",
		"datetimeMinute": "The date and time of the ingest event truncated to the minute",
		"datetimeSixHours": "The date and time of the ingest event truncated to the start of the six hour window",
		"encodedBitrate": "Encoded bitrate of the requested object",
		"hlsType": "HLS type, hls if HLS, ll-hls if LL-HLS, otherwise blank",
		"initialBufferStarvationDuration": "Initial buffer starvation duration in milliseconds",
		"inputId": "Input ID",
		"measuredThroughput": "Throughput between client and server",
		"objectDuration": "Playback duration in ms of the requested object",
		"playbackRate": "1 if real-time, 2 if 2x speed, 0 if not playing",
		"resolution": "Resolution",
		"sessionId": "Session ID",
		"startup": "1 if request object is needed for startup, 0 if not",
		"streamType": "l for live, v for video on demand (VOD)",
		"streamingFormat": "h if HLS or LL-HLS, d if DASH",
		"topBitrate": "Highest available bitrate rendition",
		"videoId": "Video ID"
	},
	"AccountStreamCMCDAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountStreamCMCDAdaptiveGroupsMax": {
		"__description": "",
		"latestDatetime": "Last time this dimension combination was seen"
	},
	"AccountStreamCMCDAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountStreamCMCDAdaptiveGroupsQuantiles": {
		"__description": "",
		"bufferStarvationDurationP50": "50th percentile buffer starvation duration in milliseconds",
		"bufferStarvationDurationP75": "75th percentile buffer starvation duration in milliseconds",
		"bufferStarvationDurationP90": "90th percentile buffer starvation duration in milliseconds",
		"bufferStarvationDurationP99": "99th percentile buffer starvation duration in milliseconds",
		"initialBufferStarvationDurationP50": "50th percentile initial buffer starvation duration in milliseconds",
		"initialBufferStarvationDurationP75": "75th percentile initial buffer starvation duration in milliseconds",
		"initialBufferStarvationDurationP90": "90th percentile initial buffer starvation duration in milliseconds",
		"initialBufferStarvationDurationP99": "99th percentile initial buffer starvation duration in milliseconds"
	},
	"AccountStreamCMCDAdaptiveGroupsSum": {
		"__description": "",
		"millisecondsViewed": "Estimated time viewed in milliseconds"
	},
	"AccountStreamCMCDAdaptiveGroupsSumConfidence": {
		"__description": "",
		"millisecondsViewed": "Confidence interval for the corresponding point estimate"
	},
	"AccountStreamCMCDAdaptiveGroupsUniq": {
		"__description": "",
		"viewers": "The number of unique viewers"
	},
	"AccountStreamMinutesViewedAdaptiveGroups": {
		"__description": "A high-level summary of Cloudflare Stream minutes viewed.",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountStreamMinutesViewedAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountStreamMinutesViewedAdaptiveGroupsDimensions": {
		"__description": "",
		"clientCountryName": "ISO 3166 alpha2 country code from the client",
		"creator": "Customer-provided creator ID of a video",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"mediaType": "The source of the minutes viewed",
		"uid": "Unique ID of a video"
	},
	"AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountStreamMinutesViewedAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountStreamMinutesViewedAdaptiveGroupsSum": {
		"__description": "",
		"minutesViewed": ""
	},
	"AccountTurnstileAdaptiveGroups": {
		"__description": "Beta. Cloudflare Turnstile aggregated events with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of Cloudflare Turnstile events processed",
		"dimensions": "List of dimensions to group by"
	},
	"AccountTurnstileAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountTurnstileAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of Cloudflare Turnstile events processed, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountTurnstileAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "The action tag tied to that challenge event",
		"asn": "ASN tied to that Turnstile event",
		"browserMajor": "Major version of the browser tied to that Turnstile event",
		"browserName": "Browser name tied to that Turnstile event",
		"countryCode": "2 character country code tied to that Turnstile event",
		"date": "The date the challenge event was emitted",
		"datetime": "The date and time the challenge event was emitted",
		"datetimeDay": "The date and time the challenge event was emitted truncated to the day",
		"datetimeFifteenMinutes": "The date and time the challenge event was emitted truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the challenge event was emitted truncated to a multiple of 5 minutes",
		"datetimeHalfOfHour": "The date and time the challenge event was emitted truncated to a multiple of 30 minutes",
		"datetimeHour": "The date and time the challenge event was emitted truncated to the hour",
		"datetimeMinute": "The date and time the challenge event was emitted truncated to the minute",
		"eventType": "The type of the Cloudflare Turnstile event",
		"hostname": "Hostname tied to that Turnstile event",
		"ipv4": "IPv4 tied to that Turnstile event",
		"ipv6": "IPv6 tied to that Turnstile event",
		"osMajor": "Major version of the OS tied to that Turnstile event",
		"osName": "OS name tied to that Turnstile event",
		"siteKey": "The sitekey of the widget associated with the event",
		"userAgent": "User agent tied to that Turnstile event"
	},
	"AccountTurnstileAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountTurnstileAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVectorizeQueriesAdaptiveGroups": {
		"__description": "Beta. Vectorize usage with adaptive sampling",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountVectorizeQueriesAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Vectorize storage sample timestamp",
		"datetimeHour": "Vectorize storage sample timestamp, truncated to the hour",
		"vectorizeIndexId": "Identifier for a Vectorize index"
	},
	"AccountVectorizeQueriesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVectorizeQueriesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVectorizeQueriesAdaptiveGroupsSum": {
		"__description": "",
		"queriedVectorDimensions": "The number of queried vector dimensions in Vectorize over the queried time period."
	},
	"AccountVectorizeStorageAdaptiveGroups": {
		"__description": "Beta. Vectorize storage with adaptive sampling",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountVectorizeStorageAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Vectorize storage sample timestamp",
		"datetimeHour": "Vectorize storage sample timestamp, truncated to the hour",
		"vectorizeIndexId": "Identifier for a Vectorize index"
	},
	"AccountVectorizeStorageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVectorizeStorageAdaptiveGroupsMax": {
		"__description": "",
		"storedVectorDimensions": "The maximum number of stored vector dimensions in Vectorize over the queried time period."
	},
	"AccountVectorizeStorageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVectorizeV2OperationsAdaptiveGroups": {
		"__description": "Vectorize operations with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of Vectorize operations",
		"dimensions": "List of dimensions to group by"
	},
	"AccountVectorizeV2OperationsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of Vectorize operations, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountVectorizeV2OperationsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Vectorize operation event timestamp, truncated to start of a day",
		"datetime": "Vectorize operation event timestamp",
		"datetimeHour": "Vectorize operation event timestamp, truncated to start of hour",
		"datetimeMinute": "Vectorize operation event timestamp, truncated to start of minute",
		"indexName": "Name of a Vectorize index",
		"operation": "The type of Vectorize operation",
		"requestStatus": "Request status. One of [2xx, 4xx, 5xx, unknown]"
	},
	"AccountVectorizeV2OperationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVectorizeV2OperationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVectorizeV2QueriesAdaptiveGroups": {
		"__description": "Vectorize queries with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of Vectorize queries",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsAvg": {
		"__description": "",
		"requestDurationMs": "Average latency (in milliseconds) of serving a Vectorize query"
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of Vectorize queries, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Vectorize queries event timestamp, truncated to start of a day",
		"datetime": "Vectorize queries event timestamp",
		"datetimeHour": "Vectorize queries event timestamp, truncated to start of hour",
		"datetimeMinute": "Vectorize queries event timestamp, truncated to start of minute",
		"indexName": "Name of a Vectorize index",
		"operation": "The type of Vectorize operation",
		"requestStatus": "Request status. One of [2xx, 4xx, 5xx, unknown]"
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsQuantiles": {
		"__description": "",
		"requestDurationMsP25": "25th percentile latency (milliseconds)",
		"requestDurationMsP50": "50th percentile latency (milliseconds)",
		"requestDurationMsP75": "75th percentile latency (milliseconds)",
		"requestDurationMsP95": "95th percentile latency (milliseconds)",
		"requestDurationMsP99": "99th percentile latency (milliseconds)"
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsSum": {
		"__description": "",
		"queriedVectorDimensions": "The number of queried vector dimensions in Vectorize over the queried time period. This metric must always be fetched along with the 'indexName' and 'datetime' dimensions, as well as a 'requestStatus:2xx' filter to estimate billable usage.",
		"requestDurationMs": "Total latency (in milliseconds) of serving Vectorize queries over the queried time period",
		"servedVectorCount": "The number of vectors served in Vectorize queries over the queried time period."
	},
	"AccountVectorizeV2QueriesAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requestDurationMs": "Confidence interval for the corresponding point estimate",
		"servedVectorCount": "Confidence interval for the corresponding point estimate"
	},
	"AccountVectorizeV2StorageAdaptiveGroups": {
		"__description": "Vectorize storage with adaptive sampling",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"AccountVectorizeV2StorageAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Vectorize storage event timestamp, truncated to start of a day",
		"datetime": "Vectorize storage event timestamp",
		"datetimeHour": "Vectorize storage event timestamp, truncated to start of hour",
		"datetimeMinute": "Vectorize storage event timestamp, truncated to start of minute",
		"indexName": "Name of a Vectorize index"
	},
	"AccountVectorizeV2StorageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVectorizeV2StorageAdaptiveGroupsMax": {
		"__description": "",
		"storedVectorDimensions": "The maximum number of stored vector dimensions in Vectorize over the queried time period.",
		"vectorCount": "The maximum number of stored vectors in Vectorize over the queried time period."
	},
	"AccountVectorizeV2StorageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVectorizeV2WritesAdaptiveGroups": {
		"__description": "Vectorize writes with adaptive sampling",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of Vectorize writes",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountVectorizeV2WritesAdaptiveGroupsAvg": {
		"__description": "",
		"requestDurationMs": "Average latency (in milliseconds) of serving a Vectorize write"
	},
	"AccountVectorizeV2WritesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of Vectorize writes, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountVectorizeV2WritesAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Vectorize write event timestamp, truncated to start of a day",
		"datetime": "Vectorize write event timestamp",
		"datetimeHour": "Vectorize write event timestamp, truncated to start of hour",
		"datetimeMinute": "Vectorize write event timestamp, truncated to start of minute",
		"indexName": "Name of a Vectorize index",
		"operation": "The type of Vectorize operation",
		"requestStatus": "Request status. One of [2xx, 4xx, 5xx, unknown]"
	},
	"AccountVectorizeV2WritesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVectorizeV2WritesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVectorizeV2WritesAdaptiveGroupsQuantiles": {
		"__description": "",
		"requestDurationMsP25": "25th percentile latency (milliseconds)",
		"requestDurationMsP50": "50th percentile latency (milliseconds)",
		"requestDurationMsP75": "75th percentile latency (milliseconds)",
		"requestDurationMsP95": "95th percentile latency (milliseconds)",
		"requestDurationMsP99": "99th percentile latency (milliseconds)"
	},
	"AccountVectorizeV2WritesAdaptiveGroupsSum": {
		"__description": "",
		"addedVectorCount": "The number of vectors added in Vectorize writes over the queried time period.",
		"deletedVectorCount": "The number of vectors deleted in Vectorize writes over the queried time period.",
		"requestDurationMs": "Total latency (in milliseconds) of serving Vectorize writes over the queried time period"
	},
	"AccountVectorizeV2WritesAdaptiveGroupsSumConfidence": {
		"__description": "",
		"addedVectorCount": "Confidence interval for the corresponding point estimate",
		"deletedVectorCount": "Confidence interval for the corresponding point estimate",
		"requestDurationMs": "Confidence interval for the corresponding point estimate"
	},
	"AccountVideoBufferEventsAdaptiveGroups": {
		"__description": "Beta. Aggregated video streaming buffer event metrics with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of buffer events",
		"dimensions": "List of dimensions to group by"
	},
	"AccountVideoBufferEventsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountVideoBufferEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of buffer events, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountVideoBufferEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"clientCountryName": "ISO 3166 alpha2 country code from the client",
		"date": "Request date of the event",
		"datetime": "Request datetime of the event",
		"datetimeFifteenMinutes": "Request datetime of the event, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime of the event, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime of the event, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime of the event, truncated to the hour",
		"datetimeMinute": "Request datetime of the event, truncated to the minute",
		"deviceBrowser": "Browser of the device used in playback",
		"deviceOs": "OS of the device used in playback",
		"deviceType": "Device type used in playback",
		"uid": "unique id for a video"
	},
	"AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVideoBufferEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVideoPlaybackEventsAdaptiveGroups": {
		"__description": "Beta. Aggregated video streaming playback event metrics with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of playback starts",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountVideoPlaybackEventsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountVideoPlaybackEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of playback starts, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountVideoPlaybackEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"clientCountryName": "ISO 3166 alpha2 country code from the client",
		"date": "Request date of the event",
		"datetime": "Request datetime of the event",
		"datetimeFifteenMinutes": "Request datetime of the event, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime of the event, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime of the event, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime of the event, truncated to the hour",
		"datetimeMinute": "Request datetime of the event, truncated to the minute",
		"deviceBrowser": "Browser of the device used in playback",
		"deviceOs": "OS of the device used in playback",
		"deviceType": "Device type used in playback",
		"uid": "unique id for a video"
	},
	"AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVideoPlaybackEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountVideoPlaybackEventsAdaptiveGroupsSum": {
		"__description": "",
		"timeViewedMinutes": "Total time viewed in minutes"
	},
	"AccountVideoPlaybackEventsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"timeViewedMinutes": "Confidence interval for the corresponding point estimate"
	},
	"AccountVideoQualityEventsAdaptiveGroups": {
		"__description": "Beta. Aggregated video streaming quality change event metrics with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Total number of quality change events",
		"dimensions": "List of dimensions to group by"
	},
	"AccountVideoQualityEventsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"AccountVideoQualityEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Total number of quality change events, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountVideoQualityEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"clientCountryName": "ISO 3166 alpha2 country code from the client",
		"date": "Request date of the event",
		"datetime": "Request datetime of the event",
		"datetimeFifteenMinutes": "Request datetime of the event, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime of the event, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime of the event, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime of the event, truncated to the hour",
		"datetimeMinute": "Request datetime of the event, truncated to the minute",
		"deviceBrowser": "Browser of the device used in playback",
		"deviceOs": "OS of the device used in playback",
		"deviceType": "Device type used in playback",
		"qualityResolution": "Video playback vertical resolution",
		"uid": "unique id for a video"
	},
	"AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountVideoQualityEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWarpDeviceAdaptiveGroups": {
		"__description": "Beta. Warp device health events with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of device health events, which usually occur at 2m intervals per device",
		"dimensions": "List of dimensions to group by",
		"uniq": ""
	},
	"AccountWarpDeviceAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of device health events, which usually occur at 2m intervals per device, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountWarpDeviceAdaptiveGroupsDimensions": {
		"__description": "",
		"clientPlatform": "Device's OS",
		"clientVersion": "Device's Warp version",
		"colo": "Device's connected colo",
		"date": "The date of the device log",
		"datetime": "The date and time of the device log",
		"datetimeFiveMinute": "The date and time of the device log truncated to every five minutes",
		"datetimeHour": "The date and time of the device log truncated to the hour",
		"datetimeTenMinute": "The date and time of the device log truncated to every ten minutes",
		"deviceId": "Device ID",
		"mode": "Device's Warp mode",
		"status": "Device connection status"
	},
	"AccountWarpDeviceAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWarpDeviceAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWarpDeviceAdaptiveGroupsUniq": {
		"__description": "",
		"deviceIds": "Approximate count of unique deviceIds"
	},
	"AccountWorkerPlacementAdaptiveGroups": {
		"__description": "Worker placement metrics",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountWorkerPlacementAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountWorkerPlacementAdaptiveGroupsDimensions": {
		"__description": "",
		"clientColoCode": "IATA airport code for the Cloudflare datacenter where the request entered Cloudflare's network.",
		"coloCode": "IATA airport code for the Cloudflare datacenter where the script ran.",
		"date": "Request timestamp, truncated to start of a day",
		"datetime": "Request timestamp",
		"datetimeFifteenMinutes": "Request timestamp, truncated to fifteen minutes",
		"datetimeFiveMinutes": "Request timestamp, truncated to five minutes",
		"datetimeHour": "Request timestamp, truncated to start of an hour",
		"datetimeMinute": "Request timestamp, truncated to start of an minute",
		"datetimeSixHours": "Request timestamp, truncated to start of six hour window",
		"httpStatus": "Response status of worker",
		"isSample": "1 if the request was sampled to bypass Smart Placement, 0 if it was processed using Smart Placement",
		"placementUsed": "1 if the request was processed using Smart Placement, 0 if it was processed in default mode",
		"requestDurationBucketMin": "Bucket of request duration rounded down to nearest 10*2^n",
		"requestDurationBucketMin100ms": "Bucket of request duration rounded down to nearest 100ms",
		"scriptName": "The script name",
		"scriptTag": "The unique tag of the script",
		"scriptVersion": "The script version"
	},
	"AccountWorkerPlacementAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkerPlacementAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWorkerPlacementAdaptiveGroupsQuantiles": {
		"__description": "",
		"requestDurationP25": "Request duration 25th percentile - milliseconds",
		"requestDurationP50": "Request duration 50th percentile - milliseconds",
		"requestDurationP75": "Request duration 75th percentile - milliseconds",
		"requestDurationP90": "Request duration 90th percentile - milliseconds",
		"requestDurationP95": "Request duration 95th percentile - milliseconds",
		"requestDurationP99": "Request duration 99th percentile - milliseconds",
		"requestDurationP999": "Request duration 99.9th percentile - milliseconds"
	},
	"AccountWorkerPlacementAdaptiveGroupsSum": {
		"__description": "",
		"requestDuration": "Sum of duration ms of requests measured at the data centers that receive the requests",
		"requests": "Total number of requests"
	},
	"AccountWorkerPlacementAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requestDuration": "Confidence interval for the corresponding point estimate",
		"requests": "Confidence interval for the corresponding point estimate"
	},
	"AccountWorkersAnalyticsEngineAdaptiveGroups": {
		"__description": "Beta. Custom Events with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by"
	},
	"AccountWorkersAnalyticsEngineAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountWorkersAnalyticsEngineAdaptiveGroupsDimensions": {
		"__description": "",
		"dataset": "The dataset name",
		"date": "The date the event occurred",
		"datetime": "The date and time the event occurred",
		"datetimeFifteenMinutes": "The date and time the event occurred truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred truncated to the start of an hour",
		"datetimeMinute": "The date and time the event occurred truncated to the start of a minute"
	},
	"AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkersAnalyticsEngineAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWorkersBuildsBuildMinutesAdaptiveGroups": {
		"__description": "Workers Builds build minute overview data with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountWorkersBuildsBuildMinutesAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountWorkersBuildsBuildMinutesAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "Build minutes recorded timestamp"
	},
	"AccountWorkersBuildsBuildMinutesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkersBuildsBuildMinutesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWorkersBuildsBuildMinutesAdaptiveGroupsSum": {
		"__description": "",
		"buildMinutes": "The sum of build minutes"
	},
	"AccountWorkersBuildsBuildMinutesAdaptiveGroupsSumConfidence": {
		"__description": "",
		"buildMinutes": "Confidence interval for the corresponding point estimate"
	},
	"AccountWorkersInvocationsAdaptive": {
		"__description": "Beta. Workers invocations with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"max": "The max value for a metric",
		"min": "The min value for a metric",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountWorkersInvocationsAdaptiveAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"AccountWorkersInvocationsAdaptiveConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountWorkersInvocationsAdaptiveDimensions": {
		"__description": "",
		"coloCode": "IATA airport code for the Cloudflare datacenter where the script ran.",
		"date": "Request datetime, truncated to start of a day",
		"datetime": "Request datetime",
		"datetimeFifteenMinutes": "The date and time of the event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the event truncated to five minutes",
		"datetimeHour": "Request datetime, truncated to start of an hour",
		"datetimeMinute": "Request datetime, truncated to start of an minute",
		"datetimeSixHours": "Request datetime, truncated to start of six hour window",
		"dispatchNamespaceName": "The name of the script's dispatch namespace",
		"environmentName": "The name of the script environment",
		"isDispatcher": "Whether the request is from a Dispatch Worker. Non-zero if true",
		"scriptName": "The name of the script",
		"scriptTag": "The unique tag of the script",
		"scriptVersion": "The version of the Worker",
		"status": "Status of the worker invocation",
		"usageModel": "Usage model of the worker invocation"
	},
	"AccountWorkersInvocationsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkersInvocationsAdaptiveMax": {
		"__description": "",
		"cpuTime": "Maximum CPU time for one request - microseconds",
		"duration": "Maximum duration of one request - GB*s",
		"requestDuration": "Maximum Request Duration in microseconds",
		"responseBodySize": "Maximum response body size for one request - bytes",
		"wallTime": "Maximum wall time for one request - microseconds"
	},
	"AccountWorkersInvocationsAdaptiveMin": {
		"__description": "",
		"cpuTime": "Minimum CPU time for one request - microseconds",
		"duration": "Minimum duration of one request - GB*s",
		"requestDuration": "Minimum Request Duration in microseconds",
		"responseBodySize": "Minimum response body size for one request - bytes",
		"wallTime": "Minimum wall time for one request - microseconds"
	},
	"AccountWorkersInvocationsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountWorkersInvocationsAdaptiveQuantiles": {
		"__description": "",
		"cpuTimeP25": "CPU time 25th percentile - microseconds",
		"cpuTimeP50": "CPU time 50th percentile - microseconds",
		"cpuTimeP75": "CPU time 75th percentile - microseconds",
		"cpuTimeP90": "CPU time 90th percentile - microseconds",
		"cpuTimeP95": "CPU time 95th percentile - microseconds",
		"cpuTimeP99": "CPU time 99th percentile - microseconds",
		"cpuTimeP999": "CPU time 99.9th percentile - microseconds",
		"durationP25": "Duration 25th percentile - GB*s",
		"durationP50": "Duration 50th percentile - GB*s",
		"durationP75": "Duration 75th percentile - GB*s",
		"durationP90": "Duration 90th percentile - GB*s",
		"durationP95": "Duration 95th percentile - GB*s",
		"durationP99": "Duration 99th percentile - GB*s",
		"durationP999": "Duration 99.9th percentile - GB*s",
		"requestDurationP25": "Request duration 25th percentile - microseconds",
		"requestDurationP50": "Request duration 50th percentile - microseconds",
		"requestDurationP75": "Request duration 75th percentile - microseconds",
		"requestDurationP90": "Request duration 90th percentile - microseconds",
		"requestDurationP95": "Request duration 95th percentile - microseconds",
		"requestDurationP99": "Request duration 99th percentile - microseconds",
		"requestDurationP999": "Request duration 99.9th percentile - microseconds",
		"responseBodySizeP25": "Response body size 25th percentile - bytes",
		"responseBodySizeP50": "Response body size 50th percentile - bytes",
		"responseBodySizeP75": "Response body size 75th percentile - bytes",
		"responseBodySizeP90": "Response body size 90th percentile - bytes",
		"responseBodySizeP95": "Response body size 95th percentile - bytes",
		"responseBodySizeP99": "Response body size 99th percentile - bytes",
		"responseBodySizeP999": "Response body size 99.9th percentile - bytes",
		"wallTimeP25": "Wall time 25th percentile - microseconds",
		"wallTimeP50": "Wall time 50th percentile - microseconds",
		"wallTimeP75": "Wall time 75th percentile - microseconds",
		"wallTimeP90": "Wall time 90th percentile - microseconds",
		"wallTimeP95": "Wall time 95th percentile - microseconds",
		"wallTimeP99": "Wall time 99th percentile - microseconds",
		"wallTimeP999": "Wall time 99.9th percentile - microseconds"
	},
	"AccountWorkersInvocationsAdaptiveSum": {
		"__description": "",
		"clientDisconnects": "Sum of client disconnects",
		"cpuTimeUs": "Sum of cpu time in us",
		"duration": "Sum of Duration - GB*s",
		"errors": "Sum of Errors",
		"requestDuration": "Sum of Request Duration in microseconds",
		"requests": "Sum of Requests",
		"responseBodySize": "Sum of Response Body Sizes",
		"subrequests": "Sum of Subrequests",
		"wallTime": "Sum of Wall Time"
	},
	"AccountWorkersInvocationsAdaptiveSumConfidence": {
		"__description": "",
		"clientDisconnects": "Confidence interval for the corresponding point estimate",
		"cpuTimeUs": "Confidence interval for the corresponding point estimate",
		"duration": "Confidence interval for the corresponding point estimate",
		"errors": "Confidence interval for the corresponding point estimate",
		"requestDuration": "Confidence interval for the corresponding point estimate",
		"requests": "Confidence interval for the corresponding point estimate",
		"responseBodySize": "Confidence interval for the corresponding point estimate",
		"subrequests": "Confidence interval for the corresponding point estimate",
		"wallTime": "Confidence interval for the corresponding point estimate"
	},
	"AccountWorkersInvocationsScheduled": {
		"__description": "Workers scheduled invocations",
		"cpuTimeUs": "CPU time - microseconds",
		"cron": "The cron string of the schedule",
		"datetime": "Request datetime",
		"environmentName": "The name of the script environment",
		"scheduledDatetime": "Scheduled datetime",
		"scriptName": "The name of the script",
		"status": "Status of the worker invocation"
	},
	"AccountWorkersInvocationsScheduledFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkersInvocationsScheduledOrderBy": {
		"__description": ""
	},
	"AccountWorkersOverviewDataAdaptiveGroups": {
		"__description": "Beta. Workers account overview invocation data with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountWorkersOverviewDataAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountWorkersOverviewDataAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "Request datetime",
		"usageModel": "Usage model of the worker invocation"
	},
	"AccountWorkersOverviewDataAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkersOverviewDataAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWorkersOverviewDataAdaptiveGroupsSum": {
		"__description": "",
		"standardCpuTimeUs": "Standard usage model cpu time in us",
		"unboundDurationUs": "Unbound usage model duration in us"
	},
	"AccountWorkersOverviewDataAdaptiveGroupsSumConfidence": {
		"__description": "",
		"standardCpuTimeUs": "Confidence interval for the corresponding point estimate",
		"unboundDurationUs": "Confidence interval for the corresponding point estimate"
	},
	"AccountWorkersOverviewRequestsAdaptiveGroups": {
		"__description": "Beta. Workers account overview invocation count with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountWorkersOverviewRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountWorkersOverviewRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"datetime": "Request datetime",
		"status": "Status of the worker invocation",
		"usageModel": "Usage model of the worker invocation"
	},
	"AccountWorkersOverviewRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkersOverviewRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWorkersOverviewRequestsAdaptiveGroupsSum": {
		"__description": "",
		"cpuTimeUs": "Cpu time in us"
	},
	"AccountWorkersOverviewRequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"cpuTimeUs": "Confidence interval for the corresponding point estimate"
	},
	"AccountWorkersSubrequestsAdaptiveGroups": {
		"__description": "Beta. Workers subrequests with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"AccountWorkersSubrequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"AccountWorkersSubrequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"cacheStatus": "Cache status",
		"date": "Request datetime, truncated to start of a day",
		"datetime": "Request datetime",
		"datetimeFifteenMinutes": "The date and time of the event truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time of the event truncated to five minutes",
		"datetimeHour": "Request datetime, truncated to start of an hour",
		"datetimeMinute": "Request datetime, truncated to start of an minute",
		"datetimeSixHours": "Request datetime, truncated to start of six hour window",
		"environmentName": "The name of the script environment",
		"hostname": "The hostname of the subrequest",
		"httpResponseStatus": "Origin HTTP response code",
		"requestOutcome": "The outcome of the subrequest",
		"scriptName": "The name of the script",
		"scriptVersion": "The version of the Worker",
		"usageModel": "Usage model of the worker invocation"
	},
	"AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkersSubrequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWorkersSubrequestsAdaptiveGroupsQuantiles": {
		"__description": "",
		"timeToResponseDrainedUsP25": "Response drained time 25th percentile - microseconds",
		"timeToResponseDrainedUsP50": "Response drained time 50th percentile - microseconds",
		"timeToResponseDrainedUsP75": "Response drained time 75th percentile - microseconds",
		"timeToResponseDrainedUsP90": "Response drained time 90th percentile - microseconds",
		"timeToResponseDrainedUsP95": "Response drained time 95th percentile - microseconds",
		"timeToResponseDrainedUsP99": "Response drained time 99th percentile - microseconds",
		"timeToResponseDrainedUsP999": "Response drained time 999th percentile - microseconds",
		"timeToResponseUsP25": "Response time 25th percentile - microseconds",
		"timeToResponseUsP50": "Response time 50th percentile - microseconds",
		"timeToResponseUsP75": "Response time 75th percentile - microseconds",
		"timeToResponseUsP90": "Response time 90th percentile - microseconds",
		"timeToResponseUsP95": "Response time 95th percentile - microseconds",
		"timeToResponseUsP99": "Response time 99th percentile - microseconds",
		"timeToResponseUsP999": "Response time 999th percentile - microseconds"
	},
	"AccountWorkersSubrequestsAdaptiveGroupsSum": {
		"__description": "",
		"requestBodySize": "Workers fetch request body size in bytes",
		"requestBodySizeUncached": "Workers fetch request body size in bytes where the request was not cached",
		"responseBodySize": "Workers fetch response body size in bytes",
		"subrequests": "Number of subrequests",
		"timeToResponseDrainedUs": "Sum of time to response in us",
		"timeToResponseUs": "Sum of time to response in us"
	},
	"AccountWorkersSubrequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requestBodySize": "Confidence interval for the corresponding point estimate",
		"requestBodySizeUncached": "Confidence interval for the corresponding point estimate",
		"responseBodySize": "Confidence interval for the corresponding point estimate",
		"subrequests": "Confidence interval for the corresponding point estimate",
		"timeToResponseDrainedUs": "Confidence interval for the corresponding point estimate",
		"timeToResponseUs": "Confidence interval for the corresponding point estimate"
	},
	"AccountWorkflowsAdaptive": {
		"__description": "Workflows analytics",
		"cpuTime": "CPU time in timestamp (ms)",
		"datetime": "The date when trigger was triggered",
		"endTimestamp": "Instance end timestamp(seconds)",
		"eventType": "Event type",
		"executionDuration": "Execution duration in timestamp (GB*s)",
		"instanceId": "Instance Id",
		"retryCount": "Number of retries in timestamp",
		"sampleInterval": "ABR sample interval",
		"startTimestamp": "Instance start timestamp(seconds)",
		"stepCount": "Steps ran in timestamp",
		"storageRate": "Instance storage size growth in timestamp (bytes)",
		"wallTime": "Wall time in seconds",
		"workflowName": "Workflow name"
	},
	"AccountWorkflowsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkflowsAdaptiveGroups": {
		"__description": "Workflows analytics",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of events(workflow invocations) per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"AccountWorkflowsAdaptiveGroupsAvg": {
		"__description": "",
		"cpuTime": "Average CPU time per dimension",
		"wallTime": "Average wall time per dimension"
	},
	"AccountWorkflowsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of events(workflow invocations) per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"AccountWorkflowsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date when instance was triggered",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"eventType": "Event type",
		"instanceId": "Instance Id",
		"workflowName": "Workflow name"
	},
	"AccountWorkflowsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountWorkflowsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountWorkflowsAdaptiveGroupsSum": {
		"__description": "",
		"cpuTime": "CPU time per dimension (ms)",
		"executionDuration": "Execution duration per dimension (GB*s)",
		"retryCount": "Number of retries per dimension",
		"stepCount": "Total steps per dimension",
		"storageRate": "Total instance storage growth rate per dimension",
		"wallTime": "Total wall time per dimension"
	},
	"AccountWorkflowsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"cpuTime": "Confidence interval for the corresponding point estimate",
		"executionDuration": "Confidence interval for the corresponding point estimate",
		"retryCount": "Confidence interval for the corresponding point estimate",
		"stepCount": "Confidence interval for the corresponding point estimate",
		"storageRate": "Confidence interval for the corresponding point estimate",
		"wallTime": "Confidence interval for the corresponding point estimate"
	},
	"AccountWorkflowsAdaptiveOrderBy": {
		"__description": ""
	},
	"AccountZarazTrackAdaptiveGroups": {
		"__description": "Zaraz Track Analytics - counts zaraz.track calls",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Track requests",
		"dimensions": "List of dimensions to group by"
	},
	"AccountZarazTrackAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Track requests, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountZarazTrackAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Date when track was called",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"trackName": "Track Name",
		"urlPath": "The URL from where Track was called"
	},
	"AccountZarazTrackAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountZarazTrackAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountZarazTriggersAdaptiveGroups": {
		"__description": "Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action)",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Triggers",
		"dimensions": "List of dimensions to group by"
	},
	"AccountZarazTriggersAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Triggers, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"AccountZarazTriggersAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date when trigger was triggerd",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"triggerName": "Trigger Name"
	},
	"AccountZarazTriggersAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountZarazTriggersAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"AccountZeroTrustPrivateNetworkDiscoveryGroups": {
		"__description": "Beta - Unique origins, applications, and users discovered for Zero Trust private networks",
		"count": "Sum of network access during the select range",
		"dimensions": "List of dimensions to group by",
		"max": "",
		"uniq": ""
	},
	"AccountZeroTrustPrivateNetworkDiscoveryGroupsDimensions": {
		"__description": "",
		"date": "Request date",
		"datetimeHour": "Request datetime and start of the hour",
		"destinationIP": "Destination IPv4 or IPv6",
		"destinationPort": "Destination port",
		"email": "The email address of the user who accessed the resource",
		"hostname": "SNI hostname of the origin if TLS intercept is enabled",
		"originId": "UUID of the origin if it has been identified before",
		"status": "status of the origin, one of unreviewed, in_review, approved, unapproved",
		"transport": "The transport protocol used in the session, one of (0, tcp) (1, quic) (2, udp)",
		"userId": "The ID of the user who accessed the resource"
	},
	"AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject": {
		"__description": ""
	},
	"AccountZeroTrustPrivateNetworkDiscoveryGroupsMax": {
		"__description": "",
		"dateTime": "Latest access time of a user"
	},
	"AccountZeroTrustPrivateNetworkDiscoveryGroupsOrderBy": {
		"__description": ""
	},
	"AccountZeroTrustPrivateNetworkDiscoveryGroupsUniq": {
		"__description": "",
		"emails": "Approximate count of unique emails",
		"origins": "Approximate count of unique origins. An origin is a (transport, destinationIP, destinationPort)",
		"userIds": "Approximate count of unique users"
	},
	"Confidence": {
		"__description": "",
		"estimate": "Estimated value of this metric",
		"isValid": "True if the confidence interval is valid, i.e. there is enough samples at low enough sample interval",
		"lower": "Lower bound of confidence interval",
		"sampleSize": "Number of samples that contributed to the estimate",
		"upper": "Upper bound of confidence interval"
	},
	"Date": {
		"__description": "Scalar type types.Date"
	},
	"Mutation": {
		"__description": "Mutations are not supported",
		"do": ""
	},
	"OrganizationFilter_InputObject": {
		"__description": ""
	},
	"OrganizationHttpRequestsAdaptiveGroups": {
		"__description": "Aggregated HTTP requests data with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"ratio": "The ratio of a range of status codes, between 0 and 1",
		"sum": "The sum of values for a metric per dimension"
	},
	"OrganizationHttpRequestsAdaptiveGroupsAvg": {
		"__description": "",
		"crossZoneSubrequests": "The proportion of requests that were inititiated by a Cloudflare Worker on another zone",
		"edgeDnsResponseTimeMs": "",
		"edgeTimeToFirstByteMs": "",
		"originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
		"sampleInterval": ""
	},
	"OrganizationHttpRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"OrganizationHttpRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"accountTag": "Associated account",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botManagementDecision": "Judgement of the bot management system",
		"botScore": "The final score originated from bot management detections.",
		"botScoreBucketBy10": "Range of the bot management score",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"cacheReserveUsed": "Used Cache Reserve to serve the response",
		"cacheStatus": "",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "",
		"clientCountryName": "Country from which request originated",
		"clientDeviceType": "",
		"clientIP": "",
		"clientRefererHost": "The referrer host",
		"clientRequestHTTPHost": "Host requested by the client",
		"clientRequestHTTPMethodName": "HTTP method of client request",
		"clientRequestHTTPProtocol": "HTTP protocol version",
		"clientRequestPath": "Path of client request",
		"clientRequestQuery": "Query parameters of client request",
		"clientRequestReferer": "HTTP request referrer",
		"clientRequestScheme": "HTTP request URI scheme (http/https)",
		"clientSSLProtocol": "SSL protocol version",
		"coloCode": "",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeDnsResponseTimeMs": "The time elapsed resolving a CNAME if it was required to reach your origin",
		"edgeResponseContentTypeName": "",
		"edgeResponseStatus": "",
		"edgeTimeToFirstByteMs": "The time elapsed between processing the first byte of the request until when we started sending a response",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"isCrossZoneSubrequest": "'1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise.",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"leakedCredentialCheckResult": "The distinct result of checking for leaked credentials",
		"originASN": "",
		"originASNDescription": "ASN associated with origin",
		"originIP": "",
		"originResponseDurationMs": "",
		"originResponseStatus": "HTTP response status code returned by the origin",
		"requestSource": "",
		"sampleInterval": "ABR sample interval",
		"securityAction": "The code of the first-class action the Cloudflare Firewall took on this request",
		"securitySource": "The Cloudflare security product triggered by this request",
		"sessionIdHash": "API Security Session ID hash",
		"upperTierColoName": "",
		"userAgent": "",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"xRequestedWith": "The X-Requested-With header of the client request",
		"zoneTag": "Associated zone",
		"zoneVersion": "The version of a zone"
	},
	"OrganizationHttpRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"OrganizationHttpRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"OrganizationHttpRequestsAdaptiveGroupsQuantiles": {
		"__description": "",
		"edgeDnsResponseTimeMsP50": "50th percentile DNS Response Time (milliseconds)",
		"edgeDnsResponseTimeMsP95": "95th percentile DNS Response Time (milliseconds)",
		"edgeDnsResponseTimeMsP99": "99th percentile DNS Response Time (milliseconds)",
		"edgeTimeToFirstByteMsP50": "50th percentile Time To First Byte (milliseconds)",
		"edgeTimeToFirstByteMsP95": "95th percentile Time To First Byte (milliseconds)",
		"edgeTimeToFirstByteMsP99": "99th percentile Time To First Byte (milliseconds)",
		"originResponseDurationMsP50": "50th percentile Origin Response Duration (milliseconds)",
		"originResponseDurationMsP95": "95th percentile Origin Response Duration (milliseconds)",
		"originResponseDurationMsP99": "99th percentile Origin Response Duration (milliseconds)"
	},
	"OrganizationHttpRequestsAdaptiveGroupsRatio": {
		"__description": "",
		"status4xx": "",
		"status5xx": ""
	},
	"OrganizationHttpRequestsAdaptiveGroupsSum": {
		"__description": "",
		"crossZoneSubrequests": "The number of requests that were inititiated by a Cloudflare Worker on another zone",
		"edgeDnsResponseTimeMs": "",
		"edgeResponseBytes": "",
		"edgeTimeToFirstByteMs": "",
		"fraudDetectionIdArray": "Array of fraud detection ids",
		"fraudDetectionIdCountArray": "Count array of fraud detection ids. Elements in this array correspond to elements in fraudDetectionIdArray by index.",
		"fraudDetectionTagArray": "Array of fraud detection tags",
		"fraudDetectionTagCountArray": "Count array of fraud detection tags. Elements in this array correspond to elements in fraudDetectionTagArray by index.",
		"originResponseDurationMs": "",
		"visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
	},
	"OrganizationHttpRequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"crossZoneSubrequests": "Confidence interval for the corresponding point estimate",
		"edgeDnsResponseTimeMs": "Confidence interval for the corresponding point estimate",
		"edgeResponseBytes": "Confidence interval for the corresponding point estimate",
		"edgeTimeToFirstByteMs": "Confidence interval for the corresponding point estimate",
		"originResponseDurationMs": "Confidence interval for the corresponding point estimate",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"OrganizationSettings": {
		"__description": "Access and limitations for an organization",
		"httpRequestsAdaptiveGroups": ""
	},
	"Query": {
		"__description": "",
		"cost": "",
		"viewer": ""
	},
	"Settings": {
		"__description": "Access and limitations",
		"availableFields": "The list of available fields to query",
		"enabled": "",
		"maxDuration": "Requested time range should not be wider than this (seconds)",
		"maxNumberOfFields": "Maximum number of fields to request at once",
		"maxPageSize": "Maximum allowed value for 'limit'",
		"notOlderThan": "Cannot reach for data beyond this distance in the past (seconds)"
	},
	"Time": {
		"__description": "Scalar type time.Time"
	},
	"ZoneApiGatewayGraphqlQueryAnalyticsGroups": {
		"__description": "GraphQL query attributes and trends",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of events with GraphQL query attributes computed",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneApiGatewayGraphqlQueryAnalyticsGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneApiGatewayGraphqlQueryAnalyticsGroupsConfidence": {
		"__description": "",
		"count": "Number of events with GraphQL query attributes computed, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneApiGatewayGraphqlQueryAnalyticsGroupsDimensions": {
		"__description": "",
		"apiGatewayGraphqlQueryDepth": "Maximum depth level of a terminal (leaf) field in the query",
		"apiGatewayGraphqlQuerySize": "Number of terminal (leaf) fields in the query",
		"date": "",
		"datetime": "",
		"datetimeDay": "",
		"datetimeFifteenMinutes": "",
		"datetimeFiveMinutes": "",
		"datetimeHalfOfHour": "",
		"datetimeHour": "",
		"datetimeMinute": ""
	},
	"ZoneApiGatewayGraphqlQueryAnalyticsGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneApiGatewayGraphqlQueryAnalyticsGroupsOrderBy": {
		"__description": ""
	},
	"ZoneApiGatewayMatchedSessionIDsAdaptiveGroups": {
		"__description": "Beta. Aggregated count of Session Identifier matches",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of events with Session Identifiers",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of events with Session Identifiers, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsDimensions": {
		"__description": "",
		"apiGatewayMatchedSessionIdentifierName": "Name of session identifier",
		"apiGatewayMatchedSessionIdentifierType": "Type of session identifier. Possible values are header | cookie",
		"date": "",
		"datetime": "",
		"datetimeDay": "",
		"datetimeFifteenMinutes": "",
		"datetimeFiveMinutes": "",
		"datetimeHalfOfHour": "",
		"datetimeHour": "",
		"datetimeMinute": ""
	},
	"ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointAdaptiveGroups": {
		"__description": "Beta. Aggregated count of Session Identifier matches per endpoint",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of events per dimension",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of events per dimension, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointAdaptiveGroupsDimensions": {
		"__description": "",
		"apiGatewayMatchedEndpointId": "Id of the matched API endpoint",
		"apiGatewayMatchedSessionIdentifier": "Array of observed tuples consisting of session identifier types and names. Possible types are header | cookie | jwt",
		"date": "",
		"datetime": "",
		"datetimeDay": "",
		"datetimeFifteenMinutes": "",
		"datetimeFiveMinutes": "",
		"datetimeHalfOfHour": "",
		"datetimeHour": "",
		"datetimeMinute": "",
		"responseStatusCode": "HTTP status code returned by edge"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroups": {
		"__description": "Beta. Aggregated count of Session Identifier matches",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of events with Session Identifiers",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of events with Session Identifiers, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroupsDimensions": {
		"__description": "",
		"apiGatewayMatchedEndpointId": "Id of the matched API endpoint",
		"apiGatewayMatchedSessionIdentifierName": "Name of session identifier",
		"apiGatewayMatchedSessionIdentifierType": "Type of session identifier. Possible values are header | cookie | jwt",
		"date": "",
		"datetime": "",
		"datetimeDay": "",
		"datetimeFifteenMinutes": "",
		"datetimeFiveMinutes": "",
		"datetimeHalfOfHour": "",
		"datetimeHour": "",
		"datetimeMinute": "",
		"responseStatusCode": "HTTP status code returned by edge"
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneApiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneApiRequestSequencesGroups": {
		"__description": "Sequences of API endpoint operations. Sequences are learned by grouping requests by AuthID. Correlation scores are estimated over a 24 hour window and are current to within 10 minutes",
		"aggArgMax": "",
		"aggMax": "",
		"dimensions": "List of dimensions to group by",
		"uniq": ""
	},
	"ZoneApiRequestSequencesGroupsAggArgMax": {
		"__description": "",
		"correlation": "Correlation score estimated over a 24 hour window. The correlation score is the probability that the last operation in the sequence is preceded by the remaining operations in the sequence, assuming that the last operation in the sequence occurred",
		"numOccurrences": "Estimated number of occurrences of this sequence of endpoint operations",
		"numOccurrencesLast": "Estimated number of occurrences of the last operation in this sequence of endpoint operations",
		"numOccurrencesPrefix": "Estimated number of occurrences of this sequence of endpoint operations, disregarding the last operation",
		"numOccurrencesSuffix": "<small>DEPRECATED (Field is not guaranteed to be always populated for sequences of length greater than 2. Use <code>numOccurrencesLast</code> instead):</small> Estimated number of occurrences of this sequence of endpoint operations, disregarding the first operation",
		"operationsApiEndpoints": "API endpoints in the sequence of operations. Individual endpoints are delimited by # symbols",
		"operationsClientRequestHTTPMethods": "HTTP request methods in the sequence of operations. Individual request method names are delimited by # symbols",
		"samplingFraction": "Fraction of requests sampled"
	},
	"ZoneApiRequestSequencesGroupsAggMax": {
		"__description": "",
		"timeLastSeen": "Time of the most recent occurrence of this sequence of endpoint operations (based on the timestamp of the first request in the sequence)",
		"timeLastUpdated": "The time at which Cloudflare last refreshed this data"
	},
	"ZoneApiRequestSequencesGroupsDimensions": {
		"__description": "",
		"apiHost": "The host associated with this sequence of endpoint operations",
		"clientRequestHTTPHost": "<small>DEPRECATED (Field is replaced with <code>apiHost</code>):</small> The host associated with this sequence of endpoint operations",
		"datetime": "Sequence generation timeslot, truncated to 10 minutes",
		"operationsFirstApiEndpoint": "First API endpoint in the sequence of operations",
		"operationsFirstClientRequestHTTPMethod": "First HTTP request method in the sequence of operations",
		"operationsLastApiEndpoint": "Last API endpoint in the sequence of operations",
		"operationsLastClientRequestHTTPMethod": "Last HTTP request method in the sequence of operations",
		"operationsLength": "Length of the sequence of operations",
		"operationsPrefixApiEndpoints": "API endpoints in the sequence of operations, disregarding the last operation. Individual endpoints are delimited by # symbols",
		"operationsPrefixClientRequestHTTPMethods": "HTTP request methods in the sequence of operations, disregarding the last operation. Individual request method names are delimited by # symbols",
		"rank": "<small>DEPRECATED (Field is replaced with <code>sequenceHash</code> serving as unique sequence identifier):</small> Sequence rank based on ordering sequences by correlation",
		"sequenceHash": "Unique sequence identifier obtained by hashing <code>operationsApiEndpoints</code> and <code>operationsClientRequestHTTPMethods</code>"
	},
	"ZoneApiRequestSequencesGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneApiRequestSequencesGroupsOrderBy": {
		"__description": ""
	},
	"ZoneApiRequestSequencesGroupsUniq": {
		"__description": "",
		"rankCount": "Number of unique rank values",
		"sequenceHashCount": "Number of unique sequenceHash values"
	},
	"ZoneCacheReserveOperationsAdaptiveGroups": {
		"__description": "Beta. Cache Reserve operations with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneCacheReserveOperationsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"ZoneCacheReserveOperationsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"ZoneCacheReserveOperationsAdaptiveGroupsDimensions": {
		"__description": "",
		"actionStatus": "Status of the R2 operation",
		"bucketName": "Name of bucket containing stored objects",
		"date": "Request timestamp, truncated to start of a day",
		"datetime": "Request timestamp",
		"datetimeFifteenMinutes": "Request timestamp, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request timestamp, truncated to multiple of 5 minutes",
		"datetimeHour": "Request timestamp, truncated to start of an hour",
		"datetimeMinute": "Request timestamp, truncated to start of an minute",
		"jurisdiction": "Jurisdiction of the R2 bucket, or 'default' if unrestricted",
		"operationClass": "Billable class of storage operation"
	},
	"ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneCacheReserveOperationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneCacheReserveOperationsAdaptiveGroupsSum": {
		"__description": "",
		"requests": "Sum of Requests"
	},
	"ZoneCacheReserveOperationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requests": "Confidence interval for the corresponding point estimate"
	},
	"ZoneCacheReserveRequestsAdaptiveGroups": {
		"__description": "Cache Reserve HTTP requests data with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"count": "",
		"dimensions": "List of dimensions to group by",
		"sum": "Sum of bytes returned to client"
	},
	"ZoneCacheReserveRequestsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"ZoneCacheReserveRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "",
		"level": "Confidence level that was requested",
		"sum": "Sum of bytes returned to client, with confidence intervals"
	},
	"ZoneCacheReserveRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"cacheStatus": "Cache status",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeResponseContentTypeName": "Content type returned to client",
		"edgeResponseStatus": "HTTP response status code returned to browser"
	},
	"ZoneCacheReserveRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneCacheReserveRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneCacheReserveRequestsAdaptiveGroupsSum": {
		"__description": "",
		"edgeResponseBytes": ""
	},
	"ZoneCacheReserveRequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"edgeResponseBytes": "Confidence interval for the corresponding point estimate"
	},
	"ZoneCacheReserveStorageAdaptiveGroups": {
		"__description": "Beta. Cache Reserve storage with adaptive sampling",
		"avg": "The average value used for sample interval",
		"dimensions": "List of dimensions to group by",
		"max": "The max of values for a metric per dimension"
	},
	"ZoneCacheReserveStorageAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"ZoneCacheReserveStorageAdaptiveGroupsDimensions": {
		"__description": "",
		"bucketHash": "Hash of bucket containing stored objects",
		"bucketName": "Name of bucket containing stored objects",
		"date": "Storage sample timestamp, truncated to start of a day",
		"datetime": "Storage sample timestamp",
		"datetimeFifteenMinutes": "Storage sample timestamp, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Storage sample timestamp, truncated to multiple of 5 minutes",
		"datetimeHour": "Storage sample timestamp, truncated to start of an hour",
		"datetimeMinute": "Storage sample timestamp, truncated to start of an minute",
		"jurisdiction": "Jurisdiction of the R2 bucket, or 'default' if unrestricted"
	},
	"ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneCacheReserveStorageAdaptiveGroupsMax": {
		"__description": "",
		"objectCount": "Max of object count",
		"storedBytes": "Payload and metadata size of objects in bucket"
	},
	"ZoneCacheReserveStorageAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneDmarcReportsAdaptive": {
		"__description": "Dmarc report records with adaptive sampling",
		"datetime": "The date and time the source email was received",
		"disposition": "DMARC policy disposition",
		"dkim": "DKIM result",
		"domain": "Domain to which this report refers to",
		"envelopeFrom": "Envelope From of emails",
		"envelopeTo": "Envelope To of emails",
		"evaluatedReason": "Reason (if any) why the record was evaluated",
		"headerFrom": "Header From of emails",
		"matchingMessages": "Number of messages that matched",
		"orgName": "Organization that generated report",
		"policyDKIMAlignmentMode": "DKIM alignment mode specified in the policy",
		"policyDomain": "DMARC policy of the domain",
		"policyPercentage": "Percentage of emails that should be checked",
		"policySPFAlignmentMode": "SPF alignment mode specified in the policy",
		"policySubDomain": "DMARC policy of subdomains",
		"recordId": "Unique identifier of this record",
		"recordIndex": "Index of this record within the report",
		"reportBegin": "Start of the reporting period",
		"reportEnd": "End of the reporting period",
		"reportError": "Error message (if any)",
		"reportId": "Unique identifier of the report to which this record belongs",
		"sampleInterval": "ABR sample interval",
		"sourceIP": "Source IP address of the email",
		"sourceLocationName": "Country name from source IP",
		"sourceOrgName": "Source IP address organisation name",
		"sourceOrgSlug": "Source IP address organisation slug",
		"sourcePTR": "Source Domain from IP address",
		"spf": "SPF result",
		"spfMFromDomain": "Checked domain from scope mfrom"
	},
	"ZoneDmarcReportsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneDmarcReportsAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneDmarcReportsSourcesAdaptiveGroups": {
		"__description": "Aggregated dmarc reports by sources logs with adaptive sampling",
		"avg": "Beta. The avg of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "",
		"uniq": ""
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsAvg": {
		"__description": "",
		"dkimPass": "Percentage of dkim messages pass",
		"dmarc": "Percentage of dmarc messages pass",
		"spfPass": "Percentage of spf messages pass"
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": ""
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date the source email was received",
		"datetimeDay": "The date and time the source email was received truncated to the day",
		"datetimeHour": "The date and time the source email was received truncated to the hour",
		"datetimeLast31Days": "The date and time the source email was received truncated to the last 31 days",
		"datetimeMonth": "The date and time the source email was received truncated to the month",
		"datetimeWeek": "The date and time the source email was received truncated to the week",
		"disposition": "DMARC policy disposition",
		"dkim": "DKIM result",
		"domain": "Domain to which this report refers to",
		"envelopeFrom": "Envelope From of emails",
		"envelopeTo": "Envelope To of emails",
		"evaluatedReason": "Reason (if any) why the record was evaluated",
		"headerFrom": "Header From of emails",
		"orgName": "Organization that generated report",
		"sampleInterval": "ABR sample interval",
		"sourceIP": "Source IP address of the email",
		"sourceLocationName": "Country name from source IP",
		"sourceOrgName": "Source IP address organisation name",
		"sourceOrgSlug": "Source IP address organisation slug",
		"sourcePTR": "Source Domain from IP address",
		"spf": "SPF result",
		"spfMFromDomain": "Checked domain from scope mfrom"
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsSum": {
		"__description": "",
		"dkimPass": "Total of dkim messages pass",
		"dmarc": "Total of dmarc messages pass",
		"spfPass": "Total of spf messages pass",
		"totalMatchingMessages": "Total matching messages"
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsSumConfidence": {
		"__description": "",
		"dkimPass": "Confidence interval for the corresponding point estimate",
		"dmarc": "Confidence interval for the corresponding point estimate",
		"spfPass": "Confidence interval for the corresponding point estimate",
		"totalMatchingMessages": "Confidence interval for the corresponding point estimate"
	},
	"ZoneDmarcReportsSourcesAdaptiveGroupsUniq": {
		"__description": "",
		"ipCount": "Number of distinct IPs"
	},
	"ZoneDnsAnalyticsAdaptive": {
		"__description": "Analytics data for DNS queries",
		"coloName": "IATA airport code of the data center that processed the query",
		"date": "Date on which the query was received",
		"datetime": "Time at which the query was received",
		"destinationIP": "Cloudflare edge IP address that the query was received at",
		"ipVersion": "Internet Protocol version over which the query was received",
		"protocol": "Transport protocol over which the query was received",
		"queryName": "DNS query name without trailing dot",
		"querySize": "Size of the DNS query in bytes",
		"queryType": "DNS query type",
		"responseCached": "Whether the DNS response was served from cache",
		"responseCode": "DNS response code",
		"responseSize": "Size of the DNS response in bytes",
		"responseStale": "Whether a stale DNS response was served from cache",
		"sampleInterval": "ABR sample interval",
		"sourceIP": "IP address of the client that sent the query (usually this is the resolver's IP address)",
		"upstreamIP": "Upstream server that the query was forwarded to"
	},
	"ZoneDnsAnalyticsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneDnsAnalyticsAdaptiveGroups": {
		"__description": "Analytics data for DNS queries",
		"avg": "Average of a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of queries per dimension",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension"
	},
	"ZoneDnsAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"processingTimeUs": "Average processing time in microseconds",
		"sampleInterval": "Average sample interval"
	},
	"ZoneDnsAnalyticsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of queries per dimension, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneDnsAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"coloName": "IATA airport code of the data center that processed the query",
		"date": "Date on which the query was received",
		"datetime": "Time at which the query was received",
		"datetimeFifteenMinutes": "Time at which the query was received, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Time at which the query was received, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Time at which the query was received, truncated to multiple of 30 minutes",
		"datetimeHour": "Time at which the query was received, truncated to the hour",
		"datetimeMinute": "Time at which the query was received, truncated to the minute",
		"destinationIP": "Cloudflare edge IP address that the query was received at",
		"ipVersion": "Internet Protocol version over which the query was received",
		"protocol": "Transport protocol over which the query was received",
		"queryName": "DNS query name without trailing dot",
		"querySizeBucket": "Size of the DNS query in bytes (in multiples of 16)",
		"queryType": "DNS query type",
		"responseCached": "Whether the DNS response was served from cache",
		"responseCode": "DNS response code",
		"responseSizeBucket": "Size of the DNS response in bytes (in multiples of 16)",
		"responseStale": "Whether a stale DNS response was served from cache",
		"sourceIP": "IP address of the client that sent the query (usually this is the resolver's IP address)",
		"upstreamIP": "Upstream server that the query was forwarded to"
	},
	"ZoneDnsAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneDnsAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneDnsAnalyticsAdaptiveGroupsQuantiles": {
		"__description": "",
		"processingTimeUsP50": "50th percentile processing time in microseconds (median)",
		"processingTimeUsP90": "90th percentile processing time in microseconds",
		"processingTimeUsP99": "99th percentile processing time in microseconds"
	},
	"ZoneDnsAnalyticsAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneEmailRoutingAdaptive": {
		"__description": "Beta. Raw email routing logs with adaptive sampling",
		"action": "Action routing rule apply into source email",
		"arc": "ARC check status of the source email",
		"datetime": "The date and time the source email was received",
		"dkim": "DKIM check status of the source email",
		"dmarc": "DMARC check status of the source email",
		"errorDetail": "Detailed error message (if any)",
		"eventType": "Origin of email (incoming|forward|reply|newEmail)",
		"from": "The sender email address of the source email",
		"isEmailSending": "Is this event related to Email Sending?",
		"isNDR": "Is this event related to a NDR (bounce) email?",
		"isSpam": "Source email is spam",
		"messageId": "The Message-ID header of the source email (if present)",
		"ruleMatched": "The UUID of the routing rule matched by the source email",
		"sampleInterval": "ABR sample interval",
		"sessionId": "Unique identifier for the email log entry (note: retries for the same email may result in multiple log entries)",
		"spamScore": "Spam score value",
		"spamThreshold": "Spam threshold value",
		"spf": "SPF check status of the source email",
		"status": "The resulting outcome (action) for the email",
		"subject": "The subject of the source email",
		"to": "The recipient email address of the source email"
	},
	"ZoneEmailRoutingAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneEmailRoutingAdaptiveGroups": {
		"__description": "Beta. Aggregated email routing logs with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of emails processed",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneEmailRoutingAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of emails processed, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneEmailRoutingAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "Action routing rule apply into source email",
		"arc": "ARC check status of the source email",
		"date": "The date the source email was received",
		"datetimeFifteenMinutes": "The date and time the source email was received truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time the source email was received truncated to five minutes",
		"datetimeHour": "The date and time the source email was received truncated to the hour",
		"datetimeMinute": "The date and time the source email was received truncated to the minute",
		"dkim": "DKIM check status of the source email",
		"dmarc": "DMARC check status of the source email",
		"eventType": "Origin of email (incoming|forward|reply|newEmail)",
		"isEmailSending": "Is this event related to Email Sending?",
		"isNDR": "Is this event related to a NDR (bounce) email?",
		"isSpam": "Source email is spam",
		"ruleMatched": "The UUID of the routing rule matched by the source email",
		"sampleInterval": "ABR sample interval",
		"spamScore": "Spam score value",
		"spamThreshold": "Spam threshold value",
		"spf": "SPF check status of the source email",
		"status": "The resulting outcome (action) for the email"
	},
	"ZoneEmailRoutingAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneEmailRoutingAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneEmailRoutingAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneFilter_InputObject": {
		"__description": ""
	},
	"ZoneFirewallEventsAdaptive": {
		"__description": "Raw Firewall events with adaptive sampling",
		"action": "The code of the first-class action the Cloudflare Firewall took on this request",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botScore": "The final score originated from bot management detections.",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "The ASN number of the visitor",
		"clientCountryName": "Country from which request originated",
		"clientIP": "The visitor's IP address (IPv4 or IPv6)",
		"clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
		"clientRefererHost": "The referer host",
		"clientRefererPath": "The referer path requested by visitor",
		"clientRefererQuery": "The referer query-string was requested by the visitor",
		"clientRefererScheme": "The referer url scheme requested by the visitor",
		"clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
		"clientRequestHTTPMethodName": "The HTTP method used by the visitor",
		"clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
		"clientRequestPath": "The path requested by visitor",
		"clientRequestQuery": "The query-string was requested by the visitor",
		"clientRequestScheme": "The url scheme requested by the visitor",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"description": "The description of the rule triggered by this request",
		"edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
		"edgeResponseStatus": "HTTP response status code returned to browser",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"ja4Signals": "Inter-request statistics computed for this JA4 across Cloudflare's entire global edge network",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"kind": "The kind of event, currently only possible values are: firewall",
		"leakedCredentialCheckResult": "The distinct result of checking for leaked credentials",
		"matchIndex": "Rules match index in the chain",
		"metadata": "Additional product-specific information. Metadata is organized in key:value pairs",
		"originResponseStatus": "HTTP origin response status code returned to browser",
		"originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
		"rayName": "The RayId of the request",
		"ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
		"ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
		"rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
		"sampleInterval": "ABR sample interval",
		"source": "The Cloudflare security product triggered by this request",
		"userAgent": "visitor's user-agent string",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafMlAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafAttackScore</code>):</small> Beta. Overall request score generated by the WAF detection module",
		"wafMlSqliAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafSqliAttackScore</code>):</small> Beta. WAF ML score for an SQLi attack",
		"wafMlXssAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafXssAttackScore</code>):</small> Beta. WAF ML score for an XSS attack",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"zoneVersion": "The version of a zone"
	},
	"ZoneFirewallEventsAdaptiveByTimeGroups": {
		"__description": "Aggregated Firewall events with adaptive sampling grouped by time",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The sum of sample interval values",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"ZoneFirewallEventsAdaptiveByTimeGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"ZoneFirewallEventsAdaptiveByTimeGroupsConfidence": {
		"__description": "",
		"count": "The sum of sample interval values, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneFirewallEventsAdaptiveByTimeGroupsDimensions": {
		"__description": "",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botScore": "The final score originated from bot management detections.",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"description": "The description of the rule triggered by this request",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafMlAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafAttackScore</code>):</small> Beta. Overall request score generated by the WAF ML detection module",
		"wafMlSqliAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafSqliAttackScore</code>):</small> Beta. WAF ML score for an SQLi attack",
		"wafMlXssAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafXssAttackScore</code>):</small> Beta. WAF ML score for an XSS attack",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"zoneVersion": "The version of a zone"
	},
	"ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneFirewallEventsAdaptiveByTimeGroupsOrderBy": {
		"__description": ""
	},
	"ZoneFirewallEventsAdaptiveByTimeGroupsSum": {
		"__description": "",
		"botDetectionIdArray": "Array of bot management detection ids",
		"botDetectionIdCountArray": "Count array of bot management detection ids. Elements in this array correspond to elements in botDetectionIdArray by index.",
		"botDetectionTagArray": "Array of bot management detection tags",
		"botDetectionTagCountArray": "Count array of bot management detection tags. Elements in this array correspond to elements in botDetectionTagArray by index.",
		"fraudDetectionIdArray": "Array of fraud detection ids",
		"fraudDetectionIdCountArray": "Count array of fraud detection ids. Elements in this array correspond to elements in fraudDetectionIdArray by index.",
		"fraudDetectionTagArray": "Array of fraud detection tags",
		"fraudDetectionTagCountArray": "Count array of fraud detection tags. Elements in this array correspond to elements in fraudDetectionTagArray by index."
	},
	"ZoneFirewallEventsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneFirewallEventsAdaptiveGroups": {
		"__description": "Aggregated Firewall events with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The sum of sample interval values",
		"dimensions": "List of dimensions to group by",
		"sum": ""
	},
	"ZoneFirewallEventsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": ""
	},
	"ZoneFirewallEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The sum of sample interval values, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneFirewallEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "The code of the first-class action the Cloudflare Firewall took on this request",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botScore": "The final score originated from bot management detections.",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "The ASN number of the visitor",
		"clientCountryName": "Country from which request originated",
		"clientIP": "The visitor's IP address (IPv4 or IPv6)",
		"clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
		"clientRefererHost": "The referer host",
		"clientRefererPath": "The referer path requested by visitor",
		"clientRefererQuery": "The referer query-string was requested by the visitor",
		"clientRefererScheme": "The referer url scheme requested by the visitor",
		"clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
		"clientRequestHTTPMethodName": "The HTTP method used by the visitor",
		"clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
		"clientRequestPath": "The path requested by visitor",
		"clientRequestQuery": "The query-string was requested by the visitor",
		"clientRequestScheme": "The url scheme requested by the visitor",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"description": "The description of the rule triggered by this request",
		"edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
		"edgeResponseStatus": "HTTP response status code returned to browser",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"kind": "The kind of event, currently only possible values are: firewall",
		"matchIndex": "Rules match index in the chain",
		"originResponseStatus": "HTTP origin response status code returned to browser",
		"originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
		"rayName": "The RayId of the request",
		"ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
		"ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
		"rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
		"sampleInterval": "ABR sample interval",
		"source": "The Cloudflare security product triggered by this request",
		"userAgent": "visitor's user-agent string",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafMlAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafAttackScore</code>):</small> Beta. Overall request score generated by the WAF ML detection module",
		"wafMlSqliAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafSqliAttackScore</code>):</small> Beta. WAF ML score for an SQLi attack",
		"wafMlXssAttackScore": "<small>DEPRECATED (Field is replaced with <code>wafXssAttackScore</code>):</small> Beta. WAF ML score for an XSS attack",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"zoneVersion": "The version of a zone"
	},
	"ZoneFirewallEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneFirewallEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneFirewallEventsAdaptiveGroupsSum": {
		"__description": "",
		"botDetectionIdArray": "Array of bot management detection ids",
		"botDetectionIdCountArray": "Count array of bot management detection ids. Elements in this array correspond to elements in botDetectionIdArray by index.",
		"botDetectionTagArray": "Array of bot management detection tags",
		"botDetectionTagCountArray": "Count array of bot management detection tags. Elements in this array correspond to elements in botDetectionTagArray by index.",
		"fraudDetectionIdArray": "Array of fraud detection ids",
		"fraudDetectionIdCountArray": "Count array of fraud detection ids. Elements in this array correspond to elements in fraudDetectionIdArray by index.",
		"fraudDetectionTagArray": "Array of fraud detection tags",
		"fraudDetectionTagCountArray": "Count array of fraud detection tags. Elements in this array correspond to elements in fraudDetectionTagArray by index."
	},
	"ZoneFirewallEventsAdaptiveJa4SignalsElem": {
		"__description": "",
		"signalName": "Signal name",
		"signalValue": "Signal value"
	},
	"ZoneFirewallEventsAdaptiveMetadataElem": {
		"__description": "",
		"key": "The key of the metadata. Key format can vary by Cloudflare security product and can change over time.",
		"value": "The value of the metadata. Value format can vary by Cloudflare security product and can change over time."
	},
	"ZoneFirewallEventsAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneHealthCheckEventsAdaptive": {
		"__description": "Raw Health Check events with adaptive sampling",
		"date": "The date the event was written to the database",
		"datetime": "The date and time the event was written to the database",
		"eventId": "The event id that created this healthcheck event",
		"expectedResponseCodes": "The expected response codes for the health check",
		"failureReason": "Reason why the health check failed",
		"fqdn": "Fully qualified domain name of the origin (if available)",
		"healthChanged": "1 if the origin health status has changed since the last health check, 0 otherwise",
		"healthCheckId": "A unique identifier for the health check",
		"healthCheckName": "Human-identifiable health check name",
		"healthStatus": "Origin health status",
		"originIP": "IP address of the origin",
		"originResponseStatus": "HTTP status code returned by the origin",
		"region": "Region where the health check occurred",
		"rttMs": "RTT (milliseconds) to reach the origin",
		"sampleInterval": "ABR sample interval",
		"scope": "Geographic aggregation level of the health status",
		"tcpConnMs": "Time taken for the tcp connection to be established",
		"timeToFirstByteMs": "Time taken for the first byte to be received once connection is available",
		"tlsHandshakeMs": "Time taken for the tls handshake to be completed"
	},
	"ZoneHealthCheckEventsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneHealthCheckEventsAdaptiveGroups": {
		"__description": "Aggregated Health Check events with adaptive sampling",
		"avg": "The average value for a metric",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneHealthCheckEventsAdaptiveGroupsAvg": {
		"__description": "",
		"rttMs": "Average RTT (milliseconds)",
		"sampleInterval": "Average sample interval",
		"tcpConnMs": "Average TCP Connection time (milliseconds)",
		"timeToFirstByteMs": "Average Time To First Byte (milliseconds)",
		"tlsHandshakeMs": "Average TLS Handshake time (milliseconds)"
	},
	"ZoneHealthCheckEventsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"ZoneHealthCheckEventsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date the event was written to the database",
		"datetime": "Datetime the event was written to the database",
		"datetimeFifteenMinutes": "Datetime the event was written to the database truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "Datetime the event was written to the database truncated to a multiple of 5 minutes",
		"datetimeHour": "Datetime the event was written to the database truncated to the hour",
		"datetimeMinute": "Datetime the event was written to the database truncated to the minute",
		"failureReason": "Reason why the health check failed",
		"fqdn": "Fully qualified domain name of the origin (if available)",
		"healthChanged": "1 if the origin health status has changed since the last health check, 0 otherwise",
		"healthCheckId": "A unique identifier for the health check",
		"healthCheckName": "Human-identifiable health check name",
		"healthStatus": "Origin health status",
		"originIP": "IP address of the origin",
		"originResponseStatus": "HTTP status code returned by the origin",
		"region": "Region where the health check occurred",
		"rttMs": "RTT (milliseconds) to reach the origin",
		"sampleInterval": "ABR sample interval",
		"scope": "Geographic aggregation level of the health status",
		"tcpConnMs": "Time taken for the tcp connection to be established",
		"timeToFirstByteMs": "Time taken for the first byte to be received once connection is available",
		"tlsHandshakeMs": "Time taken for the tls handshake to be completed"
	},
	"ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHealthCheckEventsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHealthCheckEventsAdaptiveGroupsSum": {
		"__description": "",
		"healthStatus": ""
	},
	"ZoneHealthCheckEventsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"healthStatus": "Confidence interval for the corresponding point estimate"
	},
	"ZoneHealthCheckEventsAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequests1dByColoGroups": {
		"__description": "Daily rollups of request data by colo",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneHttpRequests1dByColoGroupsCountryMapElem": {
		"__description": "",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1dByColoGroupsDimensions": {
		"__description": "",
		"coloCode": "Code of edge server",
		"date": "Request date"
	},
	"ZoneHttpRequests1dByColoGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequests1dByColoGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequests1dByColoGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1dByColoGroupsSum": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"countryMap": "",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": ""
	},
	"ZoneHttpRequests1dByColoGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"ZoneHttpRequests1dGroups": {
		"__description": "Daily rollups of request data",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension",
		"uniq": "The number of unique values for a metric per dimension"
	},
	"ZoneHttpRequests1dGroupsAvg": {
		"__description": "",
		"bytes": "",
		"edgeRequestBytes": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneHttpRequests1dGroupsBrowserMapElem": {
		"__description": "",
		"pageViews": "Successful requests for HTML content",
		"uaBrowserFamily": "Browser type"
	},
	"ZoneHttpRequests1dGroupsClientHTTPVersionMapElem": {
		"__description": "",
		"clientHTTPProtocol": "HTTP version",
		"requests": ""
	},
	"ZoneHttpRequests1dGroupsClientSSLMapElem": {
		"__description": "",
		"clientSSLProtocol": "Protocol version",
		"requests": ""
	},
	"ZoneHttpRequests1dGroupsContentTypeMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"edgeResponseContentTypeName": "Content type returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1dGroupsCountryMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1dGroupsDimensions": {
		"__description": "",
		"date": "Request date"
	},
	"ZoneHttpRequests1dGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequests1dGroupsIpClassMapElem": {
		"__description": "",
		"ipType": "IP class",
		"requests": ""
	},
	"ZoneHttpRequests1dGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequests1dGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1dGroupsSum": {
		"__description": "",
		"browserMap": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"clientHTTPVersionMap": "",
		"clientSSLMap": "",
		"contentTypeMap": "",
		"countryMap": "",
		"edgeRequestBytes": "Bytes sent from client",
		"encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
		"encryptedRequests": "Requests served using SSL/TLS protocol",
		"ipClassMap": "",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1dGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"ZoneHttpRequests1dGroupsUniq": {
		"__description": "",
		"uniques": "A number of unique IPs"
	},
	"ZoneHttpRequests1hGroups": {
		"__description": "Hourly rollups of request data",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension",
		"uniq": "The number of unique values for a metric per dimension"
	},
	"ZoneHttpRequests1hGroupsAvg": {
		"__description": "",
		"bytes": "",
		"edgeRequestBytes": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneHttpRequests1hGroupsBrowserMapElem": {
		"__description": "",
		"pageViews": "Successful requests for HTML content",
		"uaBrowserFamily": "Browser type"
	},
	"ZoneHttpRequests1hGroupsClientHTTPVersionMapElem": {
		"__description": "",
		"clientHTTPProtocol": "HTTP version",
		"requests": ""
	},
	"ZoneHttpRequests1hGroupsClientSSLMapElem": {
		"__description": "",
		"clientSSLProtocol": "Protocol version",
		"requests": ""
	},
	"ZoneHttpRequests1hGroupsContentTypeMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"edgeResponseContentTypeName": "Content type returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1hGroupsCountryMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1hGroupsDimensions": {
		"__description": "",
		"date": "Request date",
		"datetime": "Request datetime truncated to the hour"
	},
	"ZoneHttpRequests1hGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequests1hGroupsIpClassMapElem": {
		"__description": "",
		"ipType": "IP class",
		"requests": ""
	},
	"ZoneHttpRequests1hGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequests1hGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1hGroupsSum": {
		"__description": "",
		"browserMap": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"clientHTTPVersionMap": "",
		"clientSSLMap": "",
		"contentTypeMap": "",
		"countryMap": "",
		"edgeRequestBytes": "Bytes sent from client",
		"encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
		"encryptedRequests": "Requests served using SSL/TLS protocol",
		"ipClassMap": "",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1hGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"ZoneHttpRequests1hGroupsUniq": {
		"__description": "",
		"uniques": "A number of unique IPs"
	},
	"ZoneHttpRequests1mByColoGroups": {
		"__description": "Minutely rollups of request data by colo",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneHttpRequests1mByColoGroupsCountryMapElem": {
		"__description": "",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1mByColoGroupsDimensions": {
		"__description": "",
		"coloCode": "Code of edge server",
		"date": "Request date",
		"datetime": "Request datetime",
		"datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
		"datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime truncated to the hour"
	},
	"ZoneHttpRequests1mByColoGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequests1mByColoGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequests1mByColoGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1mByColoGroupsSum": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"countryMap": "",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": ""
	},
	"ZoneHttpRequests1mByColoGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"ZoneHttpRequests1mGroups": {
		"__description": "Minutely rollups of request data",
		"avg": "The average value for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension",
		"uniq": "The number of unique values for a metric per dimension"
	},
	"ZoneHttpRequests1mGroupsAvg": {
		"__description": "",
		"bytes": "",
		"edgeRequestBytes": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneHttpRequests1mGroupsBrowserMapElem": {
		"__description": "",
		"pageViews": "Successful requests for HTML content",
		"uaBrowserFamily": "Browser type"
	},
	"ZoneHttpRequests1mGroupsClientHTTPVersionMapElem": {
		"__description": "",
		"clientHTTPProtocol": "HTTP version",
		"requests": ""
	},
	"ZoneHttpRequests1mGroupsClientSSLMapElem": {
		"__description": "",
		"clientSSLProtocol": "Protocol version",
		"requests": ""
	},
	"ZoneHttpRequests1mGroupsContentTypeMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"edgeResponseContentTypeName": "Content type returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1mGroupsCountryMapElem": {
		"__description": "",
		"bytes": "Bytes returned to client",
		"clientCountryName": "Country from which request originated",
		"requests": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1mGroupsDimensions": {
		"__description": "",
		"date": "Request date",
		"datetime": "Request datetime, truncated to the minute",
		"datetimeDay": "Request datetime truncated to the day",
		"datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime truncated to the hour",
		"datetimeMinute": "<small>DEPRECATED (Field is replaced with <code>datetime</code>):</small> Request datetime truncated to the minute"
	},
	"ZoneHttpRequests1mGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequests1mGroupsIpClassMapElem": {
		"__description": "",
		"ipType": "IP class",
		"requests": ""
	},
	"ZoneHttpRequests1mGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequests1mGroupsResponseStatusMapElem": {
		"__description": "",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"requests": ""
	},
	"ZoneHttpRequests1mGroupsSum": {
		"__description": "",
		"browserMap": "",
		"bytes": "Bytes returned to client",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"clientHTTPVersionMap": "",
		"clientSSLMap": "",
		"contentTypeMap": "",
		"countryMap": "",
		"edgeRequestBytes": "Bytes sent from client",
		"encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
		"encryptedRequests": "Requests served using SSL/TLS protocol",
		"ipClassMap": "",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"responseStatusMap": "",
		"threatPathingMap": "",
		"threats": "Requests classified as threats"
	},
	"ZoneHttpRequests1mGroupsThreatPathingMapElem": {
		"__description": "",
		"requests": "",
		"threatPathingName": "Threat type"
	},
	"ZoneHttpRequests1mGroupsUniq": {
		"__description": "",
		"uniques": "A number of unique IPs"
	},
	"ZoneHttpRequestsAdaptive": {
		"__description": "Raw HTTP requests with adaptive sampling",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botManagementDecision": "Judgement of the bot management system",
		"botScore": "The final score originated from bot management detections.",
		"botScoreBucketBy10": "Range of the bot management score",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"cacheReserveUsed": "Used Cache Reserve to serve the response",
		"cacheStatus": "Cache status",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "The ASN number of the visitor",
		"clientCountryName": "Country from which request originated",
		"clientDeviceType": "",
		"clientIP": "The visitor's IP address (IPv4 or IPv6)",
		"clientRefererHost": "The referrer host",
		"clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
		"clientRequestHTTPMethodName": "HTTP method of client request",
		"clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
		"clientRequestPath": "The path requested by visitor",
		"clientRequestQuery": "Query parameters of client request",
		"clientRequestReferer": "HTTP request referrer",
		"clientRequestScheme": "The url scheme requested by the visitor",
		"clientSSLProtocol": "SSL protocol version",
		"coloCode": "",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeDnsResponseTimeMs": "The time elapsed resolving a CNAME if it was required to reach your origin",
		"edgeResponseContentTypeName": "",
		"edgeResponseStatus": "HTTP response status code returned to browser",
		"edgeTimeToFirstByteMs": "The time elapsed between processing the first byte of the request until when we started sending a response",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"isCrossZoneSubrequest": "'1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise.",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"ja4Signals": "Inter-request statistics computed for this JA4 across Cloudflare's entire global edge network",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"leakedCredentialCheckResult": "The distinct result of checking for leaked credentials",
		"originASN": "",
		"originASNDescription": "ASN associated with origin",
		"originIP": "",
		"originResponseDurationMs": "",
		"originResponseStatus": "HTTP origin response status code returned to browser",
		"rayName": "The RayId of the request",
		"requestSource": "",
		"securityAction": "The code of the first-class action the Cloudflare Firewall took on this request",
		"securitySource": "The Cloudflare security product triggered by this request",
		"sessionIdHash": "API Security Session ID hash",
		"upperTierColoName": "",
		"userAgent": "visitor's user-agent string",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"xRequestedWith": "The X-Requested-With header of the client request",
		"zoneVersion": "The version of a zone"
	},
	"ZoneHttpRequestsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequestsAdaptiveGroups": {
		"__description": "Aggregated HTTP requests data with adaptive sampling",
		"avg": "The average value used for sample interval",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"quantiles": "Quantiles of a metric per dimension",
		"ratio": "The ratio of a range of status codes, between 0 and 1",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneHttpRequestsAdaptiveGroupsAvg": {
		"__description": "",
		"crossZoneSubrequests": "The proportion of requests that were inititiated by a Cloudflare Worker on another zone",
		"edgeDnsResponseTimeMs": "",
		"edgeTimeToFirstByteMs": "",
		"originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
		"sampleInterval": ""
	},
	"ZoneHttpRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"ZoneHttpRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
		"apiGatewayMatchedHost": "API Gateway host matched at the edge",
		"attackSignatureCategories": "1-D array of the categories associated with the rules ref in attackSignatureRefs",
		"attackSignatureRefs": "cf.waf.attack_signature.refs Ruleset field truncated to maximum 10 elements.",
		"botDetectionIds": "Array of detections ids that matched this request",
		"botDetectionTags": "Array of detections tags that matched this request",
		"botManagementDecision": "Judgement of the bot management system",
		"botScore": "The final score originated from bot management detections.",
		"botScoreBucketBy10": "Range of the bot management score",
		"botScoreSrcName": "Name of the source detection which generated the bot management score.",
		"cacheReserveUsed": "Used Cache Reserve to serve the response",
		"cacheStatus": "",
		"clientASNDescription": "The ASN of the visitor as string",
		"clientAsn": "",
		"clientCountryName": "Country from which request originated",
		"clientDeviceType": "",
		"clientIP": "",
		"clientRefererHost": "The referrer host",
		"clientRequestHTTPHost": "Host requested by the client",
		"clientRequestHTTPMethodName": "HTTP method of client request",
		"clientRequestHTTPProtocol": "HTTP protocol version",
		"clientRequestPath": "Path of client request",
		"clientRequestQuery": "Query parameters of client request",
		"clientRequestReferer": "HTTP request referrer",
		"clientRequestScheme": "HTTP request URI scheme (http/https)",
		"clientSSLProtocol": "SSL protocol version",
		"coloCode": "",
		"contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
		"contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
		"contentScanNumObj": "Number of scannable content objects",
		"contentScanObjResults": "Array of scan results in order of detection",
		"contentScanObjSizes": "Array of scan sizes in order of detection",
		"contentScanObjTypes": "Array of content types in order of detection",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeDnsResponseTimeMs": "The time elapsed resolving a CNAME if it was required to reach your origin",
		"edgeResponseContentTypeName": "",
		"edgeResponseStatus": "",
		"edgeTimeToFirstByteMs": "The time elapsed between processing the first byte of the request until when we started sending a response",
		"firewallForAiAnyPiiCategory": "Whether firewallForAiPiiCategories is non empty. 0 if empty, 1 if not empty.",
		"firewallForAiInjectionScore": "Corresponds to the Ruleset field cf.llm.prompt.injection_score.",
		"firewallForAiPiiCategories": "Corresponds to the Ruleset field cf.llm.prompt.pii_categories.",
		"firewallForAiUnsafeTopicCategories": "Corresponds to the Ruleset field cf.llm.prompt.unsafe_data_categories.",
		"fraudAttack": "The primary attack or use case detected in the request by Fraud detections",
		"fraudDetectionIds": "Array of fraud detections ids that matched this request",
		"fraudDetectionTags": "Array of fraud detections tags that matched this request",
		"fraudEmailRisk": "Risk of a specific email address in account signup attempts",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"isCrossZoneSubrequest": "'1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise.",
		"ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
		"ja4": "JA4 TLS fingerprint",
		"jsDetectionPassed": "Whether the request passed background JavaScript Detection",
		"leakedCredentialCheckResult": "The distinct result of checking for leaked credentials",
		"originASN": "",
		"originASNDescription": "ASN associated with origin",
		"originIP": "",
		"originResponseDurationMs": "",
		"originResponseStatus": "HTTP response status code returned by the origin",
		"requestSource": "",
		"sampleInterval": "ABR sample interval",
		"securityAction": "The code of the first-class action the Cloudflare Firewall took on this request",
		"securitySource": "The Cloudflare security product triggered by this request",
		"sessionIdHash": "API Security Session ID hash",
		"upperTierColoName": "",
		"userAgent": "",
		"userAgentBrowser": "Browser parsed from the user agent",
		"userAgentOS": "OS parsed from the user agent",
		"verifiedBotCategory": "The category of verified bot",
		"wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
		"wafAttackScoreClass": "Beta. Overall request score class generated by the WAF detection module",
		"wafRceAttackScore": "Beta. WAF score for a RCE attack",
		"wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
		"wafXssAttackScore": "Beta. WAF score for a XSS attack",
		"xRequestedWith": "The X-Requested-With header of the client request",
		"zoneVersion": "The version of a zone"
	},
	"ZoneHttpRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequestsAdaptiveGroupsQuantiles": {
		"__description": "",
		"edgeDnsResponseTimeMsP50": "50th percentile DNS Response Time (milliseconds)",
		"edgeDnsResponseTimeMsP95": "95th percentile DNS Response Time (milliseconds)",
		"edgeDnsResponseTimeMsP99": "99th percentile DNS Response Time (milliseconds)",
		"edgeResponseBytesP50": "50th percentile Bytes returned to client",
		"edgeResponseBytesP95": "95th percentile Bytes returned to client",
		"edgeResponseBytesP99": "99th percentile Bytes returned to client",
		"edgeTimeToFirstByteMsP50": "50th percentile Time To First Byte (milliseconds)",
		"edgeTimeToFirstByteMsP95": "95th percentile Time To First Byte (milliseconds)",
		"edgeTimeToFirstByteMsP99": "99th percentile Time To First Byte (milliseconds)",
		"originResponseDurationMsP50": "50th percentile Origin Response Duration (milliseconds)",
		"originResponseDurationMsP95": "95th percentile Origin Response Duration (milliseconds)",
		"originResponseDurationMsP99": "99th percentile Origin Response Duration (milliseconds)"
	},
	"ZoneHttpRequestsAdaptiveGroupsRatio": {
		"__description": "",
		"status4xx": "",
		"status5xx": ""
	},
	"ZoneHttpRequestsAdaptiveGroupsSum": {
		"__description": "",
		"botDetectionIdArray": "Array of bot management detection ids",
		"botDetectionIdCountArray": "Count array of bot management detection ids. Elements in this array correspond to elements in botDetectionIdArray by index.",
		"botDetectionTagArray": "Array of bot management detection tags",
		"botDetectionTagCountArray": "Count array of bot management detection tags. Elements in this array correspond to elements in botDetectionTagArray by index.",
		"crossZoneSubrequests": "The number of requests that were inititiated by a Cloudflare Worker on another zone",
		"edgeDnsResponseTimeMs": "",
		"edgeRequestBytes": "",
		"edgeResponseBytes": "",
		"edgeTimeToFirstByteMs": "",
		"fraudDetectionIdArray": "Array of fraud detection ids",
		"fraudDetectionIdCountArray": "Count array of fraud detection ids. Elements in this array correspond to elements in fraudDetectionIdArray by index.",
		"fraudDetectionTagArray": "Array of fraud detection tags",
		"fraudDetectionTagCountArray": "Count array of fraud detection tags. Elements in this array correspond to elements in fraudDetectionTagArray by index.",
		"originResponseDurationMs": "",
		"visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
	},
	"ZoneHttpRequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"crossZoneSubrequests": "Confidence interval for the corresponding point estimate",
		"edgeDnsResponseTimeMs": "Confidence interval for the corresponding point estimate",
		"edgeRequestBytes": "Confidence interval for the corresponding point estimate",
		"edgeResponseBytes": "Confidence interval for the corresponding point estimate",
		"edgeTimeToFirstByteMs": "Confidence interval for the corresponding point estimate",
		"originResponseDurationMs": "Confidence interval for the corresponding point estimate",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"ZoneHttpRequestsAdaptiveJa4SignalsElem": {
		"__description": "",
		"signalName": "Signal name",
		"signalValue": "Signal value"
	},
	"ZoneHttpRequestsAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequestsOverviewAdaptiveGroups": {
		"__description": "A high-level summary of HTTP requests made by end users.",
		"avg": "The average value for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"ratio": "The ratio of a metric in comparison to the rest of the traffic, between 0 and 1",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsAvg": {
		"__description": "",
		"originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
		"sampleInterval": "Average sample interval"
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsDimensions": {
		"__description": "",
		"clientCountryName": "Country from which request originated",
		"clientRequestHTTPProtocol": "HTTP protocol version",
		"clientSSLProtocol": "SSL protocol version",
		"date": "The date the event occurred at the edge",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event occurred at the edge truncated to hours",
		"datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
		"edgeResponseContentTypeName": "Content type returned to client",
		"edgeResponseStatus": "HTTP response status code returned to client",
		"httpApplicationVersion": "<small>DEPRECATED (Field is replaced with <code>zoneVersion</code>):</small> Version associated with HTTP Application",
		"userAgentBrowser": "Browser parsed from the user agent",
		"zoneVersion": "The version of a zone"
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsRatio": {
		"__description": "",
		"cachedBytes": "",
		"cachedRequests": "",
		"encryptedBytes": "",
		"encryptedRequests": "",
		"status4xx": "",
		"status5xx": ""
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsSum": {
		"__description": "",
		"bytes": "",
		"cachedBytes": "Bytes returned to client from cache",
		"cachedRequests": "Requests served from cache",
		"pageViews": "Successful requests for HTML content",
		"requests": "",
		"visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
	},
	"ZoneHttpRequestsOverviewAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytes": "Confidence interval for the corresponding point estimate",
		"cachedBytes": "Confidence interval for the corresponding point estimate",
		"cachedRequests": "Confidence interval for the corresponding point estimate",
		"pageViews": "Confidence interval for the corresponding point estimate",
		"requests": "Confidence interval for the corresponding point estimate",
		"visits": "Confidence interval for the corresponding point estimate"
	},
	"ZoneImageResizingRequests1mGroups": {
		"__description": "Minutely rollups of Image Resizing requests",
		"count": "Counts a number of rows per specific dimensions",
		"dimensions": "List of dimensions to group by",
		"sum": "Calculates a sum of each field per speicific dimensions"
	},
	"ZoneImageResizingRequests1mGroupsDimensions": {
		"__description": "",
		"contentType": "",
		"date": "",
		"datetime": "",
		"datetimeFifteenMinutes": "",
		"datetimeFiveMinutes": "",
		"datetimeHour": "",
		"datetimeMinute": "",
		"resizeError": "Error description when a resized image was requested but could not be served"
	},
	"ZoneImageResizingRequests1mGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneImageResizingRequests1mGroupsOrderBy": {
		"__description": ""
	},
	"ZoneImageResizingRequests1mGroupsSum": {
		"__description": "",
		"originalBytes": "The size of the image before resizing",
		"originalPixels": "The area of the image before resizing",
		"requests": "Count of image resizing requests",
		"resizedBytes": "The size of the image after resizing",
		"resizedPixels": "The area of the image after resizing"
	},
	"ZoneLoadBalancingRequestsAdaptive": {
		"__description": "Raw Load Balancing origin requests with adaptive sampling",
		"coloCode": "IATA airport code of data center that received the request",
		"datetime": "Request datetime",
		"errorType": "Error generated when selecting an origin",
		"lbName": "Load balancer name",
		"numberOriginsSelected": "Number of origins that were selected and returned to the client",
		"origins": "All origins in the pool that was selected based on steering policy",
		"pools": "List of pools from which a pool will be selected based on steering policy",
		"proxied": "Whether traffic is proxied through the Cloudflare network (orange-clouded)",
		"region": "Load balancing region where request originated",
		"sampleInterval": "ABR sample interval",
		"selectedOriginIndex": "Index of the selected origin from the list of all origins. If multiple origins were selected, this is the index of the first origin in that list",
		"selectedPoolAvgRttMs": "Average RTT (milliseconds) to reach the origins within the selected pool",
		"selectedPoolHealthChecksEnabled": "Health checks active status for the selected pool",
		"selectedPoolHealthy": "Health status for the selected pool",
		"selectedPoolId": "A unique identifier for the selected pool",
		"selectedPoolIndex": "Index of the selected pool from the list of all pools",
		"selectedPoolName": "Name for the selected pool",
		"sessionAffinity": "Type of session affinity enabled",
		"sessionAffinityStatus": "Current status of session affinity",
		"steeringPolicy": "Policy by which the load balancer will route traffic"
	},
	"ZoneLoadBalancingRequestsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneLoadBalancingRequestsAdaptiveGroups": {
		"__description": "Aggregated Load Balancing origin requests with adaptive sampling",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneLoadBalancingRequestsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneLoadBalancingRequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneLoadBalancingRequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"coloCode": "IATA airport code of data center that received the request",
		"datetime": "Request datetime",
		"datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime truncated to the hour",
		"datetimeMinute": "Request datetime truncated to multiple of 1 minute",
		"errorType": "Error generated when selecting an origin",
		"lbName": "Load balancer name",
		"multipleOriginsSelected": "Indicates whether multiple origins were returned to the client",
		"numberOriginsSelected": "Number of origins that were selected and returned to the client",
		"proxied": "Whether traffic is proxied through the Cloudflare network (orange-clouded)",
		"region": "Load balancing region where request originated",
		"sampleInterval": "ABR sample interval",
		"selectedOriginIndex": "Index of the selected origin from the list of all origins. If multiple origins were selected, this is the index of the first origin in that list",
		"selectedOriginName": "Name of the selected origin",
		"selectedOriginNames": "Names of each selected origin",
		"selectedPoolAvgRttMs": "Dynamic Latency: RTT (milliseconds) to reach the origin pool",
		"selectedPoolHealthChecksEnabled": "Health checks status for the selected pool",
		"selectedPoolHealthy": "Health status for the selected pool",
		"selectedPoolId": "A unique identifier for the selected pool",
		"selectedPoolIndex": "Index of the selected pool from the list of all pools",
		"selectedPoolName": "Name for the selected pool",
		"sessionAffinityEnabled": "Type of session affinity enabled",
		"sessionAffinityStatus": "Current status of session affinity",
		"steeringPolicy": "Policy by which the load balancer will route traffic"
	},
	"ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneLoadBalancingRequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneLoadBalancingRequestsAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneLoadBalancingRequestsAdaptiveOriginsElem": {
		"__description": "",
		"fqdn": "Fully qualified domain name of the origin (if available)",
		"health": "Origin health status",
		"ipv4": "IPv4 Address of the origin",
		"ipv6": "IPv6 address of the origin",
		"originName": "Origin name",
		"selected": "All the origins that were returned to the client",
		"weight": "Ratio of traffic that will be distributed to this origin among all origins in the pool"
	},
	"ZoneLoadBalancingRequestsAdaptivePoolsElem": {
		"__description": "",
		"avgRttMs": "Dynamic Latency: RTT (milliseconds) to reach the origin pool",
		"distance": "Distance to Pool KM",
		"healthCheckEnabled": "Health checks status",
		"healthy": "Pool health status",
		"id": "A unique identifier for the pool",
		"poolName": "Pool name"
	},
	"ZoneLogpushHealthAdaptiveGroups": {
		"__description": "Beta. Logpush job health metrics",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"max": "Maximum value of a metric per dimension",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneLogpushHealthAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval",
		"uploadDuration": "Average upload duration in seconds"
	},
	"ZoneLogpushHealthAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of values for a metric per dimension, with confidence intervals",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"ZoneLogpushHealthAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Date that we completed pushing the log batch",
		"datetime": "Datetime that we completed pushing the log batch",
		"datetimeFifteenMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 5 minutes",
		"datetimeHour": "Datetime that we completed pushing the log batch, truncated to the hour",
		"datetimeMinute": "Datetime that we completed pushing the log batch, truncated to the minute",
		"destinationType": "Destination type, e.g. 'S3' or 'GCS'",
		"error": "Error message",
		"final": "Cloudflare may attempt to push a batch of logs multiple times if we encounter a failure. This field will be set to 1 if this was the last push attempt for this batch of logs. If this field is set to 0, it means the push failed but another retry was attempted. If this field is set to 1 and status >= 300, then the batch of logs failed to push and log data was lost. If you want to count the total number of logs that succeeded or failed, you should always set final = 1.",
		"jobId": "The Logpush Job ID",
		"status": "HTTP response status code of the log destination",
		"success": "1 when the upload was successful without error, otherwise 0"
	},
	"ZoneLogpushHealthAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneLogpushHealthAdaptiveGroupsMax": {
		"__description": "",
		"timestamp": "Latest timestamp of upload attempts"
	},
	"ZoneLogpushHealthAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneLogpushHealthAdaptiveGroupsSum": {
		"__description": "",
		"bytes": "Bytes of uncompressed log data in upload attempts",
		"bytesCompressed": "Bytes of compressed log data in upload attempts",
		"records": "A count of the total number of records in upload attempts.",
		"uploads": "A count of the total number of upload attempts"
	},
	"ZoneLogpushHealthAdaptiveGroupsSumConfidence": {
		"__description": "",
		"bytes": "Confidence interval for the corresponding point estimate",
		"bytesCompressed": "Confidence interval for the corresponding point estimate",
		"records": "Confidence interval for the corresponding point estimate",
		"uploads": "Confidence interval for the corresponding point estimate"
	},
	"ZoneNelReportsAdaptiveGroups": {
		"__description": "Data to visualize network error logs",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "The number of NEL Reports",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneNelReportsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"ZoneNelReportsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "The number of NEL Reports, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneNelReportsAdaptiveGroupsDimensions": {
		"__description": "",
		"clientIPASN": "Client ASN",
		"clientIPASNDescription": "Client ASN Description",
		"clientIPCountry": "Client Country",
		"clientIPCountryCode": "2 letter client country code using ISO 3166-1 alpha-2 syntax",
		"clientIPVersion": "IP Version the client used to connect",
		"date": "Request date from browser",
		"datetime": "Request datetime from browser",
		"datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
		"datetimeHour": "Request datetime from browser, truncated to the hour",
		"datetimeMinute": "Request datetime from browser, truncated to the minute",
		"lastKnownGoodColoCode": "IATA airport code of colo the client connected to",
		"phase": "The phase of connection the error occurred in",
		"protocol": "HTTP Protocol used when the error occured",
		"type": "The type of error in the phase"
	},
	"ZoneNelReportsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneNelReportsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZonePageShieldReportsAdaptiveGroups": {
		"__description": "Page Shield CSP reports",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of Page Shield CSP reports",
		"dimensions": "List of dimensions to group by"
	},
	"ZonePageShieldReportsAdaptiveGroupsAvg": {
		"__description": "",
		"sampleInterval": "Average sample interval"
	},
	"ZonePageShieldReportsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of Page Shield CSP reports, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZonePageShieldReportsAdaptiveGroupsDimensions": {
		"__description": "",
		"action": "policy action, log | allow",
		"cspDirective": "csp directive e.g 'script-src'",
		"date": "",
		"datetime": "The date and time the event occurred at the edge",
		"datetimeFifteenMinutes": "Report datetime from edge, truncated to multiple of 15 minutes",
		"datetimeFiveMinutes": "Report datetime from edge, truncated to multiple of 5 minutes",
		"datetimeHalfOfHour": "Report datetime from edge, truncated to multiple of 30 minutes",
		"datetimeHour": "Report datetime from edge, truncated to the hour",
		"datetimeMinute": "Report datetime from edge, truncated to the minute",
		"host": "hostname of the zone",
		"pageURL": "page on which the resource was found",
		"policyID": "The ID of the Policy",
		"resourceType": "resource type e.g script",
		"url": "URL of the CSP reported resource",
		"urlHost": "hostname of the resource URL"
	},
	"ZonePageShieldReportsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZonePageShieldReportsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneSettings": {
		"__description": "Access and limitations for a zone",
		"apiGatewayGraphqlQueryAnalyticsGroups": "",
		"apiGatewayMatchedSessionIDsAdaptiveGroups": "",
		"apiGatewayMatchedSessionIDsPerEndpointAdaptiveGroups": "",
		"apiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroups": "",
		"apiRequestSequencesGroups": "",
		"cacheReserveOperationsAdaptiveGroups": "",
		"cacheReserveRequestsAdaptiveGroups": "",
		"cacheReserveStorageAdaptiveGroups": "",
		"dmarcReportsAdaptive": "",
		"dmarcReportsSourcesAdaptiveGroups": "",
		"dnsAnalyticsAdaptive": "",
		"dnsAnalyticsAdaptiveGroups": "",
		"emailRoutingAdaptive": "",
		"emailRoutingAdaptiveGroups": "",
		"firewallEventsAdaptive": "",
		"firewallEventsAdaptiveByTimeGroups": "",
		"firewallEventsAdaptiveGroups": "",
		"healthCheckEventsAdaptive": "",
		"healthCheckEventsAdaptiveGroups": "",
		"httpRequests1dByColoGroups": "",
		"httpRequests1dGroups": "",
		"httpRequests1hGroups": "",
		"httpRequests1mByColoGroups": "",
		"httpRequests1mGroups": "",
		"httpRequestsAdaptive": "",
		"httpRequestsAdaptiveGroups": "",
		"httpRequestsOverviewAdaptiveGroups": "",
		"imageResizingRequests1mGroups": "",
		"loadBalancingRequestsAdaptive": "",
		"loadBalancingRequestsAdaptiveGroups": "",
		"logpushHealthAdaptiveGroups": "",
		"nelReportsAdaptiveGroups": "",
		"pageShieldReportsAdaptiveGroups": "",
		"waitingRoomAnalyticsAdaptive": "",
		"waitingRoomAnalyticsAdaptiveGroups": "",
		"workersZoneInvocationsAdaptiveGroups": "",
		"workersZoneSubrequestsAdaptiveGroups": "",
		"zarazActionsAdaptiveGroups": "",
		"zarazAnalyticsIdentitiesAdaptiveGroups": "",
		"zarazAnalyticsOrderedTrackAdaptive": "",
		"zarazAnalyticsOrderedTrackAdaptiveGroups": "",
		"zarazAnalyticsTrackAdaptiveGroups": "",
		"zarazAnalyticsTrackTrafficSourcesAdaptiveGroups": "",
		"zarazAnalyticsTriggersAdaptiveGroups": "",
		"zarazAnalyticsTriggersTrafficSourcesAdaptiveGroups": "",
		"zarazFetchAdaptiveGroups": "",
		"zarazTrackAdaptiveGroups": "",
		"zarazTriggersAdaptiveGroups": ""
	},
	"ZoneWaitingRoomAnalyticsAdaptive": {
		"__description": "Raw Waiting Room analytics logs",
		"datetime": "The date and time of the state of analytics for the waiting room",
		"maxEstimatedTimeMinutes": "Maximum value of estimated time in minutes",
		"newUsersPerMinute": "Actual value of new users per minute",
		"newUsersPerMinuteConfig": "Configured value of new users per minute",
		"sampleInterval": "ABR sample interval",
		"sessionDuration": "Configured value of session duration",
		"sessionsRevoked": "Actual value of sessions revoked",
		"timeBetweenRefreshesP50": "50th percentile of the time between session refreshes in seconds",
		"timeBetweenRefreshesP75": "75th percentile of the time between session refreshes in seconds",
		"timeBetweenRefreshesP90": "90th percentile of the time between session refreshes in seconds",
		"timeBetweenRefreshesP95": "95th percentile of the time between session refreshes in seconds",
		"timeInQueueP50": "50th percentile of the time spent waiting in queue in seconds",
		"timeInQueueP75": "75th percentile of the time spent waiting in queue in seconds",
		"timeInQueueP90": "90th percentile of the time spent waiting in queue in seconds",
		"timeInQueueP95": "95th percentile of the time spent waiting in queue in seconds",
		"timeOnOriginP50": "50th percentile of the time spent on the origin in seconds",
		"timeOnOriginP75": "75th percentile of the time spent on the origin in seconds",
		"timeOnOriginP90": "90th percentile of the time spent on the origin in seconds",
		"timeOnOriginP95": "95th percentile of the time spent on the origin in seconds",
		"totalActiveUsers": "Actual value of total active users",
		"totalActiveUsersConfig": "Configured value of total active users",
		"totalQueuedUsers": "Total number of users that are queued",
		"totalTimeWaitedP50": "50th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
		"totalTimeWaitedP75": "75th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
		"totalTimeWaitedP90": "90th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
		"totalTimeWaitedP95": "95th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
		"turnstileFailures": "Number of users seen who failed to complete a Turnstile challenge and therefore are likely bots. These users are placed in the infinite queue if enabled.",
		"turnstileInfiniteQueueRefreshes": "Number of requests from users who failed to complete a Turnstile challenge and were placed in an infinite queue",
		"turnstileIssued": "Number of times a Turnstile challenge was included in the HTML sent to a user",
		"turnstileSuccesses": "Number of users seen who solved a Turnstile challenge and therefore are likely human. These users are placed in the normal queue.",
		"turnstileUnsolved": "Number of users seen who didn't attempt a Turnstile challenge and therefore might be bots. These users will continue to be challenged with every request until they either pass or fail the challenge.",
		"waitingRoomId": "Unique Identifier for the waiting room",
		"waitingRoomName": "Name of the waiting room"
	},
	"ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroups": {
		"__description": "Aggregated Waiting Room analytics logs with adaptive sampling",
		"avg": "Beta. The avg of values for a metric per dimension",
		"avgWeighted": "Beta. The avgWeighted values for a metric per dimension",
		"dimensions": "List of dimensions to group by",
		"max": "Beta. The max value for a metric per dimenstion",
		"min": "Beta. The minimum value for a metric per dimenstion",
		"sum": "The sum for a metric per dimension. Use for shorter queries since data gets sampled after 7 days."
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsAvg": {
		"__description": "",
		"maxEstimatedTimeMinutes": "Average of the maximum estimated wait time per minute. A negative number means no data",
		"newUsersPerMinute": "Average rate of new users per minute. A negative number means no data",
		"newUsersPerMinuteConfig": "Configured value of new users per minute. A negative number means no data",
		"sampleInterval": "Average sample interval",
		"sessionDuration": "Configured value of session duration. A negative number means no data",
		"sessionsRevoked": "Average rate of sessions revoked. A negative number means no data",
		"totalActiveUsers": "Average rate of total active users. A negative number means no data",
		"totalActiveUsersConfig": "Configured value of total active users. A negative number means no data",
		"totalQueuedUsers": "Average of total queued users",
		"turnstileFailures": "Average rate of users failing a Turnstile challenge and therefore probably being bots. These users are placed in the infinite queue if enabled. A negative number means no data",
		"turnstileInfiniteQueueRefreshes": "Average rate of requests from users who failed to complete a Turnstile challenge and were placed in an infinite queue. A negative number means no data",
		"turnstileIssued": "Average rate of Turnstile challenge being included in the HTML sent to a user. A negative number means no data",
		"turnstileSuccesses": "Average rate of users solving a Turnstile challenge and therefore likely being human. These users are placed in the normal queue. A negative number means no data",
		"turnstileUnsolved": "Average rate of users not attempting a Turnstile challenge and therefore possibly being bots. These users will continue to be challenged with every request until they either pass or fail the challenge. A negative number means no data"
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsAvgWeighted": {
		"__description": "",
		"timeBetweenRefreshesP50": "Weighted average of 50th percentile of time spent between session refreshes in seconds. A negative number means no data",
		"timeBetweenRefreshesP75": "Weighted average of 75th percentile of time spent between session refreshes in seconds. A negative number means no data",
		"timeBetweenRefreshesP90": "Weighted average of 90th percentile of time spent between session refreshes in seconds. A negative number means no data",
		"timeBetweenRefreshesP95": "Weighted average of 95th percentile of time spent between session refreshes in seconds. A negative number means no data",
		"timeInQueueP50": "Weighted average of 50th percentile of time spent in queue in seconds. A negative number means no data",
		"timeInQueueP75": "Weighted average of 75th percentile of time spent in queue in seconds. A negative number means no data",
		"timeInQueueP90": "Weighted average of 90th percentile of time spent in queue in seconds. A negative number means no data",
		"timeInQueueP95": "Weighted average of 95th percentile of time spent in queue in seconds. A negative number means no data",
		"timeOnOriginP50": "Weighted average of 50th percentile of time spent on origin in seconds. A negative number means no data",
		"timeOnOriginP75": "Weighted average of 75th percentile of time spent on origin in seconds. A negative number means no data",
		"timeOnOriginP90": "Weighted average of 90th percentile of time spent on origin in seconds. A negative number means no data",
		"timeOnOriginP95": "Weighted average of 95th percentile of time spent on origin in seconds. A negative number means no data",
		"totalTimeWaitedP50": "Weighted average of 50th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data",
		"totalTimeWaitedP75": "Weighted average of 75th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data",
		"totalTimeWaitedP90": "Weighted average of 90th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data",
		"totalTimeWaitedP95": "Weighted average of 95th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data"
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date the event was written to the database",
		"datetime": "The date and time the event was written to the database",
		"datetimeFifteenMinutes": "The date and time the event was written to the database, truncated to a multiple of 15 minutes",
		"datetimeFiveMinutes": "The date and time the event was written to the database, truncated to a multiple of 5 minutes",
		"datetimeHour": "The date and time the event was written to the database, truncated to the hour",
		"datetimeMinute": "The date and time the event was written to the database, truncated to the minute",
		"sampleInterval": "ABR sample interval",
		"waitingRoomId": "Unique Identifier for the waiting room"
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsMax": {
		"__description": "",
		"maxEstimatedTimeMinutes": "The maximum value of estimated time in minutes. A negative number means no data",
		"newUsersPerMinute": "The maximum value of the actual new users per minute. A negative number means no data",
		"newUsersPerMinuteConfig": "The maximum value of the configured new users per minute. A negative number means no data",
		"sessionDuration": "The maximum value of the configured session duration configuration. A negative number means no data",
		"sessionsRevoked": "The maximum value of the actual sessions revoked. A negative number means no data",
		"totalActiveUsers": "The maximum value of the actual total active users. A negative number means no data",
		"totalActiveUsersConfig": "The maximum value of the configured total active users. A negative number means no data",
		"totalQueuedUsers": "The maximum value of total number of queued users. A negative number means no data",
		"turnstileFailures": "The maximum number of users seen who failed to complete a Turnstile challenge and therefore are likely bots. These users are placed in the infinite queue if enabled. A negative number means no data",
		"turnstileInfiniteQueueRefreshes": "The maximum value of requests from users who failed to complete a Turnstile challenge and were placed in an infinite queue. A negative number means no data",
		"turnstileIssued": "The maximum number of times a Turnstile challenge was included in the HTML sent to a user. A negative number means no data",
		"turnstileSuccesses": "The maximum number of users seen who solved a Turnstile challenge and therefore are likely human. These users are placed in the normal queue. A negative number means no data",
		"turnstileUnsolved": "The maximum number of users seen who didn't attempt a Turnstile challenge and therefore might be bots. These users will continue to be challenged with every request until they either pass or fail the challenge. A negative number means no data"
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsMin": {
		"__description": "",
		"maxEstimatedTimeMinutes": "The minimum value of estimated time in minutes. A negative number means no data",
		"newUsersPerMinute": "The minimum value of the actual new users per minute. A negative number means no data",
		"newUsersPerMinuteConfig": "The minimum value of the configured new users per minute. A negative number means either Waiting Room is in passthrough or no data",
		"sessionDuration": "The minimum value of the configured session duration configuration. A negative number means no data",
		"sessionsRevoked": "The minimum value of the actual sessions revoked. A negative number means no data",
		"totalActiveUsers": "The minimum value of the actual total active users. A negative number means no data",
		"totalActiveUsersConfig": "The minimum value of the configured total active users. A negative number means either Waiting Room is in passthrough or no data",
		"totalQueuedUsers": "The minimum value of total number of queued users. A negative number means no data",
		"turnstileFailures": "The minimum number of users seen who failed to complete a Turnstile challenge and therefore are likely bots. These users are placed in the infinite queue if enabled. A negative number means no data",
		"turnstileInfiniteQueueRefreshes": "The minimum value of requests from users who failed to complete a Turnstile challenge and were placed in an infinite queue. A negative number means no data",
		"turnstileIssued": "The minimum number of times a Turnstile challenge was included in the HTML sent to a user. A negative number means no data",
		"turnstileSuccesses": "The minimum number of users seen who solved a Turnstile challenge and therefore are likely human. These users are placed in the normal queue. A negative number means no data",
		"turnstileUnsolved": "The minimum number of users seen who didn't attempt a Turnstile challenge and therefore might be bots. These users will continue to be challenged with every request until they either pass or fail the challenge. A negative number means no data"
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneWaitingRoomAnalyticsAdaptiveGroupsSum": {
		"__description": "",
		"newUsersPerMinute": "Sum of new users per minute. A negative number means no data",
		"sessionsRevoked": "Sum of sessions revoked. A negative number means no data",
		"turnstileFailures": "Sum of users seen who failed to complete a Turnstile challenge and therefore are likely bots. These users are placed in the infinite queue if enabled. A negative number means no data",
		"turnstileInfiniteQueueRefreshes": "Sum of requests from users who failed to complete a Turnstile challenge and were placed in an infinite queue. A negative number means no data",
		"turnstileIssued": "Sum of times a Turnstile challenge was included in the HTML sent to a user. A negative number means no data",
		"turnstileSuccesses": "Sum of users seen who solved a Turnstile challenge and therefore are likely human. These users are placed in the normal queue. A negative number means no data",
		"turnstileUnsolved": "Sum of users seen who didn't attempt a Turnstile challenge and therefore might be bots. These users will continue to be challenged with every request until they either pass or fail the challenge. A negative number means no data"
	},
	"ZoneWaitingRoomAnalyticsAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroups": {
		"__description": "Workers invocations with adaptive sampling",
		"avg": "The average of values for a metric per dimension",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroupsAvg": {
		"__description": "",
		"avgCpuTime": "Average CPU time used per request (in microseconds)"
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroupsDimensions": {
		"__description": "",
		"constantScriptId": "Worker script Id",
		"date": "Request datetime, truncated to start of a day",
		"datetime": "Request datetime",
		"datetimeHour": "Request datetime, truncated to start of an hour",
		"datetimeMinute": "Request datetime, truncated to start of an minute",
		"datetimeSixHours": "Request datetime, truncated to start of six hour window",
		"httpResponseStatus": "Origin HTTP response code",
		"status": "Status of the worker invocation"
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroupsSum": {
		"__description": "",
		"requests": "Sum of Requests",
		"responseBodySize": "Bandwidth (in bytes) returned to eyeball",
		"subrequests": "Number of sub-requests issued by the edge worker",
		"totalCpuTime": "Total CPU time used (in microseconds)"
	},
	"ZoneWorkersZoneInvocationsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requests": "Confidence interval for the corresponding point estimate",
		"responseBodySize": "Confidence interval for the corresponding point estimate",
		"subrequests": "Confidence interval for the corresponding point estimate",
		"totalCpuTime": "Confidence interval for the corresponding point estimate"
	},
	"ZoneWorkersZoneSubrequestsAdaptiveGroups": {
		"__description": "Workers subrequests with adaptive sampling",
		"confidence": "ALPHA - DO NOT USE",
		"dimensions": "List of dimensions to group by",
		"sum": "The sum of values for a metric per dimension"
	},
	"ZoneWorkersZoneSubrequestsAdaptiveGroupsConfidence": {
		"__description": "",
		"level": "Confidence level that was requested",
		"sum": "The sum of values for a metric per dimension, with confidence intervals"
	},
	"ZoneWorkersZoneSubrequestsAdaptiveGroupsDimensions": {
		"__description": "",
		"cacheStatus": "Cache status",
		"date": "Request datetime, truncated to start of a day",
		"datetime": "Request datetime",
		"datetimeHour": "Request datetime, truncated to start of an hour",
		"datetimeMinute": "Request datetime, truncated to start of an minute",
		"datetimeSixHours": "Request datetime, truncated to start of six hour window",
		"hostname": "The hostname of the subrequest",
		"httpResponseStatus": "Origin HTTP response code"
	},
	"ZoneWorkersZoneSubrequestsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneWorkersZoneSubrequestsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneWorkersZoneSubrequestsAdaptiveGroupsSum": {
		"__description": "",
		"requestBodySize": "Workers fetch request body size in bytes",
		"requestBodySizeUncached": "Workers fetch request body size in bytes where the request was not cached",
		"responseBodySize": "Workers fetch response body size in bytes",
		"subrequests": "Number of sub-requests issued by the edge worker"
	},
	"ZoneWorkersZoneSubrequestsAdaptiveGroupsSumConfidence": {
		"__description": "",
		"requestBodySize": "Confidence interval for the corresponding point estimate",
		"requestBodySizeUncached": "Confidence interval for the corresponding point estimate",
		"responseBodySize": "Confidence interval for the corresponding point estimate",
		"subrequests": "Confidence interval for the corresponding point estimate"
	},
	"ZoneZarazActionsAdaptiveGroups": {
		"__description": "Zaraz Actions Analytics",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Actions",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneZarazActionsAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Actions, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazActionsAdaptiveGroupsDimensions": {
		"__description": "",
		"actionName": "Action Name",
		"date": "The date the Action was triggered",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"toolName": "Tool Name"
	},
	"ZoneZarazActionsAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazActionsAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsIdentitiesAdaptiveGroups": {
		"__description": "Zaraz Analytics Identities - zaraz.identify calls",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz identify requests",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneZarazAnalyticsIdentitiesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz identify requests, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazAnalyticsIdentitiesAdaptiveGroupsDimensions": {
		"__description": "",
		"clientId": "Client ID",
		"date": "Date when zaraz.identify() method was called",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"identity": "Identity"
	},
	"ZoneZarazAnalyticsIdentitiesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazAnalyticsIdentitiesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptive": {
		"__description": "Zaraz Analytics Tracks ordered per session",
		"browserName": "User Agent browser name",
		"cityRegion": "City, region",
		"clientId": "Client ID",
		"colors": "Color depth",
		"country": "Country",
		"date": "Date when track was called",
		"datetime": "Date & time when track was called",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"deviceModel": "User Agent device model",
		"deviceType": "User Agent device type",
		"deviceVendor": "User Agent device vendor",
		"ip": "IP",
		"language": "Language",
		"orderInClient": "Track's order number for its clientId",
		"orderInSession": "Track's order number within its session (first track having orderInSession 1)",
		"osName": "User Agent OS name",
		"osVersion": "User Agent OS version",
		"pageTitle": "Page Title",
		"resolution": "Screen resolution, cantor paired width & heigh",
		"reverseOrderInClient": "Track's reverse order number for its clientId",
		"reverseOrderInSession": "Track's reverse order number within its session (last track having reverseOrderInSession 1)",
		"sampleInterval": "ABR sample interval",
		"sessionId": "Session ID",
		"timezoneOffset": "Timezone Offset",
		"trackData": "Track Data",
		"trackName": "Track Name",
		"trafficSrc": "Traffic Source",
		"ua": "User Agent string",
		"uaObj": "User Agent stringified object",
		"urlParams": "URL query parameters",
		"urlPath": "URL Path",
		"viewport": "Viewport, cantor paired width & heigh"
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveGroups": {
		"__description": "Zaraz Analytics Tracks ordered per session",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Track requests",
		"dimensions": "List of dimensions to group by",
		"uniq": ""
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Track requests, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveGroupsDimensions": {
		"__description": "",
		"browserName": "User Agent browser name",
		"cityRegion": "City, region",
		"clientId": "Client ID",
		"colors": "Color depth",
		"country": "Country",
		"date": "Date when track was called",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"deviceModel": "User Agent device model",
		"deviceType": "User Agent device type",
		"deviceVendor": "User Agent device vendor",
		"ip": "IP",
		"language": "Language",
		"orderInClient": "Track's order number for its clientId",
		"orderInSession": "Track's order number within its session (first track having orderInSession 1)",
		"osName": "User Agent OS name",
		"osVersion": "User Agent OS version",
		"pageTitle": "Page Title",
		"resolution": "Screen resolution, cantor paired width & heigh",
		"reverseOrderInClient": "Track's reverse order number for its clientId",
		"reverseOrderInSession": "Track's reverse order number within its session (last track having reverseOrderInSession 1)",
		"sessionId": "Session ID",
		"timezoneOffset": "Timezone Offset",
		"trackData": "Track Data",
		"trackName": "Track Name",
		"trafficSrc": "Traffic Source",
		"ua": "User Agent string",
		"uaObj": "User Agent stringified object",
		"urlParams": "URL query parameters",
		"urlPath": "URL Path",
		"viewport": "Viewport, cantor paired width & heigh"
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveGroupsUniq": {
		"__description": "",
		"clientIdCount": "Minimum number of distinct client IDs",
		"sessionIdCount": "Minimum number of distinct session IDs"
	},
	"ZoneZarazAnalyticsOrderedTrackAdaptiveOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTrackAdaptiveGroups": {
		"__description": "Zaraz Analytics Track - counts zaraz.track calls",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Track requests",
		"dimensions": "List of dimensions to group by",
		"uniq": ""
	},
	"ZoneZarazAnalyticsTrackAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Track requests, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazAnalyticsTrackAdaptiveGroupsDimensions": {
		"__description": "",
		"browserName": "User Agent browser name",
		"cityRegion": "City, region",
		"clientId": "Client ID",
		"colors": "Color depth",
		"country": "Country",
		"date": "Date when track was called",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"deviceModel": "User Agent device model",
		"deviceType": "User Agent device type",
		"deviceVendor": "User Agent device vendor",
		"ip": "IP",
		"language": "Language",
		"osName": "User Agent OS name",
		"osVersion": "User Agent OS version",
		"pageTitle": "Page Title",
		"resolution": "Screen resolution, cantor paired width & heigh",
		"sessionId": "Session ID",
		"timezoneOffset": "Timezone Offset",
		"trackData": "Track Data",
		"trackName": "Track Name",
		"trafficSrc": "Traffic Source",
		"ua": "User Agent string",
		"uaObj": "User Agent stringified object",
		"urlParams": "URL query parameters",
		"urlPath": "URL Path",
		"viewport": "Viewport, cantor paired width & heigh"
	},
	"ZoneZarazAnalyticsTrackAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTrackAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTrackAdaptiveGroupsUniq": {
		"__description": "",
		"clientIdCount": "Minimum number of distinct client IDs",
		"sessionIdCount": "Minimum number of distinct session IDs"
	},
	"ZoneZarazAnalyticsTrackTrafficSourcesAdaptiveGroups": {
		"__description": "Zaraz Analytics Track Traffic Sources",
		"avg": "",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of unique sessions",
		"dimensions": "List of dimensions to group by",
		"uniq": ""
	},
	"ZoneZarazAnalyticsTrackTrafficSourcesAdaptiveGroupsAvg": {
		"__description": "",
		"sessionDuration": "Average session duration"
	},
	"ZoneZarazAnalyticsTrackTrafficSourcesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of unique sessions, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazAnalyticsTrackTrafficSourcesAdaptiveGroupsDimensions": {
		"__description": "",
		"cityRegion": "City, region",
		"clientId": "Client ID",
		"country": "Country",
		"duration": "Session duration (seconds)",
		"exitPage": "URL Path at session end",
		"firstTrafficSrc": "Traffic source at session start",
		"landingPage": "URL Path at session start",
		"sessionEnd": "Date when the session ended",
		"sessionEndFifteenMinutes": "The date and time truncated to fifteen minutes",
		"sessionEndFiveMinutes": "The date and time truncated to five minutes",
		"sessionEndHour": "The date and time truncated to the hour",
		"sessionEndMinute": "The date and time truncated to the minute",
		"sessionId": "Session ID",
		"sessionStart": "Date when the session started",
		"sessionStartFifteenMinutes": "The date and time truncated to fifteen minutes",
		"sessionStartFiveMinutes": "The date and time truncated to five minutes",
		"sessionStartHour": "The date and time truncated to the hour",
		"sessionStartMinute": "The date and time truncated to the minute",
		"tracks": "Unique track names within a session"
	},
	"ZoneZarazAnalyticsTrackTrafficSourcesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTrackTrafficSourcesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTrackTrafficSourcesAdaptiveGroupsUniq": {
		"__description": "",
		"clientIdCount": "Minimum number of distinct client IDs",
		"sessionIdCount": "Minimum number of distinct session IDs"
	},
	"ZoneZarazAnalyticsTriggersAdaptiveGroups": {
		"__description": "Zaraz Analytics Triggers (a trigger is a set of rules that can trigger a zaraz action)",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Triggers",
		"dimensions": "List of dimensions to group by",
		"uniq": ""
	},
	"ZoneZarazAnalyticsTriggersAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Triggers, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazAnalyticsTriggersAdaptiveGroupsDimensions": {
		"__description": "",
		"browserName": "User Agent browser name",
		"cityRegion": "City, region",
		"clientId": "Client ID",
		"colors": "Color depth",
		"country": "Country",
		"date": "The date when trigger was triggerd",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"deviceModel": "User Agent device model",
		"deviceType": "User Agent device type",
		"deviceVendor": "User Agent device vendor",
		"ip": "IP",
		"language": "Language",
		"osName": "User Agent OS name",
		"osVersion": "User Agent OS version",
		"pageTitle": "Page Title",
		"resolution": "Screen resolution, cantor paired width & heigh",
		"sessionId": "Session ID",
		"timezoneOffset": "Timezone Offset",
		"trafficSrc": "Traffic Source",
		"triggerName": "Trigger Name",
		"ua": "User Agent string",
		"uaObj": "User Agent stringified object",
		"urlParams": "URL query parameters",
		"urlPath": "URL Path",
		"viewport": "Viewport, cantor paired width & heigh"
	},
	"ZoneZarazAnalyticsTriggersAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTriggersAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTriggersAdaptiveGroupsUniq": {
		"__description": "",
		"clientIdCount": "Minimum number of distinct client IDs",
		"sessionIdCount": "Minimum number of distinct session IDs"
	},
	"ZoneZarazAnalyticsTriggersTrafficSourcesAdaptiveGroups": {
		"__description": "Zaraz Analytics Triggers Traffic Sources",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of unique sessions",
		"dimensions": "List of dimensions to group by",
		"uniq": ""
	},
	"ZoneZarazAnalyticsTriggersTrafficSourcesAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of unique sessions, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazAnalyticsTriggersTrafficSourcesAdaptiveGroupsDimensions": {
		"__description": "",
		"cityRegion": "City, region",
		"clientId": "Client ID",
		"country": "Country",
		"firstTrafficSrc": "Traffic source at session start",
		"sessionEnd": "Date when the session ended",
		"sessionEndFifteenMinutes": "The date and time truncated to fifteen minutes",
		"sessionEndFiveMinutes": "The date and time truncated to five minutes",
		"sessionEndHour": "The date and time truncated to the hour",
		"sessionEndMinute": "The date and time truncated to the minute",
		"sessionId": "Session ID",
		"sessionStart": "Date when the session started",
		"sessionStartFifteenMinutes": "The date and time truncated to fifteen minutes",
		"sessionStartFiveMinutes": "The date and time truncated to five minutes",
		"sessionStartHour": "The date and time truncated to the hour",
		"sessionStartMinute": "The date and time truncated to the minute",
		"triggers": "Unique trigger names within a session"
	},
	"ZoneZarazAnalyticsTriggersTrafficSourcesAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTriggersTrafficSourcesAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazAnalyticsTriggersTrafficSourcesAdaptiveGroupsUniq": {
		"__description": "",
		"clientIdCount": "Minimum number of distinct client IDs",
		"sessionIdCount": "Minimum number of distinct session IDs"
	},
	"ZoneZarazFetchAdaptiveGroups": {
		"__description": "Aggregated Zaraz External Fetch Logs",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed external fetch requests",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneZarazFetchAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed external fetch requests, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazFetchAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Date when fetch was called",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"status": "Fetch HTTP status code",
		"url": "Fetch URL"
	},
	"ZoneZarazFetchAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazFetchAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazTrackAdaptiveGroups": {
		"__description": "Zaraz Track Analytics - counts zaraz.track calls",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Track requests",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneZarazTrackAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Track requests, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazTrackAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "Date when track was called",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"trackName": "Track Name",
		"urlPath": "The URL from where Track was called"
	},
	"ZoneZarazTrackAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazTrackAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"ZoneZarazTriggersAdaptiveGroups": {
		"__description": "Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action)",
		"confidence": "ALPHA - DO NOT USE",
		"count": "Number of processed Zaraz Triggers",
		"dimensions": "List of dimensions to group by"
	},
	"ZoneZarazTriggersAdaptiveGroupsConfidence": {
		"__description": "",
		"count": "Number of processed Zaraz Triggers, with confidence intervals",
		"level": "Confidence level that was requested"
	},
	"ZoneZarazTriggersAdaptiveGroupsDimensions": {
		"__description": "",
		"date": "The date when trigger was triggerd",
		"datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
		"datetimeFiveMinutes": "The date and time truncated to five minutes",
		"datetimeHour": "The date and time truncated to the hour",
		"datetimeMinute": "The date and time truncated to the minute",
		"triggerName": "Trigger Name"
	},
	"ZoneZarazTriggersAdaptiveGroupsFilter_InputObject": {
		"__description": ""
	},
	"ZoneZarazTriggersAdaptiveGroupsOrderBy": {
		"__description": ""
	},
	"account": {
		"__description": "",
		"MagicWANConnectorMetricsAdaptiveGroups": "<small>DEPRECATED (Node is replaced with more capable mconnTelemetry nodes):</small> Magic WAN Connector Metrics (deprecated)",
		"accessLoginRequestsAdaptiveGroups": "Access login requests",
		"accountTag": "",
		"advancedDnsProtectionNetworkAnalyticsAdaptiveGroups": "Network analytics data for Advanced DNS Protection",
		"advancedTcpProtectionNetworkAnalyticsAdaptiveGroups": "<small>DEPRECATED (This node is an alias for <code>advancedTcpProtectionNetworkAnalyticsAdaptiveGroups</code>; prefer using the new name instead):</small> Network analytics data for Advanced TCP Protection",
		"aegisIpUtilizationAdaptiveGroups": "Beta. Aegis IP utilization metrics",
		"aiGatewayCacheAdaptiveGroups": "AI Gateway Cache",
		"aiGatewayErrorsAdaptiveGroups": "AI Gateway Errors",
		"aiGatewayRequestsAdaptiveGroups": "AI Gateway Requests",
		"aiGatewaySizeAdaptiveGroups": "AI Gateway Stored Rows",
		"aiInferenceAdaptive": "AI Inference logs with adaptive sampling",
		"aiInferenceAdaptiveGroups": "Aggregated AI Inference logs with adaptive sampling",
		"autoRAGConfigAPIAdaptiveGroups": "AutoRAG Config API Search Analytics",
		"autoRAGEngineAdaptiveGroups": "AutoRAG Engine Ingestion Analytics",
		"browserIsolationSessionsAdaptiveGroups": "Aggregated count of Browser Isolation sessions",
		"browserIsolationUserActionsAdaptiveGroups": "Aggregated count of Browser Isolation User Actions matches",
		"browserRenderingApiAdaptiveGroups": "Aggregated Browser Rendering API events with adaptive sampling",
		"browserRenderingBindingSessionsAdaptiveGroups": "Aggregated Browser Rendering worker binding sessions with adaptive sampling",
		"browserRenderingBrowserTimeUsageAdaptiveGroups": "Aggregated Browser Rendering and Browser Rendering REST API browser sessions with adaptive sampling",
		"browserRenderingEventsAdaptive": "Browser Rendering events with adaptive sampling",
		"browserRenderingEventsAdaptiveGroups": "Aggregated Browser Rendering events with adaptive sampling",
		"callsStatusAdaptive": "(TESTING ONLY, NOT FOR PRODUCTION) Raw Calls events with adaptive sampling",
		"callsTurnUsageAdaptiveGroups": "Aggregated Calls TURN bandwidth usage with adaptive sampling\"",
		"callsUsageAdaptiveGroups": "Beta. Aggregated Calls SFU bandwidth usage with adaptive sampling",
		"cdnNetworkAnalyticsAdaptiveGroups": "Network analytics data for Cloudflare CDN traffic",
		"cloudchamberMetricsAdaptiveGroups": "Metrics for Cloudchamber applications and deployments",
		"cloudflareTunnelsAnalyticsAdaptiveGroups": "Cloudflare tunnel Device Analytics",
		"containersMetricsAdaptiveGroups": "Metrics for Cloudchamber applications and deployments",
		"d1AnalyticsAdaptiveGroups": "Beta. Aggregated D1 analytics with adaptive sampling",
		"d1QueriesAdaptiveGroups": "Beta. D1 query metrics with adaptive sampling",
		"d1StorageAdaptiveGroups": "Beta. D1 storage with adaptive sampling",
		"dnsAnalyticsAdaptive": "Analytics data for DNS queries",
		"dnsAnalyticsAdaptiveGroups": "Analytics data for DNS queries",
		"dnsFirewallAnalyticsAdaptive": "Analytics data for DNS Firewall queries",
		"dnsFirewallAnalyticsAdaptiveGroups": "Analytics data for DNS Firewall queries",
		"dosdAttackAnalyticsGroups": "Attack analytics metadata for attacks detected by dosd",
		"dosdNetworkAnalyticsAdaptiveGroups": "Network analytics data for dosd",
		"durableObjectsInvocationsAdaptiveGroups": "Durable Objects invocations with adaptive sampling",
		"durableObjectsPeriodicGroups": "Durable Objects periodic metrics",
		"durableObjectsSqlStorageGroups": "Storage metrics for SQL-backed Durable Objects.",
		"durableObjectsStorageGroups": "Durable Objects storage metrics",
		"durableObjectsSubrequestsAdaptiveGroups": "Durable Objects subrequests with adaptive sampling",
		"fbmAttackAnalyticsGroups": "FBM analytics metadata for attacks detected by dosd",
		"firewallEventsAdaptive": "Raw Firewall events with adaptive sampling",
		"firewallEventsAdaptiveGroups": "Aggregated Firewall events with adaptive sampling",
		"flowtrackdNetworkAnalyticsAdaptiveGroups": "<small>DEPRECATED (This node is an alias for <code>advancedTcpProtectionNetworkAnalyticsAdaptiveGroups</code>; prefer using the new name instead):</small> Network analytics data for flowtrackd",
		"gatewayL4DownstreamSessionsAdaptiveGroups": "Aggregated metrics about downstream (client to edge) L4 Gateway Sessions. Metrics are reported on TCP or UDP session close",
		"gatewayL4SessionsAdaptiveGroups": "BETA - Aggregate counts of Gateway L4 sessions with adaptive sampling",
		"gatewayL4UpstreamSessionsAdaptiveGroups": "Aggregated metrics about upstream (edge to client) L4 Gateway Sessions. Metrics are reported on TCP, QUIC or UDP session close",
		"gatewayL7RequestsAdaptiveGroups": "BETA - Aggregate counts of Gateway L7 requests with adaptive sampling",
		"gatewayResolverByCategoryAdaptiveGroups": "BETA - Aggregate counts of Gateway Resolver queries by category with adaptive sampling",
		"gatewayResolverByCustomResolverGroups": "Stats on dns custom resolvers",
		"gatewayResolverByRuleExecutionPerformanceAdaptiveGroups": "Total time spent on executing firewall rules at the edge",
		"gatewayResolverQueriesAdaptiveGroups": "BETA - Aggregate counts of Gateway Resolver queries with adaptive sampling",
		"httpRequests1dGroups": "Daily rollups of request data",
		"httpRequests1hGroups": "Hourly rollups of request data",
		"httpRequests1mGroups": "Minutely rollups of request data",
		"httpRequestsAdaptive": "Raw HTTP requests with adaptive sampling",
		"httpRequestsAdaptiveGroups": "Aggregated HTTP requests data with adaptive sampling",
		"httpRequestsOverviewAdaptiveGroups": "A high-level summary of HTTP requests made by end users.",
		"hyperdriveQueriesAdaptiveGroups": "Hyperdrive query events with adaptive sampling.",
		"imagesRequestsAdaptiveGroups": "A high-level summary of Cloudflare Images served to end users.",
		"imagesUniqueTransformations": "Image unique transfromations per day",
		"kvOperationsAdaptiveGroups": "KV operations data with adaptive sampling",
		"kvStorageAdaptiveGroups": "KV stored data with adaptive sampling",
		"liveInputEventsAdaptive": "Live input events with adaptive sampling",
		"liveInputEventsAdaptiveGroups": "Aggregated live input events with adaptive sampling",
		"logExplorerIngestionAdaptiveGroups": "Ingestion metrics for Log Explorer",
		"logpushHealthAdaptiveGroups": "Beta. Logpush job health metrics",
		"magicEndpointHealthCheckAdaptiveGroups": "Magic Endpoint Healthcheck events with adaptive sampling.",
		"magicFirewallNetworkAnalyticsAdaptiveGroups": "Network analytics data for Magic Firewall",
		"magicFirewallRateLimitNetworkAnalyticsAdaptiveGroups": "Network analytics data for Magic Firewall Ratelimiting",
		"magicFirewallSamplesAdaptiveGroups": "Data to visualize traffic allowed and blocked by Magic Firewall rules",
		"magicIDPSNetworkAnalyticsAdaptiveGroups": "Network analytics data for Magic IDS",
		"magicTransitNetworkAnalyticsAdaptiveGroups": "Network analytics data for Magic Transit traffic",
		"magicTransitTunnelHealthCheckSLOsAdaptiveGroups": "Magic Transit Tunnel Health Check SLO events with adaptive sampling.",
		"magicTransitTunnelHealthChecksAdaptiveGroups": "Beta. Magic Transit Health check results for customer GRE Tunnels with adaptive sampling (ABR).",
		"magicTransitTunnelTrafficAdaptiveGroups": "Bandwidth usage metric of a Magic Transit tunnel.",
		"mconnTelemetryEventsAdaptiveGroups": "Aggregated Magic WAN Connector events with adaptive sampling",
		"mconnTelemetryEventsStagingAdaptiveGroups": "Aggregated Magic WAN Connector events with adaptive sampling",
		"mconnTelemetrySnapshotDhcpLeasesAdaptiveGroups": "Aggregated Magic WAN Connector snapshots of DHCP leases with adaptive sampling",
		"mconnTelemetrySnapshotDhcpLeasesStagingAdaptiveGroups": "Aggregated Magic WAN Connector snapshots of DHCP leases with adaptive sampling",
		"mconnTelemetrySnapshotDisksAdaptiveGroups": "Aggregated Magic WAN Connector disk snapshots with adaptive sampling",
		"mconnTelemetrySnapshotDisksStagingAdaptiveGroups": "Aggregated Magic WAN Connector disk snapshots with adaptive sampling",
		"mconnTelemetrySnapshotInterfaceAddressesAdaptiveGroups": "Aggregated Magic WAN Connector interface address snapshots with adaptive sampling",
		"mconnTelemetrySnapshotInterfaceAddressesStagingAdaptiveGroups": "Aggregated Magic WAN Connector interface address snapshots with adaptive sampling",
		"mconnTelemetrySnapshotInterfacesAdaptiveGroups": "Aggregated Magic WAN Connector interface snapshots with adaptive sampling",
		"mconnTelemetrySnapshotInterfacesStagingAdaptiveGroups": "Aggregated Magic WAN Connector interface snapshots with adaptive sampling",
		"mconnTelemetrySnapshotMountsAdaptiveGroups": "Aggregated Magic WAN Connector mount snapshots with adaptive sampling",
		"mconnTelemetrySnapshotMountsStagingAdaptiveGroups": "Aggregated Magic WAN Connector mount snapshots with adaptive sampling",
		"mconnTelemetrySnapshotNetdevsAdaptiveGroups": "Aggregated Magic WAN Connector netdev snapshots with adaptive sampling",
		"mconnTelemetrySnapshotNetdevsStagingAdaptiveGroups": "Aggregated Magic WAN Connector netdev snapshots with adaptive sampling",
		"mconnTelemetrySnapshotThermalsAdaptiveGroups": "Aggregated Magic WAN Connector thermal snapshots with adaptive sampling",
		"mconnTelemetrySnapshotThermalsStagingAdaptiveGroups": "Aggregated Magic WAN Connector thermal snapshots with adaptive sampling",
		"mconnTelemetrySnapshotTunnelsAdaptiveGroups": "Aggregated Magic WAN Connector tunnel snapshots with adaptive sampling",
		"mconnTelemetrySnapshotTunnelsStagingAdaptiveGroups": "Aggregated Magic WAN Connector tunnel snapshots with adaptive sampling",
		"mconnTelemetrySnapshotsAdaptiveGroups": "Aggregated Magic WAN Connector system snapshots with adaptive sampling",
		"mconnTelemetrySnapshotsStagingAdaptiveGroups": "Aggregated Magic WAN Connector system snapshots with adaptive sampling",
		"mediaUniqueTransformations": "Media unique transfromations per day",
		"mnmAWSVPCFlowDataAdaptiveGroups": "AWS VPC Flow data collected through Magic Network Monitoring",
		"mnmFlowDataAdaptiveGroups": "Flow data collected through Magic Network Monitoring",
		"nelReportsAdaptiveGroups": "Data to visualize network error logs",
		"ohttpMetricsAdaptive": "oHTTP request metrics with adaptive sampling",
		"ohttpMetricsAdaptiveGroups": "Aggregated oHTTP request metrics with adaptive sampling",
		"pagesFunctionsInvocationsAdaptiveGroups": "Pages Functions invocations with adaptive sampling",
		"pipelinesDeliveryAdaptiveGroups": "Beta. Data delivered via Workers Pipelines",
		"pipelinesIngestionAdaptiveGroups": "Beta. Data ingested via Workers Pipelines",
		"pipelinesOperatorAdaptiveGroups": "Aggregated Pipelines source metrics with adaptive sampling",
		"pipelinesOperatorStagingAdaptiveGroups": "Aggregated Pipelines source metrics with adaptive sampling",
		"pipelinesSinkAdaptiveGroups": "Aggregated Pipelines sink metrics with adaptive sampling",
		"pipelinesSinkStagingAdaptiveGroups": "Aggregated Pipelines sink metrics with adaptive sampling",
		"queueBacklogAdaptiveGroups": "Beta. Queue backlog data with adaptive sampling. Queues that are not being written to, or read from, will not return data, even if they have a backlog.",
		"queueConsumerMetricsAdaptiveGroups": "Beta. Queue consumer metrics with adaptive sampling. Inactive queues will not return data.",
		"queueDelayedBacklogAdaptiveGroups": "Beta. Queue delayed backlog data with adaptive sampling. Queues that are not being written to, or read from, will not return data, even if they have a backlog.",
		"queueMessageOperationsAdaptiveGroups": "Beta. Queue message operation data with adaptive sampling",
		"r2OperationsAdaptiveGroups": "Beta. R2 operations with adaptive sampling",
		"r2StorageAdaptiveGroups": "Beta. R2 storage with adaptive sampling",
		"rumPageloadEventsAdaptiveGroups": "Beta. Aggregated RUM pageload event metrics with adaptive sampling",
		"rumPerformanceEventsAdaptiveGroups": "Beta. Aggregated RUM performance event metrics with adaptive sampling",
		"rumWebVitalsEventsAdaptive": "Beta. RUM Web Vitals event metrics with adaptive sampling",
		"rumWebVitalsEventsAdaptiveGroups": "Beta. Aggregated RUM Web Vitals event metrics with adaptive sampling",
		"settings": "",
		"sinkholeRequestLogsAdaptive": "Sinkhole Request Logs",
		"sinkholeRequestLogsAdaptiveGroups": "Sinkhole Request Logs",
		"sippyOperationsAdaptiveGroups": "Sippy operations with adaptive sampling",
		"spectrumNetworkAnalyticsAdaptiveGroups": "Network analytics data for Spectrum traffic",
		"storageTraces": "Storage Tracing Information",
		"streamCMCDAdaptiveGroups": "Stream CMCD data",
		"streamMinutesViewedAdaptiveGroups": "A high-level summary of Cloudflare Stream minutes viewed.",
		"turnstileAdaptiveGroups": "Beta. Cloudflare Turnstile aggregated events with adaptive sampling",
		"vectorizeQueriesAdaptiveGroups": "Beta. Vectorize usage with adaptive sampling",
		"vectorizeStorageAdaptiveGroups": "Beta. Vectorize storage with adaptive sampling",
		"vectorizeV2OperationsAdaptiveGroups": "Vectorize operations with adaptive sampling",
		"vectorizeV2QueriesAdaptiveGroups": "Vectorize queries with adaptive sampling",
		"vectorizeV2StorageAdaptiveGroups": "Vectorize storage with adaptive sampling",
		"vectorizeV2WritesAdaptiveGroups": "Vectorize writes with adaptive sampling",
		"videoBufferEventsAdaptiveGroups": "Beta. Aggregated video streaming buffer event metrics with adaptive sampling",
		"videoPlaybackEventsAdaptiveGroups": "Beta. Aggregated video streaming playback event metrics with adaptive sampling",
		"videoQualityEventsAdaptiveGroups": "Beta. Aggregated video streaming quality change event metrics with adaptive sampling",
		"warpDeviceAdaptiveGroups": "Beta. Warp device health events with adaptive sampling",
		"workerPlacementAdaptiveGroups": "Worker placement metrics",
		"workersAnalyticsEngineAdaptiveGroups": "Beta. Custom Events with adaptive sampling",
		"workersBuildsBuildMinutesAdaptiveGroups": "Workers Builds build minute overview data with adaptive sampling",
		"workersInvocationsAdaptive": "Beta. Workers invocations with adaptive sampling",
		"workersInvocationsScheduled": "Workers scheduled invocations",
		"workersOverviewDataAdaptiveGroups": "Beta. Workers account overview invocation data with adaptive sampling",
		"workersOverviewRequestsAdaptiveGroups": "Beta. Workers account overview invocation count with adaptive sampling",
		"workersSubrequestsAdaptiveGroups": "Beta. Workers subrequests with adaptive sampling",
		"workflowsAdaptive": "Workflows analytics",
		"workflowsAdaptiveGroups": "Workflows analytics",
		"zarazTrackAdaptiveGroups": "Zaraz Track Analytics - counts zaraz.track calls",
		"zarazTriggersAdaptiveGroups": "Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action)",
		"zeroTrustPrivateNetworkDiscoveryGroups": "Beta - Unique origins, applications, and users discovered for Zero Trust private networks",
		"zones": ""
	},
	"bool": {
		"__description": "Scalar type bool"
	},
	"bytes": {
		"__description": "Scalar type []uint8"
	},
	"float32": {
		"__description": "Scalar type float32"
	},
	"float64": {
		"__description": "Scalar type float64"
	},
	"int16": {
		"__description": "Scalar type int16"
	},
	"int32": {
		"__description": "Scalar type int32"
	},
	"int64": {
		"__description": "Scalar type int64"
	},
	"int8": {
		"__description": "Scalar type int8"
	},
	"organization": {
		"__description": "",
		"httpRequestsAdaptiveGroups": "Aggregated HTTP requests data with adaptive sampling",
		"organizationTag": "",
		"settings": ""
	},
	"string": {
		"__description": "Scalar type string"
	},
	"uint16": {
		"__description": "Scalar type uint16"
	},
	"uint32": {
		"__description": "Scalar type uint32"
	},
	"uint64": {
		"__description": "Scalar type uint64"
	},
	"uint8": {
		"__description": "Scalar type uint8"
	},
	"viewer": {
		"__description": "",
		"accounts": "",
		"budget": "",
		"organizations": "",
		"zones": ""
	},
	"zone": {
		"__description": "",
		"apiGatewayGraphqlQueryAnalyticsGroups": "GraphQL query attributes and trends",
		"apiGatewayMatchedSessionIDsAdaptiveGroups": "Beta. Aggregated count of Session Identifier matches",
		"apiGatewayMatchedSessionIDsPerEndpointAdaptiveGroups": "Beta. Aggregated count of Session Identifier matches per endpoint",
		"apiGatewayMatchedSessionIDsPerEndpointFlattenedAdaptiveGroups": "Beta. Aggregated count of Session Identifier matches",
		"apiRequestSequencesGroups": "Sequences of API endpoint operations. Sequences are learned by grouping requests by AuthID. Correlation scores are estimated over a 24 hour window and are current to within 10 minutes",
		"cacheReserveOperationsAdaptiveGroups": "Beta. Cache Reserve operations with adaptive sampling",
		"cacheReserveRequestsAdaptiveGroups": "Cache Reserve HTTP requests data with adaptive sampling",
		"cacheReserveStorageAdaptiveGroups": "Beta. Cache Reserve storage with adaptive sampling",
		"dmarcReportsAdaptive": "Dmarc report records with adaptive sampling",
		"dmarcReportsSourcesAdaptiveGroups": "Aggregated dmarc reports by sources logs with adaptive sampling",
		"dnsAnalyticsAdaptive": "Analytics data for DNS queries",
		"dnsAnalyticsAdaptiveGroups": "Analytics data for DNS queries",
		"emailRoutingAdaptive": "Beta. Raw email routing logs with adaptive sampling",
		"emailRoutingAdaptiveGroups": "Beta. Aggregated email routing logs with adaptive sampling",
		"firewallEventsAdaptive": "Raw Firewall events with adaptive sampling",
		"firewallEventsAdaptiveByTimeGroups": "Aggregated Firewall events with adaptive sampling grouped by time",
		"firewallEventsAdaptiveGroups": "Aggregated Firewall events with adaptive sampling",
		"healthCheckEventsAdaptive": "Raw Health Check events with adaptive sampling",
		"healthCheckEventsAdaptiveGroups": "Aggregated Health Check events with adaptive sampling",
		"httpRequests1dByColoGroups": "<small>DEPRECATED (Node is replaced with more capable <code>httpRequestsAdaptiveGroups</code>):</small> Daily rollups of request data by colo",
		"httpRequests1dGroups": "Daily rollups of request data",
		"httpRequests1hGroups": "Hourly rollups of request data",
		"httpRequests1mByColoGroups": "<small>DEPRECATED (Node is replaced with more capable <code>httpRequestsAdaptiveGroups</code>):</small> Minutely rollups of request data by colo",
		"httpRequests1mGroups": "Minutely rollups of request data",
		"httpRequestsAdaptive": "Raw HTTP requests with adaptive sampling",
		"httpRequestsAdaptiveGroups": "Aggregated HTTP requests data with adaptive sampling",
		"httpRequestsOverviewAdaptiveGroups": "A high-level summary of HTTP requests made by end users.",
		"imageResizingRequests1mGroups": "Minutely rollups of Image Resizing requests",
		"loadBalancingRequestsAdaptive": "Raw Load Balancing origin requests with adaptive sampling",
		"loadBalancingRequestsAdaptiveGroups": "Aggregated Load Balancing origin requests with adaptive sampling",
		"logpushHealthAdaptiveGroups": "Beta. Logpush job health metrics",
		"nelReportsAdaptiveGroups": "Data to visualize network error logs",
		"pageShieldReportsAdaptiveGroups": "Page Shield CSP reports",
		"settings": "",
		"waitingRoomAnalyticsAdaptive": "Raw Waiting Room analytics logs",
		"waitingRoomAnalyticsAdaptiveGroups": "Aggregated Waiting Room analytics logs with adaptive sampling",
		"workersZoneInvocationsAdaptiveGroups": "Workers invocations with adaptive sampling",
		"workersZoneSubrequestsAdaptiveGroups": "Workers subrequests with adaptive sampling",
		"zarazActionsAdaptiveGroups": "Zaraz Actions Analytics",
		"zarazAnalyticsIdentitiesAdaptiveGroups": "Zaraz Analytics Identities - zaraz.identify calls",
		"zarazAnalyticsOrderedTrackAdaptive": "Zaraz Analytics Tracks ordered per session",
		"zarazAnalyticsOrderedTrackAdaptiveGroups": "Zaraz Analytics Tracks ordered per session",
		"zarazAnalyticsTrackAdaptiveGroups": "Zaraz Analytics Track - counts zaraz.track calls",
		"zarazAnalyticsTrackTrafficSourcesAdaptiveGroups": "Zaraz Analytics Track Traffic Sources",
		"zarazAnalyticsTriggersAdaptiveGroups": "Zaraz Analytics Triggers (a trigger is a set of rules that can trigger a zaraz action)",
		"zarazAnalyticsTriggersTrafficSourcesAdaptiveGroups": "Zaraz Analytics Triggers Traffic Sources",
		"zarazFetchAdaptiveGroups": "Aggregated Zaraz External Fetch Logs",
		"zarazTrackAdaptiveGroups": "Zaraz Track Analytics - counts zaraz.track calls",
		"zarazTriggersAdaptiveGroups": "Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action)",
		"zoneTag": ""
	}
}