{
	"http2.description": "Accelerates your website with HTTP/2",
	"http2.help": "#### What is HTTP/2?\n[HTTP/2](https://www.cloudflare.com/website-optimization/http2/what-is-http2/) is a major revision of the Web's protocol designed for low-latency transport of content over the World Wide Web. HTTP/2 is enabled by default for all domains. Domains on Free plans cannot disable HTTP/2.\n\nHTTP/2 improves the way HTTP requests and responses are sent allowing for faster page load times.\n\nHTTP/2 improves page load times by:\n- Connection multiplexing: Multiple resources can be retrieved in a single network request. Responses are sent when resources are available (sometimes out of order), to avoid slowing down page rendering.\n- HTTP header compression: HTTP requests are simplified to avoid resending headers, and compression is applied to headers that must be sent.\n- HTTP/2 Server Push: Allows Cloudflare to provide content to clients without waiting for a request. This can improve the time to retrieve a resource by u201Cpushingu201D the responses it thinks the client will need into its cache.\n\nKeep in mind:\n- Not all browsers support HTTP/2. These browsers will leverage HTTP 1.x instead\n- HTTP/2 requires a valid SSL certificate and is only available over TLS\n- Connection multiplexing is on a per-domain basis\n- The connection from Cloudflare to your origin will be made over HTTP 1.x",
	"http2.title": "HTTP/2",
	"nel.api.title.get": "Get Network Error Logging setting",
	"nel.api.title.patch": "Change Network Error Logging setting",
	"network.0rtt.help": "#### What is 0-RTT Connection Resumption?\n0-RTT Connection Resumption allows the client's first request to be sent before the TLS or QUIC connection is fully established, resulting in faster connection times, when the client is resuming a connection that was previously already established.\n\nFor more details, refer to [our documentation](https://developers.cloudflare.com/fundamentals/network/0-rtt-connection-resumption/).",
	"network.0rtt.toggle_card_description": "Improves performance for clients who have previously connected to your website.",
	"network.0rtt.title": "0-RTT Connection Resumption",
	"network.china.contact_our_team": "[Contact our team](https://www.cloudflare.com/enterprise-service-request/)",
	"network.china.description": "Allow your website to be served out of Cloudflare's data centers in mainland China.",
	"network.china.disable": "Disable China Network",
	"network.china.disable-confirmation": "Are you sure you want to disable China network?",
	"network.china.enable": "Enable China Network",
	"network.china.help": "#### What is China Network?\nChina Network allows your website to be served out of Cloudflare's data centers in mainland China. [Learn more about China Network](https://developers.cloudflare.com/china-network/).\n\nTo qualify, please make sure:\n* You have an ICP license for your website. [Learn more about ICP licenses](https://developers.cloudflare.com/china-network/concepts/icp/).",
	"network.china.modal.acknowledgment.body": "To enable China network for this site, you must have the following:",
	"network.china.modal.acknowledgment.title": "Acknowledgement",
	"network.china.modal.continue": "I understand, continue",
	"network.china.modal.errored": "Could not enable China network",
	"network.china.modal.failed": "Not all requirements are met. Please fix the following and try again.",
	"network.china.modal.icp_requirement": "A valid ICP license",
	"network.china.modal.icp_requirement.error": "An ICP license was not detected. If you would like to apply for an ICP license, <a href=\"https://developers.cloudflare.com/china-network/concepts/icp/\" target=\"_blank\">please see the process here</a>.",
	"network.china.modal.requirement_check.body": "Hang on, we're scanning your site to make sure you meet the requirements.",
	"network.china.modal.requirement_check.title": "Requirement check",
	"network.china.modal.succeeded": "Congratulations! Your website is now being served out of the Cloudflare data centers in China.",
	"network.china.title": "China Network",
	"network.client_upload_max.custom_maximum_size": "Custom Maximum Size",
	"network.client_upload_max.description": "The amount of data visitors can upload to your website in a single request.",
	"network.client_upload_max.help": "#### What are the Maximum upload size limits for each plan?\nCloudflare limits the maximum amount of data a visitor can upload per request:\n\n- **Free:** 100MB\n- **Pro:** 100MB\n- **Business:** 200MB\n- **Enterprise:** 500MB\n\n**Note:** This setting supersedes upload size limits you may have set at your origin.\n\n[How can I change the client maximum upload size?](https://developers.cloudflare.com/cache/concepts/default-cache-behavior/)",
	"network.client_upload_max.title": "Maximum Upload Size",
	"network.client_upload_max.warning": "Contact your CSM to change the maximum upload size.",
	"network.grpc.beta_requested": "Thanks for your interest! You will be able to enable gRPC support once you have been admitted to the beta.",
	"network.grpc.card_title": "gRPC",
	"network.grpc.card_description": "Allow gRPC connections to your origin server.",
	"network.grpc.card_help": "gRPC is a protocol designed to build high-performance APIs. Toggling gRPC allows you to orange-cloud API endpoints and allow gRPC traffic to flow through Cloudflare. [Learn more about gRPC](https://developers.cloudflare.com/network/grpc-connections/).",
	"network.grpc.join_beta": "Join the beta",
	"network.http2_to_origin.title": "HTTP/2 to Origin",
	"network.http2_to_origin.description": "Enable HTTP/2 requests between Cloudflare's edge and your origin",
	"network.http2_to_origin.enterprise_description": "Enable HTTP/2 requests between Cloudflare's edge and your origin. With Cloudflare's multiplexing capability, further enhance performance by optimizing requests to your origin server",
	"network.http2_to_origin.configure": "Configure HTTP/2 Multiplexing",
	"network.http2_to_origin.configure.success": "Configuration settings saved",
	"network.http2_to_origin.streams": "Streams",
	"network.http2_to_origin.streams.instructions": "Min. 1; Max. 1000",
	"network.http2_to_origin.no_access": "Your membership configuration doesn't have to access this feature",
	"network.http2_to_origin.help": "[Developer documentation](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin)",
	"network.ip_geo.description": "Include the country code of the visitor location with all requests to your website.\n\n**Note:** You must retrieve the IP Geolocation information from the CF-IPCountry HTTP header.",
	"network.ip_geo.help": "#### What is IP Geolocation?\nCloudflare can geolocate visitors to your website and pass the country code on to you. Once enabled, we will then add an HTTP header named \"CF-IPCountry\" to all requests we make to your website.\n\n**Note:** Cloudflare uses a GeoIP database to map IP addresses to countries. u201CXXu201D means that we found no record in our geolocation database for an IP address.",
	"network.ip_geo.title": "IP Geolocation",
	"network.ipv6.description": "Enable IPv6 support and gateway.",
	"network.ipv6.full": "Full",
	"network.ipv6.help": "#### What is IPv6?\nAs the Internet runs low on IPv4 address space, there's been a rapid increase in the deployment of IPv6 technologies. This shift is critical to the long-term growth and health of the Internet. At Cloudflare, we are doing our part to make it free and easy for all websites to be available on network.ipv6.\n\n#### What does enabling IPv6 compatibility do?\nThe IPv6 gateway setting enables IPv6 on all subdomains that are on Cloudflare (marked by an orange cloud in your DNS settings). If your host provides IPv6 support, the gateway will proxy IPv6 connections through Cloudflare. When both IPv4 and IPv6 connections are available, Cloudflare prefers IPv4. We recommend keeping IPv6 Compatibility set to \"On\" for greater availability for your website.\n\n**Note:** If you already have IPv6 records on your origin server, you must enable Cloudflare for your AAAA records on the DNS settings page.\n\n#### Why can't I turn off IPv6?\nAt Cloudflare we believe in being good to the Internet and good to our customers. By moving on from the legacy world of IPv4-only to the modern-day world where IPv4 and IPv6 are treated equally, we believe we are doing exactly that. In the Cloudflare dashboard, IPv6 is no longer something you can toggle on and off, itu2019s always just on.",
	"network.ipv6.modal.text": "If you disable IPv6, Cloudflareu2019s network will not support IPv6 traffic to your domain. [Learn more](https://developers.cloudflare.com/network/pseudo-ipv4/)",
	"network.ipv6.modal.title": "Disable IPv6 Compatibility",
	"network.ipv6.safe": "Safe",
	"network.ipv6.title": "IPv6 Compatibility",
	"network.nel.description": "Browser reports that show end user connectivity to your sites.",
	"network.nel.help": "#### What is Network Error Logging?\nNetwork Error Logging is a browser-based reporting system that allows your users to upload reports to a collector maintained by Cloudflare.\n\nThese reports show whether or not your users were able to reach your Cloudflare-protected site and why (if they were unable to reach your site).",
	"network.nel.title": "Network Error Logging",
	"network.opportunistic_onion.title": "Onion Routing",
	"network.opportunistic_onion.description": "Onion Routing allows routing traffic from legitimate users on the Tor network through Cloudflare's onion services rather than exit nodes, thereby improving privacy of the users and enabling more fine-grained protection.",
	"network.opportunistic_onion.warning": "To configure Onion Routing <0>SSL/TLS encryption</0> should be enabled.",
	"network.opportunistic_onion.help": "#### How does Onion Routing work?\nWhen this setting is enabled, the response to HTTPS requests coming from the Tor Browser will include an \"alt-svc\" header containing the address of one or more onion services operated by us. The Tor Browser establishes a Tor circuit with one of our onion services and, after a verification step by the browser, the subsequent requests will be routed through the onion service instead.\nThis allows us to distinguish individual circuits and only challenge circuits that show unusual behavior, while keeping users' anonymity intact.",
	"network.page.subheadline": "Manage network settings for your website.",
	"network.page.title": "Network",
	"network.pseudo_ipv4.add_header": "Add Header",
	"network.pseudo_ipv4.description": "Adds an IPv4 header to requests when a client is using IPv6, but the server only supports IPv4.",
	"network.pseudo_ipv4.help": "#### What is Pseudo IPv4?\nAs a stopgap to accelerate the adoption of IPv6, Cloudflare offers Pseudo IPv4 which supports IPv6 addresses in legacy applications expecting IPv4 addresses. The goal is to provide a nearly unique IPv4 address for each IPv6 address, using Class E IPv4 address space, which is designated as experimental and would not normally see traffic. [Learn more about pseudo IPv4](https://developers.cloudflare.com/network/pseudo-ipv4/).\n\n#### Options\n\n- **Add header:** Add additional Cf-Pseudo-IPv4 header only\n- **Overwrite headers:** Overwrite the existing Cf-Connecting-IP and X-Forwarded-For headers with a pseudo IPv4 address.\n\n**Note:** We recommend leaving this set to \"Off\" unless you have a specific need.",
	"network.pseudo_ipv4.overwrite_header": "Overwrite Headers",
	"network.pseudo_ipv4.title": "Pseudo IPv4",
	"network.quic.help": "#### What is HTTP/3?\nHTTP/3 is a major revision of the Web's protocol designed to take advantage of QUIC, a new encrypted-by-default Internet transport protocol that provides a number of improvements designed to accelerate HTTP traffic as well as make it more secure.",
	"network.quic.toggle_card_description": "Accelerates HTTP requests by using QUIC, which provides encryption and performance improvements compared to TCP and TLS.",
	"network.quic.title": "HTTP/3 (with QUIC)",
	"network.response_buffering.description": "Enable or disable buffering of responses from the origin server",
	"network.response_buffering.help": "#### What does Response Buffering do?\nBy default, Cloudflare sends packets to the client as we receive them. Enabling Response Buffering means that Cloudflare will wait until it has the entire file before forwarding it to the end user.\n\nUse Response Buffering if you would prefer Cloudflare deliver a full payload all at once to the client.\n\n[What is response buffering?](https://developers.cloudflare.com/network/response-buffering/)",
	"network.response_buffering.title": "Response Buffering",
	"network.true_client_ip_header.description": "Cloudflare will send the end user's IP address in the True-Client-IP header",
	"network.true_client_ip_header.help": "#### What is True-Client-IP?\nIf True-Client-IP is enabled, Cloudflare will add a `True-Client-IP` header in the request sent to the origin with the IP address of the end user.\n\nBy default, Cloudflare sends back packets with a Cloudflare IP address. True-Client-IP is a solution that allows Cloudflare users to see the end useru2019s IP address, even when the traffic to the origin is sent directly from Cloudflare.\n\nThis feature supplements our current `CF-Connecting-IP` and `X-Forwarded-For` headers.\n\nFor all plans, Cloudflare always sends the original visitor IP using the `CF-Connecting-IP` and `X-Forwarded-For` headers. This feature adds a third header, `True-Client-IP`, for compatibility with another vendor.\n\n[How does Cloudflare handle HTTP request headers?](https://developers.cloudflare.com/fundamentals/get-started/http-request-headers)\n\n[Restoring original visitor IPs](https://developers.cloudflare.com/support/troubleshooting/restoring-visitor-ips/restoring-original-visitor-ips/)",
	"network.true_client_ip_header.title": "True-Client-IP Header",
	"network.visitor_ip.title": "Visitor IP Headers",
	"network.visitor_ip.description": "Cloudflare sends headers that include the visitor IP address to your origin server.",
	"network.visitor_ip.help": "**What does Visitor IP Headers do?**\nWhen enabled, Cloudflare includes the original visitor IP address in requests to the origin server in the `X-Forwarded-For` and `CF-Connecting-IP` headers, and allows the forwarding of additional headers that may contain the visitor IP.\n\nWhen disabled, Cloudflare strips headers that contain the original visitor IP address from requests to the origin server. The full list of stripped headers is available [here](https://developers.cloudflare.com/fundamentals/get-started/http-request-headers). Headers added by the Pseudo-IPv4 and True-Client-IP features are not affected.\n\n**Note:** We recommend switching this setting to u201COffu201D to improve visitor privacy unless you have a specific need.\n\n[How does Cloudflare handle HTTP request headers?](https://developers.cloudflare.com/fundamentals/get-started/http-request-headers)\n\n[Restoring original visitor IPs](https://developers.cloudflare.com/support/troubleshooting/restoring-visitor-ips/restoring-original-visitor-ips/)",
	"network.websockets.description": "Allow WebSockets connections to your origin server.\nConcurrent connection guidelines for your plan: %{guideline}.",
	"network.websockets.help": "#### What are WebSockets?\n\nWebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming.\n\n#### Why use WebSockets?\n\nBecause WebSockets creates a single connection and doesnu2019t need multiple HTTP headers, WebSockets can provide anywhere from 500:1 to a 1000:1 reduction in unnecessary HTTP header traffic compared to HTTP polling solutions.\n\nThe server no longer needs to wait for a request to come back before it sends new data; it can simply push the data to the client the moment it has new information. Tests have shown a 3:1 reduction in latency compared to polling solutions.\n\nFor more technical information on the WebSockets, you can read up on the [HTML5 Web Sockets Specification.](https://html.spec.whatwg.org/multipage/comms.html#network)\n\n#### How can I use WebSockets with Cloudflare?\n\nNo additional configuration is required to send WebSockets traffic through Cloudflare. Cloudflare will immediately begin proxying your WebSockets through to your origin.\n\n#### Can I use WebSockets over SSL?\n\nYes. WebSockets through Cloudflare are fully compatible with Cloudflare's SSL.\n\n[Learn more about WebSockets](https://developers.cloudflare.com/network/websockets/)",
	"network.websockets.title": "WebSockets"
}