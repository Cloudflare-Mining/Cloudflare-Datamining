{
	"Action": "string; The code of the first-class action the Cloudflare Firewall took on this request. Possible actions are unknown | allow | block | challenge | jschallenge | log | connectionclose | challengesolved | challengebypassed | jschallengesolved | jschallengebypassed | bypass | managedchallenge | managedchallengenoninteractivesolved | managedchallengeinteractivesolved | managedchallengebypassed.",
	"ClientASN": "int; The ASN number of the visitor.",
	"ClientASNDescription": "string; The ASN of the visitor as string.",
	"ClientCountry": "string; Country from which request originated.",
	"ClientIP": "string; The visitor's IP address (IPv4 or IPv6).",
	"ClientIPClass": "string; The classification of the visitor's IP address, possible values are: unknown | badHost | searchEngine | allowlist | monitoringService | noRecord | scan | tor.",
	"ClientRefererHost": "string; The referer host.",
	"ClientRefererPath": "string; The referer path requested by visitor.",
	"ClientRefererQuery": "string; The referer query-string was requested by the visitor.",
	"ClientRefererScheme": "string; The referer URL scheme requested by the visitor.",
	"ClientRequestHost": "string; The HTTP hostname requested by the visitor.",
	"ClientRequestMethod": "string; The HTTP method used by the visitor.",
	"ClientRequestPath": "string; The path requested by visitor.",
	"ClientRequestProtocol": "string; The version of HTTP protocol requested by the visitor.",
	"ClientRequestQuery": "string; The query-string was requested by the visitor.",
	"ClientRequestScheme": "string; The URL scheme requested by the visitor.",
	"ClientRequestUserAgent": "string; Visitor's user-agent string.",
	"ContentScanObjResults": "array[string]; List of content scan results.",
	"ContentScanObjSizes": "array[int]; List of content object sizes.",
	"ContentScanObjTypes": "array[string]; List of content types.",
	"Datetime": "int or string; The date and time the event occurred at the edge.",
	"Description": "string; The description of the rule triggered by this request.",
	"EdgeColoCode": "string; The airport code of the Cloudflare data center that served this request.",
	"EdgeResponseStatus": "int; HTTP response status code returned to browser.",
	"Kind": "string; The kind of event, currently only possible values are: firewall.",
	"LeakedCredentialCheckResult": "string; Result of the check for [leaked credentials](https://developers.cloudflare.com/waf/detections/leaked-credentials/). Possible results are: password_leaked | username_and_password_leaked | username_password_similar | username_leaked | clean.",
	"MatchIndex": "int; Rules match index in the chain. The last matching rule will have MatchIndex 0. If another rule matched before the last one, it will have MatchIndex 1. The same applies to any other matching rules, which will have a MatchIndex value of 2, 3, and so on.",
	"Metadata": "object; Additional product-specific information. Metadata is organized in key:value pairs. Key and Value formats can vary by Cloudflare security product and can change over time.",
	"OriginResponseStatus": "int; HTTP origin response status code returned to browser.",
	"OriginatorRayID": "string; The RayID of the request that issued the challenge/jschallenge.",
	"RayID": "string; The RayID of the request.",
	"Ref": "string; The user-defined identifier for the rule triggered by this request. Use refs to label your rules individually alongside the Cloudflare-provided RuleID. You can set refs via the [Rulesets API](https://developers.cloudflare.com/ruleset-engine/rulesets-api/) for some security products.",
	"RuleID": "string; The Cloudflare security product-specific RuleID triggered by this request.",
	"Source": "string; The Cloudflare security product triggered by this request. Possible sources are unknown | asn | country | ip | iprange | securitylevel | zonelockdown | waf | firewallrules | uablock | ratelimit | bic | hot | l7ddos | validation | botfight | apishield | botmanagement | dlp | firewallmanaged | firewallcustom | apishieldschemavalidation | apishieldtokenvalidation | apishieldsequencemitigation."
}
